
bin\Debug\stmmooier.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800200  00005212  000052c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00005212  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  00800234  00800234  000052fa  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  000052fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  000052fd  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00005310  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000000d8  00000000  00000000  00005350  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   0000243a  00000000  00000000  00005428  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 0000111f  00000000  00000000  00007862  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   000028ec  00000000  00000000  00008981  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000590  00000000  00000000  0000b270  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    0000091c  00000000  00000000  0000b800  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 000001b2  00000000  00000000  0000c11c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 82 00 	jmp	0x104	; 0x104 <__ctors_end>
       4:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
       8:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
       c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      10:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      14:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      18:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      1c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      20:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      24:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      28:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      2c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      30:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      34:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      38:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      3c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      40:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      44:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      48:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      4c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      50:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      54:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      58:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      5c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      60:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      64:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      68:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      6c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      70:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      74:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      78:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      7c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      80:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      84:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      88:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      8c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      90:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      94:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      98:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      9c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      a0:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      a4:	0c 94 a1 1e 	jmp	0x3d42	; 0x3d42 <__vector_41>
      a8:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      ac:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      b0:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      b4:	0c 94 16 1f 	jmp	0x3e2c	; 0x3e2c <__vector_45>
      b8:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      bc:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      c0:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      c4:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      c8:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      cc:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      d0:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      d4:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      d8:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      dc:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      e0:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>

000000e4 <__trampolines_start>:
      e4:	0c 94 d5 1f 	jmp	0x3faa	; 0x3faa <.L197>
      e8:	0c 94 d3 20 	jmp	0x41a6	; 0x41a6 <.L192>
      ec:	0c 94 91 21 	jmp	0x4322	; 0x4322 <.L191>
      f0:	0c 94 87 1f 	jmp	0x3f0e	; 0x3f0e <.L193>
      f4:	0c 94 3c 21 	jmp	0x4278	; 0x4278 <.L195>
      f8:	0c 94 6c 21 	jmp	0x42d8	; 0x42d8 <.L194>
      fc:	0c 94 b2 20 	jmp	0x4164	; 0x4164 <.L189>
     100:	0c 94 0c 21 	jmp	0x4218	; 0x4218 <.L196>

00000104 <__ctors_end>:
     104:	11 24       	eor	r1, r1
     106:	1f be       	out	0x3f, r1	; 63
     108:	cf ef       	ldi	r28, 0xFF	; 255
     10a:	d1 e2       	ldi	r29, 0x21	; 33
     10c:	de bf       	out	0x3e, r29	; 62
     10e:	cd bf       	out	0x3d, r28	; 61
     110:	00 e0       	ldi	r16, 0x00	; 0
     112:	0c bf       	out	0x3c, r16	; 60

00000114 <__do_copy_data>:
     114:	12 e0       	ldi	r17, 0x02	; 2

00000116 <.Loc.1>:
     116:	a0 e0       	ldi	r26, 0x00	; 0

00000118 <.Loc.2>:
     118:	b2 e0       	ldi	r27, 0x02	; 2

0000011a <.Loc.3>:
     11a:	e2 e1       	ldi	r30, 0x12	; 18

0000011c <.Loc.4>:
     11c:	f2 e5       	ldi	r31, 0x52	; 82

0000011e <.Loc.5>:
     11e:	00 e0       	ldi	r16, 0x00	; 0

00000120 <.Loc.6>:
     120:	0b bf       	out	0x3b, r16	; 59

00000122 <.Loc.7>:
     122:	02 c0       	rjmp	.+4      	; 0x128 <.L__do_copy_data_start>

00000124 <.L__do_copy_data_loop>:
     124:	07 90       	elpm	r0, Z+

00000126 <.Loc.9>:
     126:	0d 92       	st	X+, r0

00000128 <.L__do_copy_data_start>:
     128:	a4 33       	cpi	r26, 0x34	; 52

0000012a <.Loc.11>:
     12a:	b1 07       	cpc	r27, r17

0000012c <.Loc.12>:
     12c:	d9 f7       	brne	.-10     	; 0x124 <.L__do_copy_data_loop>

0000012e <__do_clear_bss>:
     12e:	22 e0       	ldi	r18, 0x02	; 2

00000130 <.Loc.1>:
     130:	a4 e3       	ldi	r26, 0x34	; 52

00000132 <.Loc.2>:
     132:	b2 e0       	ldi	r27, 0x02	; 2

00000134 <.Loc.3>:
     134:	01 c0       	rjmp	.+2      	; 0x138 <.Loc.5>

00000136 <.Loc.4>:
     136:	1d 92       	st	X+, r1

00000138 <.Loc.5>:
     138:	ae 34       	cpi	r26, 0x4E	; 78

0000013a <.Loc.6>:
     13a:	b2 07       	cpc	r27, r18

0000013c <.Loc.7>:
     13c:	e1 f7       	brne	.-8      	; 0x136 <.Loc.4>

0000013e <L0^A>:
     13e:	0e 94 63 1f 	call	0x3ec6	; 0x3ec6 <main>
     142:	0c 94 ff 28 	jmp	0x51fe	; 0x51fe <_exit>

00000146 <__bad_interrupt>:
     146:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000014a <initLCD>:
Outputs:	none
Description:Configures the Data / command
			ports and initializes the LCD
******************************************************************** */
void initLCD(void)
{
     14a:	cf 93       	push	r28
     14c:	df 93       	push	r29
     14e:	cd b7       	in	r28, 0x3d	; 61
     150:	de b7       	in	r29, 0x3e	; 62
     152:	a2 97       	sbiw	r28, 0x22	; 34
     154:	0f b6       	in	r0, 0x3f	; 63
     156:	f8 94       	cli
     158:	de bf       	out	0x3e, r29	; 62
     15a:	0f be       	out	0x3f, r0	; 63
     15c:	cd bf       	out	0x3d, r28	; 61

0000015e <.Loc.1>:
	/* Configure the data ports and pins */
	configLCDPorts();
     15e:	0e 94 4c 01 	call	0x298	; 0x298 <configLCDPorts>

00000162 <.Loc.2>:

	/* Initialize the LCD controller as determined by instructions */
	lcd_init_4f();
     162:	0e 94 6f 01 	call	0x2de	; 0x2de <lcd_init_4f>
     166:	80 e0       	ldi	r24, 0x00	; 0
     168:	90 e0       	ldi	r25, 0x00	; 0
     16a:	a8 ec       	ldi	r26, 0xC8	; 200
     16c:	b2 e4       	ldi	r27, 0x42	; 66
     16e:	89 83       	std	Y+1, r24	; 0x01
     170:	9a 83       	std	Y+2, r25	; 0x02
     172:	ab 83       	std	Y+3, r26	; 0x03
     174:	bc 83       	std	Y+4, r27	; 0x04

00000176 <.LBB147>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     176:	20 e0       	ldi	r18, 0x00	; 0
     178:	30 e0       	ldi	r19, 0x00	; 0
     17a:	4a e7       	ldi	r20, 0x7A	; 122
     17c:	55 e4       	ldi	r21, 0x45	; 69
     17e:	69 81       	ldd	r22, Y+1	; 0x01
     180:	7a 81       	ldd	r23, Y+2	; 0x02
     182:	8b 81       	ldd	r24, Y+3	; 0x03
     184:	9c 81       	ldd	r25, Y+4	; 0x04
     186:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
     18a:	6b 8b       	std	Y+19, r22	; 0x13
     18c:	7c 8b       	std	Y+20, r23	; 0x14
     18e:	8d 8b       	std	Y+21, r24	; 0x15
     190:	9e 8b       	std	Y+22, r25	; 0x16
     192:	8b 89       	ldd	r24, Y+19	; 0x13
     194:	9c 89       	ldd	r25, Y+20	; 0x14
     196:	ad 89       	ldd	r26, Y+21	; 0x15
     198:	be 89       	ldd	r27, Y+22	; 0x16
     19a:	8d 83       	std	Y+5, r24	; 0x05
     19c:	9e 83       	std	Y+6, r25	; 0x06
     19e:	af 83       	std	Y+7, r26	; 0x07
     1a0:	b8 87       	std	Y+8, r27	; 0x08

000001a2 <.Loc.4>:
	if (__tmp < 1.0)
     1a2:	20 e0       	ldi	r18, 0x00	; 0
     1a4:	30 e0       	ldi	r19, 0x00	; 0
     1a6:	40 e8       	ldi	r20, 0x80	; 128
     1a8:	5f e3       	ldi	r21, 0x3F	; 63
     1aa:	6d 81       	ldd	r22, Y+5	; 0x05
     1ac:	7e 81       	ldd	r23, Y+6	; 0x06
     1ae:	8f 81       	ldd	r24, Y+7	; 0x07
     1b0:	98 85       	ldd	r25, Y+8	; 0x08
     1b2:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
     1b6:	88 23       	and	r24, r24
     1b8:	2c f4       	brge	.+10     	; 0x1c4 <.L12>

000001ba <.Loc.5>:
		__ticks = 1;
     1ba:	81 e0       	ldi	r24, 0x01	; 1
     1bc:	90 e0       	ldi	r25, 0x00	; 0
     1be:	9a 87       	std	Y+10, r25	; 0x0a
     1c0:	89 87       	std	Y+9, r24	; 0x09
     1c2:	55 c0       	rjmp	.+170    	; 0x26e <.L4>

000001c4 <.L12>:
	else if (__tmp > 65535)
     1c4:	20 e0       	ldi	r18, 0x00	; 0
     1c6:	3f ef       	ldi	r19, 0xFF	; 255
     1c8:	4f e7       	ldi	r20, 0x7F	; 127
     1ca:	57 e4       	ldi	r21, 0x47	; 71
     1cc:	6d 81       	ldd	r22, Y+5	; 0x05
     1ce:	7e 81       	ldd	r23, Y+6	; 0x06
     1d0:	8f 81       	ldd	r24, Y+7	; 0x07
     1d2:	98 85       	ldd	r25, Y+8	; 0x08
     1d4:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
     1d8:	88 23       	and	r24, r24
     1da:	d9 f1       	breq	.+118    	; 0x252 <.L13>
     1dc:	d4 f1       	brlt	.+116    	; 0x252 <.L13>

000001de <.Loc.7>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1de:	20 e0       	ldi	r18, 0x00	; 0
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e2       	ldi	r20, 0x20	; 32
     1e4:	51 e4       	ldi	r21, 0x41	; 65
     1e6:	69 81       	ldd	r22, Y+1	; 0x01
     1e8:	7a 81       	ldd	r23, Y+2	; 0x02
     1ea:	8b 81       	ldd	r24, Y+3	; 0x03
     1ec:	9c 81       	ldd	r25, Y+4	; 0x04
     1ee:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
     1f2:	6f 8b       	std	Y+23, r22	; 0x17
     1f4:	78 8f       	std	Y+24, r23	; 0x18
     1f6:	89 8f       	std	Y+25, r24	; 0x19
     1f8:	9a 8f       	std	Y+26, r25	; 0x1a
     1fa:	8f 89       	ldd	r24, Y+23	; 0x17
     1fc:	98 8d       	ldd	r25, Y+24	; 0x18
     1fe:	a9 8d       	ldd	r26, Y+25	; 0x19
     200:	ba 8d       	ldd	r27, Y+26	; 0x1a
     202:	8f 87       	std	Y+15, r24	; 0x0f
     204:	98 8b       	std	Y+16, r25	; 0x10
     206:	a9 8b       	std	Y+17, r26	; 0x11
     208:	ba 8b       	std	Y+18, r27	; 0x12

0000020a <.Loc.8>:
     20a:	6f 85       	ldd	r22, Y+15	; 0x0f
     20c:	78 89       	ldd	r23, Y+16	; 0x10
     20e:	89 89       	ldd	r24, Y+17	; 0x11
     210:	9a 89       	ldd	r25, Y+18	; 0x12
     212:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
     216:	6b 8f       	std	Y+27, r22	; 0x1b
     218:	7c 8f       	std	Y+28, r23	; 0x1c
     21a:	8d 8f       	std	Y+29, r24	; 0x1d
     21c:	9e 8f       	std	Y+30, r25	; 0x1e
     21e:	ab 8d       	ldd	r26, Y+27	; 0x1b
     220:	bc 8d       	ldd	r27, Y+28	; 0x1c
     222:	ba 87       	std	Y+10, r27	; 0x0a
     224:	a9 87       	std	Y+9, r26	; 0x09

00000226 <.Loc.9>:
		while(__ticks)
     226:	10 c0       	rjmp	.+32     	; 0x248 <.L7>

00000228 <.L8>:
     228:	80 e9       	ldi	r24, 0x90	; 144
     22a:	91 e0       	ldi	r25, 0x01	; 1
     22c:	9c 87       	std	Y+12, r25	; 0x0c
     22e:	8b 87       	std	Y+11, r24	; 0x0b

00000230 <.LBB149>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     230:	8b 85       	ldd	r24, Y+11	; 0x0b
     232:	9c 85       	ldd	r25, Y+12	; 0x0c

00000234 <.L1^B1>:
     234:	01 97       	sbiw	r24, 0x01	; 1
     236:	f1 f7       	brne	.-4      	; 0x234 <.L1^B1>
     238:	9c 87       	std	Y+12, r25	; 0x0c
     23a:	8b 87       	std	Y+11, r24	; 0x0b

0000023c <.Loc.11>:
	...

0000023e <.LBE149>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     23e:	89 85       	ldd	r24, Y+9	; 0x09
     240:	9a 85       	ldd	r25, Y+10	; 0x0a
     242:	01 97       	sbiw	r24, 0x01	; 1
     244:	9a 87       	std	Y+10, r25	; 0x0a
     246:	89 87       	std	Y+9, r24	; 0x09

00000248 <.L7>:
		while(__ticks)
     248:	89 85       	ldd	r24, Y+9	; 0x09
     24a:	9a 85       	ldd	r25, Y+10	; 0x0a
     24c:	00 97       	sbiw	r24, 0x00	; 0
     24e:	61 f7       	brne	.-40     	; 0x228 <.L8>

00000250 <.Loc.14>:
		}
		return;
     250:	19 c0       	rjmp	.+50     	; 0x284 <.L9>

00000252 <.L13>:
	}
	else
		__ticks = (uint16_t)__tmp;
     252:	6d 81       	ldd	r22, Y+5	; 0x05
     254:	7e 81       	ldd	r23, Y+6	; 0x06
     256:	8f 81       	ldd	r24, Y+7	; 0x07
     258:	98 85       	ldd	r25, Y+8	; 0x08
     25a:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
     25e:	6f 8f       	std	Y+31, r22	; 0x1f
     260:	78 a3       	std	Y+32, r23	; 0x20
     262:	89 a3       	std	Y+33, r24	; 0x21
     264:	9a a3       	std	Y+34, r25	; 0x22
     266:	8f 8d       	ldd	r24, Y+31	; 0x1f
     268:	98 a1       	ldd	r25, Y+32	; 0x20
     26a:	9a 87       	std	Y+10, r25	; 0x0a
     26c:	89 87       	std	Y+9, r24	; 0x09

0000026e <.L4>:
     26e:	89 85       	ldd	r24, Y+9	; 0x09
     270:	9a 85       	ldd	r25, Y+10	; 0x0a
     272:	9e 87       	std	Y+14, r25	; 0x0e
     274:	8d 87       	std	Y+13, r24	; 0x0d

00000276 <.LBB151>:
     276:	8d 85       	ldd	r24, Y+13	; 0x0d
     278:	9e 85       	ldd	r25, Y+14	; 0x0e

0000027a <.L1^B2>:
     27a:	01 97       	sbiw	r24, 0x01	; 1
     27c:	f1 f7       	brne	.-4      	; 0x27a <.L1^B2>
     27e:	9e 87       	std	Y+14, r25	; 0x0e
     280:	8d 87       	std	Y+13, r24	; 0x0d

00000282 <.Loc.17>:
	...

00000284 <.L9>:

	_delay_ms(100);
}
     284:	00 00       	nop
     286:	a2 96       	adiw	r28, 0x22	; 34
     288:	0f b6       	in	r0, 0x3f	; 63
     28a:	f8 94       	cli
     28c:	de bf       	out	0x3e, r29	; 62
     28e:	0f be       	out	0x3f, r0	; 63
     290:	cd bf       	out	0x3d, r28	; 61
     292:	df 91       	pop	r29
     294:	cf 91       	pop	r28
     296:	08 95       	ret

00000298 <configLCDPorts>:
Inputs:		none
Outputs:	none
Description:maps the data and control pins to the uC i/o ports
******************************************************************** */
void configLCDPorts(void)
{
     298:	cf 93       	push	r28
     29a:	df 93       	push	r29
     29c:	cd b7       	in	r28, 0x3d	; 61
     29e:	de b7       	in	r29, 0x3e	; 62

000002a0 <.Loc.20>:
	/* configure the microprocessor pins for the data lines */
	lcd_Data_DDR |= (1<<lcd_D7_bit) | (1<<lcd_D6_bit) | (1<<lcd_D5_bit) | (1<<lcd_D4_bit);
     2a0:	87 e2       	ldi	r24, 0x27	; 39
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	fc 01       	movw	r30, r24
     2a6:	20 81       	ld	r18, Z
     2a8:	87 e2       	ldi	r24, 0x27	; 39
     2aa:	90 e0       	ldi	r25, 0x00	; 0

000002ac <.Loc.21>:
     2ac:	20 6f       	ori	r18, 0xF0	; 240
     2ae:	fc 01       	movw	r30, r24
     2b0:	20 83       	st	Z, r18

000002b2 <.Loc.22>:

	/* configure the microprocessor pins for the control lines */
	lcd_Ctlr_DDR |= (1<<lcd_RW_bit) | (1<<lcd_RS_bit) | (1<<lcd_E_bit);
     2b2:	87 e2       	ldi	r24, 0x27	; 39
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	fc 01       	movw	r30, r24
     2b8:	20 81       	ld	r18, Z
     2ba:	87 e2       	ldi	r24, 0x27	; 39
     2bc:	90 e0       	ldi	r25, 0x00	; 0

000002be <.Loc.23>:
     2be:	2e 60       	ori	r18, 0x0E	; 14
     2c0:	fc 01       	movw	r30, r24
     2c2:	20 83       	st	Z, r18

000002c4 <.Loc.24>:

	/* Turn on LCD */
	DDRB |= (1<<lcd_ONOFF_bit);
     2c4:	84 e2       	ldi	r24, 0x24	; 36
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	fc 01       	movw	r30, r24
     2ca:	20 81       	ld	r18, Z
     2cc:	84 e2       	ldi	r24, 0x24	; 36
     2ce:	90 e0       	ldi	r25, 0x00	; 0

000002d0 <.Loc.25>:
     2d0:	21 60       	ori	r18, 0x01	; 1
     2d2:	fc 01       	movw	r30, r24
     2d4:	20 83       	st	Z, r18

000002d6 <.Loc.26>:
}
     2d6:	00 00       	nop
     2d8:	df 91       	pop	r29
     2da:	cf 91       	pop	r28
     2dc:	08 95       	ret

000002de <lcd_init_4f>:
Outputs:	none
Description:initializes the LCD for 4-bit data interface; uses the
			busy flag instead of time delay when possible
******************************************************************** */
void lcd_init_4f(void)
{
     2de:	0f 93       	push	r16
     2e0:	1f 93       	push	r17
     2e2:	cf 93       	push	r28
     2e4:	df 93       	push	r29
     2e6:	cd b7       	in	r28, 0x3d	; 61
     2e8:	de b7       	in	r29, 0x3e	; 62
     2ea:	ca 5f       	subi	r28, 0xFA	; 250
     2ec:	d1 09       	sbc	r29, r1
     2ee:	0f b6       	in	r0, 0x3f	; 63
     2f0:	f8 94       	cli
     2f2:	de bf       	out	0x3e, r29	; 62
     2f4:	0f be       	out	0x3f, r0	; 63
     2f6:	cd bf       	out	0x3d, r28	; 61
     2f8:	9e 01       	movw	r18, r28
     2fa:	2f 59       	subi	r18, 0x9F	; 159
     2fc:	3f 4f       	sbci	r19, 0xFF	; 255
     2fe:	80 e0       	ldi	r24, 0x00	; 0
     300:	90 e0       	ldi	r25, 0x00	; 0
     302:	a8 e4       	ldi	r26, 0x48	; 72
     304:	b2 e4       	ldi	r27, 0x42	; 66
     306:	f9 01       	movw	r30, r18
     308:	80 83       	st	Z, r24
     30a:	91 83       	std	Z+1, r25	; 0x01
     30c:	a2 83       	std	Z+2, r26	; 0x02
     30e:	b3 83       	std	Z+3, r27	; 0x03

00000310 <.LBB153>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     310:	8e 01       	movw	r16, r28
     312:	0b 59       	subi	r16, 0x9B	; 155
     314:	1f 4f       	sbci	r17, 0xFF	; 255
     316:	ce 01       	movw	r24, r28
     318:	8f 59       	subi	r24, 0x9F	; 159
     31a:	9f 4f       	sbci	r25, 0xFF	; 255
     31c:	20 e0       	ldi	r18, 0x00	; 0
     31e:	30 e0       	ldi	r19, 0x00	; 0
     320:	4a e7       	ldi	r20, 0x7A	; 122
     322:	55 e4       	ldi	r21, 0x45	; 69
     324:	dc 01       	movw	r26, r24
     326:	6d 91       	ld	r22, X+
     328:	7d 91       	ld	r23, X+
     32a:	8d 91       	ld	r24, X+
     32c:	9c 91       	ld	r25, X
     32e:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
     332:	c1 58       	subi	r28, 0x81	; 129
     334:	df 4f       	sbci	r29, 0xFF	; 255
     336:	68 83       	st	Y, r22
     338:	79 83       	std	Y+1, r23	; 0x01
     33a:	8a 83       	std	Y+2, r24	; 0x02
     33c:	9b 83       	std	Y+3, r25	; 0x03
     33e:	cf 57       	subi	r28, 0x7F	; 127
     340:	d0 40       	sbci	r29, 0x00	; 0
     342:	c1 58       	subi	r28, 0x81	; 129
     344:	df 4f       	sbci	r29, 0xFF	; 255
     346:	88 81       	ld	r24, Y
     348:	99 81       	ldd	r25, Y+1	; 0x01
     34a:	aa 81       	ldd	r26, Y+2	; 0x02
     34c:	bb 81       	ldd	r27, Y+3	; 0x03
     34e:	cf 57       	subi	r28, 0x7F	; 127
     350:	d0 40       	sbci	r29, 0x00	; 0
     352:	f8 01       	movw	r30, r16
     354:	80 83       	st	Z, r24
     356:	91 83       	std	Z+1, r25	; 0x01
     358:	a2 83       	std	Z+2, r26	; 0x02
     35a:	b3 83       	std	Z+3, r27	; 0x03

0000035c <.Loc.29>:
	if (__tmp < 1.0)
     35c:	ce 01       	movw	r24, r28
     35e:	8b 59       	subi	r24, 0x9B	; 155
     360:	9f 4f       	sbci	r25, 0xFF	; 255
     362:	20 e0       	ldi	r18, 0x00	; 0
     364:	30 e0       	ldi	r19, 0x00	; 0
     366:	40 e8       	ldi	r20, 0x80	; 128
     368:	5f e3       	ldi	r21, 0x3F	; 63
     36a:	dc 01       	movw	r26, r24
     36c:	6d 91       	ld	r22, X+
     36e:	7d 91       	ld	r23, X+
     370:	8d 91       	ld	r24, X+
     372:	9c 91       	ld	r25, X
     374:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
     378:	88 23       	and	r24, r24
     37a:	4c f4       	brge	.+18     	; 0x38e <.L89>

0000037c <.Loc.30>:
		__ticks = 1;
     37c:	ce 01       	movw	r24, r28
     37e:	87 59       	subi	r24, 0x97	; 151
     380:	9f 4f       	sbci	r25, 0xFF	; 255
     382:	21 e0       	ldi	r18, 0x01	; 1
     384:	30 e0       	ldi	r19, 0x00	; 0
     386:	fc 01       	movw	r30, r24
     388:	31 83       	std	Z+1, r19	; 0x01
     38a:	20 83       	st	Z, r18
     38c:	a1 c0       	rjmp	.+322    	; 0x4d0 <.L18>

0000038e <.L89>:
	else if (__tmp > 65535)
     38e:	ce 01       	movw	r24, r28
     390:	8b 59       	subi	r24, 0x9B	; 155
     392:	9f 4f       	sbci	r25, 0xFF	; 255
     394:	20 e0       	ldi	r18, 0x00	; 0
     396:	3f ef       	ldi	r19, 0xFF	; 255
     398:	4f e7       	ldi	r20, 0x7F	; 127
     39a:	57 e4       	ldi	r21, 0x47	; 71
     39c:	dc 01       	movw	r26, r24
     39e:	6d 91       	ld	r22, X+
     3a0:	7d 91       	ld	r23, X+
     3a2:	8d 91       	ld	r24, X+
     3a4:	9c 91       	ld	r25, X
     3a6:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
     3aa:	88 23       	and	r24, r24
     3ac:	09 f0       	breq	.+2      	; 0x3b0 <L0^A>

000003ae <L0^A>:
     3ae:	0c f4       	brge	.+2      	; 0x3b2 <.Loc.32>

000003b0 <L0^A>:
     3b0:	71 c0       	rjmp	.+226    	; 0x494 <.L90>

000003b2 <.Loc.32>:
		__ticks = (uint16_t) (__ms * 10.0);
     3b2:	ce 01       	movw	r24, r28
     3b4:	8f 59       	subi	r24, 0x9F	; 159
     3b6:	9f 4f       	sbci	r25, 0xFF	; 255
     3b8:	20 e0       	ldi	r18, 0x00	; 0
     3ba:	30 e0       	ldi	r19, 0x00	; 0
     3bc:	40 e2       	ldi	r20, 0x20	; 32
     3be:	51 e4       	ldi	r21, 0x41	; 65
     3c0:	fc 01       	movw	r30, r24
     3c2:	60 81       	ld	r22, Z
     3c4:	71 81       	ldd	r23, Z+1	; 0x01
     3c6:	82 81       	ldd	r24, Z+2	; 0x02
     3c8:	93 81       	ldd	r25, Z+3	; 0x03
     3ca:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
     3ce:	cd 57       	subi	r28, 0x7D	; 125
     3d0:	df 4f       	sbci	r29, 0xFF	; 255
     3d2:	68 83       	st	Y, r22
     3d4:	79 83       	std	Y+1, r23	; 0x01
     3d6:	8a 83       	std	Y+2, r24	; 0x02
     3d8:	9b 83       	std	Y+3, r25	; 0x03
     3da:	c3 58       	subi	r28, 0x83	; 131
     3dc:	d0 40       	sbci	r29, 0x00	; 0
     3de:	cd 57       	subi	r28, 0x7D	; 125
     3e0:	df 4f       	sbci	r29, 0xFF	; 255
     3e2:	88 81       	ld	r24, Y
     3e4:	99 81       	ldd	r25, Y+1	; 0x01
     3e6:	aa 81       	ldd	r26, Y+2	; 0x02
     3e8:	bb 81       	ldd	r27, Y+3	; 0x03
     3ea:	c3 58       	subi	r28, 0x83	; 131
     3ec:	d0 40       	sbci	r29, 0x00	; 0
     3ee:	ef 96       	adiw	r28, 0x3f	; 63
     3f0:	8c af       	std	Y+60, r24	; 0x3c
     3f2:	9d af       	std	Y+61, r25	; 0x3d
     3f4:	ae af       	std	Y+62, r26	; 0x3e
     3f6:	bf af       	std	Y+63, r27	; 0x3f
     3f8:	ef 97       	sbiw	r28, 0x3f	; 63

000003fa <.Loc.33>:
     3fa:	8e 01       	movw	r16, r28
     3fc:	07 59       	subi	r16, 0x97	; 151
     3fe:	1f 4f       	sbci	r17, 0xFF	; 255
     400:	ef 96       	adiw	r28, 0x3f	; 63
     402:	6c ad       	ldd	r22, Y+60	; 0x3c
     404:	7d ad       	ldd	r23, Y+61	; 0x3d
     406:	8e ad       	ldd	r24, Y+62	; 0x3e
     408:	9f ad       	ldd	r25, Y+63	; 0x3f
     40a:	ef 97       	sbiw	r28, 0x3f	; 63
     40c:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
     410:	c9 57       	subi	r28, 0x79	; 121
     412:	df 4f       	sbci	r29, 0xFF	; 255
     414:	68 83       	st	Y, r22
     416:	79 83       	std	Y+1, r23	; 0x01
     418:	8a 83       	std	Y+2, r24	; 0x02
     41a:	9b 83       	std	Y+3, r25	; 0x03
     41c:	c7 58       	subi	r28, 0x87	; 135
     41e:	d0 40       	sbci	r29, 0x00	; 0
     420:	c9 57       	subi	r28, 0x79	; 121
     422:	df 4f       	sbci	r29, 0xFF	; 255
     424:	e8 81       	ld	r30, Y
     426:	f9 81       	ldd	r31, Y+1	; 0x01
     428:	c7 58       	subi	r28, 0x87	; 135
     42a:	d0 40       	sbci	r29, 0x00	; 0
     42c:	d8 01       	movw	r26, r16
     42e:	11 96       	adiw	r26, 0x01	; 1
     430:	fc 93       	st	X, r31
     432:	ee 93       	st	-X, r30

00000434 <.Loc.34>:
		while(__ticks)
     434:	26 c0       	rjmp	.+76     	; 0x482 <.L21>

00000436 <.L22>:
     436:	ce 01       	movw	r24, r28
     438:	85 59       	subi	r24, 0x95	; 149
     43a:	9f 4f       	sbci	r25, 0xFF	; 255
     43c:	20 e9       	ldi	r18, 0x90	; 144
     43e:	31 e0       	ldi	r19, 0x01	; 1
     440:	dc 01       	movw	r26, r24
     442:	2d 93       	st	X+, r18
     444:	3c 93       	st	X, r19

00000446 <.LBB155>:
     446:	ce 01       	movw	r24, r28
     448:	85 59       	subi	r24, 0x95	; 149
     44a:	9f 4f       	sbci	r25, 0xFF	; 255
     44c:	fc 01       	movw	r30, r24
     44e:	80 81       	ld	r24, Z
     450:	91 81       	ldd	r25, Z+1	; 0x01

00000452 <.L1^B3>:
     452:	01 97       	sbiw	r24, 0x01	; 1
     454:	f1 f7       	brne	.-4      	; 0x452 <.L1^B3>
     456:	9e 01       	movw	r18, r28
     458:	25 59       	subi	r18, 0x95	; 149
     45a:	3f 4f       	sbci	r19, 0xFF	; 255
     45c:	d9 01       	movw	r26, r18
     45e:	8d 93       	st	X+, r24
     460:	9c 93       	st	X, r25

00000462 <.Loc.36>:
	...

00000464 <.LBE155>:
			__ticks --;
     464:	ce 01       	movw	r24, r28
     466:	87 59       	subi	r24, 0x97	; 151
     468:	9f 4f       	sbci	r25, 0xFF	; 255
     46a:	9e 01       	movw	r18, r28
     46c:	27 59       	subi	r18, 0x97	; 151
     46e:	3f 4f       	sbci	r19, 0xFF	; 255
     470:	f9 01       	movw	r30, r18
     472:	20 81       	ld	r18, Z
     474:	31 81       	ldd	r19, Z+1	; 0x01
     476:	21 50       	subi	r18, 0x01	; 1
     478:	31 09       	sbc	r19, r1
     47a:	dc 01       	movw	r26, r24
     47c:	11 96       	adiw	r26, 0x01	; 1
     47e:	3c 93       	st	X, r19
     480:	2e 93       	st	-X, r18

00000482 <.L21>:
		while(__ticks)
     482:	ce 01       	movw	r24, r28
     484:	87 59       	subi	r24, 0x97	; 151
     486:	9f 4f       	sbci	r25, 0xFF	; 255
     488:	fc 01       	movw	r30, r24
     48a:	80 81       	ld	r24, Z
     48c:	91 81       	ldd	r25, Z+1	; 0x01
     48e:	00 97       	sbiw	r24, 0x00	; 0
     490:	91 f6       	brne	.-92     	; 0x436 <.L22>

00000492 <.Loc.39>:
		return;
     492:	39 c0       	rjmp	.+114    	; 0x506 <.L23>

00000494 <.L90>:
		__ticks = (uint16_t)__tmp;
     494:	8e 01       	movw	r16, r28
     496:	07 59       	subi	r16, 0x97	; 151
     498:	1f 4f       	sbci	r17, 0xFF	; 255
     49a:	ce 01       	movw	r24, r28
     49c:	8b 59       	subi	r24, 0x9B	; 155
     49e:	9f 4f       	sbci	r25, 0xFF	; 255
     4a0:	dc 01       	movw	r26, r24
     4a2:	6d 91       	ld	r22, X+
     4a4:	7d 91       	ld	r23, X+
     4a6:	8d 91       	ld	r24, X+
     4a8:	9c 91       	ld	r25, X
     4aa:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
     4ae:	c5 57       	subi	r28, 0x75	; 117
     4b0:	df 4f       	sbci	r29, 0xFF	; 255
     4b2:	68 83       	st	Y, r22
     4b4:	79 83       	std	Y+1, r23	; 0x01
     4b6:	8a 83       	std	Y+2, r24	; 0x02
     4b8:	9b 83       	std	Y+3, r25	; 0x03
     4ba:	cb 58       	subi	r28, 0x8B	; 139
     4bc:	d0 40       	sbci	r29, 0x00	; 0
     4be:	c5 57       	subi	r28, 0x75	; 117
     4c0:	df 4f       	sbci	r29, 0xFF	; 255
     4c2:	88 81       	ld	r24, Y
     4c4:	99 81       	ldd	r25, Y+1	; 0x01
     4c6:	cb 58       	subi	r28, 0x8B	; 139
     4c8:	d0 40       	sbci	r29, 0x00	; 0
     4ca:	f8 01       	movw	r30, r16
     4cc:	91 83       	std	Z+1, r25	; 0x01
     4ce:	80 83       	st	Z, r24

000004d0 <.L18>:
     4d0:	ce 01       	movw	r24, r28
     4d2:	83 59       	subi	r24, 0x93	; 147
     4d4:	9f 4f       	sbci	r25, 0xFF	; 255
     4d6:	9e 01       	movw	r18, r28
     4d8:	27 59       	subi	r18, 0x97	; 151
     4da:	3f 4f       	sbci	r19, 0xFF	; 255
     4dc:	d9 01       	movw	r26, r18
     4de:	2d 91       	ld	r18, X+
     4e0:	3c 91       	ld	r19, X
     4e2:	fc 01       	movw	r30, r24
     4e4:	31 83       	std	Z+1, r19	; 0x01
     4e6:	20 83       	st	Z, r18

000004e8 <.LBB157>:
     4e8:	ce 01       	movw	r24, r28
     4ea:	83 59       	subi	r24, 0x93	; 147
     4ec:	9f 4f       	sbci	r25, 0xFF	; 255
     4ee:	dc 01       	movw	r26, r24
     4f0:	8d 91       	ld	r24, X+
     4f2:	9c 91       	ld	r25, X

000004f4 <.L1^B4>:
     4f4:	01 97       	sbiw	r24, 0x01	; 1
     4f6:	f1 f7       	brne	.-4      	; 0x4f4 <.L1^B4>
     4f8:	9e 01       	movw	r18, r28
     4fa:	23 59       	subi	r18, 0x93	; 147
     4fc:	3f 4f       	sbci	r19, 0xFF	; 255
     4fe:	f9 01       	movw	r30, r18
     500:	91 83       	std	Z+1, r25	; 0x01
     502:	80 83       	st	Z, r24

00000504 <.Loc.42>:
	...

00000506 <.L23>:
	 this instruction can be sent on just the four available data lines and it will be interpreted
	 properly by the LCD controller.  The 'lcd_write_4' subroutine will accomplish this if the
	 control lines have previously been configured properly. */

	/* Set up the RS, E, and RW lines for the 'lcd_write_4' function. */
	set_RS_LOW_Instr;	// Select the Instruction Register (RS low)
     506:	88 e2       	ldi	r24, 0x28	; 40
     508:	90 e0       	ldi	r25, 0x00	; 0
     50a:	dc 01       	movw	r26, r24
     50c:	2c 91       	ld	r18, X
     50e:	88 e2       	ldi	r24, 0x28	; 40
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	2d 7f       	andi	r18, 0xFD	; 253
     514:	fc 01       	movw	r30, r24
     516:	20 83       	st	Z, r18

00000518 <.Loc.44>:
	disable_E_Pin;		// Make sure E is initially low
     518:	88 e2       	ldi	r24, 0x28	; 40
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	dc 01       	movw	r26, r24
     51e:	2c 91       	ld	r18, X
     520:	88 e2       	ldi	r24, 0x28	; 40
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	27 7f       	andi	r18, 0xF7	; 247
     526:	fc 01       	movw	r30, r24
     528:	20 83       	st	Z, r18

0000052a <.Loc.45>:
	set_RW_LOW_write;	// write to LCD module (RW low)
     52a:	88 e2       	ldi	r24, 0x28	; 40
     52c:	90 e0       	ldi	r25, 0x00	; 0
     52e:	dc 01       	movw	r26, r24
     530:	2c 91       	ld	r18, X
     532:	88 e2       	ldi	r24, 0x28	; 40
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	2b 7f       	andi	r18, 0xFB	; 251
     538:	fc 01       	movw	r30, r24
     53a:	20 83       	st	Z, r18

0000053c <.Loc.46>:

	/* Reset the LCD controller */
	lcd_write_4(lcd_FunctionReset);		// First part of reset sequence
     53c:	80 e3       	ldi	r24, 0x30	; 48
     53e:	0e 94 32 09 	call	0x1264	; 0x1264 <lcd_write_4>
     542:	9e 01       	movw	r18, r28
     544:	2f 5b       	subi	r18, 0xBF	; 191
     546:	3f 4f       	sbci	r19, 0xFF	; 255
     548:	80 e0       	ldi	r24, 0x00	; 0
     54a:	90 e0       	ldi	r25, 0x00	; 0
     54c:	a0 e2       	ldi	r26, 0x20	; 32
     54e:	b1 e4       	ldi	r27, 0x41	; 65
     550:	f9 01       	movw	r30, r18
     552:	80 83       	st	Z, r24
     554:	91 83       	std	Z+1, r25	; 0x01
     556:	a2 83       	std	Z+2, r26	; 0x02
     558:	b3 83       	std	Z+3, r27	; 0x03

0000055a <.LBB159>:
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
     55a:	8e 01       	movw	r16, r28
     55c:	0b 5b       	subi	r16, 0xBB	; 187
     55e:	1f 4f       	sbci	r17, 0xFF	; 255
     560:	ce 01       	movw	r24, r28
     562:	8f 5b       	subi	r24, 0xBF	; 191
     564:	9f 4f       	sbci	r25, 0xFF	; 255
     566:	2b ea       	ldi	r18, 0xAB	; 171
     568:	3a ea       	ldi	r19, 0xAA	; 170
     56a:	4a ea       	ldi	r20, 0xAA	; 170
     56c:	50 e4       	ldi	r21, 0x40	; 64
     56e:	dc 01       	movw	r26, r24
     570:	6d 91       	ld	r22, X+
     572:	7d 91       	ld	r23, X+
     574:	8d 91       	ld	r24, X+
     576:	9c 91       	ld	r25, X
     578:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
     57c:	c1 57       	subi	r28, 0x71	; 113
     57e:	df 4f       	sbci	r29, 0xFF	; 255
     580:	68 83       	st	Y, r22
     582:	79 83       	std	Y+1, r23	; 0x01
     584:	8a 83       	std	Y+2, r24	; 0x02
     586:	9b 83       	std	Y+3, r25	; 0x03
     588:	cf 58       	subi	r28, 0x8F	; 143
     58a:	d0 40       	sbci	r29, 0x00	; 0
     58c:	c1 57       	subi	r28, 0x71	; 113
     58e:	df 4f       	sbci	r29, 0xFF	; 255
     590:	88 81       	ld	r24, Y
     592:	99 81       	ldd	r25, Y+1	; 0x01
     594:	aa 81       	ldd	r26, Y+2	; 0x02
     596:	bb 81       	ldd	r27, Y+3	; 0x03
     598:	cf 58       	subi	r28, 0x8F	; 143
     59a:	d0 40       	sbci	r29, 0x00	; 0
     59c:	f8 01       	movw	r30, r16
     59e:	80 83       	st	Z, r24
     5a0:	91 83       	std	Z+1, r25	; 0x01
     5a2:	a2 83       	std	Z+2, r26	; 0x02
     5a4:	b3 83       	std	Z+3, r27	; 0x03

000005a6 <.Loc.48>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
     5a6:	8e 01       	movw	r16, r28
     5a8:	07 5b       	subi	r16, 0xB7	; 183
     5aa:	1f 4f       	sbci	r17, 0xFF	; 255
     5ac:	ce 01       	movw	r24, r28
     5ae:	8f 5b       	subi	r24, 0xBF	; 191
     5b0:	9f 4f       	sbci	r25, 0xFF	; 255
     5b2:	20 e0       	ldi	r18, 0x00	; 0
     5b4:	30 e0       	ldi	r19, 0x00	; 0
     5b6:	40 e8       	ldi	r20, 0x80	; 128
     5b8:	50 e4       	ldi	r21, 0x40	; 64
     5ba:	dc 01       	movw	r26, r24
     5bc:	6d 91       	ld	r22, X+
     5be:	7d 91       	ld	r23, X+
     5c0:	8d 91       	ld	r24, X+
     5c2:	9c 91       	ld	r25, X
     5c4:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
     5c8:	cd 56       	subi	r28, 0x6D	; 109
     5ca:	df 4f       	sbci	r29, 0xFF	; 255
     5cc:	68 83       	st	Y, r22
     5ce:	79 83       	std	Y+1, r23	; 0x01
     5d0:	8a 83       	std	Y+2, r24	; 0x02
     5d2:	9b 83       	std	Y+3, r25	; 0x03
     5d4:	c3 59       	subi	r28, 0x93	; 147
     5d6:	d0 40       	sbci	r29, 0x00	; 0
     5d8:	cd 56       	subi	r28, 0x6D	; 109
     5da:	df 4f       	sbci	r29, 0xFF	; 255
     5dc:	88 81       	ld	r24, Y
     5de:	99 81       	ldd	r25, Y+1	; 0x01
     5e0:	aa 81       	ldd	r26, Y+2	; 0x02
     5e2:	bb 81       	ldd	r27, Y+3	; 0x03
     5e4:	c3 59       	subi	r28, 0x93	; 147
     5e6:	d0 40       	sbci	r29, 0x00	; 0
     5e8:	f8 01       	movw	r30, r16
     5ea:	80 83       	st	Z, r24
     5ec:	91 83       	std	Z+1, r25	; 0x01
     5ee:	a2 83       	std	Z+2, r26	; 0x02
     5f0:	b3 83       	std	Z+3, r27	; 0x03

000005f2 <.Loc.49>:
	if (__tmp < 1.0)
     5f2:	ce 01       	movw	r24, r28
     5f4:	8b 5b       	subi	r24, 0xBB	; 187
     5f6:	9f 4f       	sbci	r25, 0xFF	; 255
     5f8:	20 e0       	ldi	r18, 0x00	; 0
     5fa:	30 e0       	ldi	r19, 0x00	; 0
     5fc:	40 e8       	ldi	r20, 0x80	; 128
     5fe:	5f e3       	ldi	r21, 0x3F	; 63
     600:	dc 01       	movw	r26, r24
     602:	6d 91       	ld	r22, X+
     604:	7d 91       	ld	r23, X+
     606:	8d 91       	ld	r24, X+
     608:	9c 91       	ld	r25, X
     60a:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
     60e:	88 23       	and	r24, r24
     610:	3c f4       	brge	.+14     	; 0x620 <.L91>

00000612 <.Loc.50>:
		__ticks = 1;
     612:	ce 01       	movw	r24, r28
     614:	83 5b       	subi	r24, 0xB3	; 179
     616:	9f 4f       	sbci	r25, 0xFF	; 255
     618:	21 e0       	ldi	r18, 0x01	; 1
     61a:	fc 01       	movw	r30, r24
     61c:	20 83       	st	Z, r18
     61e:	9c c1       	rjmp	.+824    	; 0x958 <.L26>

00000620 <.L91>:
	else if (__tmp2 > 65535)
     620:	ce 01       	movw	r24, r28
     622:	87 5b       	subi	r24, 0xB7	; 183
     624:	9f 4f       	sbci	r25, 0xFF	; 255
     626:	20 e0       	ldi	r18, 0x00	; 0
     628:	3f ef       	ldi	r19, 0xFF	; 255
     62a:	4f e7       	ldi	r20, 0x7F	; 127
     62c:	57 e4       	ldi	r21, 0x47	; 71
     62e:	dc 01       	movw	r26, r24
     630:	6d 91       	ld	r22, X+
     632:	7d 91       	ld	r23, X+
     634:	8d 91       	ld	r24, X+
     636:	9c 91       	ld	r25, X
     638:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
     63c:	88 23       	and	r24, r24
     63e:	09 f0       	breq	.+2      	; 0x642 <L0^A>

00000640 <L0^A>:
     640:	0c f4       	brge	.+2      	; 0x644 <.Loc.52>

00000642 <L0^A>:
     642:	22 c1       	rjmp	.+580    	; 0x888 <.L92>

00000644 <.Loc.52>:
	{
		_delay_ms(__us / 1000.0);
     644:	ce 01       	movw	r24, r28
     646:	8f 5b       	subi	r24, 0xBF	; 191
     648:	9f 4f       	sbci	r25, 0xFF	; 255
     64a:	20 e0       	ldi	r18, 0x00	; 0
     64c:	30 e0       	ldi	r19, 0x00	; 0
     64e:	4a e7       	ldi	r20, 0x7A	; 122
     650:	54 e4       	ldi	r21, 0x44	; 68
     652:	fc 01       	movw	r30, r24
     654:	60 81       	ld	r22, Z
     656:	71 81       	ldd	r23, Z+1	; 0x01
     658:	82 81       	ldd	r24, Z+2	; 0x02
     65a:	93 81       	ldd	r25, Z+3	; 0x03
     65c:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <__divsf3>
     660:	c9 56       	subi	r28, 0x69	; 105
     662:	df 4f       	sbci	r29, 0xFF	; 255
     664:	68 83       	st	Y, r22
     666:	79 83       	std	Y+1, r23	; 0x01
     668:	8a 83       	std	Y+2, r24	; 0x02
     66a:	9b 83       	std	Y+3, r25	; 0x03
     66c:	c7 59       	subi	r28, 0x97	; 151
     66e:	d0 40       	sbci	r29, 0x00	; 0
     670:	c9 56       	subi	r28, 0x69	; 105
     672:	df 4f       	sbci	r29, 0xFF	; 255
     674:	88 81       	ld	r24, Y
     676:	99 81       	ldd	r25, Y+1	; 0x01
     678:	aa 81       	ldd	r26, Y+2	; 0x02
     67a:	bb 81       	ldd	r27, Y+3	; 0x03
     67c:	c7 59       	subi	r28, 0x97	; 151
     67e:	d0 40       	sbci	r29, 0x00	; 0
     680:	9e 01       	movw	r18, r28
     682:	22 5b       	subi	r18, 0xB2	; 178
     684:	3f 4f       	sbci	r19, 0xFF	; 255
     686:	f9 01       	movw	r30, r18
     688:	80 83       	st	Z, r24
     68a:	91 83       	std	Z+1, r25	; 0x01
     68c:	a2 83       	std	Z+2, r26	; 0x02
     68e:	b3 83       	std	Z+3, r27	; 0x03

00000690 <.LBB161>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     690:	8e 01       	movw	r16, r28
     692:	0e 5a       	subi	r16, 0xAE	; 174
     694:	1f 4f       	sbci	r17, 0xFF	; 255
     696:	ce 01       	movw	r24, r28
     698:	82 5b       	subi	r24, 0xB2	; 178
     69a:	9f 4f       	sbci	r25, 0xFF	; 255
     69c:	20 e0       	ldi	r18, 0x00	; 0
     69e:	30 e0       	ldi	r19, 0x00	; 0
     6a0:	4a e7       	ldi	r20, 0x7A	; 122
     6a2:	55 e4       	ldi	r21, 0x45	; 69
     6a4:	dc 01       	movw	r26, r24
     6a6:	6d 91       	ld	r22, X+
     6a8:	7d 91       	ld	r23, X+
     6aa:	8d 91       	ld	r24, X+
     6ac:	9c 91       	ld	r25, X
     6ae:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
     6b2:	c5 56       	subi	r28, 0x65	; 101
     6b4:	df 4f       	sbci	r29, 0xFF	; 255
     6b6:	68 83       	st	Y, r22
     6b8:	79 83       	std	Y+1, r23	; 0x01
     6ba:	8a 83       	std	Y+2, r24	; 0x02
     6bc:	9b 83       	std	Y+3, r25	; 0x03
     6be:	cb 59       	subi	r28, 0x9B	; 155
     6c0:	d0 40       	sbci	r29, 0x00	; 0
     6c2:	c5 56       	subi	r28, 0x65	; 101
     6c4:	df 4f       	sbci	r29, 0xFF	; 255
     6c6:	88 81       	ld	r24, Y
     6c8:	99 81       	ldd	r25, Y+1	; 0x01
     6ca:	aa 81       	ldd	r26, Y+2	; 0x02
     6cc:	bb 81       	ldd	r27, Y+3	; 0x03
     6ce:	cb 59       	subi	r28, 0x9B	; 155
     6d0:	d0 40       	sbci	r29, 0x00	; 0
     6d2:	f8 01       	movw	r30, r16
     6d4:	80 83       	st	Z, r24
     6d6:	91 83       	std	Z+1, r25	; 0x01
     6d8:	a2 83       	std	Z+2, r26	; 0x02
     6da:	b3 83       	std	Z+3, r27	; 0x03

000006dc <.Loc.54>:
	if (__tmp < 1.0)
     6dc:	ce 01       	movw	r24, r28
     6de:	8e 5a       	subi	r24, 0xAE	; 174
     6e0:	9f 4f       	sbci	r25, 0xFF	; 255
     6e2:	20 e0       	ldi	r18, 0x00	; 0
     6e4:	30 e0       	ldi	r19, 0x00	; 0
     6e6:	40 e8       	ldi	r20, 0x80	; 128
     6e8:	5f e3       	ldi	r21, 0x3F	; 63
     6ea:	dc 01       	movw	r26, r24
     6ec:	6d 91       	ld	r22, X+
     6ee:	7d 91       	ld	r23, X+
     6f0:	8d 91       	ld	r24, X+
     6f2:	9c 91       	ld	r25, X
     6f4:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
     6f8:	88 23       	and	r24, r24
     6fa:	4c f4       	brge	.+18     	; 0x70e <.L93>

000006fc <.Loc.55>:
		__ticks = 1;
     6fc:	ce 01       	movw	r24, r28
     6fe:	8a 5a       	subi	r24, 0xAA	; 170
     700:	9f 4f       	sbci	r25, 0xFF	; 255
     702:	21 e0       	ldi	r18, 0x01	; 1
     704:	30 e0       	ldi	r19, 0x00	; 0
     706:	fc 01       	movw	r30, r24
     708:	31 83       	std	Z+1, r19	; 0x01
     70a:	20 83       	st	Z, r18
     70c:	a1 c0       	rjmp	.+322    	; 0x850 <.L31>

0000070e <.L93>:
	else if (__tmp > 65535)
     70e:	ce 01       	movw	r24, r28
     710:	8e 5a       	subi	r24, 0xAE	; 174
     712:	9f 4f       	sbci	r25, 0xFF	; 255
     714:	20 e0       	ldi	r18, 0x00	; 0
     716:	3f ef       	ldi	r19, 0xFF	; 255
     718:	4f e7       	ldi	r20, 0x7F	; 127
     71a:	57 e4       	ldi	r21, 0x47	; 71
     71c:	dc 01       	movw	r26, r24
     71e:	6d 91       	ld	r22, X+
     720:	7d 91       	ld	r23, X+
     722:	8d 91       	ld	r24, X+
     724:	9c 91       	ld	r25, X
     726:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
     72a:	88 23       	and	r24, r24
     72c:	09 f0       	breq	.+2      	; 0x730 <L0^A>

0000072e <L0^A>:
     72e:	0c f4       	brge	.+2      	; 0x732 <.Loc.57>

00000730 <L0^A>:
     730:	71 c0       	rjmp	.+226    	; 0x814 <.L94>

00000732 <.Loc.57>:
		__ticks = (uint16_t) (__ms * 10.0);
     732:	ce 01       	movw	r24, r28
     734:	82 5b       	subi	r24, 0xB2	; 178
     736:	9f 4f       	sbci	r25, 0xFF	; 255
     738:	20 e0       	ldi	r18, 0x00	; 0
     73a:	30 e0       	ldi	r19, 0x00	; 0
     73c:	40 e2       	ldi	r20, 0x20	; 32
     73e:	51 e4       	ldi	r21, 0x41	; 65
     740:	fc 01       	movw	r30, r24
     742:	60 81       	ld	r22, Z
     744:	71 81       	ldd	r23, Z+1	; 0x01
     746:	82 81       	ldd	r24, Z+2	; 0x02
     748:	93 81       	ldd	r25, Z+3	; 0x03
     74a:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
     74e:	c1 56       	subi	r28, 0x61	; 97
     750:	df 4f       	sbci	r29, 0xFF	; 255
     752:	68 83       	st	Y, r22
     754:	79 83       	std	Y+1, r23	; 0x01
     756:	8a 83       	std	Y+2, r24	; 0x02
     758:	9b 83       	std	Y+3, r25	; 0x03
     75a:	cf 59       	subi	r28, 0x9F	; 159
     75c:	d0 40       	sbci	r29, 0x00	; 0
     75e:	c1 56       	subi	r28, 0x61	; 97
     760:	df 4f       	sbci	r29, 0xFF	; 255
     762:	88 81       	ld	r24, Y
     764:	99 81       	ldd	r25, Y+1	; 0x01
     766:	aa 81       	ldd	r26, Y+2	; 0x02
     768:	bb 81       	ldd	r27, Y+3	; 0x03
     76a:	cf 59       	subi	r28, 0x9F	; 159
     76c:	d0 40       	sbci	r29, 0x00	; 0
     76e:	eb 96       	adiw	r28, 0x3b	; 59
     770:	8c af       	std	Y+60, r24	; 0x3c
     772:	9d af       	std	Y+61, r25	; 0x3d
     774:	ae af       	std	Y+62, r26	; 0x3e
     776:	bf af       	std	Y+63, r27	; 0x3f
     778:	eb 97       	sbiw	r28, 0x3b	; 59

0000077a <.Loc.58>:
     77a:	8e 01       	movw	r16, r28
     77c:	0a 5a       	subi	r16, 0xAA	; 170
     77e:	1f 4f       	sbci	r17, 0xFF	; 255
     780:	eb 96       	adiw	r28, 0x3b	; 59
     782:	6c ad       	ldd	r22, Y+60	; 0x3c
     784:	7d ad       	ldd	r23, Y+61	; 0x3d
     786:	8e ad       	ldd	r24, Y+62	; 0x3e
     788:	9f ad       	ldd	r25, Y+63	; 0x3f
     78a:	eb 97       	sbiw	r28, 0x3b	; 59
     78c:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
     790:	cd 55       	subi	r28, 0x5D	; 93
     792:	df 4f       	sbci	r29, 0xFF	; 255
     794:	68 83       	st	Y, r22
     796:	79 83       	std	Y+1, r23	; 0x01
     798:	8a 83       	std	Y+2, r24	; 0x02
     79a:	9b 83       	std	Y+3, r25	; 0x03
     79c:	c3 5a       	subi	r28, 0xA3	; 163
     79e:	d0 40       	sbci	r29, 0x00	; 0
     7a0:	cd 55       	subi	r28, 0x5D	; 93
     7a2:	df 4f       	sbci	r29, 0xFF	; 255
     7a4:	e8 81       	ld	r30, Y
     7a6:	f9 81       	ldd	r31, Y+1	; 0x01
     7a8:	c3 5a       	subi	r28, 0xA3	; 163
     7aa:	d0 40       	sbci	r29, 0x00	; 0
     7ac:	d8 01       	movw	r26, r16
     7ae:	11 96       	adiw	r26, 0x01	; 1
     7b0:	fc 93       	st	X, r31
     7b2:	ee 93       	st	-X, r30

000007b4 <.Loc.59>:
		while(__ticks)
     7b4:	26 c0       	rjmp	.+76     	; 0x802 <.L34>

000007b6 <.L35>:
     7b6:	ce 01       	movw	r24, r28
     7b8:	88 5a       	subi	r24, 0xA8	; 168
     7ba:	9f 4f       	sbci	r25, 0xFF	; 255
     7bc:	20 e9       	ldi	r18, 0x90	; 144
     7be:	31 e0       	ldi	r19, 0x01	; 1
     7c0:	dc 01       	movw	r26, r24
     7c2:	2d 93       	st	X+, r18
     7c4:	3c 93       	st	X, r19

000007c6 <.LBB163>:
     7c6:	ce 01       	movw	r24, r28
     7c8:	88 5a       	subi	r24, 0xA8	; 168
     7ca:	9f 4f       	sbci	r25, 0xFF	; 255
     7cc:	fc 01       	movw	r30, r24
     7ce:	80 81       	ld	r24, Z
     7d0:	91 81       	ldd	r25, Z+1	; 0x01

000007d2 <.L1^B5>:
     7d2:	01 97       	sbiw	r24, 0x01	; 1
     7d4:	f1 f7       	brne	.-4      	; 0x7d2 <.L1^B5>
     7d6:	9e 01       	movw	r18, r28
     7d8:	28 5a       	subi	r18, 0xA8	; 168
     7da:	3f 4f       	sbci	r19, 0xFF	; 255
     7dc:	d9 01       	movw	r26, r18
     7de:	8d 93       	st	X+, r24
     7e0:	9c 93       	st	X, r25

000007e2 <.Loc.61>:
	...

000007e4 <.LBE163>:
			__ticks --;
     7e4:	ce 01       	movw	r24, r28
     7e6:	8a 5a       	subi	r24, 0xAA	; 170
     7e8:	9f 4f       	sbci	r25, 0xFF	; 255
     7ea:	9e 01       	movw	r18, r28
     7ec:	2a 5a       	subi	r18, 0xAA	; 170
     7ee:	3f 4f       	sbci	r19, 0xFF	; 255
     7f0:	f9 01       	movw	r30, r18
     7f2:	20 81       	ld	r18, Z
     7f4:	31 81       	ldd	r19, Z+1	; 0x01
     7f6:	21 50       	subi	r18, 0x01	; 1
     7f8:	31 09       	sbc	r19, r1
     7fa:	dc 01       	movw	r26, r24
     7fc:	11 96       	adiw	r26, 0x01	; 1
     7fe:	3c 93       	st	X, r19
     800:	2e 93       	st	-X, r18

00000802 <.L34>:
		while(__ticks)
     802:	ce 01       	movw	r24, r28
     804:	8a 5a       	subi	r24, 0xAA	; 170
     806:	9f 4f       	sbci	r25, 0xFF	; 255
     808:	fc 01       	movw	r30, r24
     80a:	80 81       	ld	r24, Z
     80c:	91 81       	ldd	r25, Z+1	; 0x01
     80e:	00 97       	sbiw	r24, 0x00	; 0
     810:	91 f6       	brne	.-92     	; 0x7b6 <.L35>

00000812 <.Loc.64>:
		return;
     812:	a2 c0       	rjmp	.+324    	; 0x958 <.L26>

00000814 <.L94>:
		__ticks = (uint16_t)__tmp;
     814:	8e 01       	movw	r16, r28
     816:	0a 5a       	subi	r16, 0xAA	; 170
     818:	1f 4f       	sbci	r17, 0xFF	; 255
     81a:	ce 01       	movw	r24, r28
     81c:	8e 5a       	subi	r24, 0xAE	; 174
     81e:	9f 4f       	sbci	r25, 0xFF	; 255
     820:	dc 01       	movw	r26, r24
     822:	6d 91       	ld	r22, X+
     824:	7d 91       	ld	r23, X+
     826:	8d 91       	ld	r24, X+
     828:	9c 91       	ld	r25, X
     82a:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
     82e:	c9 55       	subi	r28, 0x59	; 89
     830:	df 4f       	sbci	r29, 0xFF	; 255
     832:	68 83       	st	Y, r22
     834:	79 83       	std	Y+1, r23	; 0x01
     836:	8a 83       	std	Y+2, r24	; 0x02
     838:	9b 83       	std	Y+3, r25	; 0x03
     83a:	c7 5a       	subi	r28, 0xA7	; 167
     83c:	d0 40       	sbci	r29, 0x00	; 0
     83e:	c9 55       	subi	r28, 0x59	; 89
     840:	df 4f       	sbci	r29, 0xFF	; 255
     842:	88 81       	ld	r24, Y
     844:	99 81       	ldd	r25, Y+1	; 0x01
     846:	c7 5a       	subi	r28, 0xA7	; 167
     848:	d0 40       	sbci	r29, 0x00	; 0
     84a:	f8 01       	movw	r30, r16
     84c:	91 83       	std	Z+1, r25	; 0x01
     84e:	80 83       	st	Z, r24

00000850 <.L31>:
     850:	ce 01       	movw	r24, r28
     852:	86 5a       	subi	r24, 0xA6	; 166
     854:	9f 4f       	sbci	r25, 0xFF	; 255
     856:	9e 01       	movw	r18, r28
     858:	2a 5a       	subi	r18, 0xAA	; 170
     85a:	3f 4f       	sbci	r19, 0xFF	; 255
     85c:	d9 01       	movw	r26, r18
     85e:	2d 91       	ld	r18, X+
     860:	3c 91       	ld	r19, X
     862:	fc 01       	movw	r30, r24
     864:	31 83       	std	Z+1, r19	; 0x01
     866:	20 83       	st	Z, r18

00000868 <.LBB165>:
     868:	ce 01       	movw	r24, r28
     86a:	86 5a       	subi	r24, 0xA6	; 166
     86c:	9f 4f       	sbci	r25, 0xFF	; 255
     86e:	dc 01       	movw	r26, r24
     870:	8d 91       	ld	r24, X+
     872:	9c 91       	ld	r25, X
     874:	11 97       	sbiw	r26, 0x01	; 1

00000876 <.L1^B6>:
     876:	01 97       	sbiw	r24, 0x01	; 1
     878:	f1 f7       	brne	.-4      	; 0x876 <.L1^B6>
     87a:	9e 01       	movw	r18, r28
     87c:	26 5a       	subi	r18, 0xA6	; 166
     87e:	3f 4f       	sbci	r19, 0xFF	; 255
     880:	f9 01       	movw	r30, r18
     882:	91 83       	std	Z+1, r25	; 0x01
     884:	80 83       	st	Z, r24

00000886 <.Loc.67>:
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
     886:	68 c0       	rjmp	.+208    	; 0x958 <.L26>

00000888 <.L92>:
	}
	else if (__tmp > 255)
     888:	ce 01       	movw	r24, r28
     88a:	8b 5b       	subi	r24, 0xBB	; 187
     88c:	9f 4f       	sbci	r25, 0xFF	; 255
     88e:	20 e0       	ldi	r18, 0x00	; 0
     890:	30 e0       	ldi	r19, 0x00	; 0
     892:	4f e7       	ldi	r20, 0x7F	; 127
     894:	53 e4       	ldi	r21, 0x43	; 67
     896:	dc 01       	movw	r26, r24
     898:	6d 91       	ld	r22, X+
     89a:	7d 91       	ld	r23, X+
     89c:	8d 91       	ld	r24, X+
     89e:	9c 91       	ld	r25, X
     8a0:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
     8a4:	88 23       	and	r24, r24
     8a6:	e1 f1       	breq	.+120    	; 0x920 <.L95>
     8a8:	dc f1       	brlt	.+118    	; 0x920 <.L95>

000008aa <.LBB167>:
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     8aa:	8e 01       	movw	r16, r28
     8ac:	04 5a       	subi	r16, 0xA4	; 164
     8ae:	1f 4f       	sbci	r17, 0xFF	; 255
     8b0:	ce 01       	movw	r24, r28
     8b2:	87 5b       	subi	r24, 0xB7	; 183
     8b4:	9f 4f       	sbci	r25, 0xFF	; 255
     8b6:	fc 01       	movw	r30, r24
     8b8:	60 81       	ld	r22, Z
     8ba:	71 81       	ldd	r23, Z+1	; 0x01
     8bc:	82 81       	ldd	r24, Z+2	; 0x02
     8be:	93 81       	ldd	r25, Z+3	; 0x03
     8c0:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
     8c4:	c5 55       	subi	r28, 0x55	; 85
     8c6:	df 4f       	sbci	r29, 0xFF	; 255
     8c8:	68 83       	st	Y, r22
     8ca:	79 83       	std	Y+1, r23	; 0x01
     8cc:	8a 83       	std	Y+2, r24	; 0x02
     8ce:	9b 83       	std	Y+3, r25	; 0x03
     8d0:	cb 5a       	subi	r28, 0xAB	; 171
     8d2:	d0 40       	sbci	r29, 0x00	; 0
     8d4:	c5 55       	subi	r28, 0x55	; 85
     8d6:	df 4f       	sbci	r29, 0xFF	; 255
     8d8:	e8 81       	ld	r30, Y
     8da:	f9 81       	ldd	r31, Y+1	; 0x01
     8dc:	cb 5a       	subi	r28, 0xAB	; 171
     8de:	d0 40       	sbci	r29, 0x00	; 0
     8e0:	d8 01       	movw	r26, r16
     8e2:	ed 93       	st	X+, r30
     8e4:	fc 93       	st	X, r31
     8e6:	ce 01       	movw	r24, r28
     8e8:	82 5a       	subi	r24, 0xA2	; 162
     8ea:	9f 4f       	sbci	r25, 0xFF	; 255
     8ec:	9e 01       	movw	r18, r28
     8ee:	24 5a       	subi	r18, 0xA4	; 164
     8f0:	3f 4f       	sbci	r19, 0xFF	; 255
     8f2:	d9 01       	movw	r26, r18
     8f4:	2d 91       	ld	r18, X+
     8f6:	3c 91       	ld	r19, X
     8f8:	fc 01       	movw	r30, r24
     8fa:	31 83       	std	Z+1, r19	; 0x01
     8fc:	20 83       	st	Z, r18

000008fe <.LBB168>:
	__asm__ volatile (
     8fe:	ce 01       	movw	r24, r28
     900:	82 5a       	subi	r24, 0xA2	; 162
     902:	9f 4f       	sbci	r25, 0xFF	; 255
     904:	dc 01       	movw	r26, r24
     906:	8d 91       	ld	r24, X+
     908:	9c 91       	ld	r25, X
     90a:	11 97       	sbiw	r26, 0x01	; 1

0000090c <.L1^B7>:
     90c:	01 97       	sbiw	r24, 0x01	; 1
     90e:	f1 f7       	brne	.-4      	; 0x90c <.L1^B7>
     910:	9e 01       	movw	r18, r28
     912:	22 5a       	subi	r18, 0xA2	; 162
     914:	3f 4f       	sbci	r19, 0xFF	; 255
     916:	f9 01       	movw	r30, r18
     918:	91 83       	std	Z+1, r25	; 0x01
     91a:	80 83       	st	Z, r24

0000091c <.Loc.71>:
	...

0000091e <.LBE168>:
		_delay_loop_2(__ticks);
		return;
     91e:	34 c0       	rjmp	.+104    	; 0x988 <.L39>

00000920 <.L95>:
	}
	else
		__ticks = (uint8_t)__tmp;
     920:	8e 01       	movw	r16, r28
     922:	03 5b       	subi	r16, 0xB3	; 179
     924:	1f 4f       	sbci	r17, 0xFF	; 255
     926:	ce 01       	movw	r24, r28
     928:	8b 5b       	subi	r24, 0xBB	; 187
     92a:	9f 4f       	sbci	r25, 0xFF	; 255
     92c:	dc 01       	movw	r26, r24
     92e:	6d 91       	ld	r22, X+
     930:	7d 91       	ld	r23, X+
     932:	8d 91       	ld	r24, X+
     934:	9c 91       	ld	r25, X
     936:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
     93a:	c1 55       	subi	r28, 0x51	; 81
     93c:	df 4f       	sbci	r29, 0xFF	; 255
     93e:	68 83       	st	Y, r22
     940:	79 83       	std	Y+1, r23	; 0x01
     942:	8a 83       	std	Y+2, r24	; 0x02
     944:	9b 83       	std	Y+3, r25	; 0x03
     946:	cf 5a       	subi	r28, 0xAF	; 175
     948:	d0 40       	sbci	r29, 0x00	; 0
     94a:	c1 55       	subi	r28, 0x51	; 81
     94c:	df 4f       	sbci	r29, 0xFF	; 255
     94e:	88 81       	ld	r24, Y
     950:	cf 5a       	subi	r28, 0xAF	; 175
     952:	d0 40       	sbci	r29, 0x00	; 0
     954:	f8 01       	movw	r30, r16
     956:	80 83       	st	Z, r24

00000958 <.L26>:
     958:	ce 01       	movw	r24, r28
     95a:	80 5a       	subi	r24, 0xA0	; 160
     95c:	9f 4f       	sbci	r25, 0xFF	; 255
     95e:	9e 01       	movw	r18, r28
     960:	23 5b       	subi	r18, 0xB3	; 179
     962:	3f 4f       	sbci	r19, 0xFF	; 255
     964:	d9 01       	movw	r26, r18
     966:	2c 91       	ld	r18, X
     968:	fc 01       	movw	r30, r24
     96a:	20 83       	st	Z, r18

0000096c <.LBB170>:
	__asm__ volatile (
     96c:	ce 01       	movw	r24, r28
     96e:	80 5a       	subi	r24, 0xA0	; 160
     970:	9f 4f       	sbci	r25, 0xFF	; 255
     972:	dc 01       	movw	r26, r24
     974:	8c 91       	ld	r24, X
     976:	28 2f       	mov	r18, r24

00000978 <.L1^B8>:
     978:	2a 95       	dec	r18
     97a:	f1 f7       	brne	.-4      	; 0x978 <.L1^B8>
     97c:	ce 01       	movw	r24, r28
     97e:	80 5a       	subi	r24, 0xA0	; 160
     980:	9f 4f       	sbci	r25, 0xFF	; 255
     982:	fc 01       	movw	r30, r24
     984:	20 83       	st	Z, r18

00000986 <.Loc.75>:
	...

00000988 <.L39>:
	_delay_us(10);                      // Delay of 10 us

	lcd_write_4(lcd_FunctionReset);		// Second part of reset sequence
     988:	80 e3       	ldi	r24, 0x30	; 48
     98a:	0e 94 32 09 	call	0x1264	; 0x1264 <lcd_write_4>
     98e:	80 e0       	ldi	r24, 0x00	; 0
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	a8 e4       	ldi	r26, 0x48	; 72
     994:	b3 e4       	ldi	r27, 0x43	; 67
     996:	89 a3       	std	Y+33, r24	; 0x21
     998:	9a a3       	std	Y+34, r25	; 0x22
     99a:	ab a3       	std	Y+35, r26	; 0x23
     99c:	bc a3       	std	Y+36, r27	; 0x24

0000099e <.LBB172>:
	__tmp = ((F_CPU) / 3e6) * __us;
     99e:	2b ea       	ldi	r18, 0xAB	; 171
     9a0:	3a ea       	ldi	r19, 0xAA	; 170
     9a2:	4a ea       	ldi	r20, 0xAA	; 170
     9a4:	50 e4       	ldi	r21, 0x40	; 64
     9a6:	69 a1       	ldd	r22, Y+33	; 0x21
     9a8:	7a a1       	ldd	r23, Y+34	; 0x22
     9aa:	8b a1       	ldd	r24, Y+35	; 0x23
     9ac:	9c a1       	ldd	r25, Y+36	; 0x24
     9ae:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
     9b2:	cd 54       	subi	r28, 0x4D	; 77
     9b4:	df 4f       	sbci	r29, 0xFF	; 255
     9b6:	68 83       	st	Y, r22
     9b8:	79 83       	std	Y+1, r23	; 0x01
     9ba:	8a 83       	std	Y+2, r24	; 0x02
     9bc:	9b 83       	std	Y+3, r25	; 0x03
     9be:	c3 5b       	subi	r28, 0xB3	; 179
     9c0:	d0 40       	sbci	r29, 0x00	; 0
     9c2:	cd 54       	subi	r28, 0x4D	; 77
     9c4:	df 4f       	sbci	r29, 0xFF	; 255
     9c6:	88 81       	ld	r24, Y
     9c8:	99 81       	ldd	r25, Y+1	; 0x01
     9ca:	aa 81       	ldd	r26, Y+2	; 0x02
     9cc:	bb 81       	ldd	r27, Y+3	; 0x03
     9ce:	c3 5b       	subi	r28, 0xB3	; 179
     9d0:	d0 40       	sbci	r29, 0x00	; 0
     9d2:	8d a3       	std	Y+37, r24	; 0x25
     9d4:	9e a3       	std	Y+38, r25	; 0x26
     9d6:	af a3       	std	Y+39, r26	; 0x27
     9d8:	b8 a7       	std	Y+40, r27	; 0x28

000009da <.Loc.78>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
     9da:	20 e0       	ldi	r18, 0x00	; 0
     9dc:	30 e0       	ldi	r19, 0x00	; 0
     9de:	40 e8       	ldi	r20, 0x80	; 128
     9e0:	50 e4       	ldi	r21, 0x40	; 64
     9e2:	69 a1       	ldd	r22, Y+33	; 0x21
     9e4:	7a a1       	ldd	r23, Y+34	; 0x22
     9e6:	8b a1       	ldd	r24, Y+35	; 0x23
     9e8:	9c a1       	ldd	r25, Y+36	; 0x24
     9ea:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
     9ee:	c9 54       	subi	r28, 0x49	; 73
     9f0:	df 4f       	sbci	r29, 0xFF	; 255
     9f2:	68 83       	st	Y, r22
     9f4:	79 83       	std	Y+1, r23	; 0x01
     9f6:	8a 83       	std	Y+2, r24	; 0x02
     9f8:	9b 83       	std	Y+3, r25	; 0x03
     9fa:	c7 5b       	subi	r28, 0xB7	; 183
     9fc:	d0 40       	sbci	r29, 0x00	; 0
     9fe:	c9 54       	subi	r28, 0x49	; 73
     a00:	df 4f       	sbci	r29, 0xFF	; 255
     a02:	88 81       	ld	r24, Y
     a04:	99 81       	ldd	r25, Y+1	; 0x01
     a06:	aa 81       	ldd	r26, Y+2	; 0x02
     a08:	bb 81       	ldd	r27, Y+3	; 0x03
     a0a:	c7 5b       	subi	r28, 0xB7	; 183
     a0c:	d0 40       	sbci	r29, 0x00	; 0
     a0e:	89 a7       	std	Y+41, r24	; 0x29
     a10:	9a a7       	std	Y+42, r25	; 0x2a
     a12:	ab a7       	std	Y+43, r26	; 0x2b
     a14:	bc a7       	std	Y+44, r27	; 0x2c

00000a16 <.Loc.79>:
	if (__tmp < 1.0)
     a16:	20 e0       	ldi	r18, 0x00	; 0
     a18:	30 e0       	ldi	r19, 0x00	; 0
     a1a:	40 e8       	ldi	r20, 0x80	; 128
     a1c:	5f e3       	ldi	r21, 0x3F	; 63
     a1e:	6d a1       	ldd	r22, Y+37	; 0x25
     a20:	7e a1       	ldd	r23, Y+38	; 0x26
     a22:	8f a1       	ldd	r24, Y+39	; 0x27
     a24:	98 a5       	ldd	r25, Y+40	; 0x28
     a26:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
     a2a:	88 23       	and	r24, r24
     a2c:	1c f4       	brge	.+6      	; 0xa34 <.L96>

00000a2e <.Loc.80>:
		__ticks = 1;
     a2e:	81 e0       	ldi	r24, 0x01	; 1
     a30:	8d a7       	std	Y+45, r24	; 0x2d
     a32:	1b c1       	rjmp	.+566    	; 0xc6a <.L42>

00000a34 <.L96>:
	else if (__tmp2 > 65535)
     a34:	20 e0       	ldi	r18, 0x00	; 0
     a36:	3f ef       	ldi	r19, 0xFF	; 255
     a38:	4f e7       	ldi	r20, 0x7F	; 127
     a3a:	57 e4       	ldi	r21, 0x47	; 71
     a3c:	69 a5       	ldd	r22, Y+41	; 0x29
     a3e:	7a a5       	ldd	r23, Y+42	; 0x2a
     a40:	8b a5       	ldd	r24, Y+43	; 0x2b
     a42:	9c a5       	ldd	r25, Y+44	; 0x2c
     a44:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
     a48:	88 23       	and	r24, r24
     a4a:	09 f0       	breq	.+2      	; 0xa4e <L0^A>

00000a4c <L0^A>:
     a4c:	0c f4       	brge	.+2      	; 0xa50 <.Loc.82>

00000a4e <L0^A>:
     a4e:	ca c0       	rjmp	.+404    	; 0xbe4 <.L97>

00000a50 <.Loc.82>:
		_delay_ms(__us / 1000.0);
     a50:	20 e0       	ldi	r18, 0x00	; 0
     a52:	30 e0       	ldi	r19, 0x00	; 0
     a54:	4a e7       	ldi	r20, 0x7A	; 122
     a56:	54 e4       	ldi	r21, 0x44	; 68
     a58:	69 a1       	ldd	r22, Y+33	; 0x21
     a5a:	7a a1       	ldd	r23, Y+34	; 0x22
     a5c:	8b a1       	ldd	r24, Y+35	; 0x23
     a5e:	9c a1       	ldd	r25, Y+36	; 0x24
     a60:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <__divsf3>
     a64:	c5 54       	subi	r28, 0x45	; 69
     a66:	df 4f       	sbci	r29, 0xFF	; 255
     a68:	68 83       	st	Y, r22
     a6a:	79 83       	std	Y+1, r23	; 0x01
     a6c:	8a 83       	std	Y+2, r24	; 0x02
     a6e:	9b 83       	std	Y+3, r25	; 0x03
     a70:	cb 5b       	subi	r28, 0xBB	; 187
     a72:	d0 40       	sbci	r29, 0x00	; 0
     a74:	c5 54       	subi	r28, 0x45	; 69
     a76:	df 4f       	sbci	r29, 0xFF	; 255
     a78:	88 81       	ld	r24, Y
     a7a:	99 81       	ldd	r25, Y+1	; 0x01
     a7c:	aa 81       	ldd	r26, Y+2	; 0x02
     a7e:	bb 81       	ldd	r27, Y+3	; 0x03
     a80:	cb 5b       	subi	r28, 0xBB	; 187
     a82:	d0 40       	sbci	r29, 0x00	; 0
     a84:	8e a7       	std	Y+46, r24	; 0x2e
     a86:	9f a7       	std	Y+47, r25	; 0x2f
     a88:	a8 ab       	std	Y+48, r26	; 0x30
     a8a:	b9 ab       	std	Y+49, r27	; 0x31

00000a8c <.LBB174>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     a8c:	20 e0       	ldi	r18, 0x00	; 0
     a8e:	30 e0       	ldi	r19, 0x00	; 0
     a90:	4a e7       	ldi	r20, 0x7A	; 122
     a92:	55 e4       	ldi	r21, 0x45	; 69
     a94:	6e a5       	ldd	r22, Y+46	; 0x2e
     a96:	7f a5       	ldd	r23, Y+47	; 0x2f
     a98:	88 a9       	ldd	r24, Y+48	; 0x30
     a9a:	99 a9       	ldd	r25, Y+49	; 0x31
     a9c:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
     aa0:	c1 54       	subi	r28, 0x41	; 65
     aa2:	df 4f       	sbci	r29, 0xFF	; 255
     aa4:	68 83       	st	Y, r22
     aa6:	79 83       	std	Y+1, r23	; 0x01
     aa8:	8a 83       	std	Y+2, r24	; 0x02
     aaa:	9b 83       	std	Y+3, r25	; 0x03
     aac:	cf 5b       	subi	r28, 0xBF	; 191
     aae:	d0 40       	sbci	r29, 0x00	; 0
     ab0:	c1 54       	subi	r28, 0x41	; 65
     ab2:	df 4f       	sbci	r29, 0xFF	; 255
     ab4:	88 81       	ld	r24, Y
     ab6:	99 81       	ldd	r25, Y+1	; 0x01
     ab8:	aa 81       	ldd	r26, Y+2	; 0x02
     aba:	bb 81       	ldd	r27, Y+3	; 0x03
     abc:	cf 5b       	subi	r28, 0xBF	; 191
     abe:	d0 40       	sbci	r29, 0x00	; 0
     ac0:	8a ab       	std	Y+50, r24	; 0x32
     ac2:	9b ab       	std	Y+51, r25	; 0x33
     ac4:	ac ab       	std	Y+52, r26	; 0x34
     ac6:	bd ab       	std	Y+53, r27	; 0x35

00000ac8 <.Loc.84>:
	if (__tmp < 1.0)
     ac8:	20 e0       	ldi	r18, 0x00	; 0
     aca:	30 e0       	ldi	r19, 0x00	; 0
     acc:	40 e8       	ldi	r20, 0x80	; 128
     ace:	5f e3       	ldi	r21, 0x3F	; 63
     ad0:	6a a9       	ldd	r22, Y+50	; 0x32
     ad2:	7b a9       	ldd	r23, Y+51	; 0x33
     ad4:	8c a9       	ldd	r24, Y+52	; 0x34
     ad6:	9d a9       	ldd	r25, Y+53	; 0x35
     ad8:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
     adc:	88 23       	and	r24, r24
     ade:	2c f4       	brge	.+10     	; 0xaea <.L98>

00000ae0 <.Loc.85>:
		__ticks = 1;
     ae0:	81 e0       	ldi	r24, 0x01	; 1
     ae2:	90 e0       	ldi	r25, 0x00	; 0
     ae4:	9f ab       	std	Y+55, r25	; 0x37
     ae6:	8e ab       	std	Y+54, r24	; 0x36
     ae8:	72 c0       	rjmp	.+228    	; 0xbce <.L47>

00000aea <.L98>:
	else if (__tmp > 65535)
     aea:	20 e0       	ldi	r18, 0x00	; 0
     aec:	3f ef       	ldi	r19, 0xFF	; 255
     aee:	4f e7       	ldi	r20, 0x7F	; 127
     af0:	57 e4       	ldi	r21, 0x47	; 71
     af2:	6a a9       	ldd	r22, Y+50	; 0x32
     af4:	7b a9       	ldd	r23, Y+51	; 0x33
     af6:	8c a9       	ldd	r24, Y+52	; 0x34
     af8:	9d a9       	ldd	r25, Y+53	; 0x35
     afa:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
     afe:	88 23       	and	r24, r24
     b00:	09 f0       	breq	.+2      	; 0xb04 <L0^A>

00000b02 <L0^A>:
     b02:	0c f4       	brge	.+2      	; 0xb06 <.Loc.87>

00000b04 <L0^A>:
     b04:	4e c0       	rjmp	.+156    	; 0xba2 <.L99>

00000b06 <.Loc.87>:
		__ticks = (uint16_t) (__ms * 10.0);
     b06:	20 e0       	ldi	r18, 0x00	; 0
     b08:	30 e0       	ldi	r19, 0x00	; 0
     b0a:	40 e2       	ldi	r20, 0x20	; 32
     b0c:	51 e4       	ldi	r21, 0x41	; 65
     b0e:	6e a5       	ldd	r22, Y+46	; 0x2e
     b10:	7f a5       	ldd	r23, Y+47	; 0x2f
     b12:	88 a9       	ldd	r24, Y+48	; 0x30
     b14:	99 a9       	ldd	r25, Y+49	; 0x31
     b16:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
     b1a:	cd 53       	subi	r28, 0x3D	; 61
     b1c:	df 4f       	sbci	r29, 0xFF	; 255
     b1e:	68 83       	st	Y, r22
     b20:	79 83       	std	Y+1, r23	; 0x01
     b22:	8a 83       	std	Y+2, r24	; 0x02
     b24:	9b 83       	std	Y+3, r25	; 0x03
     b26:	c3 5c       	subi	r28, 0xC3	; 195
     b28:	d0 40       	sbci	r29, 0x00	; 0
     b2a:	cd 53       	subi	r28, 0x3D	; 61
     b2c:	df 4f       	sbci	r29, 0xFF	; 255
     b2e:	88 81       	ld	r24, Y
     b30:	99 81       	ldd	r25, Y+1	; 0x01
     b32:	aa 81       	ldd	r26, Y+2	; 0x02
     b34:	bb 81       	ldd	r27, Y+3	; 0x03
     b36:	c3 5c       	subi	r28, 0xC3	; 195
     b38:	d0 40       	sbci	r29, 0x00	; 0
     b3a:	e7 96       	adiw	r28, 0x37	; 55
     b3c:	8c af       	std	Y+60, r24	; 0x3c
     b3e:	9d af       	std	Y+61, r25	; 0x3d
     b40:	ae af       	std	Y+62, r26	; 0x3e
     b42:	bf af       	std	Y+63, r27	; 0x3f
     b44:	e7 97       	sbiw	r28, 0x37	; 55

00000b46 <.Loc.88>:
     b46:	e7 96       	adiw	r28, 0x37	; 55
     b48:	6c ad       	ldd	r22, Y+60	; 0x3c
     b4a:	7d ad       	ldd	r23, Y+61	; 0x3d
     b4c:	8e ad       	ldd	r24, Y+62	; 0x3e
     b4e:	9f ad       	ldd	r25, Y+63	; 0x3f
     b50:	e7 97       	sbiw	r28, 0x37	; 55
     b52:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
     b56:	c9 53       	subi	r28, 0x39	; 57
     b58:	df 4f       	sbci	r29, 0xFF	; 255
     b5a:	68 83       	st	Y, r22
     b5c:	79 83       	std	Y+1, r23	; 0x01
     b5e:	8a 83       	std	Y+2, r24	; 0x02
     b60:	9b 83       	std	Y+3, r25	; 0x03
     b62:	c7 5c       	subi	r28, 0xC7	; 199
     b64:	d0 40       	sbci	r29, 0x00	; 0
     b66:	c9 53       	subi	r28, 0x39	; 57
     b68:	df 4f       	sbci	r29, 0xFF	; 255
     b6a:	a8 81       	ld	r26, Y
     b6c:	b9 81       	ldd	r27, Y+1	; 0x01
     b6e:	c7 5c       	subi	r28, 0xC7	; 199
     b70:	d0 40       	sbci	r29, 0x00	; 0
     b72:	bf ab       	std	Y+55, r27	; 0x37
     b74:	ae ab       	std	Y+54, r26	; 0x36

00000b76 <.Loc.89>:
		while(__ticks)
     b76:	10 c0       	rjmp	.+32     	; 0xb98 <.L50>

00000b78 <.L51>:
     b78:	80 e9       	ldi	r24, 0x90	; 144
     b7a:	91 e0       	ldi	r25, 0x01	; 1
     b7c:	99 af       	std	Y+57, r25	; 0x39
     b7e:	88 af       	std	Y+56, r24	; 0x38

00000b80 <.LBB176>:
	__asm__ volatile (
     b80:	88 ad       	ldd	r24, Y+56	; 0x38
     b82:	99 ad       	ldd	r25, Y+57	; 0x39

00000b84 <.L1^B9>:
     b84:	01 97       	sbiw	r24, 0x01	; 1
     b86:	f1 f7       	brne	.-4      	; 0xb84 <.L1^B9>
     b88:	99 af       	std	Y+57, r25	; 0x39
     b8a:	88 af       	std	Y+56, r24	; 0x38

00000b8c <.Loc.91>:
	...

00000b8e <.LBE176>:
			__ticks --;
     b8e:	8e a9       	ldd	r24, Y+54	; 0x36
     b90:	9f a9       	ldd	r25, Y+55	; 0x37
     b92:	01 97       	sbiw	r24, 0x01	; 1
     b94:	9f ab       	std	Y+55, r25	; 0x37
     b96:	8e ab       	std	Y+54, r24	; 0x36

00000b98 <.L50>:
		while(__ticks)
     b98:	8e a9       	ldd	r24, Y+54	; 0x36
     b9a:	9f a9       	ldd	r25, Y+55	; 0x37
     b9c:	00 97       	sbiw	r24, 0x00	; 0
     b9e:	61 f7       	brne	.-40     	; 0xb78 <.L51>

00000ba0 <.Loc.94>:
		return;
     ba0:	64 c0       	rjmp	.+200    	; 0xc6a <.L42>

00000ba2 <.L99>:
		__ticks = (uint16_t)__tmp;
     ba2:	6a a9       	ldd	r22, Y+50	; 0x32
     ba4:	7b a9       	ldd	r23, Y+51	; 0x33
     ba6:	8c a9       	ldd	r24, Y+52	; 0x34
     ba8:	9d a9       	ldd	r25, Y+53	; 0x35
     baa:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
     bae:	c5 53       	subi	r28, 0x35	; 53
     bb0:	df 4f       	sbci	r29, 0xFF	; 255
     bb2:	68 83       	st	Y, r22
     bb4:	79 83       	std	Y+1, r23	; 0x01
     bb6:	8a 83       	std	Y+2, r24	; 0x02
     bb8:	9b 83       	std	Y+3, r25	; 0x03
     bba:	cb 5c       	subi	r28, 0xCB	; 203
     bbc:	d0 40       	sbci	r29, 0x00	; 0
     bbe:	c5 53       	subi	r28, 0x35	; 53
     bc0:	df 4f       	sbci	r29, 0xFF	; 255
     bc2:	e8 81       	ld	r30, Y
     bc4:	f9 81       	ldd	r31, Y+1	; 0x01
     bc6:	cb 5c       	subi	r28, 0xCB	; 203
     bc8:	d0 40       	sbci	r29, 0x00	; 0
     bca:	ff ab       	std	Y+55, r31	; 0x37
     bcc:	ee ab       	std	Y+54, r30	; 0x36

00000bce <.L47>:
     bce:	8e a9       	ldd	r24, Y+54	; 0x36
     bd0:	9f a9       	ldd	r25, Y+55	; 0x37
     bd2:	9b af       	std	Y+59, r25	; 0x3b
     bd4:	8a af       	std	Y+58, r24	; 0x3a

00000bd6 <.LBB178>:
     bd6:	8a ad       	ldd	r24, Y+58	; 0x3a
     bd8:	9b ad       	ldd	r25, Y+59	; 0x3b

00000bda <.L1^B10>:
     bda:	01 97       	sbiw	r24, 0x01	; 1
     bdc:	f1 f7       	brne	.-4      	; 0xbda <.L1^B10>
     bde:	9b af       	std	Y+59, r25	; 0x3b
     be0:	8a af       	std	Y+58, r24	; 0x3a

00000be2 <.Loc.97>:
}
     be2:	43 c0       	rjmp	.+134    	; 0xc6a <.L42>

00000be4 <.L97>:
	else if (__tmp > 255)
     be4:	20 e0       	ldi	r18, 0x00	; 0
     be6:	30 e0       	ldi	r19, 0x00	; 0
     be8:	4f e7       	ldi	r20, 0x7F	; 127
     bea:	53 e4       	ldi	r21, 0x43	; 67
     bec:	6d a1       	ldd	r22, Y+37	; 0x25
     bee:	7e a1       	ldd	r23, Y+38	; 0x26
     bf0:	8f a1       	ldd	r24, Y+39	; 0x27
     bf2:	98 a5       	ldd	r25, Y+40	; 0x28
     bf4:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
     bf8:	88 23       	and	r24, r24
     bfa:	19 f1       	breq	.+70     	; 0xc42 <.L100>
     bfc:	14 f1       	brlt	.+68     	; 0xc42 <.L100>

00000bfe <.LBB180>:
		uint16_t __ticks=(uint16_t)__tmp2;
     bfe:	69 a5       	ldd	r22, Y+41	; 0x29
     c00:	7a a5       	ldd	r23, Y+42	; 0x2a
     c02:	8b a5       	ldd	r24, Y+43	; 0x2b
     c04:	9c a5       	ldd	r25, Y+44	; 0x2c
     c06:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
     c0a:	c1 53       	subi	r28, 0x31	; 49
     c0c:	df 4f       	sbci	r29, 0xFF	; 255
     c0e:	68 83       	st	Y, r22
     c10:	79 83       	std	Y+1, r23	; 0x01
     c12:	8a 83       	std	Y+2, r24	; 0x02
     c14:	9b 83       	std	Y+3, r25	; 0x03
     c16:	cf 5c       	subi	r28, 0xCF	; 207
     c18:	d0 40       	sbci	r29, 0x00	; 0
     c1a:	c1 53       	subi	r28, 0x31	; 49
     c1c:	df 4f       	sbci	r29, 0xFF	; 255
     c1e:	88 81       	ld	r24, Y
     c20:	99 81       	ldd	r25, Y+1	; 0x01
     c22:	cf 5c       	subi	r28, 0xCF	; 207
     c24:	d0 40       	sbci	r29, 0x00	; 0
     c26:	9d af       	std	Y+61, r25	; 0x3d
     c28:	8c af       	std	Y+60, r24	; 0x3c
     c2a:	8c ad       	ldd	r24, Y+60	; 0x3c
     c2c:	9d ad       	ldd	r25, Y+61	; 0x3d
     c2e:	9f af       	std	Y+63, r25	; 0x3f
     c30:	8e af       	std	Y+62, r24	; 0x3e

00000c32 <.LBB181>:
	__asm__ volatile (
     c32:	8e ad       	ldd	r24, Y+62	; 0x3e
     c34:	9f ad       	ldd	r25, Y+63	; 0x3f

00000c36 <.L1^B11>:
     c36:	01 97       	sbiw	r24, 0x01	; 1
     c38:	f1 f7       	brne	.-4      	; 0xc36 <.L1^B11>
     c3a:	9f af       	std	Y+63, r25	; 0x3f
     c3c:	8e af       	std	Y+62, r24	; 0x3e

00000c3e <.Loc.101>:
	...

00000c40 <.LBE181>:
		return;
     c40:	28 c0       	rjmp	.+80     	; 0xc92 <.L55>

00000c42 <.L100>:
		__ticks = (uint8_t)__tmp;
     c42:	6d a1       	ldd	r22, Y+37	; 0x25
     c44:	7e a1       	ldd	r23, Y+38	; 0x26
     c46:	8f a1       	ldd	r24, Y+39	; 0x27
     c48:	98 a5       	ldd	r25, Y+40	; 0x28
     c4a:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
     c4e:	cd 52       	subi	r28, 0x2D	; 45
     c50:	df 4f       	sbci	r29, 0xFF	; 255
     c52:	68 83       	st	Y, r22
     c54:	79 83       	std	Y+1, r23	; 0x01
     c56:	8a 83       	std	Y+2, r24	; 0x02
     c58:	9b 83       	std	Y+3, r25	; 0x03
     c5a:	c3 5d       	subi	r28, 0xD3	; 211
     c5c:	d0 40       	sbci	r29, 0x00	; 0
     c5e:	cd 52       	subi	r28, 0x2D	; 45
     c60:	df 4f       	sbci	r29, 0xFF	; 255
     c62:	98 81       	ld	r25, Y
     c64:	c3 5d       	subi	r28, 0xD3	; 211
     c66:	d0 40       	sbci	r29, 0x00	; 0
     c68:	9d a7       	std	Y+45, r25	; 0x2d

00000c6a <.L42>:
     c6a:	2d a5       	ldd	r18, Y+45	; 0x2d
     c6c:	ce 01       	movw	r24, r28
     c6e:	80 5c       	subi	r24, 0xC0	; 192
     c70:	9f 4f       	sbci	r25, 0xFF	; 255
     c72:	dc 01       	movw	r26, r24
     c74:	2c 93       	st	X, r18

00000c76 <.LBB183>:
	__asm__ volatile (
     c76:	ce 01       	movw	r24, r28
     c78:	80 5c       	subi	r24, 0xC0	; 192
     c7a:	9f 4f       	sbci	r25, 0xFF	; 255
     c7c:	fc 01       	movw	r30, r24
     c7e:	80 81       	ld	r24, Z
     c80:	28 2f       	mov	r18, r24

00000c82 <.L1^B12>:
     c82:	2a 95       	dec	r18
     c84:	f1 f7       	brne	.-4      	; 0xc82 <.L1^B12>
     c86:	ce 01       	movw	r24, r28
     c88:	80 5c       	subi	r24, 0xC0	; 192
     c8a:	9f 4f       	sbci	r25, 0xFF	; 255
     c8c:	dc 01       	movw	r26, r24
     c8e:	2c 93       	st	X, r18

00000c90 <.Loc.105>:
	...

00000c92 <.L55>:
	_delay_us(200);						// Delay of 200 us

	lcd_write_4(lcd_FunctionReset);		// Third part of reset sequence
     c92:	80 e3       	ldi	r24, 0x30	; 48
     c94:	0e 94 32 09 	call	0x1264	; 0x1264 <lcd_write_4>
     c98:	80 e0       	ldi	r24, 0x00	; 0
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	a0 ea       	ldi	r26, 0xA0	; 160
     c9e:	b2 e4       	ldi	r27, 0x42	; 66
     ca0:	89 83       	std	Y+1, r24	; 0x01
     ca2:	9a 83       	std	Y+2, r25	; 0x02
     ca4:	ab 83       	std	Y+3, r26	; 0x03
     ca6:	bc 83       	std	Y+4, r27	; 0x04

00000ca8 <.LBB185>:
	__tmp = ((F_CPU) / 3e6) * __us;
     ca8:	2b ea       	ldi	r18, 0xAB	; 171
     caa:	3a ea       	ldi	r19, 0xAA	; 170
     cac:	4a ea       	ldi	r20, 0xAA	; 170
     cae:	50 e4       	ldi	r21, 0x40	; 64
     cb0:	69 81       	ldd	r22, Y+1	; 0x01
     cb2:	7a 81       	ldd	r23, Y+2	; 0x02
     cb4:	8b 81       	ldd	r24, Y+3	; 0x03
     cb6:	9c 81       	ldd	r25, Y+4	; 0x04
     cb8:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
     cbc:	c9 52       	subi	r28, 0x29	; 41
     cbe:	df 4f       	sbci	r29, 0xFF	; 255
     cc0:	68 83       	st	Y, r22
     cc2:	79 83       	std	Y+1, r23	; 0x01
     cc4:	8a 83       	std	Y+2, r24	; 0x02
     cc6:	9b 83       	std	Y+3, r25	; 0x03
     cc8:	c7 5d       	subi	r28, 0xD7	; 215
     cca:	d0 40       	sbci	r29, 0x00	; 0
     ccc:	c9 52       	subi	r28, 0x29	; 41
     cce:	df 4f       	sbci	r29, 0xFF	; 255
     cd0:	88 81       	ld	r24, Y
     cd2:	99 81       	ldd	r25, Y+1	; 0x01
     cd4:	aa 81       	ldd	r26, Y+2	; 0x02
     cd6:	bb 81       	ldd	r27, Y+3	; 0x03
     cd8:	c7 5d       	subi	r28, 0xD7	; 215
     cda:	d0 40       	sbci	r29, 0x00	; 0
     cdc:	8d 83       	std	Y+5, r24	; 0x05
     cde:	9e 83       	std	Y+6, r25	; 0x06
     ce0:	af 83       	std	Y+7, r26	; 0x07
     ce2:	b8 87       	std	Y+8, r27	; 0x08

00000ce4 <.Loc.108>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
     ce4:	20 e0       	ldi	r18, 0x00	; 0
     ce6:	30 e0       	ldi	r19, 0x00	; 0
     ce8:	40 e8       	ldi	r20, 0x80	; 128
     cea:	50 e4       	ldi	r21, 0x40	; 64
     cec:	69 81       	ldd	r22, Y+1	; 0x01
     cee:	7a 81       	ldd	r23, Y+2	; 0x02
     cf0:	8b 81       	ldd	r24, Y+3	; 0x03
     cf2:	9c 81       	ldd	r25, Y+4	; 0x04
     cf4:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
     cf8:	c5 52       	subi	r28, 0x25	; 37
     cfa:	df 4f       	sbci	r29, 0xFF	; 255
     cfc:	68 83       	st	Y, r22
     cfe:	79 83       	std	Y+1, r23	; 0x01
     d00:	8a 83       	std	Y+2, r24	; 0x02
     d02:	9b 83       	std	Y+3, r25	; 0x03
     d04:	cb 5d       	subi	r28, 0xDB	; 219
     d06:	d0 40       	sbci	r29, 0x00	; 0
     d08:	c5 52       	subi	r28, 0x25	; 37
     d0a:	df 4f       	sbci	r29, 0xFF	; 255
     d0c:	88 81       	ld	r24, Y
     d0e:	99 81       	ldd	r25, Y+1	; 0x01
     d10:	aa 81       	ldd	r26, Y+2	; 0x02
     d12:	bb 81       	ldd	r27, Y+3	; 0x03
     d14:	cb 5d       	subi	r28, 0xDB	; 219
     d16:	d0 40       	sbci	r29, 0x00	; 0
     d18:	89 87       	std	Y+9, r24	; 0x09
     d1a:	9a 87       	std	Y+10, r25	; 0x0a
     d1c:	ab 87       	std	Y+11, r26	; 0x0b
     d1e:	bc 87       	std	Y+12, r27	; 0x0c

00000d20 <.Loc.109>:
	if (__tmp < 1.0)
     d20:	20 e0       	ldi	r18, 0x00	; 0
     d22:	30 e0       	ldi	r19, 0x00	; 0
     d24:	40 e8       	ldi	r20, 0x80	; 128
     d26:	5f e3       	ldi	r21, 0x3F	; 63
     d28:	6d 81       	ldd	r22, Y+5	; 0x05
     d2a:	7e 81       	ldd	r23, Y+6	; 0x06
     d2c:	8f 81       	ldd	r24, Y+7	; 0x07
     d2e:	98 85       	ldd	r25, Y+8	; 0x08
     d30:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
     d34:	88 23       	and	r24, r24
     d36:	1c f4       	brge	.+6      	; 0xd3e <.L101>

00000d38 <.Loc.110>:
		__ticks = 1;
     d38:	81 e0       	ldi	r24, 0x01	; 1
     d3a:	8d 87       	std	Y+13, r24	; 0x0d
     d3c:	1b c1       	rjmp	.+566    	; 0xf74 <.L58>

00000d3e <.L101>:
	else if (__tmp2 > 65535)
     d3e:	20 e0       	ldi	r18, 0x00	; 0
     d40:	3f ef       	ldi	r19, 0xFF	; 255
     d42:	4f e7       	ldi	r20, 0x7F	; 127
     d44:	57 e4       	ldi	r21, 0x47	; 71
     d46:	69 85       	ldd	r22, Y+9	; 0x09
     d48:	7a 85       	ldd	r23, Y+10	; 0x0a
     d4a:	8b 85       	ldd	r24, Y+11	; 0x0b
     d4c:	9c 85       	ldd	r25, Y+12	; 0x0c
     d4e:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
     d52:	88 23       	and	r24, r24
     d54:	09 f0       	breq	.+2      	; 0xd58 <L0^A>

00000d56 <L0^A>:
     d56:	0c f4       	brge	.+2      	; 0xd5a <.Loc.112>

00000d58 <L0^A>:
     d58:	ca c0       	rjmp	.+404    	; 0xeee <.L102>

00000d5a <.Loc.112>:
		_delay_ms(__us / 1000.0);
     d5a:	20 e0       	ldi	r18, 0x00	; 0
     d5c:	30 e0       	ldi	r19, 0x00	; 0
     d5e:	4a e7       	ldi	r20, 0x7A	; 122
     d60:	54 e4       	ldi	r21, 0x44	; 68
     d62:	69 81       	ldd	r22, Y+1	; 0x01
     d64:	7a 81       	ldd	r23, Y+2	; 0x02
     d66:	8b 81       	ldd	r24, Y+3	; 0x03
     d68:	9c 81       	ldd	r25, Y+4	; 0x04
     d6a:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <__divsf3>
     d6e:	c1 52       	subi	r28, 0x21	; 33
     d70:	df 4f       	sbci	r29, 0xFF	; 255
     d72:	68 83       	st	Y, r22
     d74:	79 83       	std	Y+1, r23	; 0x01
     d76:	8a 83       	std	Y+2, r24	; 0x02
     d78:	9b 83       	std	Y+3, r25	; 0x03
     d7a:	cf 5d       	subi	r28, 0xDF	; 223
     d7c:	d0 40       	sbci	r29, 0x00	; 0
     d7e:	c1 52       	subi	r28, 0x21	; 33
     d80:	df 4f       	sbci	r29, 0xFF	; 255
     d82:	88 81       	ld	r24, Y
     d84:	99 81       	ldd	r25, Y+1	; 0x01
     d86:	aa 81       	ldd	r26, Y+2	; 0x02
     d88:	bb 81       	ldd	r27, Y+3	; 0x03
     d8a:	cf 5d       	subi	r28, 0xDF	; 223
     d8c:	d0 40       	sbci	r29, 0x00	; 0
     d8e:	8e 87       	std	Y+14, r24	; 0x0e
     d90:	9f 87       	std	Y+15, r25	; 0x0f
     d92:	a8 8b       	std	Y+16, r26	; 0x10
     d94:	b9 8b       	std	Y+17, r27	; 0x11

00000d96 <.LBB187>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     d96:	20 e0       	ldi	r18, 0x00	; 0
     d98:	30 e0       	ldi	r19, 0x00	; 0
     d9a:	4a e7       	ldi	r20, 0x7A	; 122
     d9c:	55 e4       	ldi	r21, 0x45	; 69
     d9e:	6e 85       	ldd	r22, Y+14	; 0x0e
     da0:	7f 85       	ldd	r23, Y+15	; 0x0f
     da2:	88 89       	ldd	r24, Y+16	; 0x10
     da4:	99 89       	ldd	r25, Y+17	; 0x11
     da6:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
     daa:	cd 51       	subi	r28, 0x1D	; 29
     dac:	df 4f       	sbci	r29, 0xFF	; 255
     dae:	68 83       	st	Y, r22
     db0:	79 83       	std	Y+1, r23	; 0x01
     db2:	8a 83       	std	Y+2, r24	; 0x02
     db4:	9b 83       	std	Y+3, r25	; 0x03
     db6:	c3 5e       	subi	r28, 0xE3	; 227
     db8:	d0 40       	sbci	r29, 0x00	; 0
     dba:	cd 51       	subi	r28, 0x1D	; 29
     dbc:	df 4f       	sbci	r29, 0xFF	; 255
     dbe:	88 81       	ld	r24, Y
     dc0:	99 81       	ldd	r25, Y+1	; 0x01
     dc2:	aa 81       	ldd	r26, Y+2	; 0x02
     dc4:	bb 81       	ldd	r27, Y+3	; 0x03
     dc6:	c3 5e       	subi	r28, 0xE3	; 227
     dc8:	d0 40       	sbci	r29, 0x00	; 0
     dca:	8a 8b       	std	Y+18, r24	; 0x12
     dcc:	9b 8b       	std	Y+19, r25	; 0x13
     dce:	ac 8b       	std	Y+20, r26	; 0x14
     dd0:	bd 8b       	std	Y+21, r27	; 0x15

00000dd2 <.Loc.114>:
	if (__tmp < 1.0)
     dd2:	20 e0       	ldi	r18, 0x00	; 0
     dd4:	30 e0       	ldi	r19, 0x00	; 0
     dd6:	40 e8       	ldi	r20, 0x80	; 128
     dd8:	5f e3       	ldi	r21, 0x3F	; 63
     dda:	6a 89       	ldd	r22, Y+18	; 0x12
     ddc:	7b 89       	ldd	r23, Y+19	; 0x13
     dde:	8c 89       	ldd	r24, Y+20	; 0x14
     de0:	9d 89       	ldd	r25, Y+21	; 0x15
     de2:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
     de6:	88 23       	and	r24, r24
     de8:	2c f4       	brge	.+10     	; 0xdf4 <.L103>

00000dea <.Loc.115>:
		__ticks = 1;
     dea:	81 e0       	ldi	r24, 0x01	; 1
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	9f 8b       	std	Y+23, r25	; 0x17
     df0:	8e 8b       	std	Y+22, r24	; 0x16
     df2:	72 c0       	rjmp	.+228    	; 0xed8 <.L63>

00000df4 <.L103>:
	else if (__tmp > 65535)
     df4:	20 e0       	ldi	r18, 0x00	; 0
     df6:	3f ef       	ldi	r19, 0xFF	; 255
     df8:	4f e7       	ldi	r20, 0x7F	; 127
     dfa:	57 e4       	ldi	r21, 0x47	; 71
     dfc:	6a 89       	ldd	r22, Y+18	; 0x12
     dfe:	7b 89       	ldd	r23, Y+19	; 0x13
     e00:	8c 89       	ldd	r24, Y+20	; 0x14
     e02:	9d 89       	ldd	r25, Y+21	; 0x15
     e04:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
     e08:	88 23       	and	r24, r24
     e0a:	09 f0       	breq	.+2      	; 0xe0e <L0^A>

00000e0c <L0^A>:
     e0c:	0c f4       	brge	.+2      	; 0xe10 <.Loc.117>

00000e0e <L0^A>:
     e0e:	4e c0       	rjmp	.+156    	; 0xeac <.L104>

00000e10 <.Loc.117>:
		__ticks = (uint16_t) (__ms * 10.0);
     e10:	20 e0       	ldi	r18, 0x00	; 0
     e12:	30 e0       	ldi	r19, 0x00	; 0
     e14:	40 e2       	ldi	r20, 0x20	; 32
     e16:	51 e4       	ldi	r21, 0x41	; 65
     e18:	6e 85       	ldd	r22, Y+14	; 0x0e
     e1a:	7f 85       	ldd	r23, Y+15	; 0x0f
     e1c:	88 89       	ldd	r24, Y+16	; 0x10
     e1e:	99 89       	ldd	r25, Y+17	; 0x11
     e20:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
     e24:	c9 51       	subi	r28, 0x19	; 25
     e26:	df 4f       	sbci	r29, 0xFF	; 255
     e28:	68 83       	st	Y, r22
     e2a:	79 83       	std	Y+1, r23	; 0x01
     e2c:	8a 83       	std	Y+2, r24	; 0x02
     e2e:	9b 83       	std	Y+3, r25	; 0x03
     e30:	c7 5e       	subi	r28, 0xE7	; 231
     e32:	d0 40       	sbci	r29, 0x00	; 0
     e34:	c9 51       	subi	r28, 0x19	; 25
     e36:	df 4f       	sbci	r29, 0xFF	; 255
     e38:	88 81       	ld	r24, Y
     e3a:	99 81       	ldd	r25, Y+1	; 0x01
     e3c:	aa 81       	ldd	r26, Y+2	; 0x02
     e3e:	bb 81       	ldd	r27, Y+3	; 0x03
     e40:	c7 5e       	subi	r28, 0xE7	; 231
     e42:	d0 40       	sbci	r29, 0x00	; 0
     e44:	e3 96       	adiw	r28, 0x33	; 51
     e46:	8c af       	std	Y+60, r24	; 0x3c
     e48:	9d af       	std	Y+61, r25	; 0x3d
     e4a:	ae af       	std	Y+62, r26	; 0x3e
     e4c:	bf af       	std	Y+63, r27	; 0x3f
     e4e:	e3 97       	sbiw	r28, 0x33	; 51

00000e50 <.Loc.118>:
     e50:	e3 96       	adiw	r28, 0x33	; 51
     e52:	6c ad       	ldd	r22, Y+60	; 0x3c
     e54:	7d ad       	ldd	r23, Y+61	; 0x3d
     e56:	8e ad       	ldd	r24, Y+62	; 0x3e
     e58:	9f ad       	ldd	r25, Y+63	; 0x3f
     e5a:	e3 97       	sbiw	r28, 0x33	; 51
     e5c:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
     e60:	c5 51       	subi	r28, 0x15	; 21
     e62:	df 4f       	sbci	r29, 0xFF	; 255
     e64:	68 83       	st	Y, r22
     e66:	79 83       	std	Y+1, r23	; 0x01
     e68:	8a 83       	std	Y+2, r24	; 0x02
     e6a:	9b 83       	std	Y+3, r25	; 0x03
     e6c:	cb 5e       	subi	r28, 0xEB	; 235
     e6e:	d0 40       	sbci	r29, 0x00	; 0
     e70:	c5 51       	subi	r28, 0x15	; 21
     e72:	df 4f       	sbci	r29, 0xFF	; 255
     e74:	a8 81       	ld	r26, Y
     e76:	b9 81       	ldd	r27, Y+1	; 0x01
     e78:	cb 5e       	subi	r28, 0xEB	; 235
     e7a:	d0 40       	sbci	r29, 0x00	; 0
     e7c:	bf 8b       	std	Y+23, r27	; 0x17
     e7e:	ae 8b       	std	Y+22, r26	; 0x16

00000e80 <.Loc.119>:
		while(__ticks)
     e80:	10 c0       	rjmp	.+32     	; 0xea2 <.L66>

00000e82 <.L67>:
     e82:	80 e9       	ldi	r24, 0x90	; 144
     e84:	91 e0       	ldi	r25, 0x01	; 1
     e86:	99 8f       	std	Y+25, r25	; 0x19
     e88:	88 8f       	std	Y+24, r24	; 0x18

00000e8a <.LBB189>:
	__asm__ volatile (
     e8a:	88 8d       	ldd	r24, Y+24	; 0x18
     e8c:	99 8d       	ldd	r25, Y+25	; 0x19

00000e8e <.L1^B13>:
     e8e:	01 97       	sbiw	r24, 0x01	; 1
     e90:	f1 f7       	brne	.-4      	; 0xe8e <.L1^B13>
     e92:	99 8f       	std	Y+25, r25	; 0x19
     e94:	88 8f       	std	Y+24, r24	; 0x18

00000e96 <.Loc.121>:
	...

00000e98 <.LBE189>:
			__ticks --;
     e98:	8e 89       	ldd	r24, Y+22	; 0x16
     e9a:	9f 89       	ldd	r25, Y+23	; 0x17
     e9c:	01 97       	sbiw	r24, 0x01	; 1
     e9e:	9f 8b       	std	Y+23, r25	; 0x17
     ea0:	8e 8b       	std	Y+22, r24	; 0x16

00000ea2 <.L66>:
		while(__ticks)
     ea2:	8e 89       	ldd	r24, Y+22	; 0x16
     ea4:	9f 89       	ldd	r25, Y+23	; 0x17
     ea6:	00 97       	sbiw	r24, 0x00	; 0
     ea8:	61 f7       	brne	.-40     	; 0xe82 <.L67>

00000eaa <.Loc.124>:
		return;
     eaa:	64 c0       	rjmp	.+200    	; 0xf74 <.L58>

00000eac <.L104>:
		__ticks = (uint16_t)__tmp;
     eac:	6a 89       	ldd	r22, Y+18	; 0x12
     eae:	7b 89       	ldd	r23, Y+19	; 0x13
     eb0:	8c 89       	ldd	r24, Y+20	; 0x14
     eb2:	9d 89       	ldd	r25, Y+21	; 0x15
     eb4:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
     eb8:	c1 51       	subi	r28, 0x11	; 17
     eba:	df 4f       	sbci	r29, 0xFF	; 255
     ebc:	68 83       	st	Y, r22
     ebe:	79 83       	std	Y+1, r23	; 0x01
     ec0:	8a 83       	std	Y+2, r24	; 0x02
     ec2:	9b 83       	std	Y+3, r25	; 0x03
     ec4:	cf 5e       	subi	r28, 0xEF	; 239
     ec6:	d0 40       	sbci	r29, 0x00	; 0
     ec8:	c1 51       	subi	r28, 0x11	; 17
     eca:	df 4f       	sbci	r29, 0xFF	; 255
     ecc:	e8 81       	ld	r30, Y
     ece:	f9 81       	ldd	r31, Y+1	; 0x01
     ed0:	cf 5e       	subi	r28, 0xEF	; 239
     ed2:	d0 40       	sbci	r29, 0x00	; 0
     ed4:	ff 8b       	std	Y+23, r31	; 0x17
     ed6:	ee 8b       	std	Y+22, r30	; 0x16

00000ed8 <.L63>:
     ed8:	8e 89       	ldd	r24, Y+22	; 0x16
     eda:	9f 89       	ldd	r25, Y+23	; 0x17
     edc:	9b 8f       	std	Y+27, r25	; 0x1b
     ede:	8a 8f       	std	Y+26, r24	; 0x1a

00000ee0 <.LBB191>:
     ee0:	8a 8d       	ldd	r24, Y+26	; 0x1a
     ee2:	9b 8d       	ldd	r25, Y+27	; 0x1b

00000ee4 <.L1^B14>:
     ee4:	01 97       	sbiw	r24, 0x01	; 1
     ee6:	f1 f7       	brne	.-4      	; 0xee4 <.L1^B14>
     ee8:	9b 8f       	std	Y+27, r25	; 0x1b
     eea:	8a 8f       	std	Y+26, r24	; 0x1a

00000eec <.Loc.127>:
}
     eec:	43 c0       	rjmp	.+134    	; 0xf74 <.L58>

00000eee <.L102>:
	else if (__tmp > 255)
     eee:	20 e0       	ldi	r18, 0x00	; 0
     ef0:	30 e0       	ldi	r19, 0x00	; 0
     ef2:	4f e7       	ldi	r20, 0x7F	; 127
     ef4:	53 e4       	ldi	r21, 0x43	; 67
     ef6:	6d 81       	ldd	r22, Y+5	; 0x05
     ef8:	7e 81       	ldd	r23, Y+6	; 0x06
     efa:	8f 81       	ldd	r24, Y+7	; 0x07
     efc:	98 85       	ldd	r25, Y+8	; 0x08
     efe:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
     f02:	88 23       	and	r24, r24
     f04:	19 f1       	breq	.+70     	; 0xf4c <.L105>
     f06:	14 f1       	brlt	.+68     	; 0xf4c <.L105>

00000f08 <.LBB193>:
		uint16_t __ticks=(uint16_t)__tmp2;
     f08:	69 85       	ldd	r22, Y+9	; 0x09
     f0a:	7a 85       	ldd	r23, Y+10	; 0x0a
     f0c:	8b 85       	ldd	r24, Y+11	; 0x0b
     f0e:	9c 85       	ldd	r25, Y+12	; 0x0c
     f10:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
     f14:	cd 50       	subi	r28, 0x0D	; 13
     f16:	df 4f       	sbci	r29, 0xFF	; 255
     f18:	68 83       	st	Y, r22
     f1a:	79 83       	std	Y+1, r23	; 0x01
     f1c:	8a 83       	std	Y+2, r24	; 0x02
     f1e:	9b 83       	std	Y+3, r25	; 0x03
     f20:	c3 5f       	subi	r28, 0xF3	; 243
     f22:	d0 40       	sbci	r29, 0x00	; 0
     f24:	cd 50       	subi	r28, 0x0D	; 13
     f26:	df 4f       	sbci	r29, 0xFF	; 255
     f28:	88 81       	ld	r24, Y
     f2a:	99 81       	ldd	r25, Y+1	; 0x01
     f2c:	c3 5f       	subi	r28, 0xF3	; 243
     f2e:	d0 40       	sbci	r29, 0x00	; 0
     f30:	9d 8f       	std	Y+29, r25	; 0x1d
     f32:	8c 8f       	std	Y+28, r24	; 0x1c
     f34:	8c 8d       	ldd	r24, Y+28	; 0x1c
     f36:	9d 8d       	ldd	r25, Y+29	; 0x1d
     f38:	9f 8f       	std	Y+31, r25	; 0x1f
     f3a:	8e 8f       	std	Y+30, r24	; 0x1e

00000f3c <.LBB194>:
	__asm__ volatile (
     f3c:	8e 8d       	ldd	r24, Y+30	; 0x1e
     f3e:	9f 8d       	ldd	r25, Y+31	; 0x1f

00000f40 <.L1^B15>:
     f40:	01 97       	sbiw	r24, 0x01	; 1
     f42:	f1 f7       	brne	.-4      	; 0xf40 <.L1^B15>
     f44:	9f 8f       	std	Y+31, r25	; 0x1f
     f46:	8e 8f       	std	Y+30, r24	; 0x1e

00000f48 <.Loc.131>:
	...

00000f4a <.LBE194>:
		return;
     f4a:	1b c0       	rjmp	.+54     	; 0xf82 <.L71>

00000f4c <.L105>:
		__ticks = (uint8_t)__tmp;
     f4c:	6d 81       	ldd	r22, Y+5	; 0x05
     f4e:	7e 81       	ldd	r23, Y+6	; 0x06
     f50:	8f 81       	ldd	r24, Y+7	; 0x07
     f52:	98 85       	ldd	r25, Y+8	; 0x08
     f54:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
     f58:	c9 50       	subi	r28, 0x09	; 9
     f5a:	df 4f       	sbci	r29, 0xFF	; 255
     f5c:	68 83       	st	Y, r22
     f5e:	79 83       	std	Y+1, r23	; 0x01
     f60:	8a 83       	std	Y+2, r24	; 0x02
     f62:	9b 83       	std	Y+3, r25	; 0x03
     f64:	c7 5f       	subi	r28, 0xF7	; 247
     f66:	d0 40       	sbci	r29, 0x00	; 0
     f68:	c9 50       	subi	r28, 0x09	; 9
     f6a:	df 4f       	sbci	r29, 0xFF	; 255
     f6c:	98 81       	ld	r25, Y
     f6e:	c7 5f       	subi	r28, 0xF7	; 247
     f70:	d0 40       	sbci	r29, 0x00	; 0
     f72:	9d 87       	std	Y+13, r25	; 0x0d

00000f74 <.L58>:
     f74:	8d 85       	ldd	r24, Y+13	; 0x0d
     f76:	88 a3       	std	Y+32, r24	; 0x20

00000f78 <.LBB196>:
	__asm__ volatile (
     f78:	88 a1       	ldd	r24, Y+32	; 0x20

00000f7a <.L1^B16>:
     f7a:	8a 95       	dec	r24
     f7c:	f1 f7       	brne	.-4      	; 0xf7a <.L1^B16>
     f7e:	88 a3       	std	Y+32, r24	; 0x20

00000f80 <.Loc.135>:
	...

00000f82 <.L71>:
	/* Preliminary Function Set instruction - used only to set the 4-bit mode.
	 The number of lines or the font cannot be set at this time since the controller is still in the
	 8-bit mode, but the data transfer mode can be changed since this parameter is determined by one
	 of the upper four bits of the instruction. */

	lcd_write_4(lcd_FunctionSet4bit);	// Set 4-bit mode
     f82:	88 e2       	ldi	r24, 0x28	; 40
     f84:	0e 94 32 09 	call	0x1264	; 0x1264 <lcd_write_4>

00000f88 <.Loc.137>:
	// From this point on the busy flag is available

	// Function Set instruction
	lcd_check_BF_4();    // Makes sure LCD controller is ready
     f88:	0e 94 ca 0c 	call	0x1994	; 0x1994 <lcd_check_BF_4>

00000f8c <.Loc.138>:

	lcd_write_instruction_4f(lcd_FunctionSet4bit);  // Set mode, lines, and font
     f8c:	88 e2       	ldi	r24, 0x28	; 40
     f8e:	0e 94 04 09 	call	0x1208	; 0x1208 <lcd_write_instruction_4f>

00000f92 <.Loc.139>:
	/*The next three instructions are specified in the data sheet as part of the initialization routine,
	  so it is a good idea (but probably not necessary) to do them just as specified and then redo them
	  later if the application requires a different configuration.*/

	/* Display On/Off Control instruction */
	lcd_check_BF_4();
     f92:	0e 94 ca 0c 	call	0x1994	; 0x1994 <lcd_check_BF_4>

00000f96 <.Loc.140>:
	lcd_write_instruction_4f(lcd_DisplayOff);       // Turn display OFF
     f96:	88 e0       	ldi	r24, 0x08	; 8
     f98:	0e 94 04 09 	call	0x1208	; 0x1208 <lcd_write_instruction_4f>

00000f9c <.Loc.141>:

	/* Clear Display instruction */
	lcd_check_BF_4();
     f9c:	0e 94 ca 0c 	call	0x1994	; 0x1994 <lcd_check_BF_4>

00000fa0 <.Loc.142>:
	lcd_write_instruction_4f(lcd_Clear);            // Clear display RAM
     fa0:	81 e0       	ldi	r24, 0x01	; 1
     fa2:	0e 94 04 09 	call	0x1208	; 0x1208 <lcd_write_instruction_4f>

00000fa6 <.Loc.143>:

	/* Entry Mode Set instruction */
	lcd_check_BF_4();
     fa6:	0e 94 ca 0c 	call	0x1994	; 0x1994 <lcd_check_BF_4>

00000faa <.Loc.144>:
	lcd_write_instruction_4f(lcd_EntryMode);        // Set desired shift characteristics
     faa:	86 e0       	ldi	r24, 0x06	; 6
     fac:	0e 94 04 09 	call	0x1208	; 0x1208 <lcd_write_instruction_4f>

00000fb0 <.Loc.145>:
	/*This is the end of the LCD controller initialization as specified in the data sheet, but the display
	  has been left in the OFF condition.  This is a good time to turn the display back ON. */

	/* Display On/Off Control instruction */
	lcd_check_BF_4();
     fb0:	0e 94 ca 0c 	call	0x1994	; 0x1994 <lcd_check_BF_4>

00000fb4 <.Loc.146>:
	lcd_write_instruction_4f(lcd_DisplayOn);        // turn the display ON
     fb4:	8c e0       	ldi	r24, 0x0C	; 12
     fb6:	0e 94 04 09 	call	0x1208	; 0x1208 <lcd_write_instruction_4f>

00000fba <.Loc.147>:
}
     fba:	00 00       	nop
     fbc:	c6 50       	subi	r28, 0x06	; 6
     fbe:	df 4f       	sbci	r29, 0xFF	; 255
     fc0:	0f b6       	in	r0, 0x3f	; 63
     fc2:	f8 94       	cli
     fc4:	de bf       	out	0x3e, r29	; 62
     fc6:	0f be       	out	0x3f, r0	; 63
     fc8:	cd bf       	out	0x3d, r28	; 61
     fca:	df 91       	pop	r29
     fcc:	cf 91       	pop	r28
     fce:	1f 91       	pop	r17
     fd0:	0f 91       	pop	r16
     fd2:	08 95       	ret

00000fd4 <updateLCDScreen>:
Inputs:		two pointers to a uint8 type data and 2 values, one for each row
Outputs:	none
Description:commands writing on LCD line by line
******************************************************************** */
void updateLCDScreen(uint8_t row, char * s1, int data, char * s2)
{
     fd4:	cf 93       	push	r28
     fd6:	df 93       	push	r29
     fd8:	cd b7       	in	r28, 0x3d	; 61
     fda:	de b7       	in	r29, 0x3e	; 62
     fdc:	af 97       	sbiw	r28, 0x2f	; 47
     fde:	0f b6       	in	r0, 0x3f	; 63
     fe0:	f8 94       	cli
     fe2:	de bf       	out	0x3e, r29	; 62
     fe4:	0f be       	out	0x3f, r0	; 63
     fe6:	cd bf       	out	0x3d, r28	; 61
     fe8:	89 a7       	std	Y+41, r24	; 0x29
     fea:	7b a7       	std	Y+43, r23	; 0x2b
     fec:	6a a7       	std	Y+42, r22	; 0x2a
     fee:	5d a7       	std	Y+45, r21	; 0x2d
     ff0:	4c a7       	std	Y+44, r20	; 0x2c
     ff2:	3f a7       	std	Y+47, r19	; 0x2f
     ff4:	2e a7       	std	Y+46, r18	; 0x2e

00000ff6 <.Loc.149>:
	/* convert data to string [buf] */
	char data2char[5] = "     ";
     ff6:	25 e0       	ldi	r18, 0x05	; 5
     ff8:	ec e1       	ldi	r30, 0x1C	; 28
     ffa:	f2 e0       	ldi	r31, 0x02	; 2
     ffc:	ce 01       	movw	r24, r28
     ffe:	01 96       	adiw	r24, 0x01	; 1
    1000:	dc 01       	movw	r26, r24

00001002 <.L^B1>:
    1002:	01 90       	ld	r0, Z+
    1004:	0d 92       	st	X+, r0
    1006:	2a 95       	dec	r18
    1008:	e1 f7       	brne	.-8      	; 0x1002 <.L^B1>

0000100a <.Loc.150>:
	char charRow[17];
	char emptyString[] = "                 ";	//17 empty spaces
    100a:	82 e1       	ldi	r24, 0x12	; 18
    100c:	e1 e2       	ldi	r30, 0x21	; 33
    100e:	f2 e0       	ldi	r31, 0x02	; 2
    1010:	de 01       	movw	r26, r28
    1012:	57 96       	adiw	r26, 0x17	; 23

00001014 <.L^B2>:
    1014:	01 90       	ld	r0, Z+
    1016:	0d 92       	st	X+, r0
    1018:	8a 95       	dec	r24
    101a:	e1 f7       	brne	.-8      	; 0x1014 <.L^B2>

0000101c <.Loc.151>:

	if (data != NONE)	{ itoa(data, data2char, 10);}
    101c:	8c a5       	ldd	r24, Y+44	; 0x2c
    101e:	9d a5       	ldd	r25, Y+45	; 0x2d
    1020:	8f 3f       	cpi	r24, 0xFF	; 255
    1022:	91 05       	cpc	r25, r1
    1024:	51 f0       	breq	.+20     	; 0x103a <.L107>

00001026 <.Loc.152>:
    1026:	8c a5       	ldd	r24, Y+44	; 0x2c
    1028:	9d a5       	ldd	r25, Y+45	; 0x2d
    102a:	4a e0       	ldi	r20, 0x0A	; 10
    102c:	50 e0       	ldi	r21, 0x00	; 0
    102e:	9e 01       	movw	r18, r28
    1030:	2f 5f       	subi	r18, 0xFF	; 255
    1032:	3f 4f       	sbci	r19, 0xFF	; 255
    1034:	b9 01       	movw	r22, r18
    1036:	0e 94 b8 25 	call	0x4b70	; 0x4b70 <itoa>

0000103a <.L107>:
	if (strcmp(s1, "NONE") == 0 ) { s1 = ""; }
    103a:	8a a5       	ldd	r24, Y+42	; 0x2a
    103c:	9b a5       	ldd	r25, Y+43	; 0x2b
    103e:	64 e0       	ldi	r22, 0x04	; 4
    1040:	72 e0       	ldi	r23, 0x02	; 2
    1042:	0e 94 af 25 	call	0x4b5e	; 0x4b5e <strcmp>

00001046 <.Loc.154>:
    1046:	00 97       	sbiw	r24, 0x00	; 0
    1048:	21 f4       	brne	.+8      	; 0x1052 <.L108>

0000104a <.Loc.155>:
    104a:	89 e0       	ldi	r24, 0x09	; 9
    104c:	92 e0       	ldi	r25, 0x02	; 2
    104e:	9b a7       	std	Y+43, r25	; 0x2b
    1050:	8a a7       	std	Y+42, r24	; 0x2a

00001052 <.L108>:
	if (strcmp(s2, "NONE") == 0 ) { s2 = ""; }
    1052:	8e a5       	ldd	r24, Y+46	; 0x2e
    1054:	9f a5       	ldd	r25, Y+47	; 0x2f
    1056:	64 e0       	ldi	r22, 0x04	; 4
    1058:	72 e0       	ldi	r23, 0x02	; 2
    105a:	0e 94 af 25 	call	0x4b5e	; 0x4b5e <strcmp>

0000105e <.Loc.157>:
    105e:	00 97       	sbiw	r24, 0x00	; 0
    1060:	21 f4       	brne	.+8      	; 0x106a <.L109>

00001062 <.Loc.158>:
    1062:	89 e0       	ldi	r24, 0x09	; 9
    1064:	92 e0       	ldi	r25, 0x02	; 2
    1066:	9f a7       	std	Y+47, r25	; 0x2f
    1068:	8e a7       	std	Y+46, r24	; 0x2e

0000106a <.L109>:

	/* Create the strings to be displayed */
	snprintf( charRow, sizeof charRow, "%s%s%s%s", s1, data2char, s2, emptyString );
    106a:	ce 01       	movw	r24, r28
    106c:	47 96       	adiw	r24, 0x17	; 23
    106e:	29 2f       	mov	r18, r25
    1070:	2f 93       	push	r18
    1072:	8f 93       	push	r24
    1074:	8f a5       	ldd	r24, Y+47	; 0x2f
    1076:	8f 93       	push	r24
    1078:	8e a5       	ldd	r24, Y+46	; 0x2e
    107a:	8f 93       	push	r24
    107c:	ce 01       	movw	r24, r28
    107e:	01 96       	adiw	r24, 0x01	; 1
    1080:	9f 93       	push	r25
    1082:	8f 93       	push	r24
    1084:	8b a5       	ldd	r24, Y+43	; 0x2b
    1086:	8f 93       	push	r24
    1088:	8a a5       	ldd	r24, Y+42	; 0x2a
    108a:	8f 93       	push	r24
    108c:	8a e0       	ldi	r24, 0x0A	; 10
    108e:	92 e0       	ldi	r25, 0x02	; 2
    1090:	89 2f       	mov	r24, r25
    1092:	8f 93       	push	r24
    1094:	8a e0       	ldi	r24, 0x0A	; 10
    1096:	92 e0       	ldi	r25, 0x02	; 2
    1098:	8f 93       	push	r24
    109a:	1f 92       	push	r1
    109c:	81 e1       	ldi	r24, 0x11	; 17
    109e:	8f 93       	push	r24
    10a0:	ce 01       	movw	r24, r28
    10a2:	06 96       	adiw	r24, 0x06	; 6
    10a4:	29 2f       	mov	r18, r25
    10a6:	2f 93       	push	r18
    10a8:	8f 93       	push	r24
    10aa:	0e 94 e8 25 	call	0x4bd0	; 0x4bd0 <snprintf>
    10ae:	8d b7       	in	r24, 0x3d	; 61
    10b0:	9e b7       	in	r25, 0x3e	; 62
    10b2:	0e 96       	adiw	r24, 0x0e	; 14
    10b4:	0f b6       	in	r0, 0x3f	; 63
    10b6:	f8 94       	cli
    10b8:	de bf       	out	0x3e, r29	; 62
    10ba:	0f be       	out	0x3f, r0	; 63
    10bc:	cd bf       	out	0x3d, r28	; 61

000010be <.Loc.160>:
	if (strcmp(s1, "CLEAR") == 0 ) { snprintf( charRow, sizeof charRow, "%s", emptyString ); };
    10be:	8a a5       	ldd	r24, Y+42	; 0x2a
    10c0:	9b a5       	ldd	r25, Y+43	; 0x2b
    10c2:	63 e1       	ldi	r22, 0x13	; 19
    10c4:	72 e0       	ldi	r23, 0x02	; 2
    10c6:	0e 94 af 25 	call	0x4b5e	; 0x4b5e <strcmp>

000010ca <.Loc.161>:
    10ca:	00 97       	sbiw	r24, 0x00	; 0
    10cc:	f1 f4       	brne	.+60     	; 0x110a <.L110>

000010ce <.Loc.162>:
    10ce:	ce 01       	movw	r24, r28
    10d0:	47 96       	adiw	r24, 0x17	; 23
    10d2:	29 2f       	mov	r18, r25
    10d4:	2f 93       	push	r18
    10d6:	8f 93       	push	r24
    10d8:	89 e1       	ldi	r24, 0x19	; 25
    10da:	92 e0       	ldi	r25, 0x02	; 2
    10dc:	89 2f       	mov	r24, r25
    10de:	8f 93       	push	r24
    10e0:	89 e1       	ldi	r24, 0x19	; 25
    10e2:	92 e0       	ldi	r25, 0x02	; 2
    10e4:	8f 93       	push	r24
    10e6:	1f 92       	push	r1
    10e8:	81 e1       	ldi	r24, 0x11	; 17
    10ea:	8f 93       	push	r24
    10ec:	ce 01       	movw	r24, r28
    10ee:	06 96       	adiw	r24, 0x06	; 6
    10f0:	29 2f       	mov	r18, r25
    10f2:	2f 93       	push	r18
    10f4:	8f 93       	push	r24
    10f6:	0e 94 e8 25 	call	0x4bd0	; 0x4bd0 <snprintf>
    10fa:	8d b7       	in	r24, 0x3d	; 61
    10fc:	9e b7       	in	r25, 0x3e	; 62
    10fe:	08 96       	adiw	r24, 0x08	; 8
    1100:	0f b6       	in	r0, 0x3f	; 63
    1102:	f8 94       	cli
    1104:	de bf       	out	0x3e, r29	; 62
    1106:	0f be       	out	0x3f, r0	; 63
    1108:	cd bf       	out	0x3d, r28	; 61

0000110a <.L110>:

	switch(row) {
    110a:	89 a5       	ldd	r24, Y+41	; 0x29
    110c:	88 2f       	mov	r24, r24
    110e:	90 e0       	ldi	r25, 0x00	; 0
    1110:	81 30       	cpi	r24, 0x01	; 1
    1112:	91 05       	cpc	r25, r1
    1114:	21 f0       	breq	.+8      	; 0x111e <.L111>
    1116:	82 30       	cpi	r24, 0x02	; 2
    1118:	91 05       	cpc	r25, r1
    111a:	29 f0       	breq	.+10     	; 0x1126 <.L112>
    111c:	08 c0       	rjmp	.+16     	; 0x112e <.L113>

0000111e <.L111>:
		case 1: /* ======= Line 1 ======= */
			lcd_write_instruction_4f(lcd_SetCursor | lcd_LineOne);
    111e:	80 e8       	ldi	r24, 0x80	; 128
    1120:	0e 94 04 09 	call	0x1208	; 0x1208 <lcd_write_instruction_4f>

00001124 <.Loc.165>:
			break;
    1124:	04 c0       	rjmp	.+8      	; 0x112e <.L113>

00001126 <.L112>:
		case 2: /* ======= Line 2 ======= */
			lcd_write_instruction_4f(lcd_SetCursor | lcd_LineTwo);
    1126:	80 ec       	ldi	r24, 0xC0	; 192
    1128:	0e 94 04 09 	call	0x1208	; 0x1208 <lcd_write_instruction_4f>

0000112c <.Loc.167>:
	...

0000112e <.L113>:
			break;
	}
	lcd_write_string_4f((unsigned char*) charRow);
    112e:	ce 01       	movw	r24, r28
    1130:	06 96       	adiw	r24, 0x06	; 6
    1132:	0e 94 a5 08 	call	0x114a	; 0x114a <lcd_write_string_4f>

00001136 <.Loc.169>:
}
    1136:	00 00       	nop
    1138:	af 96       	adiw	r28, 0x2f	; 47
    113a:	0f b6       	in	r0, 0x3f	; 63
    113c:	f8 94       	cli
    113e:	de bf       	out	0x3e, r29	; 62
    1140:	0f be       	out	0x3f, r0	; 63
    1142:	cd bf       	out	0x3d, r28	; 61
    1144:	df 91       	pop	r29
    1146:	cf 91       	pop	r28
    1148:	08 95       	ret

0000114a <lcd_write_string_4f>:
Inputs:		string to be displayed (stringData)
Outputs:	none
Description:writes a string of characters on LCD; uses the busy flag
******************************************************************** */
void lcd_write_string_4f(uint8_t stringData[])
{
    114a:	cf 93       	push	r28
    114c:	df 93       	push	r29
    114e:	00 d0       	rcall	.+0      	; 0x1150 <L0^A>

00001150 <L0^A>:
    1150:	0f 92       	push	r0
    1152:	cd b7       	in	r28, 0x3d	; 61
    1154:	de b7       	in	r29, 0x3e	; 62
    1156:	9c 83       	std	Y+4, r25	; 0x04
    1158:	8b 83       	std	Y+3, r24	; 0x03

0000115a <.Loc.171>:
    volatile int i = 0;                             // Character counter
    115a:	1a 82       	std	Y+2, r1	; 0x02
    115c:	19 82       	std	Y+1, r1	; 0x01

0000115e <.Loc.172>:
    while (stringData[i] != 0)
    115e:	12 c0       	rjmp	.+36     	; 0x1184 <.L115>

00001160 <.L116>:
    {
        lcd_check_BF_4();                           // Make sure LCD controller is ready
    1160:	0e 94 ca 0c 	call	0x1994	; 0x1994 <lcd_check_BF_4>

00001164 <.Loc.174>:
        lcd_write_character_4f(stringData[i]);
    1164:	89 81       	ldd	r24, Y+1	; 0x01
    1166:	9a 81       	ldd	r25, Y+2	; 0x02
    1168:	9c 01       	movw	r18, r24
    116a:	8b 81       	ldd	r24, Y+3	; 0x03
    116c:	9c 81       	ldd	r25, Y+4	; 0x04
    116e:	82 0f       	add	r24, r18
    1170:	93 1f       	adc	r25, r19

00001172 <.Loc.175>:
    1172:	fc 01       	movw	r30, r24
    1174:	80 81       	ld	r24, Z
    1176:	0e 94 d6 08 	call	0x11ac	; 0x11ac <lcd_write_character_4f>

0000117a <.Loc.176>:
        i++;
    117a:	89 81       	ldd	r24, Y+1	; 0x01
    117c:	9a 81       	ldd	r25, Y+2	; 0x02
    117e:	01 96       	adiw	r24, 0x01	; 1
    1180:	9a 83       	std	Y+2, r25	; 0x02
    1182:	89 83       	std	Y+1, r24	; 0x01

00001184 <.L115>:
    while (stringData[i] != 0)
    1184:	89 81       	ldd	r24, Y+1	; 0x01
    1186:	9a 81       	ldd	r25, Y+2	; 0x02
    1188:	9c 01       	movw	r18, r24
    118a:	8b 81       	ldd	r24, Y+3	; 0x03
    118c:	9c 81       	ldd	r25, Y+4	; 0x04
    118e:	82 0f       	add	r24, r18
    1190:	93 1f       	adc	r25, r19
    1192:	fc 01       	movw	r30, r24
    1194:	80 81       	ld	r24, Z

00001196 <.Loc.178>:
    1196:	88 23       	and	r24, r24
    1198:	19 f7       	brne	.-58     	; 0x1160 <.L116>

0000119a <.Loc.179>:
    }
}
    119a:	00 00       	nop
    119c:	00 00       	nop
    119e:	0f 90       	pop	r0
    11a0:	0f 90       	pop	r0
    11a2:	0f 90       	pop	r0
    11a4:	0f 90       	pop	r0
    11a6:	df 91       	pop	r29
    11a8:	cf 91       	pop	r28
    11aa:	08 95       	ret

000011ac <lcd_write_character_4f>:
Outputs:	none
Description:sends a byte to the LCD data register, configures RW
			(busy flag is implemented)
******************************************************************** */
void lcd_write_character_4f(uint8_t theChar)
{
    11ac:	cf 93       	push	r28
    11ae:	df 93       	push	r29
    11b0:	0f 92       	push	r0
    11b2:	cd b7       	in	r28, 0x3d	; 61
    11b4:	de b7       	in	r29, 0x3e	; 62
    11b6:	89 83       	std	Y+1, r24	; 0x01

000011b8 <.Loc.181>:
    set_RW_LOW_write;					// Write to LCD module (RW low)
    11b8:	88 e2       	ldi	r24, 0x28	; 40
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	fc 01       	movw	r30, r24
    11be:	20 81       	ld	r18, Z
    11c0:	88 e2       	ldi	r24, 0x28	; 40
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	2b 7f       	andi	r18, 0xFB	; 251
    11c6:	fc 01       	movw	r30, r24
    11c8:	20 83       	st	Z, r18

000011ca <.Loc.182>:
    set_RS_HIGH_Data;					// Select the Data Register (RS high)
    11ca:	88 e2       	ldi	r24, 0x28	; 40
    11cc:	90 e0       	ldi	r25, 0x00	; 0
    11ce:	fc 01       	movw	r30, r24
    11d0:	20 81       	ld	r18, Z
    11d2:	88 e2       	ldi	r24, 0x28	; 40
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	22 60       	ori	r18, 0x02	; 2
    11d8:	fc 01       	movw	r30, r24
    11da:	20 83       	st	Z, r18

000011dc <.Loc.183>:
    disable_E_Pin;						// Make sure E is initially low
    11dc:	88 e2       	ldi	r24, 0x28	; 40
    11de:	90 e0       	ldi	r25, 0x00	; 0
    11e0:	fc 01       	movw	r30, r24
    11e2:	20 81       	ld	r18, Z
    11e4:	88 e2       	ldi	r24, 0x28	; 40
    11e6:	90 e0       	ldi	r25, 0x00	; 0
    11e8:	27 7f       	andi	r18, 0xF7	; 247
    11ea:	fc 01       	movw	r30, r24
    11ec:	20 83       	st	Z, r18

000011ee <.Loc.184>:
    lcd_write_4(theChar);				// Write the upper 4-bits of the data
    11ee:	89 81       	ldd	r24, Y+1	; 0x01
    11f0:	0e 94 32 09 	call	0x1264	; 0x1264 <lcd_write_4>

000011f4 <.Loc.185>:
    lcd_write_4(theChar << 4);			// Write the lower 4-bits of the data
    11f4:	89 81       	ldd	r24, Y+1	; 0x01
    11f6:	82 95       	swap	r24
    11f8:	80 7f       	andi	r24, 0xF0	; 240
    11fa:	0e 94 32 09 	call	0x1264	; 0x1264 <lcd_write_4>

000011fe <.Loc.186>:
}
    11fe:	00 00       	nop
    1200:	0f 90       	pop	r0
    1202:	df 91       	pop	r29
    1204:	cf 91       	pop	r28
    1206:	08 95       	ret

00001208 <lcd_write_instruction_4f>:
Outputs:	none
Description:sends a byte to the LCD instruction register, configures RW
			(busy flag is implemented)
******************************************************************** */
void lcd_write_instruction_4f(uint8_t theInstruction)
{
    1208:	cf 93       	push	r28
    120a:	df 93       	push	r29
    120c:	0f 92       	push	r0
    120e:	cd b7       	in	r28, 0x3d	; 61
    1210:	de b7       	in	r29, 0x3e	; 62
    1212:	89 83       	std	Y+1, r24	; 0x01

00001214 <.Loc.188>:
    set_RW_LOW_write;					// Write to LCD module (RW low)
    1214:	88 e2       	ldi	r24, 0x28	; 40
    1216:	90 e0       	ldi	r25, 0x00	; 0
    1218:	fc 01       	movw	r30, r24
    121a:	20 81       	ld	r18, Z
    121c:	88 e2       	ldi	r24, 0x28	; 40
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	2b 7f       	andi	r18, 0xFB	; 251
    1222:	fc 01       	movw	r30, r24
    1224:	20 83       	st	Z, r18

00001226 <.Loc.189>:
    set_RS_LOW_Instr;					// Select the Data Register (RS high)
    1226:	88 e2       	ldi	r24, 0x28	; 40
    1228:	90 e0       	ldi	r25, 0x00	; 0
    122a:	fc 01       	movw	r30, r24
    122c:	20 81       	ld	r18, Z
    122e:	88 e2       	ldi	r24, 0x28	; 40
    1230:	90 e0       	ldi	r25, 0x00	; 0
    1232:	2d 7f       	andi	r18, 0xFD	; 253
    1234:	fc 01       	movw	r30, r24
    1236:	20 83       	st	Z, r18

00001238 <.Loc.190>:
    disable_E_Pin;						// Make sure E is initially low
    1238:	88 e2       	ldi	r24, 0x28	; 40
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	fc 01       	movw	r30, r24
    123e:	20 81       	ld	r18, Z
    1240:	88 e2       	ldi	r24, 0x28	; 40
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	27 7f       	andi	r18, 0xF7	; 247
    1246:	fc 01       	movw	r30, r24
    1248:	20 83       	st	Z, r18

0000124a <.Loc.191>:
    lcd_write_4(theInstruction);		// Write the upper 4-bits of the data
    124a:	89 81       	ldd	r24, Y+1	; 0x01
    124c:	0e 94 32 09 	call	0x1264	; 0x1264 <lcd_write_4>

00001250 <.Loc.192>:
    lcd_write_4(theInstruction << 4);	// Write the lower 4-bits of the data
    1250:	89 81       	ldd	r24, Y+1	; 0x01
    1252:	82 95       	swap	r24
    1254:	80 7f       	andi	r24, 0xF0	; 240
    1256:	0e 94 32 09 	call	0x1264	; 0x1264 <lcd_write_4>

0000125a <.Loc.193>:
}
    125a:	00 00       	nop
    125c:	0f 90       	pop	r0
    125e:	df 91       	pop	r29
    1260:	cf 91       	pop	r28
    1262:	08 95       	ret

00001264 <lcd_write_4>:
			RS is configured for the expected register
			E is low, RW is low
			uses either time delays or the busy flag
******************************************************************** */
void lcd_write_4(uint8_t theNibble)
{
    1264:	cf 93       	push	r28
    1266:	df 93       	push	r29
    1268:	cd b7       	in	r28, 0x3d	; 61
    126a:	de b7       	in	r29, 0x3e	; 62
    126c:	c8 59       	subi	r28, 0x98	; 152
    126e:	d1 09       	sbc	r29, r1
    1270:	0f b6       	in	r0, 0x3f	; 63
    1272:	f8 94       	cli
    1274:	de bf       	out	0x3e, r29	; 62
    1276:	0f be       	out	0x3f, r0	; 63
    1278:	cd bf       	out	0x3d, r28	; 61
    127a:	9e 01       	movw	r18, r28
    127c:	2a 5b       	subi	r18, 0xBA	; 186
    127e:	3f 4f       	sbci	r19, 0xFF	; 255
    1280:	f9 01       	movw	r30, r18
    1282:	80 83       	st	Z, r24

00001284 <.Loc.195>:
	uint8_t mask[4] = {0};
    1284:	ce 01       	movw	r24, r28
    1286:	8e 5b       	subi	r24, 0xBE	; 190
    1288:	9f 4f       	sbci	r25, 0xFF	; 255
    128a:	fc 01       	movw	r30, r24
    128c:	11 82       	std	Z+1, r1	; 0x01
    128e:	10 82       	st	Z, r1
    1290:	fc 01       	movw	r30, r24
    1292:	13 82       	std	Z+3, r1	; 0x03
    1294:	12 82       	std	Z+2, r1	; 0x02

00001296 <.LBB198>:
	for (uint8_t i = 0; i < 4; i++)
    1296:	19 82       	std	Y+1, r1	; 0x01

00001298 <.Loc.197>:
    1298:	28 c0       	rjmp	.+80     	; 0x12ea <.L120>

0000129a <.L122>:
	{
		if (theNibble & 1 << (7 - i))
    129a:	ce 01       	movw	r24, r28
    129c:	8a 5b       	subi	r24, 0xBA	; 186
    129e:	9f 4f       	sbci	r25, 0xFF	; 255
    12a0:	fc 01       	movw	r30, r24
    12a2:	80 81       	ld	r24, Z
    12a4:	88 2f       	mov	r24, r24
    12a6:	90 e0       	ldi	r25, 0x00	; 0

000012a8 <.Loc.199>:
    12a8:	29 81       	ldd	r18, Y+1	; 0x01
    12aa:	22 2f       	mov	r18, r18
    12ac:	30 e0       	ldi	r19, 0x00	; 0
    12ae:	47 e0       	ldi	r20, 0x07	; 7
    12b0:	50 e0       	ldi	r21, 0x00	; 0
    12b2:	fa 01       	movw	r30, r20
    12b4:	e2 1b       	sub	r30, r18
    12b6:	f3 0b       	sbc	r31, r19
    12b8:	9f 01       	movw	r18, r30

000012ba <.Loc.200>:
    12ba:	02 2e       	mov	r0, r18
    12bc:	02 c0       	rjmp	.+4      	; 0x12c2 <.L2^B1>

000012be <.L1^B17>:
    12be:	95 95       	asr	r25
    12c0:	87 95       	ror	r24

000012c2 <.L2^B1>:
    12c2:	0a 94       	dec	r0
    12c4:	e2 f7       	brpl	.-8      	; 0x12be <.L1^B17>
    12c6:	81 70       	andi	r24, 0x01	; 1
    12c8:	99 27       	eor	r25, r25

000012ca <.Loc.201>:
    12ca:	00 97       	sbiw	r24, 0x00	; 0
    12cc:	59 f0       	breq	.+22     	; 0x12e4 <.L121>

000012ce <.Loc.202>:
		{
			mask[i] = 1;
    12ce:	89 81       	ldd	r24, Y+1	; 0x01
    12d0:	88 2f       	mov	r24, r24
    12d2:	90 e0       	ldi	r25, 0x00	; 0

000012d4 <.Loc.203>:
    12d4:	9e 01       	movw	r18, r28
    12d6:	2e 5b       	subi	r18, 0xBE	; 190
    12d8:	3f 4f       	sbci	r19, 0xFF	; 255
    12da:	82 0f       	add	r24, r18
    12dc:	93 1f       	adc	r25, r19
    12de:	21 e0       	ldi	r18, 0x01	; 1
    12e0:	fc 01       	movw	r30, r24
    12e2:	20 83       	st	Z, r18

000012e4 <.L121>:
	for (uint8_t i = 0; i < 4; i++)
    12e4:	89 81       	ldd	r24, Y+1	; 0x01
    12e6:	8f 5f       	subi	r24, 0xFF	; 255
    12e8:	89 83       	std	Y+1, r24	; 0x01

000012ea <.L120>:
    12ea:	89 81       	ldd	r24, Y+1	; 0x01
    12ec:	83 30       	cpi	r24, 0x03	; 3
    12ee:	a9 f2       	breq	.-86     	; 0x129a <.L122>
    12f0:	a0 f2       	brcs	.-88     	; 0x129a <.L122>

000012f2 <.LBE198>:
		}
	}

	/* Clear bits in first step */
	lcd_Data_Port &= ~((1 << lcd_D7_bit) | (1 << lcd_D6_bit) | (1 << lcd_D5_bit) | (1 << lcd_D4_bit));
    12f2:	88 e2       	ldi	r24, 0x28	; 40
    12f4:	90 e0       	ldi	r25, 0x00	; 0
    12f6:	dc 01       	movw	r26, r24
    12f8:	2c 91       	ld	r18, X

000012fa <.Loc.207>:
    12fa:	88 e2       	ldi	r24, 0x28	; 40
    12fc:	90 e0       	ldi	r25, 0x00	; 0

000012fe <.Loc.208>:
    12fe:	2f 70       	andi	r18, 0x0F	; 15
    1300:	fc 01       	movw	r30, r24
    1302:	20 83       	st	Z, r18

00001304 <.Loc.209>:

	/* Set bits where necessary */
	lcd_Data_Port |= ((mask[0]) << lcd_D7_bit | (mask[1]) << lcd_D6_bit | (mask[2]) << lcd_D5_bit | (mask[3]) << lcd_D4_bit);
    1304:	88 e2       	ldi	r24, 0x28	; 40
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	dc 01       	movw	r26, r24
    130a:	8c 91       	ld	r24, X
    130c:	38 2f       	mov	r19, r24

0000130e <.Loc.210>:
    130e:	ce 01       	movw	r24, r28
    1310:	8e 5b       	subi	r24, 0xBE	; 190
    1312:	9f 4f       	sbci	r25, 0xFF	; 255
    1314:	fc 01       	movw	r30, r24
    1316:	80 81       	ld	r24, Z
    1318:	88 2f       	mov	r24, r24
    131a:	90 e0       	ldi	r25, 0x00	; 0

0000131c <.Loc.211>:
    131c:	b8 2f       	mov	r27, r24
    131e:	b6 95       	lsr	r27
    1320:	a8 2f       	mov	r26, r24
    1322:	a7 95       	ror	r26
    1324:	aa 27       	eor	r26, r26
    1326:	a7 95       	ror	r26

00001328 <.Loc.212>:
    1328:	2a 2f       	mov	r18, r26

0000132a <.Loc.213>:
    132a:	ce 01       	movw	r24, r28
    132c:	8e 5b       	subi	r24, 0xBE	; 190
    132e:	9f 4f       	sbci	r25, 0xFF	; 255
    1330:	dc 01       	movw	r26, r24
    1332:	11 96       	adiw	r26, 0x01	; 1
    1334:	8c 91       	ld	r24, X
    1336:	88 2f       	mov	r24, r24
    1338:	90 e0       	ldi	r25, 0x00	; 0

0000133a <.Loc.214>:
    133a:	b8 2f       	mov	r27, r24
    133c:	b6 95       	lsr	r27
    133e:	b6 95       	lsr	r27
    1340:	c8 56       	subi	r28, 0x68	; 104
    1342:	df 4f       	sbci	r29, 0xFF	; 255
    1344:	b8 83       	st	Y, r27
    1346:	c8 59       	subi	r28, 0x98	; 152
    1348:	d0 40       	sbci	r29, 0x00	; 0
    134a:	e8 2f       	mov	r30, r24
    134c:	e2 95       	swap	r30
    134e:	ee 0f       	add	r30, r30
    1350:	ee 0f       	add	r30, r30
    1352:	e0 7c       	andi	r30, 0xC0	; 192
    1354:	c9 56       	subi	r28, 0x69	; 105
    1356:	df 4f       	sbci	r29, 0xFF	; 255
    1358:	e8 83       	st	Y, r30
    135a:	c7 59       	subi	r28, 0x97	; 151
    135c:	d0 40       	sbci	r29, 0x00	; 0

0000135e <.Loc.215>:
    135e:	c9 56       	subi	r28, 0x69	; 105
    1360:	df 4f       	sbci	r29, 0xFF	; 255
    1362:	88 81       	ld	r24, Y
    1364:	c7 59       	subi	r28, 0x97	; 151
    1366:	d0 40       	sbci	r29, 0x00	; 0
    1368:	28 2b       	or	r18, r24

0000136a <.Loc.216>:
    136a:	ce 01       	movw	r24, r28
    136c:	8e 5b       	subi	r24, 0xBE	; 190
    136e:	9f 4f       	sbci	r25, 0xFF	; 255
    1370:	dc 01       	movw	r26, r24
    1372:	12 96       	adiw	r26, 0x02	; 2
    1374:	8c 91       	ld	r24, X
    1376:	88 2f       	mov	r24, r24
    1378:	90 e0       	ldi	r25, 0x00	; 0

0000137a <.Loc.217>:
    137a:	78 2f       	mov	r23, r24
    137c:	76 95       	lsr	r23
    137e:	76 95       	lsr	r23
    1380:	76 95       	lsr	r23
    1382:	68 2f       	mov	r22, r24
    1384:	62 95       	swap	r22
    1386:	66 0f       	add	r22, r22
    1388:	60 7e       	andi	r22, 0xE0	; 224

0000138a <.Loc.218>:
    138a:	86 2f       	mov	r24, r22
    138c:	28 2b       	or	r18, r24

0000138e <.Loc.219>:
    138e:	ce 01       	movw	r24, r28
    1390:	8e 5b       	subi	r24, 0xBE	; 190
    1392:	9f 4f       	sbci	r25, 0xFF	; 255
    1394:	fc 01       	movw	r30, r24
    1396:	83 81       	ldd	r24, Z+3	; 0x03
    1398:	88 2f       	mov	r24, r24
    139a:	90 e0       	ldi	r25, 0x00	; 0

0000139c <.Loc.220>:
    139c:	82 95       	swap	r24
    139e:	92 95       	swap	r25
    13a0:	90 7f       	andi	r25, 0xF0	; 240
    13a2:	98 27       	eor	r25, r24
    13a4:	80 7f       	andi	r24, 0xF0	; 240
    13a6:	98 27       	eor	r25, r24

000013a8 <.Loc.221>:
    13a8:	82 2b       	or	r24, r18

000013aa <.Loc.222>:
    13aa:	23 2f       	mov	r18, r19
    13ac:	28 2b       	or	r18, r24

000013ae <.Loc.223>:
    13ae:	88 e2       	ldi	r24, 0x28	; 40
    13b0:	90 e0       	ldi	r25, 0x00	; 0

000013b2 <.Loc.224>:
    13b2:	dc 01       	movw	r26, r24
    13b4:	2c 93       	st	X, r18

000013b6 <.Loc.225>:

    /* Write the data */
    enable_E_Pin;                   // Enable pin high
    13b6:	88 e2       	ldi	r24, 0x28	; 40
    13b8:	90 e0       	ldi	r25, 0x00	; 0
    13ba:	fc 01       	movw	r30, r24
    13bc:	20 81       	ld	r18, Z
    13be:	88 e2       	ldi	r24, 0x28	; 40
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	28 60       	ori	r18, 0x08	; 8
    13c4:	dc 01       	movw	r26, r24
    13c6:	2c 93       	st	X, r18
    13c8:	80 e0       	ldi	r24, 0x00	; 0
    13ca:	90 e0       	ldi	r25, 0x00	; 0
    13cc:	a0 e8       	ldi	r26, 0x80	; 128
    13ce:	bf e3       	ldi	r27, 0x3F	; 63
    13d0:	8a a3       	std	Y+34, r24	; 0x22
    13d2:	9b a3       	std	Y+35, r25	; 0x23
    13d4:	ac a3       	std	Y+36, r26	; 0x24
    13d6:	bd a3       	std	Y+37, r27	; 0x25

000013d8 <.LBB199>:
	__tmp = ((F_CPU) / 3e6) * __us;
    13d8:	2b ea       	ldi	r18, 0xAB	; 171
    13da:	3a ea       	ldi	r19, 0xAA	; 170
    13dc:	4a ea       	ldi	r20, 0xAA	; 170
    13de:	50 e4       	ldi	r21, 0x40	; 64
    13e0:	6a a1       	ldd	r22, Y+34	; 0x22
    13e2:	7b a1       	ldd	r23, Y+35	; 0x23
    13e4:	8c a1       	ldd	r24, Y+36	; 0x24
    13e6:	9d a1       	ldd	r25, Y+37	; 0x25
    13e8:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    13ec:	63 96       	adiw	r28, 0x13	; 19
    13ee:	6c af       	std	Y+60, r22	; 0x3c
    13f0:	7d af       	std	Y+61, r23	; 0x3d
    13f2:	8e af       	std	Y+62, r24	; 0x3e
    13f4:	9f af       	std	Y+63, r25	; 0x3f
    13f6:	63 97       	sbiw	r28, 0x13	; 19
    13f8:	63 96       	adiw	r28, 0x13	; 19
    13fa:	8c ad       	ldd	r24, Y+60	; 0x3c
    13fc:	9d ad       	ldd	r25, Y+61	; 0x3d
    13fe:	ae ad       	ldd	r26, Y+62	; 0x3e
    1400:	bf ad       	ldd	r27, Y+63	; 0x3f
    1402:	63 97       	sbiw	r28, 0x13	; 19
    1404:	8e a3       	std	Y+38, r24	; 0x26
    1406:	9f a3       	std	Y+39, r25	; 0x27
    1408:	a8 a7       	std	Y+40, r26	; 0x28
    140a:	b9 a7       	std	Y+41, r27	; 0x29

0000140c <.Loc.227>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    140c:	20 e0       	ldi	r18, 0x00	; 0
    140e:	30 e0       	ldi	r19, 0x00	; 0
    1410:	40 e8       	ldi	r20, 0x80	; 128
    1412:	50 e4       	ldi	r21, 0x40	; 64
    1414:	6a a1       	ldd	r22, Y+34	; 0x22
    1416:	7b a1       	ldd	r23, Y+35	; 0x23
    1418:	8c a1       	ldd	r24, Y+36	; 0x24
    141a:	9d a1       	ldd	r25, Y+37	; 0x25
    141c:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    1420:	67 96       	adiw	r28, 0x17	; 23
    1422:	6c af       	std	Y+60, r22	; 0x3c
    1424:	7d af       	std	Y+61, r23	; 0x3d
    1426:	8e af       	std	Y+62, r24	; 0x3e
    1428:	9f af       	std	Y+63, r25	; 0x3f
    142a:	67 97       	sbiw	r28, 0x17	; 23
    142c:	67 96       	adiw	r28, 0x17	; 23
    142e:	8c ad       	ldd	r24, Y+60	; 0x3c
    1430:	9d ad       	ldd	r25, Y+61	; 0x3d
    1432:	ae ad       	ldd	r26, Y+62	; 0x3e
    1434:	bf ad       	ldd	r27, Y+63	; 0x3f
    1436:	67 97       	sbiw	r28, 0x17	; 23
    1438:	8a a7       	std	Y+42, r24	; 0x2a
    143a:	9b a7       	std	Y+43, r25	; 0x2b
    143c:	ac a7       	std	Y+44, r26	; 0x2c
    143e:	bd a7       	std	Y+45, r27	; 0x2d

00001440 <.Loc.228>:
	if (__tmp < 1.0)
    1440:	20 e0       	ldi	r18, 0x00	; 0
    1442:	30 e0       	ldi	r19, 0x00	; 0
    1444:	40 e8       	ldi	r20, 0x80	; 128
    1446:	5f e3       	ldi	r21, 0x3F	; 63
    1448:	6e a1       	ldd	r22, Y+38	; 0x26
    144a:	7f a1       	ldd	r23, Y+39	; 0x27
    144c:	88 a5       	ldd	r24, Y+40	; 0x28
    144e:	99 a5       	ldd	r25, Y+41	; 0x29
    1450:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    1454:	88 23       	and	r24, r24
    1456:	1c f4       	brge	.+6      	; 0x145e <.L165>

00001458 <.Loc.229>:
		__ticks = 1;
    1458:	81 e0       	ldi	r24, 0x01	; 1
    145a:	8e a7       	std	Y+46, r24	; 0x2e
    145c:	0a c1       	rjmp	.+532    	; 0x1672 <.L125>

0000145e <.L165>:
	else if (__tmp2 > 65535)
    145e:	20 e0       	ldi	r18, 0x00	; 0
    1460:	3f ef       	ldi	r19, 0xFF	; 255
    1462:	4f e7       	ldi	r20, 0x7F	; 127
    1464:	57 e4       	ldi	r21, 0x47	; 71
    1466:	6a a5       	ldd	r22, Y+42	; 0x2a
    1468:	7b a5       	ldd	r23, Y+43	; 0x2b
    146a:	8c a5       	ldd	r24, Y+44	; 0x2c
    146c:	9d a5       	ldd	r25, Y+45	; 0x2d
    146e:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    1472:	88 23       	and	r24, r24
    1474:	09 f0       	breq	.+2      	; 0x1478 <L0^A>

00001476 <L0^A>:
    1476:	0c f4       	brge	.+2      	; 0x147a <.Loc.231>

00001478 <L0^A>:
    1478:	b6 c0       	rjmp	.+364    	; 0x15e6 <.L166>

0000147a <.Loc.231>:
		_delay_ms(__us / 1000.0);
    147a:	20 e0       	ldi	r18, 0x00	; 0
    147c:	30 e0       	ldi	r19, 0x00	; 0
    147e:	4a e7       	ldi	r20, 0x7A	; 122
    1480:	54 e4       	ldi	r21, 0x44	; 68
    1482:	6a a1       	ldd	r22, Y+34	; 0x22
    1484:	7b a1       	ldd	r23, Y+35	; 0x23
    1486:	8c a1       	ldd	r24, Y+36	; 0x24
    1488:	9d a1       	ldd	r25, Y+37	; 0x25
    148a:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <__divsf3>
    148e:	6b 96       	adiw	r28, 0x1b	; 27
    1490:	6c af       	std	Y+60, r22	; 0x3c
    1492:	7d af       	std	Y+61, r23	; 0x3d
    1494:	8e af       	std	Y+62, r24	; 0x3e
    1496:	9f af       	std	Y+63, r25	; 0x3f
    1498:	6b 97       	sbiw	r28, 0x1b	; 27
    149a:	6b 96       	adiw	r28, 0x1b	; 27
    149c:	8c ad       	ldd	r24, Y+60	; 0x3c
    149e:	9d ad       	ldd	r25, Y+61	; 0x3d
    14a0:	ae ad       	ldd	r26, Y+62	; 0x3e
    14a2:	bf ad       	ldd	r27, Y+63	; 0x3f
    14a4:	6b 97       	sbiw	r28, 0x1b	; 27
    14a6:	8f a7       	std	Y+47, r24	; 0x2f
    14a8:	98 ab       	std	Y+48, r25	; 0x30
    14aa:	a9 ab       	std	Y+49, r26	; 0x31
    14ac:	ba ab       	std	Y+50, r27	; 0x32

000014ae <.LBB201>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    14ae:	20 e0       	ldi	r18, 0x00	; 0
    14b0:	30 e0       	ldi	r19, 0x00	; 0
    14b2:	4a e7       	ldi	r20, 0x7A	; 122
    14b4:	55 e4       	ldi	r21, 0x45	; 69
    14b6:	6f a5       	ldd	r22, Y+47	; 0x2f
    14b8:	78 a9       	ldd	r23, Y+48	; 0x30
    14ba:	89 a9       	ldd	r24, Y+49	; 0x31
    14bc:	9a a9       	ldd	r25, Y+50	; 0x32
    14be:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    14c2:	6f 96       	adiw	r28, 0x1f	; 31
    14c4:	6c af       	std	Y+60, r22	; 0x3c
    14c6:	7d af       	std	Y+61, r23	; 0x3d
    14c8:	8e af       	std	Y+62, r24	; 0x3e
    14ca:	9f af       	std	Y+63, r25	; 0x3f
    14cc:	6f 97       	sbiw	r28, 0x1f	; 31
    14ce:	6f 96       	adiw	r28, 0x1f	; 31
    14d0:	8c ad       	ldd	r24, Y+60	; 0x3c
    14d2:	9d ad       	ldd	r25, Y+61	; 0x3d
    14d4:	ae ad       	ldd	r26, Y+62	; 0x3e
    14d6:	bf ad       	ldd	r27, Y+63	; 0x3f
    14d8:	6f 97       	sbiw	r28, 0x1f	; 31
    14da:	8b ab       	std	Y+51, r24	; 0x33
    14dc:	9c ab       	std	Y+52, r25	; 0x34
    14de:	ad ab       	std	Y+53, r26	; 0x35
    14e0:	be ab       	std	Y+54, r27	; 0x36

000014e2 <.Loc.233>:
	if (__tmp < 1.0)
    14e2:	20 e0       	ldi	r18, 0x00	; 0
    14e4:	30 e0       	ldi	r19, 0x00	; 0
    14e6:	40 e8       	ldi	r20, 0x80	; 128
    14e8:	5f e3       	ldi	r21, 0x3F	; 63
    14ea:	6b a9       	ldd	r22, Y+51	; 0x33
    14ec:	7c a9       	ldd	r23, Y+52	; 0x34
    14ee:	8d a9       	ldd	r24, Y+53	; 0x35
    14f0:	9e a9       	ldd	r25, Y+54	; 0x36
    14f2:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    14f6:	88 23       	and	r24, r24
    14f8:	2c f4       	brge	.+10     	; 0x1504 <.L167>

000014fa <.Loc.234>:
		__ticks = 1;
    14fa:	81 e0       	ldi	r24, 0x01	; 1
    14fc:	90 e0       	ldi	r25, 0x00	; 0
    14fe:	98 af       	std	Y+56, r25	; 0x38
    1500:	8f ab       	std	Y+55, r24	; 0x37
    1502:	66 c0       	rjmp	.+204    	; 0x15d0 <.L130>

00001504 <.L167>:
	else if (__tmp > 65535)
    1504:	20 e0       	ldi	r18, 0x00	; 0
    1506:	3f ef       	ldi	r19, 0xFF	; 255
    1508:	4f e7       	ldi	r20, 0x7F	; 127
    150a:	57 e4       	ldi	r21, 0x47	; 71
    150c:	6b a9       	ldd	r22, Y+51	; 0x33
    150e:	7c a9       	ldd	r23, Y+52	; 0x34
    1510:	8d a9       	ldd	r24, Y+53	; 0x35
    1512:	9e a9       	ldd	r25, Y+54	; 0x36
    1514:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    1518:	88 23       	and	r24, r24
    151a:	09 f0       	breq	.+2      	; 0x151e <L0^A>

0000151c <L0^A>:
    151c:	0c f4       	brge	.+2      	; 0x1520 <.Loc.236>

0000151e <L0^A>:
    151e:	46 c0       	rjmp	.+140    	; 0x15ac <.L168>

00001520 <.Loc.236>:
		__ticks = (uint16_t) (__ms * 10.0);
    1520:	20 e0       	ldi	r18, 0x00	; 0
    1522:	30 e0       	ldi	r19, 0x00	; 0
    1524:	40 e2       	ldi	r20, 0x20	; 32
    1526:	51 e4       	ldi	r21, 0x41	; 65
    1528:	6f a5       	ldd	r22, Y+47	; 0x2f
    152a:	78 a9       	ldd	r23, Y+48	; 0x30
    152c:	89 a9       	ldd	r24, Y+49	; 0x31
    152e:	9a a9       	ldd	r25, Y+50	; 0x32
    1530:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    1534:	a3 96       	adiw	r28, 0x23	; 35
    1536:	6c af       	std	Y+60, r22	; 0x3c
    1538:	7d af       	std	Y+61, r23	; 0x3d
    153a:	8e af       	std	Y+62, r24	; 0x3e
    153c:	9f af       	std	Y+63, r25	; 0x3f
    153e:	a3 97       	sbiw	r28, 0x23	; 35
    1540:	a3 96       	adiw	r28, 0x23	; 35
    1542:	8c ad       	ldd	r24, Y+60	; 0x3c
    1544:	9d ad       	ldd	r25, Y+61	; 0x3d
    1546:	ae ad       	ldd	r26, Y+62	; 0x3e
    1548:	bf ad       	ldd	r27, Y+63	; 0x3f
    154a:	a3 97       	sbiw	r28, 0x23	; 35
    154c:	2f 96       	adiw	r28, 0x0f	; 15
    154e:	8c af       	std	Y+60, r24	; 0x3c
    1550:	9d af       	std	Y+61, r25	; 0x3d
    1552:	ae af       	std	Y+62, r26	; 0x3e
    1554:	bf af       	std	Y+63, r27	; 0x3f
    1556:	2f 97       	sbiw	r28, 0x0f	; 15

00001558 <.Loc.237>:
    1558:	2f 96       	adiw	r28, 0x0f	; 15
    155a:	6c ad       	ldd	r22, Y+60	; 0x3c
    155c:	7d ad       	ldd	r23, Y+61	; 0x3d
    155e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1560:	9f ad       	ldd	r25, Y+63	; 0x3f
    1562:	2f 97       	sbiw	r28, 0x0f	; 15
    1564:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    1568:	a7 96       	adiw	r28, 0x27	; 39
    156a:	6c af       	std	Y+60, r22	; 0x3c
    156c:	7d af       	std	Y+61, r23	; 0x3d
    156e:	8e af       	std	Y+62, r24	; 0x3e
    1570:	9f af       	std	Y+63, r25	; 0x3f
    1572:	a7 97       	sbiw	r28, 0x27	; 39
    1574:	a5 96       	adiw	r28, 0x25	; 37
    1576:	ae ad       	ldd	r26, Y+62	; 0x3e
    1578:	bf ad       	ldd	r27, Y+63	; 0x3f
    157a:	a5 97       	sbiw	r28, 0x25	; 37
    157c:	b8 af       	std	Y+56, r27	; 0x38
    157e:	af ab       	std	Y+55, r26	; 0x37

00001580 <.Loc.238>:
		while(__ticks)
    1580:	10 c0       	rjmp	.+32     	; 0x15a2 <.L133>

00001582 <.L134>:
    1582:	80 e9       	ldi	r24, 0x90	; 144
    1584:	91 e0       	ldi	r25, 0x01	; 1
    1586:	9a af       	std	Y+58, r25	; 0x3a
    1588:	89 af       	std	Y+57, r24	; 0x39

0000158a <.LBB203>:
	__asm__ volatile (
    158a:	89 ad       	ldd	r24, Y+57	; 0x39
    158c:	9a ad       	ldd	r25, Y+58	; 0x3a

0000158e <.L1^B18>:
    158e:	01 97       	sbiw	r24, 0x01	; 1
    1590:	f1 f7       	brne	.-4      	; 0x158e <.L1^B18>
    1592:	9a af       	std	Y+58, r25	; 0x3a
    1594:	89 af       	std	Y+57, r24	; 0x39

00001596 <.Loc.240>:
	...

00001598 <.LBE203>:
			__ticks --;
    1598:	8f a9       	ldd	r24, Y+55	; 0x37
    159a:	98 ad       	ldd	r25, Y+56	; 0x38
    159c:	01 97       	sbiw	r24, 0x01	; 1
    159e:	98 af       	std	Y+56, r25	; 0x38
    15a0:	8f ab       	std	Y+55, r24	; 0x37

000015a2 <.L133>:
		while(__ticks)
    15a2:	8f a9       	ldd	r24, Y+55	; 0x37
    15a4:	98 ad       	ldd	r25, Y+56	; 0x38
    15a6:	00 97       	sbiw	r24, 0x00	; 0
    15a8:	61 f7       	brne	.-40     	; 0x1582 <.L134>

000015aa <.Loc.243>:
		return;
    15aa:	63 c0       	rjmp	.+198    	; 0x1672 <.L125>

000015ac <.L168>:
		__ticks = (uint16_t)__tmp;
    15ac:	6b a9       	ldd	r22, Y+51	; 0x33
    15ae:	7c a9       	ldd	r23, Y+52	; 0x34
    15b0:	8d a9       	ldd	r24, Y+53	; 0x35
    15b2:	9e a9       	ldd	r25, Y+54	; 0x36
    15b4:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    15b8:	ab 96       	adiw	r28, 0x2b	; 43
    15ba:	6c af       	std	Y+60, r22	; 0x3c
    15bc:	7d af       	std	Y+61, r23	; 0x3d
    15be:	8e af       	std	Y+62, r24	; 0x3e
    15c0:	9f af       	std	Y+63, r25	; 0x3f
    15c2:	ab 97       	sbiw	r28, 0x2b	; 43
    15c4:	a9 96       	adiw	r28, 0x29	; 41
    15c6:	ee ad       	ldd	r30, Y+62	; 0x3e
    15c8:	ff ad       	ldd	r31, Y+63	; 0x3f
    15ca:	a9 97       	sbiw	r28, 0x29	; 41
    15cc:	f8 af       	std	Y+56, r31	; 0x38
    15ce:	ef ab       	std	Y+55, r30	; 0x37

000015d0 <.L130>:
    15d0:	8f a9       	ldd	r24, Y+55	; 0x37
    15d2:	98 ad       	ldd	r25, Y+56	; 0x38
    15d4:	9c af       	std	Y+60, r25	; 0x3c
    15d6:	8b af       	std	Y+59, r24	; 0x3b

000015d8 <.LBB205>:
    15d8:	8b ad       	ldd	r24, Y+59	; 0x3b
    15da:	9c ad       	ldd	r25, Y+60	; 0x3c

000015dc <.L1^B19>:
    15dc:	01 97       	sbiw	r24, 0x01	; 1
    15de:	f1 f7       	brne	.-4      	; 0x15dc <.L1^B19>
    15e0:	9c af       	std	Y+60, r25	; 0x3c
    15e2:	8b af       	std	Y+59, r24	; 0x3b

000015e4 <.Loc.246>:
}
    15e4:	46 c0       	rjmp	.+140    	; 0x1672 <.L125>

000015e6 <.L166>:
	else if (__tmp > 255)
    15e6:	20 e0       	ldi	r18, 0x00	; 0
    15e8:	30 e0       	ldi	r19, 0x00	; 0
    15ea:	4f e7       	ldi	r20, 0x7F	; 127
    15ec:	53 e4       	ldi	r21, 0x43	; 67
    15ee:	6e a1       	ldd	r22, Y+38	; 0x26
    15f0:	7f a1       	ldd	r23, Y+39	; 0x27
    15f2:	88 a5       	ldd	r24, Y+40	; 0x28
    15f4:	99 a5       	ldd	r25, Y+41	; 0x29
    15f6:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    15fa:	88 23       	and	r24, r24
    15fc:	51 f1       	breq	.+84     	; 0x1652 <.L169>
    15fe:	4c f1       	brlt	.+82     	; 0x1652 <.L169>

00001600 <.LBB207>:
		uint16_t __ticks=(uint16_t)__tmp2;
    1600:	6a a5       	ldd	r22, Y+42	; 0x2a
    1602:	7b a5       	ldd	r23, Y+43	; 0x2b
    1604:	8c a5       	ldd	r24, Y+44	; 0x2c
    1606:	9d a5       	ldd	r25, Y+45	; 0x2d
    1608:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    160c:	af 96       	adiw	r28, 0x2f	; 47
    160e:	6c af       	std	Y+60, r22	; 0x3c
    1610:	7d af       	std	Y+61, r23	; 0x3d
    1612:	8e af       	std	Y+62, r24	; 0x3e
    1614:	9f af       	std	Y+63, r25	; 0x3f
    1616:	af 97       	sbiw	r28, 0x2f	; 47
    1618:	ad 96       	adiw	r28, 0x2d	; 45
    161a:	8e ad       	ldd	r24, Y+62	; 0x3e
    161c:	9f ad       	ldd	r25, Y+63	; 0x3f
    161e:	ad 97       	sbiw	r28, 0x2d	; 45
    1620:	9e af       	std	Y+62, r25	; 0x3e
    1622:	8d af       	std	Y+61, r24	; 0x3d
    1624:	2d ad       	ldd	r18, Y+61	; 0x3d
    1626:	3e ad       	ldd	r19, Y+62	; 0x3e
    1628:	ce 01       	movw	r24, r28
    162a:	cf 96       	adiw	r24, 0x3f	; 63
    162c:	dc 01       	movw	r26, r24
    162e:	2d 93       	st	X+, r18
    1630:	3c 93       	st	X, r19

00001632 <.LBB208>:
	__asm__ volatile (
    1632:	ce 01       	movw	r24, r28
    1634:	cf 96       	adiw	r24, 0x3f	; 63
    1636:	fc 01       	movw	r30, r24
    1638:	80 81       	ld	r24, Z
    163a:	91 81       	ldd	r25, Z+1	; 0x01

0000163c <.L1^B20>:
    163c:	01 97       	sbiw	r24, 0x01	; 1
    163e:	f1 f7       	brne	.-4      	; 0x163c <.L1^B20>
    1640:	9e 01       	movw	r18, r28
    1642:	21 5c       	subi	r18, 0xC1	; 193
    1644:	3f 4f       	sbci	r19, 0xFF	; 255
    1646:	d9 01       	movw	r26, r18
    1648:	11 96       	adiw	r26, 0x01	; 1
    164a:	9c 93       	st	X, r25
    164c:	8e 93       	st	-X, r24

0000164e <.Loc.250>:
	...

00001650 <.LBE208>:
		return;
    1650:	24 c0       	rjmp	.+72     	; 0x169a <.L138>

00001652 <.L169>:
		__ticks = (uint8_t)__tmp;
    1652:	6e a1       	ldd	r22, Y+38	; 0x26
    1654:	7f a1       	ldd	r23, Y+39	; 0x27
    1656:	88 a5       	ldd	r24, Y+40	; 0x28
    1658:	99 a5       	ldd	r25, Y+41	; 0x29
    165a:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    165e:	e3 96       	adiw	r28, 0x33	; 51
    1660:	6c af       	std	Y+60, r22	; 0x3c
    1662:	7d af       	std	Y+61, r23	; 0x3d
    1664:	8e af       	std	Y+62, r24	; 0x3e
    1666:	9f af       	std	Y+63, r25	; 0x3f
    1668:	e3 97       	sbiw	r28, 0x33	; 51
    166a:	e0 96       	adiw	r28, 0x30	; 48
    166c:	bf ad       	ldd	r27, Y+63	; 0x3f
    166e:	e0 97       	sbiw	r28, 0x30	; 48
    1670:	be a7       	std	Y+46, r27	; 0x2e

00001672 <.L125>:
    1672:	ce 01       	movw	r24, r28
    1674:	8f 5b       	subi	r24, 0xBF	; 191
    1676:	9f 4f       	sbci	r25, 0xFF	; 255
    1678:	2e a5       	ldd	r18, Y+46	; 0x2e
    167a:	fc 01       	movw	r30, r24
    167c:	20 83       	st	Z, r18

0000167e <.LBB210>:
	__asm__ volatile (
    167e:	ce 01       	movw	r24, r28
    1680:	8f 5b       	subi	r24, 0xBF	; 191
    1682:	9f 4f       	sbci	r25, 0xFF	; 255
    1684:	dc 01       	movw	r26, r24
    1686:	8c 91       	ld	r24, X
    1688:	28 2f       	mov	r18, r24

0000168a <.L1^B21>:
    168a:	2a 95       	dec	r18
    168c:	f1 f7       	brne	.-4      	; 0x168a <.L1^B21>
    168e:	ce 01       	movw	r24, r28
    1690:	8f 5b       	subi	r24, 0xBF	; 191
    1692:	9f 4f       	sbci	r25, 0xFF	; 255
    1694:	fc 01       	movw	r30, r24
    1696:	20 83       	st	Z, r18

00001698 <.Loc.254>:
	...

0000169a <.L138>:
    _delay_us(1);                   // implement 'Data set-up time' (80 nS) and 'Enable pulse width' (230 nS)
    disable_E_Pin;                  // Enable pin low
    169a:	88 e2       	ldi	r24, 0x28	; 40
    169c:	90 e0       	ldi	r25, 0x00	; 0
    169e:	dc 01       	movw	r26, r24
    16a0:	2c 91       	ld	r18, X
    16a2:	88 e2       	ldi	r24, 0x28	; 40
    16a4:	90 e0       	ldi	r25, 0x00	; 0
    16a6:	27 7f       	andi	r18, 0xF7	; 247
    16a8:	fc 01       	movw	r30, r24
    16aa:	20 83       	st	Z, r18
    16ac:	80 e0       	ldi	r24, 0x00	; 0
    16ae:	90 e0       	ldi	r25, 0x00	; 0
    16b0:	a0 e8       	ldi	r26, 0x80	; 128
    16b2:	bf e3       	ldi	r27, 0x3F	; 63
    16b4:	8a 83       	std	Y+2, r24	; 0x02
    16b6:	9b 83       	std	Y+3, r25	; 0x03
    16b8:	ac 83       	std	Y+4, r26	; 0x04
    16ba:	bd 83       	std	Y+5, r27	; 0x05

000016bc <.LBB212>:
	__tmp = ((F_CPU) / 3e6) * __us;
    16bc:	2b ea       	ldi	r18, 0xAB	; 171
    16be:	3a ea       	ldi	r19, 0xAA	; 170
    16c0:	4a ea       	ldi	r20, 0xAA	; 170
    16c2:	50 e4       	ldi	r21, 0x40	; 64
    16c4:	6a 81       	ldd	r22, Y+2	; 0x02
    16c6:	7b 81       	ldd	r23, Y+3	; 0x03
    16c8:	8c 81       	ldd	r24, Y+4	; 0x04
    16ca:	9d 81       	ldd	r25, Y+5	; 0x05
    16cc:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    16d0:	e7 96       	adiw	r28, 0x37	; 55
    16d2:	6c af       	std	Y+60, r22	; 0x3c
    16d4:	7d af       	std	Y+61, r23	; 0x3d
    16d6:	8e af       	std	Y+62, r24	; 0x3e
    16d8:	9f af       	std	Y+63, r25	; 0x3f
    16da:	e7 97       	sbiw	r28, 0x37	; 55
    16dc:	e7 96       	adiw	r28, 0x37	; 55
    16de:	8c ad       	ldd	r24, Y+60	; 0x3c
    16e0:	9d ad       	ldd	r25, Y+61	; 0x3d
    16e2:	ae ad       	ldd	r26, Y+62	; 0x3e
    16e4:	bf ad       	ldd	r27, Y+63	; 0x3f
    16e6:	e7 97       	sbiw	r28, 0x37	; 55
    16e8:	8e 83       	std	Y+6, r24	; 0x06
    16ea:	9f 83       	std	Y+7, r25	; 0x07
    16ec:	a8 87       	std	Y+8, r26	; 0x08
    16ee:	b9 87       	std	Y+9, r27	; 0x09

000016f0 <.Loc.257>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    16f0:	20 e0       	ldi	r18, 0x00	; 0
    16f2:	30 e0       	ldi	r19, 0x00	; 0
    16f4:	40 e8       	ldi	r20, 0x80	; 128
    16f6:	50 e4       	ldi	r21, 0x40	; 64
    16f8:	6a 81       	ldd	r22, Y+2	; 0x02
    16fa:	7b 81       	ldd	r23, Y+3	; 0x03
    16fc:	8c 81       	ldd	r24, Y+4	; 0x04
    16fe:	9d 81       	ldd	r25, Y+5	; 0x05
    1700:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    1704:	eb 96       	adiw	r28, 0x3b	; 59
    1706:	6c af       	std	Y+60, r22	; 0x3c
    1708:	7d af       	std	Y+61, r23	; 0x3d
    170a:	8e af       	std	Y+62, r24	; 0x3e
    170c:	9f af       	std	Y+63, r25	; 0x3f
    170e:	eb 97       	sbiw	r28, 0x3b	; 59
    1710:	eb 96       	adiw	r28, 0x3b	; 59
    1712:	8c ad       	ldd	r24, Y+60	; 0x3c
    1714:	9d ad       	ldd	r25, Y+61	; 0x3d
    1716:	ae ad       	ldd	r26, Y+62	; 0x3e
    1718:	bf ad       	ldd	r27, Y+63	; 0x3f
    171a:	eb 97       	sbiw	r28, 0x3b	; 59
    171c:	8a 87       	std	Y+10, r24	; 0x0a
    171e:	9b 87       	std	Y+11, r25	; 0x0b
    1720:	ac 87       	std	Y+12, r26	; 0x0c
    1722:	bd 87       	std	Y+13, r27	; 0x0d

00001724 <.Loc.258>:
	if (__tmp < 1.0)
    1724:	20 e0       	ldi	r18, 0x00	; 0
    1726:	30 e0       	ldi	r19, 0x00	; 0
    1728:	40 e8       	ldi	r20, 0x80	; 128
    172a:	5f e3       	ldi	r21, 0x3F	; 63
    172c:	6e 81       	ldd	r22, Y+6	; 0x06
    172e:	7f 81       	ldd	r23, Y+7	; 0x07
    1730:	88 85       	ldd	r24, Y+8	; 0x08
    1732:	99 85       	ldd	r25, Y+9	; 0x09
    1734:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    1738:	88 23       	and	r24, r24
    173a:	1c f4       	brge	.+6      	; 0x1742 <.L170>

0000173c <.Loc.259>:
		__ticks = 1;
    173c:	81 e0       	ldi	r24, 0x01	; 1
    173e:	8e 87       	std	Y+14, r24	; 0x0e
    1740:	17 c1       	rjmp	.+558    	; 0x1970 <.L141>

00001742 <.L170>:
	else if (__tmp2 > 65535)
    1742:	20 e0       	ldi	r18, 0x00	; 0
    1744:	3f ef       	ldi	r19, 0xFF	; 255
    1746:	4f e7       	ldi	r20, 0x7F	; 127
    1748:	57 e4       	ldi	r21, 0x47	; 71
    174a:	6a 85       	ldd	r22, Y+10	; 0x0a
    174c:	7b 85       	ldd	r23, Y+11	; 0x0b
    174e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1750:	9d 85       	ldd	r25, Y+13	; 0x0d
    1752:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    1756:	88 23       	and	r24, r24
    1758:	09 f0       	breq	.+2      	; 0x175c <L0^A>

0000175a <L0^A>:
    175a:	0c f4       	brge	.+2      	; 0x175e <.Loc.261>

0000175c <L0^A>:
    175c:	c6 c0       	rjmp	.+396    	; 0x18ea <.L171>

0000175e <.Loc.261>:
		_delay_ms(__us / 1000.0);
    175e:	20 e0       	ldi	r18, 0x00	; 0
    1760:	30 e0       	ldi	r19, 0x00	; 0
    1762:	4a e7       	ldi	r20, 0x7A	; 122
    1764:	54 e4       	ldi	r21, 0x44	; 68
    1766:	6a 81       	ldd	r22, Y+2	; 0x02
    1768:	7b 81       	ldd	r23, Y+3	; 0x03
    176a:	8c 81       	ldd	r24, Y+4	; 0x04
    176c:	9d 81       	ldd	r25, Y+5	; 0x05
    176e:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <__divsf3>
    1772:	ef 96       	adiw	r28, 0x3f	; 63
    1774:	6c af       	std	Y+60, r22	; 0x3c
    1776:	7d af       	std	Y+61, r23	; 0x3d
    1778:	8e af       	std	Y+62, r24	; 0x3e
    177a:	9f af       	std	Y+63, r25	; 0x3f
    177c:	ef 97       	sbiw	r28, 0x3f	; 63
    177e:	ef 96       	adiw	r28, 0x3f	; 63
    1780:	8c ad       	ldd	r24, Y+60	; 0x3c
    1782:	9d ad       	ldd	r25, Y+61	; 0x3d
    1784:	ae ad       	ldd	r26, Y+62	; 0x3e
    1786:	bf ad       	ldd	r27, Y+63	; 0x3f
    1788:	ef 97       	sbiw	r28, 0x3f	; 63
    178a:	8f 87       	std	Y+15, r24	; 0x0f
    178c:	98 8b       	std	Y+16, r25	; 0x10
    178e:	a9 8b       	std	Y+17, r26	; 0x11
    1790:	ba 8b       	std	Y+18, r27	; 0x12

00001792 <.LBB214>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1792:	20 e0       	ldi	r18, 0x00	; 0
    1794:	30 e0       	ldi	r19, 0x00	; 0
    1796:	4a e7       	ldi	r20, 0x7A	; 122
    1798:	55 e4       	ldi	r21, 0x45	; 69
    179a:	6f 85       	ldd	r22, Y+15	; 0x0f
    179c:	78 89       	ldd	r23, Y+16	; 0x10
    179e:	89 89       	ldd	r24, Y+17	; 0x11
    17a0:	9a 89       	ldd	r25, Y+18	; 0x12
    17a2:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    17a6:	c1 58       	subi	r28, 0x81	; 129
    17a8:	df 4f       	sbci	r29, 0xFF	; 255
    17aa:	68 83       	st	Y, r22
    17ac:	79 83       	std	Y+1, r23	; 0x01
    17ae:	8a 83       	std	Y+2, r24	; 0x02
    17b0:	9b 83       	std	Y+3, r25	; 0x03
    17b2:	cf 57       	subi	r28, 0x7F	; 127
    17b4:	d0 40       	sbci	r29, 0x00	; 0
    17b6:	c1 58       	subi	r28, 0x81	; 129
    17b8:	df 4f       	sbci	r29, 0xFF	; 255
    17ba:	88 81       	ld	r24, Y
    17bc:	99 81       	ldd	r25, Y+1	; 0x01
    17be:	aa 81       	ldd	r26, Y+2	; 0x02
    17c0:	bb 81       	ldd	r27, Y+3	; 0x03
    17c2:	cf 57       	subi	r28, 0x7F	; 127
    17c4:	d0 40       	sbci	r29, 0x00	; 0
    17c6:	8b 8b       	std	Y+19, r24	; 0x13
    17c8:	9c 8b       	std	Y+20, r25	; 0x14
    17ca:	ad 8b       	std	Y+21, r26	; 0x15
    17cc:	be 8b       	std	Y+22, r27	; 0x16

000017ce <.Loc.263>:
	if (__tmp < 1.0)
    17ce:	20 e0       	ldi	r18, 0x00	; 0
    17d0:	30 e0       	ldi	r19, 0x00	; 0
    17d2:	40 e8       	ldi	r20, 0x80	; 128
    17d4:	5f e3       	ldi	r21, 0x3F	; 63
    17d6:	6b 89       	ldd	r22, Y+19	; 0x13
    17d8:	7c 89       	ldd	r23, Y+20	; 0x14
    17da:	8d 89       	ldd	r24, Y+21	; 0x15
    17dc:	9e 89       	ldd	r25, Y+22	; 0x16
    17de:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    17e2:	88 23       	and	r24, r24
    17e4:	2c f4       	brge	.+10     	; 0x17f0 <.L172>

000017e6 <.Loc.264>:
		__ticks = 1;
    17e6:	81 e0       	ldi	r24, 0x01	; 1
    17e8:	90 e0       	ldi	r25, 0x00	; 0
    17ea:	98 8f       	std	Y+24, r25	; 0x18
    17ec:	8f 8b       	std	Y+23, r24	; 0x17
    17ee:	72 c0       	rjmp	.+228    	; 0x18d4 <.L146>

000017f0 <.L172>:
	else if (__tmp > 65535)
    17f0:	20 e0       	ldi	r18, 0x00	; 0
    17f2:	3f ef       	ldi	r19, 0xFF	; 255
    17f4:	4f e7       	ldi	r20, 0x7F	; 127
    17f6:	57 e4       	ldi	r21, 0x47	; 71
    17f8:	6b 89       	ldd	r22, Y+19	; 0x13
    17fa:	7c 89       	ldd	r23, Y+20	; 0x14
    17fc:	8d 89       	ldd	r24, Y+21	; 0x15
    17fe:	9e 89       	ldd	r25, Y+22	; 0x16
    1800:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    1804:	88 23       	and	r24, r24
    1806:	09 f0       	breq	.+2      	; 0x180a <L0^A>

00001808 <L0^A>:
    1808:	0c f4       	brge	.+2      	; 0x180c <.Loc.266>

0000180a <L0^A>:
    180a:	4e c0       	rjmp	.+156    	; 0x18a8 <.L173>

0000180c <.Loc.266>:
		__ticks = (uint16_t) (__ms * 10.0);
    180c:	20 e0       	ldi	r18, 0x00	; 0
    180e:	30 e0       	ldi	r19, 0x00	; 0
    1810:	40 e2       	ldi	r20, 0x20	; 32
    1812:	51 e4       	ldi	r21, 0x41	; 65
    1814:	6f 85       	ldd	r22, Y+15	; 0x0f
    1816:	78 89       	ldd	r23, Y+16	; 0x10
    1818:	89 89       	ldd	r24, Y+17	; 0x11
    181a:	9a 89       	ldd	r25, Y+18	; 0x12
    181c:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    1820:	cd 57       	subi	r28, 0x7D	; 125
    1822:	df 4f       	sbci	r29, 0xFF	; 255
    1824:	68 83       	st	Y, r22
    1826:	79 83       	std	Y+1, r23	; 0x01
    1828:	8a 83       	std	Y+2, r24	; 0x02
    182a:	9b 83       	std	Y+3, r25	; 0x03
    182c:	c3 58       	subi	r28, 0x83	; 131
    182e:	d0 40       	sbci	r29, 0x00	; 0
    1830:	cd 57       	subi	r28, 0x7D	; 125
    1832:	df 4f       	sbci	r29, 0xFF	; 255
    1834:	88 81       	ld	r24, Y
    1836:	99 81       	ldd	r25, Y+1	; 0x01
    1838:	aa 81       	ldd	r26, Y+2	; 0x02
    183a:	bb 81       	ldd	r27, Y+3	; 0x03
    183c:	c3 58       	subi	r28, 0x83	; 131
    183e:	d0 40       	sbci	r29, 0x00	; 0
    1840:	2b 96       	adiw	r28, 0x0b	; 11
    1842:	8c af       	std	Y+60, r24	; 0x3c
    1844:	9d af       	std	Y+61, r25	; 0x3d
    1846:	ae af       	std	Y+62, r26	; 0x3e
    1848:	bf af       	std	Y+63, r27	; 0x3f
    184a:	2b 97       	sbiw	r28, 0x0b	; 11

0000184c <.Loc.267>:
    184c:	2b 96       	adiw	r28, 0x0b	; 11
    184e:	6c ad       	ldd	r22, Y+60	; 0x3c
    1850:	7d ad       	ldd	r23, Y+61	; 0x3d
    1852:	8e ad       	ldd	r24, Y+62	; 0x3e
    1854:	9f ad       	ldd	r25, Y+63	; 0x3f
    1856:	2b 97       	sbiw	r28, 0x0b	; 11
    1858:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    185c:	c9 57       	subi	r28, 0x79	; 121
    185e:	df 4f       	sbci	r29, 0xFF	; 255
    1860:	68 83       	st	Y, r22
    1862:	79 83       	std	Y+1, r23	; 0x01
    1864:	8a 83       	std	Y+2, r24	; 0x02
    1866:	9b 83       	std	Y+3, r25	; 0x03
    1868:	c7 58       	subi	r28, 0x87	; 135
    186a:	d0 40       	sbci	r29, 0x00	; 0
    186c:	c9 57       	subi	r28, 0x79	; 121
    186e:	df 4f       	sbci	r29, 0xFF	; 255
    1870:	a8 81       	ld	r26, Y
    1872:	b9 81       	ldd	r27, Y+1	; 0x01
    1874:	c7 58       	subi	r28, 0x87	; 135
    1876:	d0 40       	sbci	r29, 0x00	; 0
    1878:	b8 8f       	std	Y+24, r27	; 0x18
    187a:	af 8b       	std	Y+23, r26	; 0x17

0000187c <.Loc.268>:
		while(__ticks)
    187c:	10 c0       	rjmp	.+32     	; 0x189e <.L149>

0000187e <.L150>:
    187e:	80 e9       	ldi	r24, 0x90	; 144
    1880:	91 e0       	ldi	r25, 0x01	; 1
    1882:	9a 8f       	std	Y+26, r25	; 0x1a
    1884:	89 8f       	std	Y+25, r24	; 0x19

00001886 <.LBB216>:
	__asm__ volatile (
    1886:	89 8d       	ldd	r24, Y+25	; 0x19
    1888:	9a 8d       	ldd	r25, Y+26	; 0x1a

0000188a <.L1^B22>:
    188a:	01 97       	sbiw	r24, 0x01	; 1
    188c:	f1 f7       	brne	.-4      	; 0x188a <.L1^B22>
    188e:	9a 8f       	std	Y+26, r25	; 0x1a
    1890:	89 8f       	std	Y+25, r24	; 0x19

00001892 <.Loc.270>:
	...

00001894 <.LBE216>:
			__ticks --;
    1894:	8f 89       	ldd	r24, Y+23	; 0x17
    1896:	98 8d       	ldd	r25, Y+24	; 0x18
    1898:	01 97       	sbiw	r24, 0x01	; 1
    189a:	98 8f       	std	Y+24, r25	; 0x18
    189c:	8f 8b       	std	Y+23, r24	; 0x17

0000189e <.L149>:
		while(__ticks)
    189e:	8f 89       	ldd	r24, Y+23	; 0x17
    18a0:	98 8d       	ldd	r25, Y+24	; 0x18
    18a2:	00 97       	sbiw	r24, 0x00	; 0
    18a4:	61 f7       	brne	.-40     	; 0x187e <.L150>

000018a6 <.Loc.273>:
		return;
    18a6:	64 c0       	rjmp	.+200    	; 0x1970 <.L141>

000018a8 <.L173>:
		__ticks = (uint16_t)__tmp;
    18a8:	6b 89       	ldd	r22, Y+19	; 0x13
    18aa:	7c 89       	ldd	r23, Y+20	; 0x14
    18ac:	8d 89       	ldd	r24, Y+21	; 0x15
    18ae:	9e 89       	ldd	r25, Y+22	; 0x16
    18b0:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    18b4:	c5 57       	subi	r28, 0x75	; 117
    18b6:	df 4f       	sbci	r29, 0xFF	; 255
    18b8:	68 83       	st	Y, r22
    18ba:	79 83       	std	Y+1, r23	; 0x01
    18bc:	8a 83       	std	Y+2, r24	; 0x02
    18be:	9b 83       	std	Y+3, r25	; 0x03
    18c0:	cb 58       	subi	r28, 0x8B	; 139
    18c2:	d0 40       	sbci	r29, 0x00	; 0
    18c4:	c5 57       	subi	r28, 0x75	; 117
    18c6:	df 4f       	sbci	r29, 0xFF	; 255
    18c8:	e8 81       	ld	r30, Y
    18ca:	f9 81       	ldd	r31, Y+1	; 0x01
    18cc:	cb 58       	subi	r28, 0x8B	; 139
    18ce:	d0 40       	sbci	r29, 0x00	; 0
    18d0:	f8 8f       	std	Y+24, r31	; 0x18
    18d2:	ef 8b       	std	Y+23, r30	; 0x17

000018d4 <.L146>:
    18d4:	8f 89       	ldd	r24, Y+23	; 0x17
    18d6:	98 8d       	ldd	r25, Y+24	; 0x18
    18d8:	9c 8f       	std	Y+28, r25	; 0x1c
    18da:	8b 8f       	std	Y+27, r24	; 0x1b

000018dc <.LBB218>:
    18dc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    18de:	9c 8d       	ldd	r25, Y+28	; 0x1c

000018e0 <.L1^B23>:
    18e0:	01 97       	sbiw	r24, 0x01	; 1
    18e2:	f1 f7       	brne	.-4      	; 0x18e0 <.L1^B23>
    18e4:	9c 8f       	std	Y+28, r25	; 0x1c
    18e6:	8b 8f       	std	Y+27, r24	; 0x1b

000018e8 <.Loc.276>:
}
    18e8:	43 c0       	rjmp	.+134    	; 0x1970 <.L141>

000018ea <.L171>:
	else if (__tmp > 255)
    18ea:	20 e0       	ldi	r18, 0x00	; 0
    18ec:	30 e0       	ldi	r19, 0x00	; 0
    18ee:	4f e7       	ldi	r20, 0x7F	; 127
    18f0:	53 e4       	ldi	r21, 0x43	; 67
    18f2:	6e 81       	ldd	r22, Y+6	; 0x06
    18f4:	7f 81       	ldd	r23, Y+7	; 0x07
    18f6:	88 85       	ldd	r24, Y+8	; 0x08
    18f8:	99 85       	ldd	r25, Y+9	; 0x09
    18fa:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    18fe:	88 23       	and	r24, r24
    1900:	19 f1       	breq	.+70     	; 0x1948 <.L174>
    1902:	14 f1       	brlt	.+68     	; 0x1948 <.L174>

00001904 <.LBB220>:
		uint16_t __ticks=(uint16_t)__tmp2;
    1904:	6a 85       	ldd	r22, Y+10	; 0x0a
    1906:	7b 85       	ldd	r23, Y+11	; 0x0b
    1908:	8c 85       	ldd	r24, Y+12	; 0x0c
    190a:	9d 85       	ldd	r25, Y+13	; 0x0d
    190c:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    1910:	c1 57       	subi	r28, 0x71	; 113
    1912:	df 4f       	sbci	r29, 0xFF	; 255
    1914:	68 83       	st	Y, r22
    1916:	79 83       	std	Y+1, r23	; 0x01
    1918:	8a 83       	std	Y+2, r24	; 0x02
    191a:	9b 83       	std	Y+3, r25	; 0x03
    191c:	cf 58       	subi	r28, 0x8F	; 143
    191e:	d0 40       	sbci	r29, 0x00	; 0
    1920:	c1 57       	subi	r28, 0x71	; 113
    1922:	df 4f       	sbci	r29, 0xFF	; 255
    1924:	88 81       	ld	r24, Y
    1926:	99 81       	ldd	r25, Y+1	; 0x01
    1928:	cf 58       	subi	r28, 0x8F	; 143
    192a:	d0 40       	sbci	r29, 0x00	; 0
    192c:	9e 8f       	std	Y+30, r25	; 0x1e
    192e:	8d 8f       	std	Y+29, r24	; 0x1d
    1930:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1932:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1934:	98 a3       	std	Y+32, r25	; 0x20
    1936:	8f 8f       	std	Y+31, r24	; 0x1f

00001938 <.LBB221>:
	__asm__ volatile (
    1938:	8f 8d       	ldd	r24, Y+31	; 0x1f
    193a:	98 a1       	ldd	r25, Y+32	; 0x20

0000193c <.L1^B24>:
    193c:	01 97       	sbiw	r24, 0x01	; 1
    193e:	f1 f7       	brne	.-4      	; 0x193c <.L1^B24>
    1940:	98 a3       	std	Y+32, r25	; 0x20
    1942:	8f 8f       	std	Y+31, r24	; 0x1f

00001944 <.Loc.280>:
	...

00001946 <.LBE221>:
		return;
    1946:	1b c0       	rjmp	.+54     	; 0x197e <.L154>

00001948 <.L174>:
		__ticks = (uint8_t)__tmp;
    1948:	6e 81       	ldd	r22, Y+6	; 0x06
    194a:	7f 81       	ldd	r23, Y+7	; 0x07
    194c:	88 85       	ldd	r24, Y+8	; 0x08
    194e:	99 85       	ldd	r25, Y+9	; 0x09
    1950:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    1954:	cd 56       	subi	r28, 0x6D	; 109
    1956:	df 4f       	sbci	r29, 0xFF	; 255
    1958:	68 83       	st	Y, r22
    195a:	79 83       	std	Y+1, r23	; 0x01
    195c:	8a 83       	std	Y+2, r24	; 0x02
    195e:	9b 83       	std	Y+3, r25	; 0x03
    1960:	c3 59       	subi	r28, 0x93	; 147
    1962:	d0 40       	sbci	r29, 0x00	; 0
    1964:	cd 56       	subi	r28, 0x6D	; 109
    1966:	df 4f       	sbci	r29, 0xFF	; 255
    1968:	98 81       	ld	r25, Y
    196a:	c3 59       	subi	r28, 0x93	; 147
    196c:	d0 40       	sbci	r29, 0x00	; 0
    196e:	9e 87       	std	Y+14, r25	; 0x0e

00001970 <.L141>:
    1970:	8e 85       	ldd	r24, Y+14	; 0x0e
    1972:	89 a3       	std	Y+33, r24	; 0x21

00001974 <.LBB223>:
	__asm__ volatile (
    1974:	89 a1       	ldd	r24, Y+33	; 0x21

00001976 <.L1^B25>:
    1976:	8a 95       	dec	r24
    1978:	f1 f7       	brne	.-4      	; 0x1976 <.L1^B25>
    197a:	89 a3       	std	Y+33, r24	; 0x21

0000197c <.Loc.284>:
	...

0000197e <.L154>:
    _delay_us(1);                   // implement 'Data hold time' (10 nS) and 'Enable cycle time' (500 nS)
}
    197e:	00 00       	nop
    1980:	c8 56       	subi	r28, 0x68	; 104
    1982:	df 4f       	sbci	r29, 0xFF	; 255
    1984:	0f b6       	in	r0, 0x3f	; 63
    1986:	f8 94       	cli
    1988:	de bf       	out	0x3e, r29	; 62
    198a:	0f be       	out	0x3f, r0	; 63
    198c:	cd bf       	out	0x3d, r28	; 61
    198e:	df 91       	pop	r29
    1990:	cf 91       	pop	r28
    1992:	08 95       	ret

00001994 <lcd_check_BF_4>:
Description:checks busy flag and wait until LCD is ready
			Desired information is the higher nibble, however both are read
			data is read while 'E' is high
******************************************************************** */
void lcd_check_BF_4(void)
{
    1994:	0f 93       	push	r16
    1996:	1f 93       	push	r17
    1998:	cf 93       	push	r28
    199a:	df 93       	push	r29
    199c:	cd b7       	in	r28, 0x3d	; 61
    199e:	de b7       	in	r29, 0x3e	; 62
    19a0:	c1 52       	subi	r28, 0x21	; 33
    19a2:	d1 40       	sbci	r29, 0x01	; 1
    19a4:	0f b6       	in	r0, 0x3f	; 63
    19a6:	f8 94       	cli
    19a8:	de bf       	out	0x3e, r29	; 62
    19aa:	0f be       	out	0x3f, r0	; 63
    19ac:	cd bf       	out	0x3d, r28	; 61

000019ae <.Loc.287>:

    uint8_t busy_flag_copy;             // busy flag 'mirror'

    set_D7_input;						// set D7 data direction to input
    19ae:	87 e2       	ldi	r24, 0x27	; 39
    19b0:	90 e0       	ldi	r25, 0x00	; 0
    19b2:	dc 01       	movw	r26, r24
    19b4:	2c 91       	ld	r18, X
    19b6:	87 e2       	ldi	r24, 0x27	; 39
    19b8:	90 e0       	ldi	r25, 0x00	; 0
    19ba:	2f 77       	andi	r18, 0x7F	; 127
    19bc:	fc 01       	movw	r30, r24
    19be:	20 83       	st	Z, r18

000019c0 <.Loc.288>:
    set_RS_LOW_Instr;					// select the Instruction Register (RS low)
    19c0:	88 e2       	ldi	r24, 0x28	; 40
    19c2:	90 e0       	ldi	r25, 0x00	; 0
    19c4:	dc 01       	movw	r26, r24
    19c6:	2c 91       	ld	r18, X
    19c8:	88 e2       	ldi	r24, 0x28	; 40
    19ca:	90 e0       	ldi	r25, 0x00	; 0
    19cc:	2d 7f       	andi	r18, 0xFD	; 253
    19ce:	fc 01       	movw	r30, r24
    19d0:	20 83       	st	Z, r18

000019d2 <.Loc.289>:
    set_RW_HIGH_read;					// read from LCD module (RW high)
    19d2:	88 e2       	ldi	r24, 0x28	; 40
    19d4:	90 e0       	ldi	r25, 0x00	; 0
    19d6:	dc 01       	movw	r26, r24
    19d8:	2c 91       	ld	r18, X
    19da:	88 e2       	ldi	r24, 0x28	; 40
    19dc:	90 e0       	ldi	r25, 0x00	; 0
    19de:	24 60       	ori	r18, 0x04	; 4
    19e0:	fc 01       	movw	r30, r24
    19e2:	20 83       	st	Z, r18

000019e4 <.L240>:

    do
    {
        busy_flag_copy = 0;                         // initialize busy flag 'mirror'
    19e4:	19 82       	std	Y+1, r1	; 0x01

000019e6 <.Loc.291>:
        lcd_Ctlr_Port |= (1<<lcd_E_bit);            // Enable pin high
    19e6:	88 e2       	ldi	r24, 0x28	; 40
    19e8:	90 e0       	ldi	r25, 0x00	; 0
    19ea:	dc 01       	movw	r26, r24
    19ec:	2c 91       	ld	r18, X
    19ee:	88 e2       	ldi	r24, 0x28	; 40
    19f0:	90 e0       	ldi	r25, 0x00	; 0

000019f2 <.Loc.292>:
    19f2:	28 60       	ori	r18, 0x08	; 8
    19f4:	fc 01       	movw	r30, r24
    19f6:	20 83       	st	Z, r18
    19f8:	9e 01       	movw	r18, r28
    19fa:	2e 59       	subi	r18, 0x9E	; 158
    19fc:	3f 4f       	sbci	r19, 0xFF	; 255
    19fe:	80 e0       	ldi	r24, 0x00	; 0
    1a00:	90 e0       	ldi	r25, 0x00	; 0
    1a02:	a0 e8       	ldi	r26, 0x80	; 128
    1a04:	bf e3       	ldi	r27, 0x3F	; 63
    1a06:	f9 01       	movw	r30, r18
    1a08:	80 83       	st	Z, r24
    1a0a:	91 83       	std	Z+1, r25	; 0x01
    1a0c:	a2 83       	std	Z+2, r26	; 0x02
    1a0e:	b3 83       	std	Z+3, r27	; 0x03

00001a10 <.LBB225>:
	__tmp = ((F_CPU) / 3e6) * __us;
    1a10:	8e 01       	movw	r16, r28
    1a12:	0a 59       	subi	r16, 0x9A	; 154
    1a14:	1f 4f       	sbci	r17, 0xFF	; 255
    1a16:	ce 01       	movw	r24, r28
    1a18:	8e 59       	subi	r24, 0x9E	; 158
    1a1a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a1c:	2b ea       	ldi	r18, 0xAB	; 171
    1a1e:	3a ea       	ldi	r19, 0xAA	; 170
    1a20:	4a ea       	ldi	r20, 0xAA	; 170
    1a22:	50 e4       	ldi	r21, 0x40	; 64
    1a24:	dc 01       	movw	r26, r24
    1a26:	6d 91       	ld	r22, X+
    1a28:	7d 91       	ld	r23, X+
    1a2a:	8d 91       	ld	r24, X+
    1a2c:	9c 91       	ld	r25, X
    1a2e:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    1a32:	ce 56       	subi	r28, 0x6E	; 110
    1a34:	df 4f       	sbci	r29, 0xFF	; 255
    1a36:	68 83       	st	Y, r22
    1a38:	79 83       	std	Y+1, r23	; 0x01
    1a3a:	8a 83       	std	Y+2, r24	; 0x02
    1a3c:	9b 83       	std	Y+3, r25	; 0x03
    1a3e:	c2 59       	subi	r28, 0x92	; 146
    1a40:	d0 40       	sbci	r29, 0x00	; 0
    1a42:	ce 56       	subi	r28, 0x6E	; 110
    1a44:	df 4f       	sbci	r29, 0xFF	; 255
    1a46:	88 81       	ld	r24, Y
    1a48:	99 81       	ldd	r25, Y+1	; 0x01
    1a4a:	aa 81       	ldd	r26, Y+2	; 0x02
    1a4c:	bb 81       	ldd	r27, Y+3	; 0x03
    1a4e:	c2 59       	subi	r28, 0x92	; 146
    1a50:	d0 40       	sbci	r29, 0x00	; 0
    1a52:	f8 01       	movw	r30, r16
    1a54:	80 83       	st	Z, r24
    1a56:	91 83       	std	Z+1, r25	; 0x01
    1a58:	a2 83       	std	Z+2, r26	; 0x02
    1a5a:	b3 83       	std	Z+3, r27	; 0x03

00001a5c <.Loc.294>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    1a5c:	8e 01       	movw	r16, r28
    1a5e:	06 59       	subi	r16, 0x96	; 150
    1a60:	1f 4f       	sbci	r17, 0xFF	; 255
    1a62:	ce 01       	movw	r24, r28
    1a64:	8e 59       	subi	r24, 0x9E	; 158
    1a66:	9f 4f       	sbci	r25, 0xFF	; 255
    1a68:	20 e0       	ldi	r18, 0x00	; 0
    1a6a:	30 e0       	ldi	r19, 0x00	; 0
    1a6c:	40 e8       	ldi	r20, 0x80	; 128
    1a6e:	50 e4       	ldi	r21, 0x40	; 64
    1a70:	dc 01       	movw	r26, r24
    1a72:	6d 91       	ld	r22, X+
    1a74:	7d 91       	ld	r23, X+
    1a76:	8d 91       	ld	r24, X+
    1a78:	9c 91       	ld	r25, X
    1a7a:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    1a7e:	ca 56       	subi	r28, 0x6A	; 106
    1a80:	df 4f       	sbci	r29, 0xFF	; 255
    1a82:	68 83       	st	Y, r22
    1a84:	79 83       	std	Y+1, r23	; 0x01
    1a86:	8a 83       	std	Y+2, r24	; 0x02
    1a88:	9b 83       	std	Y+3, r25	; 0x03
    1a8a:	c6 59       	subi	r28, 0x96	; 150
    1a8c:	d0 40       	sbci	r29, 0x00	; 0
    1a8e:	ca 56       	subi	r28, 0x6A	; 106
    1a90:	df 4f       	sbci	r29, 0xFF	; 255
    1a92:	88 81       	ld	r24, Y
    1a94:	99 81       	ldd	r25, Y+1	; 0x01
    1a96:	aa 81       	ldd	r26, Y+2	; 0x02
    1a98:	bb 81       	ldd	r27, Y+3	; 0x03
    1a9a:	c6 59       	subi	r28, 0x96	; 150
    1a9c:	d0 40       	sbci	r29, 0x00	; 0
    1a9e:	f8 01       	movw	r30, r16
    1aa0:	80 83       	st	Z, r24
    1aa2:	91 83       	std	Z+1, r25	; 0x01
    1aa4:	a2 83       	std	Z+2, r26	; 0x02
    1aa6:	b3 83       	std	Z+3, r27	; 0x03

00001aa8 <.Loc.295>:
	if (__tmp < 1.0)
    1aa8:	ce 01       	movw	r24, r28
    1aaa:	8a 59       	subi	r24, 0x9A	; 154
    1aac:	9f 4f       	sbci	r25, 0xFF	; 255
    1aae:	20 e0       	ldi	r18, 0x00	; 0
    1ab0:	30 e0       	ldi	r19, 0x00	; 0
    1ab2:	40 e8       	ldi	r20, 0x80	; 128
    1ab4:	5f e3       	ldi	r21, 0x3F	; 63
    1ab6:	dc 01       	movw	r26, r24
    1ab8:	6d 91       	ld	r22, X+
    1aba:	7d 91       	ld	r23, X+
    1abc:	8d 91       	ld	r24, X+
    1abe:	9c 91       	ld	r25, X
    1ac0:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    1ac4:	88 23       	and	r24, r24
    1ac6:	3c f4       	brge	.+14     	; 0x1ad6 <.L261>

00001ac8 <.Loc.296>:
		__ticks = 1;
    1ac8:	ce 01       	movw	r24, r28
    1aca:	82 59       	subi	r24, 0x92	; 146
    1acc:	9f 4f       	sbci	r25, 0xFF	; 255
    1ace:	21 e0       	ldi	r18, 0x01	; 1
    1ad0:	fc 01       	movw	r30, r24
    1ad2:	20 83       	st	Z, r18
    1ad4:	a0 c1       	rjmp	.+832    	; 0x1e16 <.L178>

00001ad6 <.L261>:
	else if (__tmp2 > 65535)
    1ad6:	ce 01       	movw	r24, r28
    1ad8:	86 59       	subi	r24, 0x96	; 150
    1ada:	9f 4f       	sbci	r25, 0xFF	; 255
    1adc:	20 e0       	ldi	r18, 0x00	; 0
    1ade:	3f ef       	ldi	r19, 0xFF	; 255
    1ae0:	4f e7       	ldi	r20, 0x7F	; 127
    1ae2:	57 e4       	ldi	r21, 0x47	; 71
    1ae4:	dc 01       	movw	r26, r24
    1ae6:	6d 91       	ld	r22, X+
    1ae8:	7d 91       	ld	r23, X+
    1aea:	8d 91       	ld	r24, X+
    1aec:	9c 91       	ld	r25, X
    1aee:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    1af2:	88 23       	and	r24, r24
    1af4:	09 f0       	breq	.+2      	; 0x1af8 <L0^A>

00001af6 <L0^A>:
    1af6:	0c f4       	brge	.+2      	; 0x1afa <.Loc.298>

00001af8 <L0^A>:
    1af8:	26 c1       	rjmp	.+588    	; 0x1d46 <.L262>

00001afa <.Loc.298>:
		_delay_ms(__us / 1000.0);
    1afa:	ce 01       	movw	r24, r28
    1afc:	8e 59       	subi	r24, 0x9E	; 158
    1afe:	9f 4f       	sbci	r25, 0xFF	; 255
    1b00:	20 e0       	ldi	r18, 0x00	; 0
    1b02:	30 e0       	ldi	r19, 0x00	; 0
    1b04:	4a e7       	ldi	r20, 0x7A	; 122
    1b06:	54 e4       	ldi	r21, 0x44	; 68
    1b08:	fc 01       	movw	r30, r24
    1b0a:	60 81       	ld	r22, Z
    1b0c:	71 81       	ldd	r23, Z+1	; 0x01
    1b0e:	82 81       	ldd	r24, Z+2	; 0x02
    1b10:	93 81       	ldd	r25, Z+3	; 0x03
    1b12:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <__divsf3>
    1b16:	c6 56       	subi	r28, 0x66	; 102
    1b18:	df 4f       	sbci	r29, 0xFF	; 255
    1b1a:	68 83       	st	Y, r22
    1b1c:	79 83       	std	Y+1, r23	; 0x01
    1b1e:	8a 83       	std	Y+2, r24	; 0x02
    1b20:	9b 83       	std	Y+3, r25	; 0x03
    1b22:	ca 59       	subi	r28, 0x9A	; 154
    1b24:	d0 40       	sbci	r29, 0x00	; 0
    1b26:	c6 56       	subi	r28, 0x66	; 102
    1b28:	df 4f       	sbci	r29, 0xFF	; 255
    1b2a:	88 81       	ld	r24, Y
    1b2c:	99 81       	ldd	r25, Y+1	; 0x01
    1b2e:	aa 81       	ldd	r26, Y+2	; 0x02
    1b30:	bb 81       	ldd	r27, Y+3	; 0x03
    1b32:	ca 59       	subi	r28, 0x9A	; 154
    1b34:	d0 40       	sbci	r29, 0x00	; 0
    1b36:	9e 01       	movw	r18, r28
    1b38:	21 59       	subi	r18, 0x91	; 145
    1b3a:	3f 4f       	sbci	r19, 0xFF	; 255
    1b3c:	f9 01       	movw	r30, r18
    1b3e:	80 83       	st	Z, r24
    1b40:	91 83       	std	Z+1, r25	; 0x01
    1b42:	a2 83       	std	Z+2, r26	; 0x02
    1b44:	b3 83       	std	Z+3, r27	; 0x03

00001b46 <.LBB227>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1b46:	8e 01       	movw	r16, r28
    1b48:	0d 58       	subi	r16, 0x8D	; 141
    1b4a:	1f 4f       	sbci	r17, 0xFF	; 255
    1b4c:	ce 01       	movw	r24, r28
    1b4e:	81 59       	subi	r24, 0x91	; 145
    1b50:	9f 4f       	sbci	r25, 0xFF	; 255
    1b52:	20 e0       	ldi	r18, 0x00	; 0
    1b54:	30 e0       	ldi	r19, 0x00	; 0
    1b56:	4a e7       	ldi	r20, 0x7A	; 122
    1b58:	55 e4       	ldi	r21, 0x45	; 69
    1b5a:	dc 01       	movw	r26, r24
    1b5c:	6d 91       	ld	r22, X+
    1b5e:	7d 91       	ld	r23, X+
    1b60:	8d 91       	ld	r24, X+
    1b62:	9c 91       	ld	r25, X
    1b64:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    1b68:	c2 56       	subi	r28, 0x62	; 98
    1b6a:	df 4f       	sbci	r29, 0xFF	; 255
    1b6c:	68 83       	st	Y, r22
    1b6e:	79 83       	std	Y+1, r23	; 0x01
    1b70:	8a 83       	std	Y+2, r24	; 0x02
    1b72:	9b 83       	std	Y+3, r25	; 0x03
    1b74:	ce 59       	subi	r28, 0x9E	; 158
    1b76:	d0 40       	sbci	r29, 0x00	; 0
    1b78:	c2 56       	subi	r28, 0x62	; 98
    1b7a:	df 4f       	sbci	r29, 0xFF	; 255
    1b7c:	88 81       	ld	r24, Y
    1b7e:	99 81       	ldd	r25, Y+1	; 0x01
    1b80:	aa 81       	ldd	r26, Y+2	; 0x02
    1b82:	bb 81       	ldd	r27, Y+3	; 0x03
    1b84:	ce 59       	subi	r28, 0x9E	; 158
    1b86:	d0 40       	sbci	r29, 0x00	; 0
    1b88:	f8 01       	movw	r30, r16
    1b8a:	80 83       	st	Z, r24
    1b8c:	91 83       	std	Z+1, r25	; 0x01
    1b8e:	a2 83       	std	Z+2, r26	; 0x02
    1b90:	b3 83       	std	Z+3, r27	; 0x03

00001b92 <.Loc.300>:
	if (__tmp < 1.0)
    1b92:	ce 01       	movw	r24, r28
    1b94:	8d 58       	subi	r24, 0x8D	; 141
    1b96:	9f 4f       	sbci	r25, 0xFF	; 255
    1b98:	20 e0       	ldi	r18, 0x00	; 0
    1b9a:	30 e0       	ldi	r19, 0x00	; 0
    1b9c:	40 e8       	ldi	r20, 0x80	; 128
    1b9e:	5f e3       	ldi	r21, 0x3F	; 63
    1ba0:	dc 01       	movw	r26, r24
    1ba2:	6d 91       	ld	r22, X+
    1ba4:	7d 91       	ld	r23, X+
    1ba6:	8d 91       	ld	r24, X+
    1ba8:	9c 91       	ld	r25, X
    1baa:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    1bae:	88 23       	and	r24, r24
    1bb0:	4c f4       	brge	.+18     	; 0x1bc4 <.L263>

00001bb2 <.Loc.301>:
		__ticks = 1;
    1bb2:	ce 01       	movw	r24, r28
    1bb4:	89 58       	subi	r24, 0x89	; 137
    1bb6:	9f 4f       	sbci	r25, 0xFF	; 255
    1bb8:	21 e0       	ldi	r18, 0x01	; 1
    1bba:	30 e0       	ldi	r19, 0x00	; 0
    1bbc:	fc 01       	movw	r30, r24
    1bbe:	31 83       	std	Z+1, r19	; 0x01
    1bc0:	20 83       	st	Z, r18
    1bc2:	a5 c0       	rjmp	.+330    	; 0x1d0e <.L183>

00001bc4 <.L263>:
	else if (__tmp > 65535)
    1bc4:	ce 01       	movw	r24, r28
    1bc6:	8d 58       	subi	r24, 0x8D	; 141
    1bc8:	9f 4f       	sbci	r25, 0xFF	; 255
    1bca:	20 e0       	ldi	r18, 0x00	; 0
    1bcc:	3f ef       	ldi	r19, 0xFF	; 255
    1bce:	4f e7       	ldi	r20, 0x7F	; 127
    1bd0:	57 e4       	ldi	r21, 0x47	; 71
    1bd2:	dc 01       	movw	r26, r24
    1bd4:	6d 91       	ld	r22, X+
    1bd6:	7d 91       	ld	r23, X+
    1bd8:	8d 91       	ld	r24, X+
    1bda:	9c 91       	ld	r25, X
    1bdc:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    1be0:	88 23       	and	r24, r24
    1be2:	09 f0       	breq	.+2      	; 0x1be6 <L0^A>

00001be4 <L0^A>:
    1be4:	0c f4       	brge	.+2      	; 0x1be8 <.Loc.303>

00001be6 <L0^A>:
    1be6:	75 c0       	rjmp	.+234    	; 0x1cd2 <.L264>

00001be8 <.Loc.303>:
		__ticks = (uint16_t) (__ms * 10.0);
    1be8:	ce 01       	movw	r24, r28
    1bea:	81 59       	subi	r24, 0x91	; 145
    1bec:	9f 4f       	sbci	r25, 0xFF	; 255
    1bee:	20 e0       	ldi	r18, 0x00	; 0
    1bf0:	30 e0       	ldi	r19, 0x00	; 0
    1bf2:	40 e2       	ldi	r20, 0x20	; 32
    1bf4:	51 e4       	ldi	r21, 0x41	; 65
    1bf6:	fc 01       	movw	r30, r24
    1bf8:	60 81       	ld	r22, Z
    1bfa:	71 81       	ldd	r23, Z+1	; 0x01
    1bfc:	82 81       	ldd	r24, Z+2	; 0x02
    1bfe:	93 81       	ldd	r25, Z+3	; 0x03
    1c00:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    1c04:	ce 55       	subi	r28, 0x5E	; 94
    1c06:	df 4f       	sbci	r29, 0xFF	; 255
    1c08:	68 83       	st	Y, r22
    1c0a:	79 83       	std	Y+1, r23	; 0x01
    1c0c:	8a 83       	std	Y+2, r24	; 0x02
    1c0e:	9b 83       	std	Y+3, r25	; 0x03
    1c10:	c2 5a       	subi	r28, 0xA2	; 162
    1c12:	d0 40       	sbci	r29, 0x00	; 0
    1c14:	ce 55       	subi	r28, 0x5E	; 94
    1c16:	df 4f       	sbci	r29, 0xFF	; 255
    1c18:	88 81       	ld	r24, Y
    1c1a:	99 81       	ldd	r25, Y+1	; 0x01
    1c1c:	aa 81       	ldd	r26, Y+2	; 0x02
    1c1e:	bb 81       	ldd	r27, Y+3	; 0x03
    1c20:	c2 5a       	subi	r28, 0xA2	; 162
    1c22:	d0 40       	sbci	r29, 0x00	; 0
    1c24:	c2 57       	subi	r28, 0x72	; 114
    1c26:	df 4f       	sbci	r29, 0xFF	; 255
    1c28:	88 83       	st	Y, r24
    1c2a:	99 83       	std	Y+1, r25	; 0x01
    1c2c:	aa 83       	std	Y+2, r26	; 0x02
    1c2e:	bb 83       	std	Y+3, r27	; 0x03
    1c30:	ce 58       	subi	r28, 0x8E	; 142
    1c32:	d0 40       	sbci	r29, 0x00	; 0

00001c34 <.Loc.304>:
    1c34:	8e 01       	movw	r16, r28
    1c36:	09 58       	subi	r16, 0x89	; 137
    1c38:	1f 4f       	sbci	r17, 0xFF	; 255
    1c3a:	c2 57       	subi	r28, 0x72	; 114
    1c3c:	df 4f       	sbci	r29, 0xFF	; 255
    1c3e:	68 81       	ld	r22, Y
    1c40:	79 81       	ldd	r23, Y+1	; 0x01
    1c42:	8a 81       	ldd	r24, Y+2	; 0x02
    1c44:	9b 81       	ldd	r25, Y+3	; 0x03
    1c46:	ce 58       	subi	r28, 0x8E	; 142
    1c48:	d0 40       	sbci	r29, 0x00	; 0
    1c4a:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    1c4e:	ca 55       	subi	r28, 0x5A	; 90
    1c50:	df 4f       	sbci	r29, 0xFF	; 255
    1c52:	68 83       	st	Y, r22
    1c54:	79 83       	std	Y+1, r23	; 0x01
    1c56:	8a 83       	std	Y+2, r24	; 0x02
    1c58:	9b 83       	std	Y+3, r25	; 0x03
    1c5a:	c6 5a       	subi	r28, 0xA6	; 166
    1c5c:	d0 40       	sbci	r29, 0x00	; 0
    1c5e:	ca 55       	subi	r28, 0x5A	; 90
    1c60:	df 4f       	sbci	r29, 0xFF	; 255
    1c62:	e8 81       	ld	r30, Y
    1c64:	f9 81       	ldd	r31, Y+1	; 0x01
    1c66:	c6 5a       	subi	r28, 0xA6	; 166
    1c68:	d0 40       	sbci	r29, 0x00	; 0
    1c6a:	d8 01       	movw	r26, r16
    1c6c:	11 96       	adiw	r26, 0x01	; 1
    1c6e:	fc 93       	st	X, r31
    1c70:	ee 93       	st	-X, r30

00001c72 <.Loc.305>:
		while(__ticks)
    1c72:	26 c0       	rjmp	.+76     	; 0x1cc0 <.L186>

00001c74 <.L187>:
    1c74:	ce 01       	movw	r24, r28
    1c76:	87 58       	subi	r24, 0x87	; 135
    1c78:	9f 4f       	sbci	r25, 0xFF	; 255
    1c7a:	20 e9       	ldi	r18, 0x90	; 144
    1c7c:	31 e0       	ldi	r19, 0x01	; 1
    1c7e:	dc 01       	movw	r26, r24
    1c80:	2d 93       	st	X+, r18
    1c82:	3c 93       	st	X, r19

00001c84 <.LBB229>:
	__asm__ volatile (
    1c84:	ce 01       	movw	r24, r28
    1c86:	87 58       	subi	r24, 0x87	; 135
    1c88:	9f 4f       	sbci	r25, 0xFF	; 255
    1c8a:	fc 01       	movw	r30, r24
    1c8c:	80 81       	ld	r24, Z
    1c8e:	91 81       	ldd	r25, Z+1	; 0x01

00001c90 <.L1^B26>:
    1c90:	01 97       	sbiw	r24, 0x01	; 1
    1c92:	f1 f7       	brne	.-4      	; 0x1c90 <.L1^B26>
    1c94:	9e 01       	movw	r18, r28
    1c96:	27 58       	subi	r18, 0x87	; 135
    1c98:	3f 4f       	sbci	r19, 0xFF	; 255
    1c9a:	d9 01       	movw	r26, r18
    1c9c:	8d 93       	st	X+, r24
    1c9e:	9c 93       	st	X, r25

00001ca0 <.Loc.307>:
	...

00001ca2 <.LBE229>:
			__ticks --;
    1ca2:	ce 01       	movw	r24, r28
    1ca4:	89 58       	subi	r24, 0x89	; 137
    1ca6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ca8:	9e 01       	movw	r18, r28
    1caa:	29 58       	subi	r18, 0x89	; 137
    1cac:	3f 4f       	sbci	r19, 0xFF	; 255
    1cae:	f9 01       	movw	r30, r18
    1cb0:	20 81       	ld	r18, Z
    1cb2:	31 81       	ldd	r19, Z+1	; 0x01
    1cb4:	21 50       	subi	r18, 0x01	; 1
    1cb6:	31 09       	sbc	r19, r1
    1cb8:	dc 01       	movw	r26, r24
    1cba:	11 96       	adiw	r26, 0x01	; 1
    1cbc:	3c 93       	st	X, r19
    1cbe:	2e 93       	st	-X, r18

00001cc0 <.L186>:
		while(__ticks)
    1cc0:	ce 01       	movw	r24, r28
    1cc2:	89 58       	subi	r24, 0x89	; 137
    1cc4:	9f 4f       	sbci	r25, 0xFF	; 255
    1cc6:	fc 01       	movw	r30, r24
    1cc8:	80 81       	ld	r24, Z
    1cca:	91 81       	ldd	r25, Z+1	; 0x01
    1ccc:	00 97       	sbiw	r24, 0x00	; 0
    1cce:	91 f6       	brne	.-92     	; 0x1c74 <.L187>

00001cd0 <.Loc.310>:
		return;
    1cd0:	a2 c0       	rjmp	.+324    	; 0x1e16 <.L178>

00001cd2 <.L264>:
		__ticks = (uint16_t)__tmp;
    1cd2:	8e 01       	movw	r16, r28
    1cd4:	09 58       	subi	r16, 0x89	; 137
    1cd6:	1f 4f       	sbci	r17, 0xFF	; 255
    1cd8:	ce 01       	movw	r24, r28
    1cda:	8d 58       	subi	r24, 0x8D	; 141
    1cdc:	9f 4f       	sbci	r25, 0xFF	; 255
    1cde:	dc 01       	movw	r26, r24
    1ce0:	6d 91       	ld	r22, X+
    1ce2:	7d 91       	ld	r23, X+
    1ce4:	8d 91       	ld	r24, X+
    1ce6:	9c 91       	ld	r25, X
    1ce8:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    1cec:	c6 55       	subi	r28, 0x56	; 86
    1cee:	df 4f       	sbci	r29, 0xFF	; 255
    1cf0:	68 83       	st	Y, r22
    1cf2:	79 83       	std	Y+1, r23	; 0x01
    1cf4:	8a 83       	std	Y+2, r24	; 0x02
    1cf6:	9b 83       	std	Y+3, r25	; 0x03
    1cf8:	ca 5a       	subi	r28, 0xAA	; 170
    1cfa:	d0 40       	sbci	r29, 0x00	; 0
    1cfc:	c6 55       	subi	r28, 0x56	; 86
    1cfe:	df 4f       	sbci	r29, 0xFF	; 255
    1d00:	88 81       	ld	r24, Y
    1d02:	99 81       	ldd	r25, Y+1	; 0x01
    1d04:	ca 5a       	subi	r28, 0xAA	; 170
    1d06:	d0 40       	sbci	r29, 0x00	; 0
    1d08:	f8 01       	movw	r30, r16
    1d0a:	91 83       	std	Z+1, r25	; 0x01
    1d0c:	80 83       	st	Z, r24

00001d0e <.L183>:
    1d0e:	ce 01       	movw	r24, r28
    1d10:	85 58       	subi	r24, 0x85	; 133
    1d12:	9f 4f       	sbci	r25, 0xFF	; 255
    1d14:	9e 01       	movw	r18, r28
    1d16:	29 58       	subi	r18, 0x89	; 137
    1d18:	3f 4f       	sbci	r19, 0xFF	; 255
    1d1a:	d9 01       	movw	r26, r18
    1d1c:	2d 91       	ld	r18, X+
    1d1e:	3c 91       	ld	r19, X
    1d20:	fc 01       	movw	r30, r24
    1d22:	31 83       	std	Z+1, r19	; 0x01
    1d24:	20 83       	st	Z, r18

00001d26 <.LBB231>:
    1d26:	ce 01       	movw	r24, r28
    1d28:	85 58       	subi	r24, 0x85	; 133
    1d2a:	9f 4f       	sbci	r25, 0xFF	; 255
    1d2c:	dc 01       	movw	r26, r24
    1d2e:	8d 91       	ld	r24, X+
    1d30:	9c 91       	ld	r25, X
    1d32:	11 97       	sbiw	r26, 0x01	; 1

00001d34 <.L1^B27>:
    1d34:	01 97       	sbiw	r24, 0x01	; 1
    1d36:	f1 f7       	brne	.-4      	; 0x1d34 <.L1^B27>
    1d38:	9e 01       	movw	r18, r28
    1d3a:	25 58       	subi	r18, 0x85	; 133
    1d3c:	3f 4f       	sbci	r19, 0xFF	; 255
    1d3e:	f9 01       	movw	r30, r18
    1d40:	91 83       	std	Z+1, r25	; 0x01
    1d42:	80 83       	st	Z, r24

00001d44 <.Loc.313>:
}
    1d44:	68 c0       	rjmp	.+208    	; 0x1e16 <.L178>

00001d46 <.L262>:
	else if (__tmp > 255)
    1d46:	ce 01       	movw	r24, r28
    1d48:	8a 59       	subi	r24, 0x9A	; 154
    1d4a:	9f 4f       	sbci	r25, 0xFF	; 255
    1d4c:	20 e0       	ldi	r18, 0x00	; 0
    1d4e:	30 e0       	ldi	r19, 0x00	; 0
    1d50:	4f e7       	ldi	r20, 0x7F	; 127
    1d52:	53 e4       	ldi	r21, 0x43	; 67
    1d54:	dc 01       	movw	r26, r24
    1d56:	6d 91       	ld	r22, X+
    1d58:	7d 91       	ld	r23, X+
    1d5a:	8d 91       	ld	r24, X+
    1d5c:	9c 91       	ld	r25, X
    1d5e:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    1d62:	88 23       	and	r24, r24
    1d64:	e1 f1       	breq	.+120    	; 0x1dde <.L265>
    1d66:	dc f1       	brlt	.+118    	; 0x1dde <.L265>

00001d68 <.LBB233>:
		uint16_t __ticks=(uint16_t)__tmp2;
    1d68:	8e 01       	movw	r16, r28
    1d6a:	03 58       	subi	r16, 0x83	; 131
    1d6c:	1f 4f       	sbci	r17, 0xFF	; 255
    1d6e:	ce 01       	movw	r24, r28
    1d70:	86 59       	subi	r24, 0x96	; 150
    1d72:	9f 4f       	sbci	r25, 0xFF	; 255
    1d74:	fc 01       	movw	r30, r24
    1d76:	60 81       	ld	r22, Z
    1d78:	71 81       	ldd	r23, Z+1	; 0x01
    1d7a:	82 81       	ldd	r24, Z+2	; 0x02
    1d7c:	93 81       	ldd	r25, Z+3	; 0x03
    1d7e:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    1d82:	c2 55       	subi	r28, 0x52	; 82
    1d84:	df 4f       	sbci	r29, 0xFF	; 255
    1d86:	68 83       	st	Y, r22
    1d88:	79 83       	std	Y+1, r23	; 0x01
    1d8a:	8a 83       	std	Y+2, r24	; 0x02
    1d8c:	9b 83       	std	Y+3, r25	; 0x03
    1d8e:	ce 5a       	subi	r28, 0xAE	; 174
    1d90:	d0 40       	sbci	r29, 0x00	; 0
    1d92:	c2 55       	subi	r28, 0x52	; 82
    1d94:	df 4f       	sbci	r29, 0xFF	; 255
    1d96:	e8 81       	ld	r30, Y
    1d98:	f9 81       	ldd	r31, Y+1	; 0x01
    1d9a:	ce 5a       	subi	r28, 0xAE	; 174
    1d9c:	d0 40       	sbci	r29, 0x00	; 0
    1d9e:	d8 01       	movw	r26, r16
    1da0:	ed 93       	st	X+, r30
    1da2:	fc 93       	st	X, r31
    1da4:	ce 01       	movw	r24, r28
    1da6:	81 58       	subi	r24, 0x81	; 129
    1da8:	9f 4f       	sbci	r25, 0xFF	; 255
    1daa:	9e 01       	movw	r18, r28
    1dac:	23 58       	subi	r18, 0x83	; 131
    1dae:	3f 4f       	sbci	r19, 0xFF	; 255
    1db0:	d9 01       	movw	r26, r18
    1db2:	2d 91       	ld	r18, X+
    1db4:	3c 91       	ld	r19, X
    1db6:	fc 01       	movw	r30, r24
    1db8:	31 83       	std	Z+1, r19	; 0x01
    1dba:	20 83       	st	Z, r18

00001dbc <.LBB234>:
	__asm__ volatile (
    1dbc:	ce 01       	movw	r24, r28
    1dbe:	81 58       	subi	r24, 0x81	; 129
    1dc0:	9f 4f       	sbci	r25, 0xFF	; 255
    1dc2:	dc 01       	movw	r26, r24
    1dc4:	8d 91       	ld	r24, X+
    1dc6:	9c 91       	ld	r25, X
    1dc8:	11 97       	sbiw	r26, 0x01	; 1

00001dca <.L1^B28>:
    1dca:	01 97       	sbiw	r24, 0x01	; 1
    1dcc:	f1 f7       	brne	.-4      	; 0x1dca <.L1^B28>
    1dce:	9e 01       	movw	r18, r28
    1dd0:	21 58       	subi	r18, 0x81	; 129
    1dd2:	3f 4f       	sbci	r19, 0xFF	; 255
    1dd4:	f9 01       	movw	r30, r18
    1dd6:	91 83       	std	Z+1, r25	; 0x01
    1dd8:	80 83       	st	Z, r24

00001dda <.Loc.317>:
	...

00001ddc <.LBE234>:
		return;
    1ddc:	34 c0       	rjmp	.+104    	; 0x1e46 <.L191>

00001dde <.L265>:
		__ticks = (uint8_t)__tmp;
    1dde:	8e 01       	movw	r16, r28
    1de0:	02 59       	subi	r16, 0x92	; 146
    1de2:	1f 4f       	sbci	r17, 0xFF	; 255
    1de4:	ce 01       	movw	r24, r28
    1de6:	8a 59       	subi	r24, 0x9A	; 154
    1de8:	9f 4f       	sbci	r25, 0xFF	; 255
    1dea:	dc 01       	movw	r26, r24
    1dec:	6d 91       	ld	r22, X+
    1dee:	7d 91       	ld	r23, X+
    1df0:	8d 91       	ld	r24, X+
    1df2:	9c 91       	ld	r25, X
    1df4:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    1df8:	ce 54       	subi	r28, 0x4E	; 78
    1dfa:	df 4f       	sbci	r29, 0xFF	; 255
    1dfc:	68 83       	st	Y, r22
    1dfe:	79 83       	std	Y+1, r23	; 0x01
    1e00:	8a 83       	std	Y+2, r24	; 0x02
    1e02:	9b 83       	std	Y+3, r25	; 0x03
    1e04:	c2 5b       	subi	r28, 0xB2	; 178
    1e06:	d0 40       	sbci	r29, 0x00	; 0
    1e08:	ce 54       	subi	r28, 0x4E	; 78
    1e0a:	df 4f       	sbci	r29, 0xFF	; 255
    1e0c:	88 81       	ld	r24, Y
    1e0e:	c2 5b       	subi	r28, 0xB2	; 178
    1e10:	d0 40       	sbci	r29, 0x00	; 0
    1e12:	f8 01       	movw	r30, r16
    1e14:	80 83       	st	Z, r24

00001e16 <.L178>:
    1e16:	ce 01       	movw	r24, r28
    1e18:	8f 57       	subi	r24, 0x7F	; 127
    1e1a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e1c:	9e 01       	movw	r18, r28
    1e1e:	22 59       	subi	r18, 0x92	; 146
    1e20:	3f 4f       	sbci	r19, 0xFF	; 255
    1e22:	d9 01       	movw	r26, r18
    1e24:	2c 91       	ld	r18, X
    1e26:	fc 01       	movw	r30, r24
    1e28:	20 83       	st	Z, r18

00001e2a <.LBB236>:
	__asm__ volatile (
    1e2a:	ce 01       	movw	r24, r28
    1e2c:	8f 57       	subi	r24, 0x7F	; 127
    1e2e:	9f 4f       	sbci	r25, 0xFF	; 255
    1e30:	dc 01       	movw	r26, r24
    1e32:	8c 91       	ld	r24, X
    1e34:	28 2f       	mov	r18, r24

00001e36 <.L1^B29>:
    1e36:	2a 95       	dec	r18
    1e38:	f1 f7       	brne	.-4      	; 0x1e36 <.L1^B29>
    1e3a:	ce 01       	movw	r24, r28
    1e3c:	8f 57       	subi	r24, 0x7F	; 127
    1e3e:	9f 4f       	sbci	r25, 0xFF	; 255
    1e40:	fc 01       	movw	r30, r24
    1e42:	20 83       	st	Z, r18

00001e44 <.Loc.321>:
	...

00001e46 <.L191>:
        _delay_us(1);                               // implement 'Delay data time' (160 nS) and 'Enable pulse width' (230 nS)

        busy_flag_copy |= (lcd_D7_pin & (1<<lcd_D7_bit));  // get actual busy flag status
    1e46:	86 e2       	ldi	r24, 0x26	; 38
    1e48:	90 e0       	ldi	r25, 0x00	; 0
    1e4a:	dc 01       	movw	r26, r24
    1e4c:	8c 91       	ld	r24, X

00001e4e <.Loc.323>:
    1e4e:	88 2f       	mov	r24, r24
    1e50:	90 e0       	ldi	r25, 0x00	; 0
    1e52:	80 78       	andi	r24, 0x80	; 128
    1e54:	99 27       	eor	r25, r25

00001e56 <.Loc.324>:
    1e56:	98 2f       	mov	r25, r24
    1e58:	89 81       	ldd	r24, Y+1	; 0x01
    1e5a:	89 2b       	or	r24, r25
    1e5c:	89 83       	std	Y+1, r24	; 0x01

00001e5e <.Loc.325>:

        lcd_Ctlr_Port &= ~(1<<lcd_E_bit);           // Enable pin low
    1e5e:	88 e2       	ldi	r24, 0x28	; 40
    1e60:	90 e0       	ldi	r25, 0x00	; 0
    1e62:	fc 01       	movw	r30, r24
    1e64:	20 81       	ld	r18, Z

00001e66 <.Loc.326>:
    1e66:	88 e2       	ldi	r24, 0x28	; 40
    1e68:	90 e0       	ldi	r25, 0x00	; 0

00001e6a <.Loc.327>:
    1e6a:	27 7f       	andi	r18, 0xF7	; 247
    1e6c:	dc 01       	movw	r26, r24
    1e6e:	2c 93       	st	X, r18
    1e70:	9e 01       	movw	r18, r28
    1e72:	2e 5b       	subi	r18, 0xBE	; 190
    1e74:	3f 4f       	sbci	r19, 0xFF	; 255
    1e76:	80 e0       	ldi	r24, 0x00	; 0
    1e78:	90 e0       	ldi	r25, 0x00	; 0
    1e7a:	a0 e8       	ldi	r26, 0x80	; 128
    1e7c:	bf e3       	ldi	r27, 0x3F	; 63
    1e7e:	f9 01       	movw	r30, r18
    1e80:	80 83       	st	Z, r24
    1e82:	91 83       	std	Z+1, r25	; 0x01
    1e84:	a2 83       	std	Z+2, r26	; 0x02
    1e86:	b3 83       	std	Z+3, r27	; 0x03

00001e88 <.LBB238>:
	__tmp = ((F_CPU) / 3e6) * __us;
    1e88:	8e 01       	movw	r16, r28
    1e8a:	0a 5b       	subi	r16, 0xBA	; 186
    1e8c:	1f 4f       	sbci	r17, 0xFF	; 255
    1e8e:	ce 01       	movw	r24, r28
    1e90:	8e 5b       	subi	r24, 0xBE	; 190
    1e92:	9f 4f       	sbci	r25, 0xFF	; 255
    1e94:	2b ea       	ldi	r18, 0xAB	; 171
    1e96:	3a ea       	ldi	r19, 0xAA	; 170
    1e98:	4a ea       	ldi	r20, 0xAA	; 170
    1e9a:	50 e4       	ldi	r21, 0x40	; 64
    1e9c:	dc 01       	movw	r26, r24
    1e9e:	6d 91       	ld	r22, X+
    1ea0:	7d 91       	ld	r23, X+
    1ea2:	8d 91       	ld	r24, X+
    1ea4:	9c 91       	ld	r25, X
    1ea6:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    1eaa:	ca 54       	subi	r28, 0x4A	; 74
    1eac:	df 4f       	sbci	r29, 0xFF	; 255
    1eae:	68 83       	st	Y, r22
    1eb0:	79 83       	std	Y+1, r23	; 0x01
    1eb2:	8a 83       	std	Y+2, r24	; 0x02
    1eb4:	9b 83       	std	Y+3, r25	; 0x03
    1eb6:	c6 5b       	subi	r28, 0xB6	; 182
    1eb8:	d0 40       	sbci	r29, 0x00	; 0
    1eba:	ca 54       	subi	r28, 0x4A	; 74
    1ebc:	df 4f       	sbci	r29, 0xFF	; 255
    1ebe:	88 81       	ld	r24, Y
    1ec0:	99 81       	ldd	r25, Y+1	; 0x01
    1ec2:	aa 81       	ldd	r26, Y+2	; 0x02
    1ec4:	bb 81       	ldd	r27, Y+3	; 0x03
    1ec6:	c6 5b       	subi	r28, 0xB6	; 182
    1ec8:	d0 40       	sbci	r29, 0x00	; 0
    1eca:	f8 01       	movw	r30, r16
    1ecc:	80 83       	st	Z, r24
    1ece:	91 83       	std	Z+1, r25	; 0x01
    1ed0:	a2 83       	std	Z+2, r26	; 0x02
    1ed2:	b3 83       	std	Z+3, r27	; 0x03

00001ed4 <.Loc.329>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    1ed4:	8e 01       	movw	r16, r28
    1ed6:	06 5b       	subi	r16, 0xB6	; 182
    1ed8:	1f 4f       	sbci	r17, 0xFF	; 255
    1eda:	ce 01       	movw	r24, r28
    1edc:	8e 5b       	subi	r24, 0xBE	; 190
    1ede:	9f 4f       	sbci	r25, 0xFF	; 255
    1ee0:	20 e0       	ldi	r18, 0x00	; 0
    1ee2:	30 e0       	ldi	r19, 0x00	; 0
    1ee4:	40 e8       	ldi	r20, 0x80	; 128
    1ee6:	50 e4       	ldi	r21, 0x40	; 64
    1ee8:	dc 01       	movw	r26, r24
    1eea:	6d 91       	ld	r22, X+
    1eec:	7d 91       	ld	r23, X+
    1eee:	8d 91       	ld	r24, X+
    1ef0:	9c 91       	ld	r25, X
    1ef2:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    1ef6:	c6 54       	subi	r28, 0x46	; 70
    1ef8:	df 4f       	sbci	r29, 0xFF	; 255
    1efa:	68 83       	st	Y, r22
    1efc:	79 83       	std	Y+1, r23	; 0x01
    1efe:	8a 83       	std	Y+2, r24	; 0x02
    1f00:	9b 83       	std	Y+3, r25	; 0x03
    1f02:	ca 5b       	subi	r28, 0xBA	; 186
    1f04:	d0 40       	sbci	r29, 0x00	; 0
    1f06:	c6 54       	subi	r28, 0x46	; 70
    1f08:	df 4f       	sbci	r29, 0xFF	; 255
    1f0a:	88 81       	ld	r24, Y
    1f0c:	99 81       	ldd	r25, Y+1	; 0x01
    1f0e:	aa 81       	ldd	r26, Y+2	; 0x02
    1f10:	bb 81       	ldd	r27, Y+3	; 0x03
    1f12:	ca 5b       	subi	r28, 0xBA	; 186
    1f14:	d0 40       	sbci	r29, 0x00	; 0
    1f16:	f8 01       	movw	r30, r16
    1f18:	80 83       	st	Z, r24
    1f1a:	91 83       	std	Z+1, r25	; 0x01
    1f1c:	a2 83       	std	Z+2, r26	; 0x02
    1f1e:	b3 83       	std	Z+3, r27	; 0x03

00001f20 <.Loc.330>:
	if (__tmp < 1.0)
    1f20:	ce 01       	movw	r24, r28
    1f22:	8a 5b       	subi	r24, 0xBA	; 186
    1f24:	9f 4f       	sbci	r25, 0xFF	; 255
    1f26:	20 e0       	ldi	r18, 0x00	; 0
    1f28:	30 e0       	ldi	r19, 0x00	; 0
    1f2a:	40 e8       	ldi	r20, 0x80	; 128
    1f2c:	5f e3       	ldi	r21, 0x3F	; 63
    1f2e:	dc 01       	movw	r26, r24
    1f30:	6d 91       	ld	r22, X+
    1f32:	7d 91       	ld	r23, X+
    1f34:	8d 91       	ld	r24, X+
    1f36:	9c 91       	ld	r25, X
    1f38:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    1f3c:	88 23       	and	r24, r24
    1f3e:	3c f4       	brge	.+14     	; 0x1f4e <.L266>

00001f40 <.Loc.331>:
		__ticks = 1;
    1f40:	ce 01       	movw	r24, r28
    1f42:	82 5b       	subi	r24, 0xB2	; 178
    1f44:	9f 4f       	sbci	r25, 0xFF	; 255
    1f46:	21 e0       	ldi	r18, 0x01	; 1
    1f48:	fc 01       	movw	r30, r24
    1f4a:	20 83       	st	Z, r18
    1f4c:	a0 c1       	rjmp	.+832    	; 0x228e <.L194>

00001f4e <.L266>:
	else if (__tmp2 > 65535)
    1f4e:	ce 01       	movw	r24, r28
    1f50:	86 5b       	subi	r24, 0xB6	; 182
    1f52:	9f 4f       	sbci	r25, 0xFF	; 255
    1f54:	20 e0       	ldi	r18, 0x00	; 0
    1f56:	3f ef       	ldi	r19, 0xFF	; 255
    1f58:	4f e7       	ldi	r20, 0x7F	; 127
    1f5a:	57 e4       	ldi	r21, 0x47	; 71
    1f5c:	dc 01       	movw	r26, r24
    1f5e:	6d 91       	ld	r22, X+
    1f60:	7d 91       	ld	r23, X+
    1f62:	8d 91       	ld	r24, X+
    1f64:	9c 91       	ld	r25, X
    1f66:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    1f6a:	88 23       	and	r24, r24
    1f6c:	09 f0       	breq	.+2      	; 0x1f70 <L0^A>

00001f6e <L0^A>:
    1f6e:	0c f4       	brge	.+2      	; 0x1f72 <.Loc.333>

00001f70 <L0^A>:
    1f70:	26 c1       	rjmp	.+588    	; 0x21be <.L267>

00001f72 <.Loc.333>:
		_delay_ms(__us / 1000.0);
    1f72:	ce 01       	movw	r24, r28
    1f74:	8e 5b       	subi	r24, 0xBE	; 190
    1f76:	9f 4f       	sbci	r25, 0xFF	; 255
    1f78:	20 e0       	ldi	r18, 0x00	; 0
    1f7a:	30 e0       	ldi	r19, 0x00	; 0
    1f7c:	4a e7       	ldi	r20, 0x7A	; 122
    1f7e:	54 e4       	ldi	r21, 0x44	; 68
    1f80:	fc 01       	movw	r30, r24
    1f82:	60 81       	ld	r22, Z
    1f84:	71 81       	ldd	r23, Z+1	; 0x01
    1f86:	82 81       	ldd	r24, Z+2	; 0x02
    1f88:	93 81       	ldd	r25, Z+3	; 0x03
    1f8a:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <__divsf3>
    1f8e:	c2 54       	subi	r28, 0x42	; 66
    1f90:	df 4f       	sbci	r29, 0xFF	; 255
    1f92:	68 83       	st	Y, r22
    1f94:	79 83       	std	Y+1, r23	; 0x01
    1f96:	8a 83       	std	Y+2, r24	; 0x02
    1f98:	9b 83       	std	Y+3, r25	; 0x03
    1f9a:	ce 5b       	subi	r28, 0xBE	; 190
    1f9c:	d0 40       	sbci	r29, 0x00	; 0
    1f9e:	c2 54       	subi	r28, 0x42	; 66
    1fa0:	df 4f       	sbci	r29, 0xFF	; 255
    1fa2:	88 81       	ld	r24, Y
    1fa4:	99 81       	ldd	r25, Y+1	; 0x01
    1fa6:	aa 81       	ldd	r26, Y+2	; 0x02
    1fa8:	bb 81       	ldd	r27, Y+3	; 0x03
    1faa:	ce 5b       	subi	r28, 0xBE	; 190
    1fac:	d0 40       	sbci	r29, 0x00	; 0
    1fae:	9e 01       	movw	r18, r28
    1fb0:	21 5b       	subi	r18, 0xB1	; 177
    1fb2:	3f 4f       	sbci	r19, 0xFF	; 255
    1fb4:	f9 01       	movw	r30, r18
    1fb6:	80 83       	st	Z, r24
    1fb8:	91 83       	std	Z+1, r25	; 0x01
    1fba:	a2 83       	std	Z+2, r26	; 0x02
    1fbc:	b3 83       	std	Z+3, r27	; 0x03

00001fbe <.LBB240>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1fbe:	8e 01       	movw	r16, r28
    1fc0:	0d 5a       	subi	r16, 0xAD	; 173
    1fc2:	1f 4f       	sbci	r17, 0xFF	; 255
    1fc4:	ce 01       	movw	r24, r28
    1fc6:	81 5b       	subi	r24, 0xB1	; 177
    1fc8:	9f 4f       	sbci	r25, 0xFF	; 255
    1fca:	20 e0       	ldi	r18, 0x00	; 0
    1fcc:	30 e0       	ldi	r19, 0x00	; 0
    1fce:	4a e7       	ldi	r20, 0x7A	; 122
    1fd0:	55 e4       	ldi	r21, 0x45	; 69
    1fd2:	dc 01       	movw	r26, r24
    1fd4:	6d 91       	ld	r22, X+
    1fd6:	7d 91       	ld	r23, X+
    1fd8:	8d 91       	ld	r24, X+
    1fda:	9c 91       	ld	r25, X
    1fdc:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    1fe0:	ce 53       	subi	r28, 0x3E	; 62
    1fe2:	df 4f       	sbci	r29, 0xFF	; 255
    1fe4:	68 83       	st	Y, r22
    1fe6:	79 83       	std	Y+1, r23	; 0x01
    1fe8:	8a 83       	std	Y+2, r24	; 0x02
    1fea:	9b 83       	std	Y+3, r25	; 0x03
    1fec:	c2 5c       	subi	r28, 0xC2	; 194
    1fee:	d0 40       	sbci	r29, 0x00	; 0
    1ff0:	ce 53       	subi	r28, 0x3E	; 62
    1ff2:	df 4f       	sbci	r29, 0xFF	; 255
    1ff4:	88 81       	ld	r24, Y
    1ff6:	99 81       	ldd	r25, Y+1	; 0x01
    1ff8:	aa 81       	ldd	r26, Y+2	; 0x02
    1ffa:	bb 81       	ldd	r27, Y+3	; 0x03
    1ffc:	c2 5c       	subi	r28, 0xC2	; 194
    1ffe:	d0 40       	sbci	r29, 0x00	; 0
    2000:	f8 01       	movw	r30, r16
    2002:	80 83       	st	Z, r24
    2004:	91 83       	std	Z+1, r25	; 0x01
    2006:	a2 83       	std	Z+2, r26	; 0x02
    2008:	b3 83       	std	Z+3, r27	; 0x03

0000200a <.Loc.335>:
	if (__tmp < 1.0)
    200a:	ce 01       	movw	r24, r28
    200c:	8d 5a       	subi	r24, 0xAD	; 173
    200e:	9f 4f       	sbci	r25, 0xFF	; 255
    2010:	20 e0       	ldi	r18, 0x00	; 0
    2012:	30 e0       	ldi	r19, 0x00	; 0
    2014:	40 e8       	ldi	r20, 0x80	; 128
    2016:	5f e3       	ldi	r21, 0x3F	; 63
    2018:	dc 01       	movw	r26, r24
    201a:	6d 91       	ld	r22, X+
    201c:	7d 91       	ld	r23, X+
    201e:	8d 91       	ld	r24, X+
    2020:	9c 91       	ld	r25, X
    2022:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    2026:	88 23       	and	r24, r24
    2028:	4c f4       	brge	.+18     	; 0x203c <.L268>

0000202a <.Loc.336>:
		__ticks = 1;
    202a:	ce 01       	movw	r24, r28
    202c:	89 5a       	subi	r24, 0xA9	; 169
    202e:	9f 4f       	sbci	r25, 0xFF	; 255
    2030:	21 e0       	ldi	r18, 0x01	; 1
    2032:	30 e0       	ldi	r19, 0x00	; 0
    2034:	fc 01       	movw	r30, r24
    2036:	31 83       	std	Z+1, r19	; 0x01
    2038:	20 83       	st	Z, r18
    203a:	a5 c0       	rjmp	.+330    	; 0x2186 <.L199>

0000203c <.L268>:
	else if (__tmp > 65535)
    203c:	ce 01       	movw	r24, r28
    203e:	8d 5a       	subi	r24, 0xAD	; 173
    2040:	9f 4f       	sbci	r25, 0xFF	; 255
    2042:	20 e0       	ldi	r18, 0x00	; 0
    2044:	3f ef       	ldi	r19, 0xFF	; 255
    2046:	4f e7       	ldi	r20, 0x7F	; 127
    2048:	57 e4       	ldi	r21, 0x47	; 71
    204a:	dc 01       	movw	r26, r24
    204c:	6d 91       	ld	r22, X+
    204e:	7d 91       	ld	r23, X+
    2050:	8d 91       	ld	r24, X+
    2052:	9c 91       	ld	r25, X
    2054:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    2058:	88 23       	and	r24, r24
    205a:	09 f0       	breq	.+2      	; 0x205e <L0^A>

0000205c <L0^A>:
    205c:	0c f4       	brge	.+2      	; 0x2060 <.Loc.338>

0000205e <L0^A>:
    205e:	75 c0       	rjmp	.+234    	; 0x214a <.L269>

00002060 <.Loc.338>:
		__ticks = (uint16_t) (__ms * 10.0);
    2060:	ce 01       	movw	r24, r28
    2062:	81 5b       	subi	r24, 0xB1	; 177
    2064:	9f 4f       	sbci	r25, 0xFF	; 255
    2066:	20 e0       	ldi	r18, 0x00	; 0
    2068:	30 e0       	ldi	r19, 0x00	; 0
    206a:	40 e2       	ldi	r20, 0x20	; 32
    206c:	51 e4       	ldi	r21, 0x41	; 65
    206e:	fc 01       	movw	r30, r24
    2070:	60 81       	ld	r22, Z
    2072:	71 81       	ldd	r23, Z+1	; 0x01
    2074:	82 81       	ldd	r24, Z+2	; 0x02
    2076:	93 81       	ldd	r25, Z+3	; 0x03
    2078:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    207c:	ca 53       	subi	r28, 0x3A	; 58
    207e:	df 4f       	sbci	r29, 0xFF	; 255
    2080:	68 83       	st	Y, r22
    2082:	79 83       	std	Y+1, r23	; 0x01
    2084:	8a 83       	std	Y+2, r24	; 0x02
    2086:	9b 83       	std	Y+3, r25	; 0x03
    2088:	c6 5c       	subi	r28, 0xC6	; 198
    208a:	d0 40       	sbci	r29, 0x00	; 0
    208c:	ca 53       	subi	r28, 0x3A	; 58
    208e:	df 4f       	sbci	r29, 0xFF	; 255
    2090:	88 81       	ld	r24, Y
    2092:	99 81       	ldd	r25, Y+1	; 0x01
    2094:	aa 81       	ldd	r26, Y+2	; 0x02
    2096:	bb 81       	ldd	r27, Y+3	; 0x03
    2098:	c6 5c       	subi	r28, 0xC6	; 198
    209a:	d0 40       	sbci	r29, 0x00	; 0
    209c:	c6 57       	subi	r28, 0x76	; 118
    209e:	df 4f       	sbci	r29, 0xFF	; 255
    20a0:	88 83       	st	Y, r24
    20a2:	99 83       	std	Y+1, r25	; 0x01
    20a4:	aa 83       	std	Y+2, r26	; 0x02
    20a6:	bb 83       	std	Y+3, r27	; 0x03
    20a8:	ca 58       	subi	r28, 0x8A	; 138
    20aa:	d0 40       	sbci	r29, 0x00	; 0

000020ac <.Loc.339>:
    20ac:	8e 01       	movw	r16, r28
    20ae:	09 5a       	subi	r16, 0xA9	; 169
    20b0:	1f 4f       	sbci	r17, 0xFF	; 255
    20b2:	c6 57       	subi	r28, 0x76	; 118
    20b4:	df 4f       	sbci	r29, 0xFF	; 255
    20b6:	68 81       	ld	r22, Y
    20b8:	79 81       	ldd	r23, Y+1	; 0x01
    20ba:	8a 81       	ldd	r24, Y+2	; 0x02
    20bc:	9b 81       	ldd	r25, Y+3	; 0x03
    20be:	ca 58       	subi	r28, 0x8A	; 138
    20c0:	d0 40       	sbci	r29, 0x00	; 0
    20c2:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    20c6:	c6 53       	subi	r28, 0x36	; 54
    20c8:	df 4f       	sbci	r29, 0xFF	; 255
    20ca:	68 83       	st	Y, r22
    20cc:	79 83       	std	Y+1, r23	; 0x01
    20ce:	8a 83       	std	Y+2, r24	; 0x02
    20d0:	9b 83       	std	Y+3, r25	; 0x03
    20d2:	ca 5c       	subi	r28, 0xCA	; 202
    20d4:	d0 40       	sbci	r29, 0x00	; 0
    20d6:	c6 53       	subi	r28, 0x36	; 54
    20d8:	df 4f       	sbci	r29, 0xFF	; 255
    20da:	e8 81       	ld	r30, Y
    20dc:	f9 81       	ldd	r31, Y+1	; 0x01
    20de:	ca 5c       	subi	r28, 0xCA	; 202
    20e0:	d0 40       	sbci	r29, 0x00	; 0
    20e2:	d8 01       	movw	r26, r16
    20e4:	11 96       	adiw	r26, 0x01	; 1
    20e6:	fc 93       	st	X, r31
    20e8:	ee 93       	st	-X, r30

000020ea <.Loc.340>:
		while(__ticks)
    20ea:	26 c0       	rjmp	.+76     	; 0x2138 <.L202>

000020ec <.L203>:
    20ec:	ce 01       	movw	r24, r28
    20ee:	87 5a       	subi	r24, 0xA7	; 167
    20f0:	9f 4f       	sbci	r25, 0xFF	; 255
    20f2:	20 e9       	ldi	r18, 0x90	; 144
    20f4:	31 e0       	ldi	r19, 0x01	; 1
    20f6:	dc 01       	movw	r26, r24
    20f8:	2d 93       	st	X+, r18
    20fa:	3c 93       	st	X, r19

000020fc <.LBB242>:
	__asm__ volatile (
    20fc:	ce 01       	movw	r24, r28
    20fe:	87 5a       	subi	r24, 0xA7	; 167
    2100:	9f 4f       	sbci	r25, 0xFF	; 255
    2102:	fc 01       	movw	r30, r24
    2104:	80 81       	ld	r24, Z
    2106:	91 81       	ldd	r25, Z+1	; 0x01

00002108 <.L1^B30>:
    2108:	01 97       	sbiw	r24, 0x01	; 1
    210a:	f1 f7       	brne	.-4      	; 0x2108 <.L1^B30>
    210c:	9e 01       	movw	r18, r28
    210e:	27 5a       	subi	r18, 0xA7	; 167
    2110:	3f 4f       	sbci	r19, 0xFF	; 255
    2112:	d9 01       	movw	r26, r18
    2114:	8d 93       	st	X+, r24
    2116:	9c 93       	st	X, r25

00002118 <.Loc.342>:
	...

0000211a <.LBE242>:
			__ticks --;
    211a:	ce 01       	movw	r24, r28
    211c:	89 5a       	subi	r24, 0xA9	; 169
    211e:	9f 4f       	sbci	r25, 0xFF	; 255
    2120:	9e 01       	movw	r18, r28
    2122:	29 5a       	subi	r18, 0xA9	; 169
    2124:	3f 4f       	sbci	r19, 0xFF	; 255
    2126:	f9 01       	movw	r30, r18
    2128:	20 81       	ld	r18, Z
    212a:	31 81       	ldd	r19, Z+1	; 0x01
    212c:	21 50       	subi	r18, 0x01	; 1
    212e:	31 09       	sbc	r19, r1
    2130:	dc 01       	movw	r26, r24
    2132:	11 96       	adiw	r26, 0x01	; 1
    2134:	3c 93       	st	X, r19
    2136:	2e 93       	st	-X, r18

00002138 <.L202>:
		while(__ticks)
    2138:	ce 01       	movw	r24, r28
    213a:	89 5a       	subi	r24, 0xA9	; 169
    213c:	9f 4f       	sbci	r25, 0xFF	; 255
    213e:	fc 01       	movw	r30, r24
    2140:	80 81       	ld	r24, Z
    2142:	91 81       	ldd	r25, Z+1	; 0x01
    2144:	00 97       	sbiw	r24, 0x00	; 0
    2146:	91 f6       	brne	.-92     	; 0x20ec <.L203>

00002148 <.Loc.345>:
		return;
    2148:	a2 c0       	rjmp	.+324    	; 0x228e <.L194>

0000214a <.L269>:
		__ticks = (uint16_t)__tmp;
    214a:	8e 01       	movw	r16, r28
    214c:	09 5a       	subi	r16, 0xA9	; 169
    214e:	1f 4f       	sbci	r17, 0xFF	; 255
    2150:	ce 01       	movw	r24, r28
    2152:	8d 5a       	subi	r24, 0xAD	; 173
    2154:	9f 4f       	sbci	r25, 0xFF	; 255
    2156:	dc 01       	movw	r26, r24
    2158:	6d 91       	ld	r22, X+
    215a:	7d 91       	ld	r23, X+
    215c:	8d 91       	ld	r24, X+
    215e:	9c 91       	ld	r25, X
    2160:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    2164:	c2 53       	subi	r28, 0x32	; 50
    2166:	df 4f       	sbci	r29, 0xFF	; 255
    2168:	68 83       	st	Y, r22
    216a:	79 83       	std	Y+1, r23	; 0x01
    216c:	8a 83       	std	Y+2, r24	; 0x02
    216e:	9b 83       	std	Y+3, r25	; 0x03
    2170:	ce 5c       	subi	r28, 0xCE	; 206
    2172:	d0 40       	sbci	r29, 0x00	; 0
    2174:	c2 53       	subi	r28, 0x32	; 50
    2176:	df 4f       	sbci	r29, 0xFF	; 255
    2178:	88 81       	ld	r24, Y
    217a:	99 81       	ldd	r25, Y+1	; 0x01
    217c:	ce 5c       	subi	r28, 0xCE	; 206
    217e:	d0 40       	sbci	r29, 0x00	; 0
    2180:	f8 01       	movw	r30, r16
    2182:	91 83       	std	Z+1, r25	; 0x01
    2184:	80 83       	st	Z, r24

00002186 <.L199>:
    2186:	ce 01       	movw	r24, r28
    2188:	85 5a       	subi	r24, 0xA5	; 165
    218a:	9f 4f       	sbci	r25, 0xFF	; 255
    218c:	9e 01       	movw	r18, r28
    218e:	29 5a       	subi	r18, 0xA9	; 169
    2190:	3f 4f       	sbci	r19, 0xFF	; 255
    2192:	d9 01       	movw	r26, r18
    2194:	2d 91       	ld	r18, X+
    2196:	3c 91       	ld	r19, X
    2198:	fc 01       	movw	r30, r24
    219a:	31 83       	std	Z+1, r19	; 0x01
    219c:	20 83       	st	Z, r18

0000219e <.LBB244>:
    219e:	ce 01       	movw	r24, r28
    21a0:	85 5a       	subi	r24, 0xA5	; 165
    21a2:	9f 4f       	sbci	r25, 0xFF	; 255
    21a4:	dc 01       	movw	r26, r24
    21a6:	8d 91       	ld	r24, X+
    21a8:	9c 91       	ld	r25, X
    21aa:	11 97       	sbiw	r26, 0x01	; 1

000021ac <.L1^B31>:
    21ac:	01 97       	sbiw	r24, 0x01	; 1
    21ae:	f1 f7       	brne	.-4      	; 0x21ac <.L1^B31>
    21b0:	9e 01       	movw	r18, r28
    21b2:	25 5a       	subi	r18, 0xA5	; 165
    21b4:	3f 4f       	sbci	r19, 0xFF	; 255
    21b6:	f9 01       	movw	r30, r18
    21b8:	91 83       	std	Z+1, r25	; 0x01
    21ba:	80 83       	st	Z, r24

000021bc <.Loc.348>:
}
    21bc:	68 c0       	rjmp	.+208    	; 0x228e <.L194>

000021be <.L267>:
	else if (__tmp > 255)
    21be:	ce 01       	movw	r24, r28
    21c0:	8a 5b       	subi	r24, 0xBA	; 186
    21c2:	9f 4f       	sbci	r25, 0xFF	; 255
    21c4:	20 e0       	ldi	r18, 0x00	; 0
    21c6:	30 e0       	ldi	r19, 0x00	; 0
    21c8:	4f e7       	ldi	r20, 0x7F	; 127
    21ca:	53 e4       	ldi	r21, 0x43	; 67
    21cc:	dc 01       	movw	r26, r24
    21ce:	6d 91       	ld	r22, X+
    21d0:	7d 91       	ld	r23, X+
    21d2:	8d 91       	ld	r24, X+
    21d4:	9c 91       	ld	r25, X
    21d6:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    21da:	88 23       	and	r24, r24
    21dc:	e1 f1       	breq	.+120    	; 0x2256 <.L270>
    21de:	dc f1       	brlt	.+118    	; 0x2256 <.L270>

000021e0 <.LBB246>:
		uint16_t __ticks=(uint16_t)__tmp2;
    21e0:	8e 01       	movw	r16, r28
    21e2:	03 5a       	subi	r16, 0xA3	; 163
    21e4:	1f 4f       	sbci	r17, 0xFF	; 255
    21e6:	ce 01       	movw	r24, r28
    21e8:	86 5b       	subi	r24, 0xB6	; 182
    21ea:	9f 4f       	sbci	r25, 0xFF	; 255
    21ec:	fc 01       	movw	r30, r24
    21ee:	60 81       	ld	r22, Z
    21f0:	71 81       	ldd	r23, Z+1	; 0x01
    21f2:	82 81       	ldd	r24, Z+2	; 0x02
    21f4:	93 81       	ldd	r25, Z+3	; 0x03
    21f6:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    21fa:	ce 52       	subi	r28, 0x2E	; 46
    21fc:	df 4f       	sbci	r29, 0xFF	; 255
    21fe:	68 83       	st	Y, r22
    2200:	79 83       	std	Y+1, r23	; 0x01
    2202:	8a 83       	std	Y+2, r24	; 0x02
    2204:	9b 83       	std	Y+3, r25	; 0x03
    2206:	c2 5d       	subi	r28, 0xD2	; 210
    2208:	d0 40       	sbci	r29, 0x00	; 0
    220a:	ce 52       	subi	r28, 0x2E	; 46
    220c:	df 4f       	sbci	r29, 0xFF	; 255
    220e:	e8 81       	ld	r30, Y
    2210:	f9 81       	ldd	r31, Y+1	; 0x01
    2212:	c2 5d       	subi	r28, 0xD2	; 210
    2214:	d0 40       	sbci	r29, 0x00	; 0
    2216:	d8 01       	movw	r26, r16
    2218:	ed 93       	st	X+, r30
    221a:	fc 93       	st	X, r31
    221c:	ce 01       	movw	r24, r28
    221e:	81 5a       	subi	r24, 0xA1	; 161
    2220:	9f 4f       	sbci	r25, 0xFF	; 255
    2222:	9e 01       	movw	r18, r28
    2224:	23 5a       	subi	r18, 0xA3	; 163
    2226:	3f 4f       	sbci	r19, 0xFF	; 255
    2228:	d9 01       	movw	r26, r18
    222a:	2d 91       	ld	r18, X+
    222c:	3c 91       	ld	r19, X
    222e:	fc 01       	movw	r30, r24
    2230:	31 83       	std	Z+1, r19	; 0x01
    2232:	20 83       	st	Z, r18

00002234 <.LBB247>:
	__asm__ volatile (
    2234:	ce 01       	movw	r24, r28
    2236:	81 5a       	subi	r24, 0xA1	; 161
    2238:	9f 4f       	sbci	r25, 0xFF	; 255
    223a:	dc 01       	movw	r26, r24
    223c:	8d 91       	ld	r24, X+
    223e:	9c 91       	ld	r25, X
    2240:	11 97       	sbiw	r26, 0x01	; 1

00002242 <.L1^B32>:
    2242:	01 97       	sbiw	r24, 0x01	; 1
    2244:	f1 f7       	brne	.-4      	; 0x2242 <.L1^B32>
    2246:	9e 01       	movw	r18, r28
    2248:	21 5a       	subi	r18, 0xA1	; 161
    224a:	3f 4f       	sbci	r19, 0xFF	; 255
    224c:	f9 01       	movw	r30, r18
    224e:	91 83       	std	Z+1, r25	; 0x01
    2250:	80 83       	st	Z, r24

00002252 <.Loc.352>:
	...

00002254 <.LBE247>:
		return;
    2254:	34 c0       	rjmp	.+104    	; 0x22be <.L207>

00002256 <.L270>:
		__ticks = (uint8_t)__tmp;
    2256:	8e 01       	movw	r16, r28
    2258:	02 5b       	subi	r16, 0xB2	; 178
    225a:	1f 4f       	sbci	r17, 0xFF	; 255
    225c:	ce 01       	movw	r24, r28
    225e:	8a 5b       	subi	r24, 0xBA	; 186
    2260:	9f 4f       	sbci	r25, 0xFF	; 255
    2262:	dc 01       	movw	r26, r24
    2264:	6d 91       	ld	r22, X+
    2266:	7d 91       	ld	r23, X+
    2268:	8d 91       	ld	r24, X+
    226a:	9c 91       	ld	r25, X
    226c:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    2270:	ca 52       	subi	r28, 0x2A	; 42
    2272:	df 4f       	sbci	r29, 0xFF	; 255
    2274:	68 83       	st	Y, r22
    2276:	79 83       	std	Y+1, r23	; 0x01
    2278:	8a 83       	std	Y+2, r24	; 0x02
    227a:	9b 83       	std	Y+3, r25	; 0x03
    227c:	c6 5d       	subi	r28, 0xD6	; 214
    227e:	d0 40       	sbci	r29, 0x00	; 0
    2280:	ca 52       	subi	r28, 0x2A	; 42
    2282:	df 4f       	sbci	r29, 0xFF	; 255
    2284:	88 81       	ld	r24, Y
    2286:	c6 5d       	subi	r28, 0xD6	; 214
    2288:	d0 40       	sbci	r29, 0x00	; 0
    228a:	f8 01       	movw	r30, r16
    228c:	80 83       	st	Z, r24

0000228e <.L194>:
    228e:	ce 01       	movw	r24, r28
    2290:	8f 59       	subi	r24, 0x9F	; 159
    2292:	9f 4f       	sbci	r25, 0xFF	; 255
    2294:	9e 01       	movw	r18, r28
    2296:	22 5b       	subi	r18, 0xB2	; 178
    2298:	3f 4f       	sbci	r19, 0xFF	; 255
    229a:	d9 01       	movw	r26, r18
    229c:	2c 91       	ld	r18, X
    229e:	fc 01       	movw	r30, r24
    22a0:	20 83       	st	Z, r18

000022a2 <.LBB249>:
	__asm__ volatile (
    22a2:	ce 01       	movw	r24, r28
    22a4:	8f 59       	subi	r24, 0x9F	; 159
    22a6:	9f 4f       	sbci	r25, 0xFF	; 255
    22a8:	dc 01       	movw	r26, r24
    22aa:	8c 91       	ld	r24, X
    22ac:	28 2f       	mov	r18, r24

000022ae <.L1^B33>:
    22ae:	2a 95       	dec	r18
    22b0:	f1 f7       	brne	.-4      	; 0x22ae <.L1^B33>
    22b2:	ce 01       	movw	r24, r28
    22b4:	8f 59       	subi	r24, 0x9F	; 159
    22b6:	9f 4f       	sbci	r25, 0xFF	; 255
    22b8:	fc 01       	movw	r30, r24
    22ba:	20 83       	st	Z, r18

000022bc <.Loc.356>:
	...

000022be <.L207>:
        _delay_us(1);                               // implement 'Address hold time' (10 nS), 'Data hold time' (10 nS), and 'Enable cycle time' (500 nS )

// read and discard alternate nibbles (D3 information)
        lcd_Ctlr_Port |= (1<<lcd_E_bit);            // Enable pin high
    22be:	88 e2       	ldi	r24, 0x28	; 40
    22c0:	90 e0       	ldi	r25, 0x00	; 0
    22c2:	dc 01       	movw	r26, r24
    22c4:	2c 91       	ld	r18, X
    22c6:	88 e2       	ldi	r24, 0x28	; 40
    22c8:	90 e0       	ldi	r25, 0x00	; 0

000022ca <.Loc.358>:
    22ca:	28 60       	ori	r18, 0x08	; 8
    22cc:	fc 01       	movw	r30, r24
    22ce:	20 83       	st	Z, r18
    22d0:	80 e0       	ldi	r24, 0x00	; 0
    22d2:	90 e0       	ldi	r25, 0x00	; 0
    22d4:	a0 e8       	ldi	r26, 0x80	; 128
    22d6:	bf e3       	ldi	r27, 0x3F	; 63
    22d8:	8a a3       	std	Y+34, r24	; 0x22
    22da:	9b a3       	std	Y+35, r25	; 0x23
    22dc:	ac a3       	std	Y+36, r26	; 0x24
    22de:	bd a3       	std	Y+37, r27	; 0x25

000022e0 <.LBB251>:
	__tmp = ((F_CPU) / 3e6) * __us;
    22e0:	2b ea       	ldi	r18, 0xAB	; 171
    22e2:	3a ea       	ldi	r19, 0xAA	; 170
    22e4:	4a ea       	ldi	r20, 0xAA	; 170
    22e6:	50 e4       	ldi	r21, 0x40	; 64
    22e8:	6a a1       	ldd	r22, Y+34	; 0x22
    22ea:	7b a1       	ldd	r23, Y+35	; 0x23
    22ec:	8c a1       	ldd	r24, Y+36	; 0x24
    22ee:	9d a1       	ldd	r25, Y+37	; 0x25
    22f0:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    22f4:	c6 52       	subi	r28, 0x26	; 38
    22f6:	df 4f       	sbci	r29, 0xFF	; 255
    22f8:	68 83       	st	Y, r22
    22fa:	79 83       	std	Y+1, r23	; 0x01
    22fc:	8a 83       	std	Y+2, r24	; 0x02
    22fe:	9b 83       	std	Y+3, r25	; 0x03
    2300:	ca 5d       	subi	r28, 0xDA	; 218
    2302:	d0 40       	sbci	r29, 0x00	; 0
    2304:	c6 52       	subi	r28, 0x26	; 38
    2306:	df 4f       	sbci	r29, 0xFF	; 255
    2308:	88 81       	ld	r24, Y
    230a:	99 81       	ldd	r25, Y+1	; 0x01
    230c:	aa 81       	ldd	r26, Y+2	; 0x02
    230e:	bb 81       	ldd	r27, Y+3	; 0x03
    2310:	ca 5d       	subi	r28, 0xDA	; 218
    2312:	d0 40       	sbci	r29, 0x00	; 0
    2314:	8e a3       	std	Y+38, r24	; 0x26
    2316:	9f a3       	std	Y+39, r25	; 0x27
    2318:	a8 a7       	std	Y+40, r26	; 0x28
    231a:	b9 a7       	std	Y+41, r27	; 0x29

0000231c <.Loc.360>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    231c:	20 e0       	ldi	r18, 0x00	; 0
    231e:	30 e0       	ldi	r19, 0x00	; 0
    2320:	40 e8       	ldi	r20, 0x80	; 128
    2322:	50 e4       	ldi	r21, 0x40	; 64
    2324:	6a a1       	ldd	r22, Y+34	; 0x22
    2326:	7b a1       	ldd	r23, Y+35	; 0x23
    2328:	8c a1       	ldd	r24, Y+36	; 0x24
    232a:	9d a1       	ldd	r25, Y+37	; 0x25
    232c:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    2330:	c2 52       	subi	r28, 0x22	; 34
    2332:	df 4f       	sbci	r29, 0xFF	; 255
    2334:	68 83       	st	Y, r22
    2336:	79 83       	std	Y+1, r23	; 0x01
    2338:	8a 83       	std	Y+2, r24	; 0x02
    233a:	9b 83       	std	Y+3, r25	; 0x03
    233c:	ce 5d       	subi	r28, 0xDE	; 222
    233e:	d0 40       	sbci	r29, 0x00	; 0
    2340:	c2 52       	subi	r28, 0x22	; 34
    2342:	df 4f       	sbci	r29, 0xFF	; 255
    2344:	88 81       	ld	r24, Y
    2346:	99 81       	ldd	r25, Y+1	; 0x01
    2348:	aa 81       	ldd	r26, Y+2	; 0x02
    234a:	bb 81       	ldd	r27, Y+3	; 0x03
    234c:	ce 5d       	subi	r28, 0xDE	; 222
    234e:	d0 40       	sbci	r29, 0x00	; 0
    2350:	8a a7       	std	Y+42, r24	; 0x2a
    2352:	9b a7       	std	Y+43, r25	; 0x2b
    2354:	ac a7       	std	Y+44, r26	; 0x2c
    2356:	bd a7       	std	Y+45, r27	; 0x2d

00002358 <.Loc.361>:
	if (__tmp < 1.0)
    2358:	20 e0       	ldi	r18, 0x00	; 0
    235a:	30 e0       	ldi	r19, 0x00	; 0
    235c:	40 e8       	ldi	r20, 0x80	; 128
    235e:	5f e3       	ldi	r21, 0x3F	; 63
    2360:	6e a1       	ldd	r22, Y+38	; 0x26
    2362:	7f a1       	ldd	r23, Y+39	; 0x27
    2364:	88 a5       	ldd	r24, Y+40	; 0x28
    2366:	99 a5       	ldd	r25, Y+41	; 0x29
    2368:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    236c:	88 23       	and	r24, r24
    236e:	1c f4       	brge	.+6      	; 0x2376 <.L271>

00002370 <.Loc.362>:
		__ticks = 1;
    2370:	81 e0       	ldi	r24, 0x01	; 1
    2372:	8e a7       	std	Y+46, r24	; 0x2e
    2374:	2a c1       	rjmp	.+596    	; 0x25ca <.L210>

00002376 <.L271>:
	else if (__tmp2 > 65535)
    2376:	20 e0       	ldi	r18, 0x00	; 0
    2378:	3f ef       	ldi	r19, 0xFF	; 255
    237a:	4f e7       	ldi	r20, 0x7F	; 127
    237c:	57 e4       	ldi	r21, 0x47	; 71
    237e:	6a a5       	ldd	r22, Y+42	; 0x2a
    2380:	7b a5       	ldd	r23, Y+43	; 0x2b
    2382:	8c a5       	ldd	r24, Y+44	; 0x2c
    2384:	9d a5       	ldd	r25, Y+45	; 0x2d
    2386:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    238a:	88 23       	and	r24, r24
    238c:	09 f0       	breq	.+2      	; 0x2390 <L0^A>

0000238e <L0^A>:
    238e:	0c f4       	brge	.+2      	; 0x2392 <.Loc.364>

00002390 <L0^A>:
    2390:	ce c0       	rjmp	.+412    	; 0x252e <.L272>

00002392 <.Loc.364>:
		_delay_ms(__us / 1000.0);
    2392:	20 e0       	ldi	r18, 0x00	; 0
    2394:	30 e0       	ldi	r19, 0x00	; 0
    2396:	4a e7       	ldi	r20, 0x7A	; 122
    2398:	54 e4       	ldi	r21, 0x44	; 68
    239a:	6a a1       	ldd	r22, Y+34	; 0x22
    239c:	7b a1       	ldd	r23, Y+35	; 0x23
    239e:	8c a1       	ldd	r24, Y+36	; 0x24
    23a0:	9d a1       	ldd	r25, Y+37	; 0x25
    23a2:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <__divsf3>
    23a6:	ce 51       	subi	r28, 0x1E	; 30
    23a8:	df 4f       	sbci	r29, 0xFF	; 255
    23aa:	68 83       	st	Y, r22
    23ac:	79 83       	std	Y+1, r23	; 0x01
    23ae:	8a 83       	std	Y+2, r24	; 0x02
    23b0:	9b 83       	std	Y+3, r25	; 0x03
    23b2:	c2 5e       	subi	r28, 0xE2	; 226
    23b4:	d0 40       	sbci	r29, 0x00	; 0
    23b6:	ce 51       	subi	r28, 0x1E	; 30
    23b8:	df 4f       	sbci	r29, 0xFF	; 255
    23ba:	88 81       	ld	r24, Y
    23bc:	99 81       	ldd	r25, Y+1	; 0x01
    23be:	aa 81       	ldd	r26, Y+2	; 0x02
    23c0:	bb 81       	ldd	r27, Y+3	; 0x03
    23c2:	c2 5e       	subi	r28, 0xE2	; 226
    23c4:	d0 40       	sbci	r29, 0x00	; 0
    23c6:	8f a7       	std	Y+47, r24	; 0x2f
    23c8:	98 ab       	std	Y+48, r25	; 0x30
    23ca:	a9 ab       	std	Y+49, r26	; 0x31
    23cc:	ba ab       	std	Y+50, r27	; 0x32

000023ce <.LBB253>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    23ce:	20 e0       	ldi	r18, 0x00	; 0
    23d0:	30 e0       	ldi	r19, 0x00	; 0
    23d2:	4a e7       	ldi	r20, 0x7A	; 122
    23d4:	55 e4       	ldi	r21, 0x45	; 69
    23d6:	6f a5       	ldd	r22, Y+47	; 0x2f
    23d8:	78 a9       	ldd	r23, Y+48	; 0x30
    23da:	89 a9       	ldd	r24, Y+49	; 0x31
    23dc:	9a a9       	ldd	r25, Y+50	; 0x32
    23de:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    23e2:	ca 51       	subi	r28, 0x1A	; 26
    23e4:	df 4f       	sbci	r29, 0xFF	; 255
    23e6:	68 83       	st	Y, r22
    23e8:	79 83       	std	Y+1, r23	; 0x01
    23ea:	8a 83       	std	Y+2, r24	; 0x02
    23ec:	9b 83       	std	Y+3, r25	; 0x03
    23ee:	c6 5e       	subi	r28, 0xE6	; 230
    23f0:	d0 40       	sbci	r29, 0x00	; 0
    23f2:	ca 51       	subi	r28, 0x1A	; 26
    23f4:	df 4f       	sbci	r29, 0xFF	; 255
    23f6:	88 81       	ld	r24, Y
    23f8:	99 81       	ldd	r25, Y+1	; 0x01
    23fa:	aa 81       	ldd	r26, Y+2	; 0x02
    23fc:	bb 81       	ldd	r27, Y+3	; 0x03
    23fe:	c6 5e       	subi	r28, 0xE6	; 230
    2400:	d0 40       	sbci	r29, 0x00	; 0
    2402:	8b ab       	std	Y+51, r24	; 0x33
    2404:	9c ab       	std	Y+52, r25	; 0x34
    2406:	ad ab       	std	Y+53, r26	; 0x35
    2408:	be ab       	std	Y+54, r27	; 0x36

0000240a <.Loc.366>:
	if (__tmp < 1.0)
    240a:	20 e0       	ldi	r18, 0x00	; 0
    240c:	30 e0       	ldi	r19, 0x00	; 0
    240e:	40 e8       	ldi	r20, 0x80	; 128
    2410:	5f e3       	ldi	r21, 0x3F	; 63
    2412:	6b a9       	ldd	r22, Y+51	; 0x33
    2414:	7c a9       	ldd	r23, Y+52	; 0x34
    2416:	8d a9       	ldd	r24, Y+53	; 0x35
    2418:	9e a9       	ldd	r25, Y+54	; 0x36
    241a:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    241e:	88 23       	and	r24, r24
    2420:	2c f4       	brge	.+10     	; 0x242c <.L273>

00002422 <.Loc.367>:
		__ticks = 1;
    2422:	81 e0       	ldi	r24, 0x01	; 1
    2424:	90 e0       	ldi	r25, 0x00	; 0
    2426:	98 af       	std	Y+56, r25	; 0x38
    2428:	8f ab       	std	Y+55, r24	; 0x37
    242a:	76 c0       	rjmp	.+236    	; 0x2518 <.L215>

0000242c <.L273>:
	else if (__tmp > 65535)
    242c:	20 e0       	ldi	r18, 0x00	; 0
    242e:	3f ef       	ldi	r19, 0xFF	; 255
    2430:	4f e7       	ldi	r20, 0x7F	; 127
    2432:	57 e4       	ldi	r21, 0x47	; 71
    2434:	6b a9       	ldd	r22, Y+51	; 0x33
    2436:	7c a9       	ldd	r23, Y+52	; 0x34
    2438:	8d a9       	ldd	r24, Y+53	; 0x35
    243a:	9e a9       	ldd	r25, Y+54	; 0x36
    243c:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    2440:	88 23       	and	r24, r24
    2442:	09 f0       	breq	.+2      	; 0x2446 <L0^A>

00002444 <L0^A>:
    2444:	0c f4       	brge	.+2      	; 0x2448 <.Loc.369>

00002446 <L0^A>:
    2446:	52 c0       	rjmp	.+164    	; 0x24ec <.L274>

00002448 <.Loc.369>:
		__ticks = (uint16_t) (__ms * 10.0);
    2448:	20 e0       	ldi	r18, 0x00	; 0
    244a:	30 e0       	ldi	r19, 0x00	; 0
    244c:	40 e2       	ldi	r20, 0x20	; 32
    244e:	51 e4       	ldi	r21, 0x41	; 65
    2450:	6f a5       	ldd	r22, Y+47	; 0x2f
    2452:	78 a9       	ldd	r23, Y+48	; 0x30
    2454:	89 a9       	ldd	r24, Y+49	; 0x31
    2456:	9a a9       	ldd	r25, Y+50	; 0x32
    2458:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    245c:	c6 51       	subi	r28, 0x16	; 22
    245e:	df 4f       	sbci	r29, 0xFF	; 255
    2460:	68 83       	st	Y, r22
    2462:	79 83       	std	Y+1, r23	; 0x01
    2464:	8a 83       	std	Y+2, r24	; 0x02
    2466:	9b 83       	std	Y+3, r25	; 0x03
    2468:	ca 5e       	subi	r28, 0xEA	; 234
    246a:	d0 40       	sbci	r29, 0x00	; 0
    246c:	c6 51       	subi	r28, 0x16	; 22
    246e:	df 4f       	sbci	r29, 0xFF	; 255
    2470:	88 81       	ld	r24, Y
    2472:	99 81       	ldd	r25, Y+1	; 0x01
    2474:	aa 81       	ldd	r26, Y+2	; 0x02
    2476:	bb 81       	ldd	r27, Y+3	; 0x03
    2478:	ca 5e       	subi	r28, 0xEA	; 234
    247a:	d0 40       	sbci	r29, 0x00	; 0
    247c:	ca 57       	subi	r28, 0x7A	; 122
    247e:	df 4f       	sbci	r29, 0xFF	; 255
    2480:	88 83       	st	Y, r24
    2482:	99 83       	std	Y+1, r25	; 0x01
    2484:	aa 83       	std	Y+2, r26	; 0x02
    2486:	bb 83       	std	Y+3, r27	; 0x03
    2488:	c6 58       	subi	r28, 0x86	; 134
    248a:	d0 40       	sbci	r29, 0x00	; 0

0000248c <.Loc.370>:
    248c:	ca 57       	subi	r28, 0x7A	; 122
    248e:	df 4f       	sbci	r29, 0xFF	; 255
    2490:	68 81       	ld	r22, Y
    2492:	79 81       	ldd	r23, Y+1	; 0x01
    2494:	8a 81       	ldd	r24, Y+2	; 0x02
    2496:	9b 81       	ldd	r25, Y+3	; 0x03
    2498:	c6 58       	subi	r28, 0x86	; 134
    249a:	d0 40       	sbci	r29, 0x00	; 0
    249c:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    24a0:	c2 51       	subi	r28, 0x12	; 18
    24a2:	df 4f       	sbci	r29, 0xFF	; 255
    24a4:	68 83       	st	Y, r22
    24a6:	79 83       	std	Y+1, r23	; 0x01
    24a8:	8a 83       	std	Y+2, r24	; 0x02
    24aa:	9b 83       	std	Y+3, r25	; 0x03
    24ac:	ce 5e       	subi	r28, 0xEE	; 238
    24ae:	d0 40       	sbci	r29, 0x00	; 0
    24b0:	c2 51       	subi	r28, 0x12	; 18
    24b2:	df 4f       	sbci	r29, 0xFF	; 255
    24b4:	a8 81       	ld	r26, Y
    24b6:	b9 81       	ldd	r27, Y+1	; 0x01
    24b8:	ce 5e       	subi	r28, 0xEE	; 238
    24ba:	d0 40       	sbci	r29, 0x00	; 0
    24bc:	b8 af       	std	Y+56, r27	; 0x38
    24be:	af ab       	std	Y+55, r26	; 0x37

000024c0 <.Loc.371>:
		while(__ticks)
    24c0:	10 c0       	rjmp	.+32     	; 0x24e2 <.L218>

000024c2 <.L219>:
    24c2:	80 e9       	ldi	r24, 0x90	; 144
    24c4:	91 e0       	ldi	r25, 0x01	; 1
    24c6:	9a af       	std	Y+58, r25	; 0x3a
    24c8:	89 af       	std	Y+57, r24	; 0x39

000024ca <.LBB255>:
	__asm__ volatile (
    24ca:	89 ad       	ldd	r24, Y+57	; 0x39
    24cc:	9a ad       	ldd	r25, Y+58	; 0x3a

000024ce <.L1^B34>:
    24ce:	01 97       	sbiw	r24, 0x01	; 1
    24d0:	f1 f7       	brne	.-4      	; 0x24ce <.L1^B34>
    24d2:	9a af       	std	Y+58, r25	; 0x3a
    24d4:	89 af       	std	Y+57, r24	; 0x39

000024d6 <.Loc.373>:
	...

000024d8 <.LBE255>:
			__ticks --;
    24d8:	8f a9       	ldd	r24, Y+55	; 0x37
    24da:	98 ad       	ldd	r25, Y+56	; 0x38
    24dc:	01 97       	sbiw	r24, 0x01	; 1
    24de:	98 af       	std	Y+56, r25	; 0x38
    24e0:	8f ab       	std	Y+55, r24	; 0x37

000024e2 <.L218>:
		while(__ticks)
    24e2:	8f a9       	ldd	r24, Y+55	; 0x37
    24e4:	98 ad       	ldd	r25, Y+56	; 0x38
    24e6:	00 97       	sbiw	r24, 0x00	; 0
    24e8:	61 f7       	brne	.-40     	; 0x24c2 <.L219>

000024ea <.Loc.376>:
		return;
    24ea:	6f c0       	rjmp	.+222    	; 0x25ca <.L210>

000024ec <.L274>:
		__ticks = (uint16_t)__tmp;
    24ec:	6b a9       	ldd	r22, Y+51	; 0x33
    24ee:	7c a9       	ldd	r23, Y+52	; 0x34
    24f0:	8d a9       	ldd	r24, Y+53	; 0x35
    24f2:	9e a9       	ldd	r25, Y+54	; 0x36
    24f4:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    24f8:	ce 50       	subi	r28, 0x0E	; 14
    24fa:	df 4f       	sbci	r29, 0xFF	; 255
    24fc:	68 83       	st	Y, r22
    24fe:	79 83       	std	Y+1, r23	; 0x01
    2500:	8a 83       	std	Y+2, r24	; 0x02
    2502:	9b 83       	std	Y+3, r25	; 0x03
    2504:	c2 5f       	subi	r28, 0xF2	; 242
    2506:	d0 40       	sbci	r29, 0x00	; 0
    2508:	ce 50       	subi	r28, 0x0E	; 14
    250a:	df 4f       	sbci	r29, 0xFF	; 255
    250c:	e8 81       	ld	r30, Y
    250e:	f9 81       	ldd	r31, Y+1	; 0x01
    2510:	c2 5f       	subi	r28, 0xF2	; 242
    2512:	d0 40       	sbci	r29, 0x00	; 0
    2514:	f8 af       	std	Y+56, r31	; 0x38
    2516:	ef ab       	std	Y+55, r30	; 0x37

00002518 <.L215>:
    2518:	8f a9       	ldd	r24, Y+55	; 0x37
    251a:	98 ad       	ldd	r25, Y+56	; 0x38
    251c:	9c af       	std	Y+60, r25	; 0x3c
    251e:	8b af       	std	Y+59, r24	; 0x3b

00002520 <.LBB257>:
    2520:	8b ad       	ldd	r24, Y+59	; 0x3b
    2522:	9c ad       	ldd	r25, Y+60	; 0x3c

00002524 <.L1^B35>:
    2524:	01 97       	sbiw	r24, 0x01	; 1
    2526:	f1 f7       	brne	.-4      	; 0x2524 <.L1^B35>
    2528:	9c af       	std	Y+60, r25	; 0x3c
    252a:	8b af       	std	Y+59, r24	; 0x3b

0000252c <.Loc.379>:
}
    252c:	4e c0       	rjmp	.+156    	; 0x25ca <.L210>

0000252e <.L272>:
	else if (__tmp > 255)
    252e:	20 e0       	ldi	r18, 0x00	; 0
    2530:	30 e0       	ldi	r19, 0x00	; 0
    2532:	4f e7       	ldi	r20, 0x7F	; 127
    2534:	53 e4       	ldi	r21, 0x43	; 67
    2536:	6e a1       	ldd	r22, Y+38	; 0x26
    2538:	7f a1       	ldd	r23, Y+39	; 0x27
    253a:	88 a5       	ldd	r24, Y+40	; 0x28
    253c:	99 a5       	ldd	r25, Y+41	; 0x29
    253e:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    2542:	88 23       	and	r24, r24
    2544:	71 f1       	breq	.+92     	; 0x25a2 <.L275>
    2546:	6c f1       	brlt	.+90     	; 0x25a2 <.L275>

00002548 <.LBB259>:
		uint16_t __ticks=(uint16_t)__tmp2;
    2548:	6a a5       	ldd	r22, Y+42	; 0x2a
    254a:	7b a5       	ldd	r23, Y+43	; 0x2b
    254c:	8c a5       	ldd	r24, Y+44	; 0x2c
    254e:	9d a5       	ldd	r25, Y+45	; 0x2d
    2550:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    2554:	ca 50       	subi	r28, 0x0A	; 10
    2556:	df 4f       	sbci	r29, 0xFF	; 255
    2558:	68 83       	st	Y, r22
    255a:	79 83       	std	Y+1, r23	; 0x01
    255c:	8a 83       	std	Y+2, r24	; 0x02
    255e:	9b 83       	std	Y+3, r25	; 0x03
    2560:	c6 5f       	subi	r28, 0xF6	; 246
    2562:	d0 40       	sbci	r29, 0x00	; 0
    2564:	ca 50       	subi	r28, 0x0A	; 10
    2566:	df 4f       	sbci	r29, 0xFF	; 255
    2568:	88 81       	ld	r24, Y
    256a:	99 81       	ldd	r25, Y+1	; 0x01
    256c:	c6 5f       	subi	r28, 0xF6	; 246
    256e:	d0 40       	sbci	r29, 0x00	; 0
    2570:	9e af       	std	Y+62, r25	; 0x3e
    2572:	8d af       	std	Y+61, r24	; 0x3d
    2574:	2d ad       	ldd	r18, Y+61	; 0x3d
    2576:	3e ad       	ldd	r19, Y+62	; 0x3e
    2578:	ce 01       	movw	r24, r28
    257a:	cf 96       	adiw	r24, 0x3f	; 63
    257c:	dc 01       	movw	r26, r24
    257e:	2d 93       	st	X+, r18
    2580:	3c 93       	st	X, r19

00002582 <.LBB260>:
	__asm__ volatile (
    2582:	ce 01       	movw	r24, r28
    2584:	cf 96       	adiw	r24, 0x3f	; 63
    2586:	fc 01       	movw	r30, r24
    2588:	80 81       	ld	r24, Z
    258a:	91 81       	ldd	r25, Z+1	; 0x01

0000258c <.L1^B36>:
    258c:	01 97       	sbiw	r24, 0x01	; 1
    258e:	f1 f7       	brne	.-4      	; 0x258c <.L1^B36>
    2590:	9e 01       	movw	r18, r28
    2592:	21 5c       	subi	r18, 0xC1	; 193
    2594:	3f 4f       	sbci	r19, 0xFF	; 255
    2596:	d9 01       	movw	r26, r18
    2598:	11 96       	adiw	r26, 0x01	; 1
    259a:	9c 93       	st	X, r25
    259c:	8e 93       	st	-X, r24

0000259e <.Loc.383>:
	...

000025a0 <.LBE260>:
		return;
    25a0:	28 c0       	rjmp	.+80     	; 0x25f2 <.L223>

000025a2 <.L275>:
		__ticks = (uint8_t)__tmp;
    25a2:	6e a1       	ldd	r22, Y+38	; 0x26
    25a4:	7f a1       	ldd	r23, Y+39	; 0x27
    25a6:	88 a5       	ldd	r24, Y+40	; 0x28
    25a8:	99 a5       	ldd	r25, Y+41	; 0x29
    25aa:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    25ae:	c6 50       	subi	r28, 0x06	; 6
    25b0:	df 4f       	sbci	r29, 0xFF	; 255
    25b2:	68 83       	st	Y, r22
    25b4:	79 83       	std	Y+1, r23	; 0x01
    25b6:	8a 83       	std	Y+2, r24	; 0x02
    25b8:	9b 83       	std	Y+3, r25	; 0x03
    25ba:	ca 5f       	subi	r28, 0xFA	; 250
    25bc:	d0 40       	sbci	r29, 0x00	; 0
    25be:	c6 50       	subi	r28, 0x06	; 6
    25c0:	df 4f       	sbci	r29, 0xFF	; 255
    25c2:	b8 81       	ld	r27, Y
    25c4:	ca 5f       	subi	r28, 0xFA	; 250
    25c6:	d0 40       	sbci	r29, 0x00	; 0
    25c8:	be a7       	std	Y+46, r27	; 0x2e

000025ca <.L210>:
    25ca:	ce 01       	movw	r24, r28
    25cc:	8f 5b       	subi	r24, 0xBF	; 191
    25ce:	9f 4f       	sbci	r25, 0xFF	; 255
    25d0:	2e a5       	ldd	r18, Y+46	; 0x2e
    25d2:	fc 01       	movw	r30, r24
    25d4:	20 83       	st	Z, r18

000025d6 <.LBB262>:
	__asm__ volatile (
    25d6:	ce 01       	movw	r24, r28
    25d8:	8f 5b       	subi	r24, 0xBF	; 191
    25da:	9f 4f       	sbci	r25, 0xFF	; 255
    25dc:	dc 01       	movw	r26, r24
    25de:	8c 91       	ld	r24, X
    25e0:	28 2f       	mov	r18, r24

000025e2 <.L1^B37>:
    25e2:	2a 95       	dec	r18
    25e4:	f1 f7       	brne	.-4      	; 0x25e2 <.L1^B37>
    25e6:	ce 01       	movw	r24, r28
    25e8:	8f 5b       	subi	r24, 0xBF	; 191
    25ea:	9f 4f       	sbci	r25, 0xFF	; 255
    25ec:	fc 01       	movw	r30, r24
    25ee:	20 83       	st	Z, r18

000025f0 <.Loc.387>:
	...

000025f2 <.L223>:
        _delay_us(1);                               // implement 'Delay data time' (160 nS) and 'Enable pulse width' (230 nS)
        lcd_Ctlr_Port &= ~(1<<lcd_E_bit);           // Enable pin low
    25f2:	88 e2       	ldi	r24, 0x28	; 40
    25f4:	90 e0       	ldi	r25, 0x00	; 0
    25f6:	dc 01       	movw	r26, r24
    25f8:	2c 91       	ld	r18, X

000025fa <.Loc.389>:
    25fa:	88 e2       	ldi	r24, 0x28	; 40
    25fc:	90 e0       	ldi	r25, 0x00	; 0

000025fe <.Loc.390>:
    25fe:	27 7f       	andi	r18, 0xF7	; 247
    2600:	fc 01       	movw	r30, r24
    2602:	20 83       	st	Z, r18
    2604:	80 e0       	ldi	r24, 0x00	; 0
    2606:	90 e0       	ldi	r25, 0x00	; 0
    2608:	a0 e8       	ldi	r26, 0x80	; 128
    260a:	bf e3       	ldi	r27, 0x3F	; 63
    260c:	8a 83       	std	Y+2, r24	; 0x02
    260e:	9b 83       	std	Y+3, r25	; 0x03
    2610:	ac 83       	std	Y+4, r26	; 0x04
    2612:	bd 83       	std	Y+5, r27	; 0x05

00002614 <.LBB264>:
	__tmp = ((F_CPU) / 3e6) * __us;
    2614:	2b ea       	ldi	r18, 0xAB	; 171
    2616:	3a ea       	ldi	r19, 0xAA	; 170
    2618:	4a ea       	ldi	r20, 0xAA	; 170
    261a:	50 e4       	ldi	r21, 0x40	; 64
    261c:	6a 81       	ldd	r22, Y+2	; 0x02
    261e:	7b 81       	ldd	r23, Y+3	; 0x03
    2620:	8c 81       	ldd	r24, Y+4	; 0x04
    2622:	9d 81       	ldd	r25, Y+5	; 0x05
    2624:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    2628:	c2 50       	subi	r28, 0x02	; 2
    262a:	df 4f       	sbci	r29, 0xFF	; 255
    262c:	68 83       	st	Y, r22
    262e:	79 83       	std	Y+1, r23	; 0x01
    2630:	8a 83       	std	Y+2, r24	; 0x02
    2632:	9b 83       	std	Y+3, r25	; 0x03
    2634:	ce 5f       	subi	r28, 0xFE	; 254
    2636:	d0 40       	sbci	r29, 0x00	; 0
    2638:	c2 50       	subi	r28, 0x02	; 2
    263a:	df 4f       	sbci	r29, 0xFF	; 255
    263c:	88 81       	ld	r24, Y
    263e:	99 81       	ldd	r25, Y+1	; 0x01
    2640:	aa 81       	ldd	r26, Y+2	; 0x02
    2642:	bb 81       	ldd	r27, Y+3	; 0x03
    2644:	ce 5f       	subi	r28, 0xFE	; 254
    2646:	d0 40       	sbci	r29, 0x00	; 0
    2648:	8e 83       	std	Y+6, r24	; 0x06
    264a:	9f 83       	std	Y+7, r25	; 0x07
    264c:	a8 87       	std	Y+8, r26	; 0x08
    264e:	b9 87       	std	Y+9, r27	; 0x09

00002650 <.Loc.392>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    2650:	20 e0       	ldi	r18, 0x00	; 0
    2652:	30 e0       	ldi	r19, 0x00	; 0
    2654:	40 e8       	ldi	r20, 0x80	; 128
    2656:	50 e4       	ldi	r21, 0x40	; 64
    2658:	6a 81       	ldd	r22, Y+2	; 0x02
    265a:	7b 81       	ldd	r23, Y+3	; 0x03
    265c:	8c 81       	ldd	r24, Y+4	; 0x04
    265e:	9d 81       	ldd	r25, Y+5	; 0x05
    2660:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    2664:	ce 5f       	subi	r28, 0xFE	; 254
    2666:	de 4f       	sbci	r29, 0xFE	; 254
    2668:	68 83       	st	Y, r22
    266a:	79 83       	std	Y+1, r23	; 0x01
    266c:	8a 83       	std	Y+2, r24	; 0x02
    266e:	9b 83       	std	Y+3, r25	; 0x03
    2670:	c2 50       	subi	r28, 0x02	; 2
    2672:	d1 40       	sbci	r29, 0x01	; 1
    2674:	ce 5f       	subi	r28, 0xFE	; 254
    2676:	de 4f       	sbci	r29, 0xFE	; 254
    2678:	88 81       	ld	r24, Y
    267a:	99 81       	ldd	r25, Y+1	; 0x01
    267c:	aa 81       	ldd	r26, Y+2	; 0x02
    267e:	bb 81       	ldd	r27, Y+3	; 0x03
    2680:	c2 50       	subi	r28, 0x02	; 2
    2682:	d1 40       	sbci	r29, 0x01	; 1
    2684:	8a 87       	std	Y+10, r24	; 0x0a
    2686:	9b 87       	std	Y+11, r25	; 0x0b
    2688:	ac 87       	std	Y+12, r26	; 0x0c
    268a:	bd 87       	std	Y+13, r27	; 0x0d

0000268c <.Loc.393>:
	if (__tmp < 1.0)
    268c:	20 e0       	ldi	r18, 0x00	; 0
    268e:	30 e0       	ldi	r19, 0x00	; 0
    2690:	40 e8       	ldi	r20, 0x80	; 128
    2692:	5f e3       	ldi	r21, 0x3F	; 63
    2694:	6e 81       	ldd	r22, Y+6	; 0x06
    2696:	7f 81       	ldd	r23, Y+7	; 0x07
    2698:	88 85       	ldd	r24, Y+8	; 0x08
    269a:	99 85       	ldd	r25, Y+9	; 0x09
    269c:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    26a0:	88 23       	and	r24, r24
    26a2:	1c f4       	brge	.+6      	; 0x26aa <.L276>

000026a4 <.Loc.394>:
		__ticks = 1;
    26a4:	81 e0       	ldi	r24, 0x01	; 1
    26a6:	8e 87       	std	Y+14, r24	; 0x0e
    26a8:	1f c1       	rjmp	.+574    	; 0x28e8 <.L226>

000026aa <.L276>:
	else if (__tmp2 > 65535)
    26aa:	20 e0       	ldi	r18, 0x00	; 0
    26ac:	3f ef       	ldi	r19, 0xFF	; 255
    26ae:	4f e7       	ldi	r20, 0x7F	; 127
    26b0:	57 e4       	ldi	r21, 0x47	; 71
    26b2:	6a 85       	ldd	r22, Y+10	; 0x0a
    26b4:	7b 85       	ldd	r23, Y+11	; 0x0b
    26b6:	8c 85       	ldd	r24, Y+12	; 0x0c
    26b8:	9d 85       	ldd	r25, Y+13	; 0x0d
    26ba:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    26be:	88 23       	and	r24, r24
    26c0:	09 f0       	breq	.+2      	; 0x26c4 <L0^A>

000026c2 <L0^A>:
    26c2:	0c f4       	brge	.+2      	; 0x26c6 <.Loc.396>

000026c4 <L0^A>:
    26c4:	ce c0       	rjmp	.+412    	; 0x2862 <.L277>

000026c6 <.Loc.396>:
		_delay_ms(__us / 1000.0);
    26c6:	20 e0       	ldi	r18, 0x00	; 0
    26c8:	30 e0       	ldi	r19, 0x00	; 0
    26ca:	4a e7       	ldi	r20, 0x7A	; 122
    26cc:	54 e4       	ldi	r21, 0x44	; 68
    26ce:	6a 81       	ldd	r22, Y+2	; 0x02
    26d0:	7b 81       	ldd	r23, Y+3	; 0x03
    26d2:	8c 81       	ldd	r24, Y+4	; 0x04
    26d4:	9d 81       	ldd	r25, Y+5	; 0x05
    26d6:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <__divsf3>
    26da:	ca 5f       	subi	r28, 0xFA	; 250
    26dc:	de 4f       	sbci	r29, 0xFE	; 254
    26de:	68 83       	st	Y, r22
    26e0:	79 83       	std	Y+1, r23	; 0x01
    26e2:	8a 83       	std	Y+2, r24	; 0x02
    26e4:	9b 83       	std	Y+3, r25	; 0x03
    26e6:	c6 50       	subi	r28, 0x06	; 6
    26e8:	d1 40       	sbci	r29, 0x01	; 1
    26ea:	ca 5f       	subi	r28, 0xFA	; 250
    26ec:	de 4f       	sbci	r29, 0xFE	; 254
    26ee:	88 81       	ld	r24, Y
    26f0:	99 81       	ldd	r25, Y+1	; 0x01
    26f2:	aa 81       	ldd	r26, Y+2	; 0x02
    26f4:	bb 81       	ldd	r27, Y+3	; 0x03
    26f6:	c6 50       	subi	r28, 0x06	; 6
    26f8:	d1 40       	sbci	r29, 0x01	; 1
    26fa:	8f 87       	std	Y+15, r24	; 0x0f
    26fc:	98 8b       	std	Y+16, r25	; 0x10
    26fe:	a9 8b       	std	Y+17, r26	; 0x11
    2700:	ba 8b       	std	Y+18, r27	; 0x12

00002702 <.LBB266>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    2702:	20 e0       	ldi	r18, 0x00	; 0
    2704:	30 e0       	ldi	r19, 0x00	; 0
    2706:	4a e7       	ldi	r20, 0x7A	; 122
    2708:	55 e4       	ldi	r21, 0x45	; 69
    270a:	6f 85       	ldd	r22, Y+15	; 0x0f
    270c:	78 89       	ldd	r23, Y+16	; 0x10
    270e:	89 89       	ldd	r24, Y+17	; 0x11
    2710:	9a 89       	ldd	r25, Y+18	; 0x12
    2712:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    2716:	c6 5f       	subi	r28, 0xF6	; 246
    2718:	de 4f       	sbci	r29, 0xFE	; 254
    271a:	68 83       	st	Y, r22
    271c:	79 83       	std	Y+1, r23	; 0x01
    271e:	8a 83       	std	Y+2, r24	; 0x02
    2720:	9b 83       	std	Y+3, r25	; 0x03
    2722:	ca 50       	subi	r28, 0x0A	; 10
    2724:	d1 40       	sbci	r29, 0x01	; 1
    2726:	c6 5f       	subi	r28, 0xF6	; 246
    2728:	de 4f       	sbci	r29, 0xFE	; 254
    272a:	88 81       	ld	r24, Y
    272c:	99 81       	ldd	r25, Y+1	; 0x01
    272e:	aa 81       	ldd	r26, Y+2	; 0x02
    2730:	bb 81       	ldd	r27, Y+3	; 0x03
    2732:	ca 50       	subi	r28, 0x0A	; 10
    2734:	d1 40       	sbci	r29, 0x01	; 1
    2736:	8b 8b       	std	Y+19, r24	; 0x13
    2738:	9c 8b       	std	Y+20, r25	; 0x14
    273a:	ad 8b       	std	Y+21, r26	; 0x15
    273c:	be 8b       	std	Y+22, r27	; 0x16

0000273e <.Loc.398>:
	if (__tmp < 1.0)
    273e:	20 e0       	ldi	r18, 0x00	; 0
    2740:	30 e0       	ldi	r19, 0x00	; 0
    2742:	40 e8       	ldi	r20, 0x80	; 128
    2744:	5f e3       	ldi	r21, 0x3F	; 63
    2746:	6b 89       	ldd	r22, Y+19	; 0x13
    2748:	7c 89       	ldd	r23, Y+20	; 0x14
    274a:	8d 89       	ldd	r24, Y+21	; 0x15
    274c:	9e 89       	ldd	r25, Y+22	; 0x16
    274e:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    2752:	88 23       	and	r24, r24
    2754:	2c f4       	brge	.+10     	; 0x2760 <.L278>

00002756 <.Loc.399>:
		__ticks = 1;
    2756:	81 e0       	ldi	r24, 0x01	; 1
    2758:	90 e0       	ldi	r25, 0x00	; 0
    275a:	98 8f       	std	Y+24, r25	; 0x18
    275c:	8f 8b       	std	Y+23, r24	; 0x17
    275e:	76 c0       	rjmp	.+236    	; 0x284c <.L231>

00002760 <.L278>:
	else if (__tmp > 65535)
    2760:	20 e0       	ldi	r18, 0x00	; 0
    2762:	3f ef       	ldi	r19, 0xFF	; 255
    2764:	4f e7       	ldi	r20, 0x7F	; 127
    2766:	57 e4       	ldi	r21, 0x47	; 71
    2768:	6b 89       	ldd	r22, Y+19	; 0x13
    276a:	7c 89       	ldd	r23, Y+20	; 0x14
    276c:	8d 89       	ldd	r24, Y+21	; 0x15
    276e:	9e 89       	ldd	r25, Y+22	; 0x16
    2770:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    2774:	88 23       	and	r24, r24
    2776:	09 f0       	breq	.+2      	; 0x277a <L0^A>

00002778 <L0^A>:
    2778:	0c f4       	brge	.+2      	; 0x277c <.Loc.401>

0000277a <L0^A>:
    277a:	52 c0       	rjmp	.+164    	; 0x2820 <.L279>

0000277c <.Loc.401>:
		__ticks = (uint16_t) (__ms * 10.0);
    277c:	20 e0       	ldi	r18, 0x00	; 0
    277e:	30 e0       	ldi	r19, 0x00	; 0
    2780:	40 e2       	ldi	r20, 0x20	; 32
    2782:	51 e4       	ldi	r21, 0x41	; 65
    2784:	6f 85       	ldd	r22, Y+15	; 0x0f
    2786:	78 89       	ldd	r23, Y+16	; 0x10
    2788:	89 89       	ldd	r24, Y+17	; 0x11
    278a:	9a 89       	ldd	r25, Y+18	; 0x12
    278c:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    2790:	c2 5f       	subi	r28, 0xF2	; 242
    2792:	de 4f       	sbci	r29, 0xFE	; 254
    2794:	68 83       	st	Y, r22
    2796:	79 83       	std	Y+1, r23	; 0x01
    2798:	8a 83       	std	Y+2, r24	; 0x02
    279a:	9b 83       	std	Y+3, r25	; 0x03
    279c:	ce 50       	subi	r28, 0x0E	; 14
    279e:	d1 40       	sbci	r29, 0x01	; 1
    27a0:	c2 5f       	subi	r28, 0xF2	; 242
    27a2:	de 4f       	sbci	r29, 0xFE	; 254
    27a4:	88 81       	ld	r24, Y
    27a6:	99 81       	ldd	r25, Y+1	; 0x01
    27a8:	aa 81       	ldd	r26, Y+2	; 0x02
    27aa:	bb 81       	ldd	r27, Y+3	; 0x03
    27ac:	ce 50       	subi	r28, 0x0E	; 14
    27ae:	d1 40       	sbci	r29, 0x01	; 1
    27b0:	ce 57       	subi	r28, 0x7E	; 126
    27b2:	df 4f       	sbci	r29, 0xFF	; 255
    27b4:	88 83       	st	Y, r24
    27b6:	99 83       	std	Y+1, r25	; 0x01
    27b8:	aa 83       	std	Y+2, r26	; 0x02
    27ba:	bb 83       	std	Y+3, r27	; 0x03
    27bc:	c2 58       	subi	r28, 0x82	; 130
    27be:	d0 40       	sbci	r29, 0x00	; 0

000027c0 <.Loc.402>:
    27c0:	ce 57       	subi	r28, 0x7E	; 126
    27c2:	df 4f       	sbci	r29, 0xFF	; 255
    27c4:	68 81       	ld	r22, Y
    27c6:	79 81       	ldd	r23, Y+1	; 0x01
    27c8:	8a 81       	ldd	r24, Y+2	; 0x02
    27ca:	9b 81       	ldd	r25, Y+3	; 0x03
    27cc:	c2 58       	subi	r28, 0x82	; 130
    27ce:	d0 40       	sbci	r29, 0x00	; 0
    27d0:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    27d4:	ce 5e       	subi	r28, 0xEE	; 238
    27d6:	de 4f       	sbci	r29, 0xFE	; 254
    27d8:	68 83       	st	Y, r22
    27da:	79 83       	std	Y+1, r23	; 0x01
    27dc:	8a 83       	std	Y+2, r24	; 0x02
    27de:	9b 83       	std	Y+3, r25	; 0x03
    27e0:	c2 51       	subi	r28, 0x12	; 18
    27e2:	d1 40       	sbci	r29, 0x01	; 1
    27e4:	ce 5e       	subi	r28, 0xEE	; 238
    27e6:	de 4f       	sbci	r29, 0xFE	; 254
    27e8:	a8 81       	ld	r26, Y
    27ea:	b9 81       	ldd	r27, Y+1	; 0x01
    27ec:	c2 51       	subi	r28, 0x12	; 18
    27ee:	d1 40       	sbci	r29, 0x01	; 1
    27f0:	b8 8f       	std	Y+24, r27	; 0x18
    27f2:	af 8b       	std	Y+23, r26	; 0x17

000027f4 <.Loc.403>:
		while(__ticks)
    27f4:	10 c0       	rjmp	.+32     	; 0x2816 <.L234>

000027f6 <.L235>:
    27f6:	80 e9       	ldi	r24, 0x90	; 144
    27f8:	91 e0       	ldi	r25, 0x01	; 1
    27fa:	9a 8f       	std	Y+26, r25	; 0x1a
    27fc:	89 8f       	std	Y+25, r24	; 0x19

000027fe <.LBB268>:
	__asm__ volatile (
    27fe:	89 8d       	ldd	r24, Y+25	; 0x19
    2800:	9a 8d       	ldd	r25, Y+26	; 0x1a

00002802 <.L1^B38>:
    2802:	01 97       	sbiw	r24, 0x01	; 1
    2804:	f1 f7       	brne	.-4      	; 0x2802 <.L1^B38>
    2806:	9a 8f       	std	Y+26, r25	; 0x1a
    2808:	89 8f       	std	Y+25, r24	; 0x19

0000280a <.Loc.405>:
	...

0000280c <.LBE268>:
			__ticks --;
    280c:	8f 89       	ldd	r24, Y+23	; 0x17
    280e:	98 8d       	ldd	r25, Y+24	; 0x18
    2810:	01 97       	sbiw	r24, 0x01	; 1
    2812:	98 8f       	std	Y+24, r25	; 0x18
    2814:	8f 8b       	std	Y+23, r24	; 0x17

00002816 <.L234>:
		while(__ticks)
    2816:	8f 89       	ldd	r24, Y+23	; 0x17
    2818:	98 8d       	ldd	r25, Y+24	; 0x18
    281a:	00 97       	sbiw	r24, 0x00	; 0
    281c:	61 f7       	brne	.-40     	; 0x27f6 <.L235>

0000281e <.Loc.408>:
		return;
    281e:	64 c0       	rjmp	.+200    	; 0x28e8 <.L226>

00002820 <.L279>:
		__ticks = (uint16_t)__tmp;
    2820:	6b 89       	ldd	r22, Y+19	; 0x13
    2822:	7c 89       	ldd	r23, Y+20	; 0x14
    2824:	8d 89       	ldd	r24, Y+21	; 0x15
    2826:	9e 89       	ldd	r25, Y+22	; 0x16
    2828:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    282c:	ca 5e       	subi	r28, 0xEA	; 234
    282e:	de 4f       	sbci	r29, 0xFE	; 254
    2830:	68 83       	st	Y, r22
    2832:	79 83       	std	Y+1, r23	; 0x01
    2834:	8a 83       	std	Y+2, r24	; 0x02
    2836:	9b 83       	std	Y+3, r25	; 0x03
    2838:	c6 51       	subi	r28, 0x16	; 22
    283a:	d1 40       	sbci	r29, 0x01	; 1
    283c:	ca 5e       	subi	r28, 0xEA	; 234
    283e:	de 4f       	sbci	r29, 0xFE	; 254
    2840:	e8 81       	ld	r30, Y
    2842:	f9 81       	ldd	r31, Y+1	; 0x01
    2844:	c6 51       	subi	r28, 0x16	; 22
    2846:	d1 40       	sbci	r29, 0x01	; 1
    2848:	f8 8f       	std	Y+24, r31	; 0x18
    284a:	ef 8b       	std	Y+23, r30	; 0x17

0000284c <.L231>:
    284c:	8f 89       	ldd	r24, Y+23	; 0x17
    284e:	98 8d       	ldd	r25, Y+24	; 0x18
    2850:	9c 8f       	std	Y+28, r25	; 0x1c
    2852:	8b 8f       	std	Y+27, r24	; 0x1b

00002854 <.LBB270>:
    2854:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2856:	9c 8d       	ldd	r25, Y+28	; 0x1c

00002858 <.L1^B39>:
    2858:	01 97       	sbiw	r24, 0x01	; 1
    285a:	f1 f7       	brne	.-4      	; 0x2858 <.L1^B39>
    285c:	9c 8f       	std	Y+28, r25	; 0x1c
    285e:	8b 8f       	std	Y+27, r24	; 0x1b

00002860 <.Loc.411>:
}
    2860:	43 c0       	rjmp	.+134    	; 0x28e8 <.L226>

00002862 <.L277>:
	else if (__tmp > 255)
    2862:	20 e0       	ldi	r18, 0x00	; 0
    2864:	30 e0       	ldi	r19, 0x00	; 0
    2866:	4f e7       	ldi	r20, 0x7F	; 127
    2868:	53 e4       	ldi	r21, 0x43	; 67
    286a:	6e 81       	ldd	r22, Y+6	; 0x06
    286c:	7f 81       	ldd	r23, Y+7	; 0x07
    286e:	88 85       	ldd	r24, Y+8	; 0x08
    2870:	99 85       	ldd	r25, Y+9	; 0x09
    2872:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    2876:	88 23       	and	r24, r24
    2878:	19 f1       	breq	.+70     	; 0x28c0 <.L280>
    287a:	14 f1       	brlt	.+68     	; 0x28c0 <.L280>

0000287c <.LBB272>:
		uint16_t __ticks=(uint16_t)__tmp2;
    287c:	6a 85       	ldd	r22, Y+10	; 0x0a
    287e:	7b 85       	ldd	r23, Y+11	; 0x0b
    2880:	8c 85       	ldd	r24, Y+12	; 0x0c
    2882:	9d 85       	ldd	r25, Y+13	; 0x0d
    2884:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    2888:	c6 5e       	subi	r28, 0xE6	; 230
    288a:	de 4f       	sbci	r29, 0xFE	; 254
    288c:	68 83       	st	Y, r22
    288e:	79 83       	std	Y+1, r23	; 0x01
    2890:	8a 83       	std	Y+2, r24	; 0x02
    2892:	9b 83       	std	Y+3, r25	; 0x03
    2894:	ca 51       	subi	r28, 0x1A	; 26
    2896:	d1 40       	sbci	r29, 0x01	; 1
    2898:	c6 5e       	subi	r28, 0xE6	; 230
    289a:	de 4f       	sbci	r29, 0xFE	; 254
    289c:	88 81       	ld	r24, Y
    289e:	99 81       	ldd	r25, Y+1	; 0x01
    28a0:	ca 51       	subi	r28, 0x1A	; 26
    28a2:	d1 40       	sbci	r29, 0x01	; 1
    28a4:	9e 8f       	std	Y+30, r25	; 0x1e
    28a6:	8d 8f       	std	Y+29, r24	; 0x1d
    28a8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    28aa:	9e 8d       	ldd	r25, Y+30	; 0x1e
    28ac:	98 a3       	std	Y+32, r25	; 0x20
    28ae:	8f 8f       	std	Y+31, r24	; 0x1f

000028b0 <.LBB273>:
	__asm__ volatile (
    28b0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    28b2:	98 a1       	ldd	r25, Y+32	; 0x20

000028b4 <.L1^B40>:
    28b4:	01 97       	sbiw	r24, 0x01	; 1
    28b6:	f1 f7       	brne	.-4      	; 0x28b4 <.L1^B40>
    28b8:	98 a3       	std	Y+32, r25	; 0x20
    28ba:	8f 8f       	std	Y+31, r24	; 0x1f

000028bc <.Loc.415>:
	...

000028be <.LBE273>:
		return;
    28be:	1b c0       	rjmp	.+54     	; 0x28f6 <.L239>

000028c0 <.L280>:
		__ticks = (uint8_t)__tmp;
    28c0:	6e 81       	ldd	r22, Y+6	; 0x06
    28c2:	7f 81       	ldd	r23, Y+7	; 0x07
    28c4:	88 85       	ldd	r24, Y+8	; 0x08
    28c6:	99 85       	ldd	r25, Y+9	; 0x09
    28c8:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    28cc:	c2 5e       	subi	r28, 0xE2	; 226
    28ce:	de 4f       	sbci	r29, 0xFE	; 254
    28d0:	68 83       	st	Y, r22
    28d2:	79 83       	std	Y+1, r23	; 0x01
    28d4:	8a 83       	std	Y+2, r24	; 0x02
    28d6:	9b 83       	std	Y+3, r25	; 0x03
    28d8:	ce 51       	subi	r28, 0x1E	; 30
    28da:	d1 40       	sbci	r29, 0x01	; 1
    28dc:	c2 5e       	subi	r28, 0xE2	; 226
    28de:	de 4f       	sbci	r29, 0xFE	; 254
    28e0:	98 81       	ld	r25, Y
    28e2:	ce 51       	subi	r28, 0x1E	; 30
    28e4:	d1 40       	sbci	r29, 0x01	; 1
    28e6:	9e 87       	std	Y+14, r25	; 0x0e

000028e8 <.L226>:
    28e8:	8e 85       	ldd	r24, Y+14	; 0x0e
    28ea:	89 a3       	std	Y+33, r24	; 0x21

000028ec <.LBB275>:
	__asm__ volatile (
    28ec:	89 a1       	ldd	r24, Y+33	; 0x21

000028ee <.L1^B41>:
    28ee:	8a 95       	dec	r24
    28f0:	f1 f7       	brne	.-4      	; 0x28ee <.L1^B41>
    28f2:	89 a3       	std	Y+33, r24	; 0x21

000028f4 <.Loc.419>:
	...

000028f6 <.L239>:
        _delay_us(1);                               // implement 'Address hold time (10 nS), 'Data hold time' (10 nS), and 'Enable cycle time' (500 nS )

    } while (busy_flag_copy);                       // check again if busy flag was high
    28f6:	89 81       	ldd	r24, Y+1	; 0x01
    28f8:	88 23       	and	r24, r24
    28fa:	09 f0       	breq	.+2      	; 0x28fe <.Loc.421>

000028fc <L0^A>:
    28fc:	73 c8       	rjmp	.-3866   	; 0x19e4 <.L240>

000028fe <.Loc.421>:

// arrive here if busy flag is clear -  clean up and return
    set_RW_LOW_write;               // write to LCD module (RW low)
    28fe:	88 e2       	ldi	r24, 0x28	; 40
    2900:	90 e0       	ldi	r25, 0x00	; 0
    2902:	dc 01       	movw	r26, r24
    2904:	2c 91       	ld	r18, X
    2906:	88 e2       	ldi	r24, 0x28	; 40
    2908:	90 e0       	ldi	r25, 0x00	; 0
    290a:	2b 7f       	andi	r18, 0xFB	; 251
    290c:	fc 01       	movw	r30, r24
    290e:	20 83       	st	Z, r18

00002910 <.Loc.422>:
    set_D7_output;                  // reset D7 data direction to output
    2910:	87 e2       	ldi	r24, 0x27	; 39
    2912:	90 e0       	ldi	r25, 0x00	; 0
    2914:	dc 01       	movw	r26, r24
    2916:	2c 91       	ld	r18, X
    2918:	87 e2       	ldi	r24, 0x27	; 39
    291a:	90 e0       	ldi	r25, 0x00	; 0
    291c:	20 68       	ori	r18, 0x80	; 128
    291e:	fc 01       	movw	r30, r24
    2920:	20 83       	st	Z, r18

00002922 <.Loc.423>:
}
    2922:	00 00       	nop
    2924:	cf 5d       	subi	r28, 0xDF	; 223
    2926:	de 4f       	sbci	r29, 0xFE	; 254
    2928:	0f b6       	in	r0, 0x3f	; 63
    292a:	f8 94       	cli
    292c:	de bf       	out	0x3e, r29	; 62
    292e:	0f be       	out	0x3f, r0	; 63
    2930:	cd bf       	out	0x3d, r28	; 61
    2932:	df 91       	pop	r29
    2934:	cf 91       	pop	r28
    2936:	1f 91       	pop	r17
    2938:	0f 91       	pop	r16
    293a:	08 95       	ret

0000293c <lcd_mywrite>:
Name:		lcd_mywrite(0
Inputs:		row, stringdata
Outputs:	none
Description:prints a string on the desired row
******************************************************************** */
void lcd_mywrite(uint8_t row, char * s1){
    293c:	cf 93       	push	r28
    293e:	df 93       	push	r29
    2940:	00 d0       	rcall	.+0      	; 0x2942 <L0^A>

00002942 <L0^A>:
    2942:	cd b7       	in	r28, 0x3d	; 61
    2944:	de b7       	in	r29, 0x3e	; 62
    2946:	89 83       	std	Y+1, r24	; 0x01
    2948:	7b 83       	std	Y+3, r23	; 0x03
    294a:	6a 83       	std	Y+2, r22	; 0x02

0000294c <.Loc.425>:
                   switch(row) {
    294c:	89 81       	ldd	r24, Y+1	; 0x01
    294e:	88 2f       	mov	r24, r24
    2950:	90 e0       	ldi	r25, 0x00	; 0
    2952:	81 30       	cpi	r24, 0x01	; 1
    2954:	91 05       	cpc	r25, r1
    2956:	21 f0       	breq	.+8      	; 0x2960 <.L282>
    2958:	82 30       	cpi	r24, 0x02	; 2
    295a:	91 05       	cpc	r25, r1
    295c:	29 f0       	breq	.+10     	; 0x2968 <.L283>

0000295e <.Loc.426>:
			lcd_write_instruction_4f(lcd_SetCursor | lcd_LineTwo);
			break;
	}
	//lcd_write_string_4f((unsigned char*) charRow);

}
    295e:	08 c0       	rjmp	.+16     	; 0x2970 <.L284>

00002960 <.L282>:
			lcd_write_instruction_4f(lcd_SetCursor | lcd_LineOne);
    2960:	80 e8       	ldi	r24, 0x80	; 128
    2962:	0e 94 04 09 	call	0x1208	; 0x1208 <lcd_write_instruction_4f>

00002966 <.Loc.428>:
			break;
    2966:	04 c0       	rjmp	.+8      	; 0x2970 <.L284>

00002968 <.L283>:
			lcd_write_instruction_4f(lcd_SetCursor | lcd_LineTwo);
    2968:	80 ec       	ldi	r24, 0xC0	; 192
    296a:	0e 94 04 09 	call	0x1208	; 0x1208 <lcd_write_instruction_4f>

0000296e <.Loc.430>:
	...

00002970 <.L284>:
}
    2970:	00 00       	nop
    2972:	0f 90       	pop	r0
    2974:	0f 90       	pop	r0
    2976:	0f 90       	pop	r0
    2978:	df 91       	pop	r29
    297a:	cf 91       	pop	r28
    297c:	08 95       	ret

0000297e <init>:
volatile int re = 0;



// Init Functies:
void init(void){
    297e:	cf 93       	push	r28
    2980:	df 93       	push	r29
    2982:	cd b7       	in	r28, 0x3d	; 61
    2984:	de b7       	in	r29, 0x3e	; 62

00002986 <.Loc.1>:
    initleds();
    2986:	0e 94 d3 14 	call	0x29a6	; 0x29a6 <initleds>

0000298a <.Loc.2>:
    initbuzzer();
    298a:	0e 94 e4 14 	call	0x29c8	; 0x29c8 <initbuzzer>

0000298e <.Loc.3>:
    initknoppen();
    298e:	0e 94 f5 14 	call	0x29ea	; 0x29ea <initknoppen>

00002992 <.Loc.4>:
    initmotoren();
    2992:	0e 94 1f 15 	call	0x2a3e	; 0x2a3e <initmotoren>

00002996 <.Loc.5>:
    initsensoren();
    2996:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <initsensoren>

0000299a <.Loc.6>:

    //initLCD();
    initsonars();
    299a:	0e 94 81 15 	call	0x2b02	; 0x2b02 <initsonars>

0000299e <.Loc.7>:
    /*updateLCDScreen(1, "clicks:", clicks, "");
    updateLCDScreen(2, "afstand:", afstand, "mm" ); */
}
    299e:	00 00       	nop
    29a0:	df 91       	pop	r29
    29a2:	cf 91       	pop	r28
    29a4:	08 95       	ret

000029a6 <initleds>:

void initleds(void){
    29a6:	cf 93       	push	r28
    29a8:	df 93       	push	r29
    29aa:	cd b7       	in	r28, 0x3d	; 61
    29ac:	de b7       	in	r29, 0x3e	; 62

000029ae <.Loc.9>:
    DDRA |= (1<<PA3)| (1<<PA4) | (1<<PA5)| (1<<PA6)| (1<<PA7);
    29ae:	81 e2       	ldi	r24, 0x21	; 33
    29b0:	90 e0       	ldi	r25, 0x00	; 0
    29b2:	fc 01       	movw	r30, r24
    29b4:	20 81       	ld	r18, Z
    29b6:	81 e2       	ldi	r24, 0x21	; 33
    29b8:	90 e0       	ldi	r25, 0x00	; 0

000029ba <.Loc.10>:
    29ba:	28 6f       	ori	r18, 0xF8	; 248
    29bc:	fc 01       	movw	r30, r24
    29be:	20 83       	st	Z, r18

000029c0 <.Loc.11>:
    // BoomRechts; BoomLinks; Follow; AanLed; NoodstopAan
}
    29c0:	00 00       	nop
    29c2:	df 91       	pop	r29
    29c4:	cf 91       	pop	r28
    29c6:	08 95       	ret

000029c8 <initbuzzer>:

void initbuzzer(void){
    29c8:	cf 93       	push	r28
    29ca:	df 93       	push	r29
    29cc:	cd b7       	in	r28, 0x3d	; 61
    29ce:	de b7       	in	r29, 0x3e	; 62

000029d0 <.Loc.13>:
    DDRL |= (1<<PL2); //pin 37
    29d0:	8a e0       	ldi	r24, 0x0A	; 10
    29d2:	91 e0       	ldi	r25, 0x01	; 1
    29d4:	fc 01       	movw	r30, r24
    29d6:	20 81       	ld	r18, Z
    29d8:	8a e0       	ldi	r24, 0x0A	; 10
    29da:	91 e0       	ldi	r25, 0x01	; 1

000029dc <.Loc.14>:
    29dc:	24 60       	ori	r18, 0x04	; 4
    29de:	fc 01       	movw	r30, r24
    29e0:	20 83       	st	Z, r18

000029e2 <.Loc.15>:
}
    29e2:	00 00       	nop
    29e4:	df 91       	pop	r29
    29e6:	cf 91       	pop	r28
    29e8:	08 95       	ret

000029ea <initknoppen>:

void initknoppen(void){
    29ea:	cf 93       	push	r28
    29ec:	df 93       	push	r29
    29ee:	cd b7       	in	r28, 0x3d	; 61
    29f0:	de b7       	in	r29, 0x3e	; 62

000029f2 <.Loc.17>:
    DDRA &= ~(1<<PA0) & ~(1<<PA1) & ~(1<<PA2);
    29f2:	81 e2       	ldi	r24, 0x21	; 33
    29f4:	90 e0       	ldi	r25, 0x00	; 0
    29f6:	fc 01       	movw	r30, r24
    29f8:	20 81       	ld	r18, Z

000029fa <.Loc.18>:
    29fa:	81 e2       	ldi	r24, 0x21	; 33
    29fc:	90 e0       	ldi	r25, 0x00	; 0

000029fe <.Loc.19>:
    29fe:	28 7f       	andi	r18, 0xF8	; 248
    2a00:	fc 01       	movw	r30, r24
    2a02:	20 83       	st	Z, r18

00002a04 <.Loc.20>:
    // Follow; Aan/Uit; Noodstop 1 en 2 + Bumper
}
    2a04:	00 00       	nop
    2a06:	df 91       	pop	r29
    2a08:	cf 91       	pop	r28
    2a0a:	08 95       	ret

00002a0c <initsensoren>:

void initsensoren(void){
    2a0c:	cf 93       	push	r28
    2a0e:	df 93       	push	r29
    2a10:	cd b7       	in	r28, 0x3d	; 61
    2a12:	de b7       	in	r29, 0x3e	; 62

00002a14 <.Loc.22>:
    DDRE &= (1<<PE3) & (1<<PE4) & (1<<PE5);
    2a14:	8d e2       	ldi	r24, 0x2D	; 45
    2a16:	90 e0       	ldi	r25, 0x00	; 0
    2a18:	fc 01       	movw	r30, r24
    2a1a:	80 81       	ld	r24, Z
    2a1c:	8d e2       	ldi	r24, 0x2D	; 45
    2a1e:	90 e0       	ldi	r25, 0x00	; 0

00002a20 <.Loc.23>:
    2a20:	fc 01       	movw	r30, r24
    2a22:	10 82       	st	Z, r1

00002a24 <.Loc.24>:
    DDRG &= (1<<PG5);
    2a24:	83 e3       	ldi	r24, 0x33	; 51
    2a26:	90 e0       	ldi	r25, 0x00	; 0
    2a28:	fc 01       	movw	r30, r24
    2a2a:	20 81       	ld	r18, Z

00002a2c <.Loc.25>:
    2a2c:	83 e3       	ldi	r24, 0x33	; 51
    2a2e:	90 e0       	ldi	r25, 0x00	; 0

00002a30 <.Loc.26>:
    2a30:	20 72       	andi	r18, 0x20	; 32
    2a32:	fc 01       	movw	r30, r24
    2a34:	20 83       	st	Z, r18

00002a36 <.Loc.27>:
}
    2a36:	00 00       	nop
    2a38:	df 91       	pop	r29
    2a3a:	cf 91       	pop	r28
    2a3c:	08 95       	ret

00002a3e <initmotoren>:

void initmotoren(void){
    2a3e:	cf 93       	push	r28
    2a40:	df 93       	push	r29
    2a42:	cd b7       	in	r28, 0x3d	; 61
    2a44:	de b7       	in	r29, 0x3e	; 62

00002a46 <.Loc.29>:
    //timer 1 is de L richting:
    DDRB |= (1<<PB5) | (1<<PB6);
    2a46:	84 e2       	ldi	r24, 0x24	; 36
    2a48:	90 e0       	ldi	r25, 0x00	; 0
    2a4a:	fc 01       	movw	r30, r24
    2a4c:	20 81       	ld	r18, Z
    2a4e:	84 e2       	ldi	r24, 0x24	; 36
    2a50:	90 e0       	ldi	r25, 0x00	; 0

00002a52 <.Loc.30>:
    2a52:	20 66       	ori	r18, 0x60	; 96
    2a54:	fc 01       	movw	r30, r24
    2a56:	20 83       	st	Z, r18

00002a58 <.Loc.31>:
    TCCR1B |= (1<<CS12)|(1<<CS10); //CLOCK / 1024
    2a58:	81 e8       	ldi	r24, 0x81	; 129
    2a5a:	90 e0       	ldi	r25, 0x00	; 0
    2a5c:	fc 01       	movw	r30, r24
    2a5e:	20 81       	ld	r18, Z
    2a60:	81 e8       	ldi	r24, 0x81	; 129
    2a62:	90 e0       	ldi	r25, 0x00	; 0

00002a64 <.Loc.32>:
    2a64:	25 60       	ori	r18, 0x05	; 5
    2a66:	fc 01       	movw	r30, r24
    2a68:	20 83       	st	Z, r18

00002a6a <.Loc.33>:
    TCCR1A |= (1<<WGM12) |(1<<WGM10); //8 BIT FAST PWM MODE
    2a6a:	80 e8       	ldi	r24, 0x80	; 128
    2a6c:	90 e0       	ldi	r25, 0x00	; 0
    2a6e:	fc 01       	movw	r30, r24
    2a70:	20 81       	ld	r18, Z
    2a72:	80 e8       	ldi	r24, 0x80	; 128
    2a74:	90 e0       	ldi	r25, 0x00	; 0

00002a76 <.Loc.34>:
    2a76:	29 60       	ori	r18, 0x09	; 9
    2a78:	fc 01       	movw	r30, r24
    2a7a:	20 83       	st	Z, r18

00002a7c <.Loc.35>:
    OCR1A = 127; //pin 11
    2a7c:	88 e8       	ldi	r24, 0x88	; 136
    2a7e:	90 e0       	ldi	r25, 0x00	; 0

00002a80 <.Loc.36>:
    2a80:	2f e7       	ldi	r18, 0x7F	; 127
    2a82:	30 e0       	ldi	r19, 0x00	; 0
    2a84:	fc 01       	movw	r30, r24
    2a86:	31 83       	std	Z+1, r19	; 0x01
    2a88:	20 83       	st	Z, r18

00002a8a <.Loc.37>:
    OCR1B = 127; //pin 12
    2a8a:	8a e8       	ldi	r24, 0x8A	; 138
    2a8c:	90 e0       	ldi	r25, 0x00	; 0

00002a8e <.Loc.38>:
    2a8e:	2f e7       	ldi	r18, 0x7F	; 127
    2a90:	30 e0       	ldi	r19, 0x00	; 0
    2a92:	fc 01       	movw	r30, r24
    2a94:	31 83       	std	Z+1, r19	; 0x01
    2a96:	20 83       	st	Z, r18

00002a98 <.Loc.39>:

    //timer 4 is de R richting:
    DDRH |= (1<<PH3) | (1<<PH4);
    2a98:	81 e0       	ldi	r24, 0x01	; 1
    2a9a:	91 e0       	ldi	r25, 0x01	; 1
    2a9c:	fc 01       	movw	r30, r24
    2a9e:	20 81       	ld	r18, Z
    2aa0:	81 e0       	ldi	r24, 0x01	; 1
    2aa2:	91 e0       	ldi	r25, 0x01	; 1

00002aa4 <.Loc.40>:
    2aa4:	28 61       	ori	r18, 0x18	; 24
    2aa6:	fc 01       	movw	r30, r24
    2aa8:	20 83       	st	Z, r18

00002aaa <.Loc.41>:
    TCCR4B |= (1<<CS42)|(1<<CS40); //CLOCK / 1024
    2aaa:	81 ea       	ldi	r24, 0xA1	; 161
    2aac:	90 e0       	ldi	r25, 0x00	; 0
    2aae:	fc 01       	movw	r30, r24
    2ab0:	20 81       	ld	r18, Z
    2ab2:	81 ea       	ldi	r24, 0xA1	; 161
    2ab4:	90 e0       	ldi	r25, 0x00	; 0

00002ab6 <.Loc.42>:
    2ab6:	25 60       	ori	r18, 0x05	; 5
    2ab8:	fc 01       	movw	r30, r24
    2aba:	20 83       	st	Z, r18

00002abc <.Loc.43>:
    TCCR4A |= (1<<WGM42) |(1<<WGM40); //8 BIT FAST PWM MODE
    2abc:	80 ea       	ldi	r24, 0xA0	; 160
    2abe:	90 e0       	ldi	r25, 0x00	; 0
    2ac0:	fc 01       	movw	r30, r24
    2ac2:	20 81       	ld	r18, Z
    2ac4:	80 ea       	ldi	r24, 0xA0	; 160
    2ac6:	90 e0       	ldi	r25, 0x00	; 0

00002ac8 <.Loc.44>:
    2ac8:	29 60       	ori	r18, 0x09	; 9
    2aca:	fc 01       	movw	r30, r24
    2acc:	20 83       	st	Z, r18

00002ace <.Loc.45>:
    OCR4A = 127; //pin6
    2ace:	88 ea       	ldi	r24, 0xA8	; 168
    2ad0:	90 e0       	ldi	r25, 0x00	; 0

00002ad2 <.Loc.46>:
    2ad2:	2f e7       	ldi	r18, 0x7F	; 127
    2ad4:	30 e0       	ldi	r19, 0x00	; 0
    2ad6:	fc 01       	movw	r30, r24
    2ad8:	31 83       	std	Z+1, r19	; 0x01
    2ada:	20 83       	st	Z, r18

00002adc <.Loc.47>:
    OCR4B = 127; //pin 7
    2adc:	8a ea       	ldi	r24, 0xAA	; 170
    2ade:	90 e0       	ldi	r25, 0x00	; 0

00002ae0 <.Loc.48>:
    2ae0:	2f e7       	ldi	r18, 0x7F	; 127
    2ae2:	30 e0       	ldi	r19, 0x00	; 0
    2ae4:	fc 01       	movw	r30, r24
    2ae6:	31 83       	std	Z+1, r19	; 0x01
    2ae8:	20 83       	st	Z, r18

00002aea <.Loc.49>:

    rrichting(0);
    2aea:	80 e0       	ldi	r24, 0x00	; 0
    2aec:	90 e0       	ldi	r25, 0x00	; 0
    2aee:	0e 94 fb 1d 	call	0x3bf6	; 0x3bf6 <rrichting>

00002af2 <.Loc.50>:
    lrichting(0);
    2af2:	80 e0       	ldi	r24, 0x00	; 0
    2af4:	90 e0       	ldi	r25, 0x00	; 0
    2af6:	0e 94 32 1e 	call	0x3c64	; 0x3c64 <lrichting>

00002afa <.Loc.51>:
}
    2afa:	00 00       	nop
    2afc:	df 91       	pop	r29
    2afe:	cf 91       	pop	r28
    2b00:	08 95       	ret

00002b02 <initsonars>:

void initsonars(void){
    2b02:	cf 93       	push	r28
    2b04:	df 93       	push	r29
    2b06:	cd b7       	in	r28, 0x3d	; 61
    2b08:	de b7       	in	r29, 0x3e	; 62

00002b0a <.Loc.53>:
       MULTIPLEXER B PB1, PIN52 -> pin 2 op de chip
    */



    DDRL &= ~(1<<PL0); //ICP4 als input
    2b0a:	8a e0       	ldi	r24, 0x0A	; 10
    2b0c:	91 e0       	ldi	r25, 0x01	; 1
    2b0e:	fc 01       	movw	r30, r24
    2b10:	20 81       	ld	r18, Z

00002b12 <.Loc.54>:
    2b12:	8a e0       	ldi	r24, 0x0A	; 10
    2b14:	91 e0       	ldi	r25, 0x01	; 1

00002b16 <.Loc.55>:
    2b16:	2e 7f       	andi	r18, 0xFE	; 254
    2b18:	fc 01       	movw	r30, r24
    2b1a:	20 83       	st	Z, r18

00002b1c <.Loc.56>:
    DDRB |= (1<<PB1); //MUXA als output
    2b1c:	84 e2       	ldi	r24, 0x24	; 36
    2b1e:	90 e0       	ldi	r25, 0x00	; 0
    2b20:	fc 01       	movw	r30, r24
    2b22:	20 81       	ld	r18, Z
    2b24:	84 e2       	ldi	r24, 0x24	; 36
    2b26:	90 e0       	ldi	r25, 0x00	; 0

00002b28 <.Loc.57>:
    2b28:	22 60       	ori	r18, 0x02	; 2
    2b2a:	fc 01       	movw	r30, r24
    2b2c:	20 83       	st	Z, r18

00002b2e <.Loc.58>:
    DDRB |= (1<<PB0); //MUXB als output
    2b2e:	84 e2       	ldi	r24, 0x24	; 36
    2b30:	90 e0       	ldi	r25, 0x00	; 0
    2b32:	fc 01       	movw	r30, r24
    2b34:	20 81       	ld	r18, Z
    2b36:	84 e2       	ldi	r24, 0x24	; 36
    2b38:	90 e0       	ldi	r25, 0x00	; 0

00002b3a <.Loc.59>:
    2b3a:	21 60       	ori	r18, 0x01	; 1
    2b3c:	fc 01       	movw	r30, r24
    2b3e:	20 83       	st	Z, r18

00002b40 <.Loc.60>:
    DDRB |= (1<<PB2); //TRIGER als output
    2b40:	84 e2       	ldi	r24, 0x24	; 36
    2b42:	90 e0       	ldi	r25, 0x00	; 0
    2b44:	fc 01       	movw	r30, r24
    2b46:	20 81       	ld	r18, Z
    2b48:	84 e2       	ldi	r24, 0x24	; 36
    2b4a:	90 e0       	ldi	r25, 0x00	; 0

00002b4c <.Loc.61>:
    2b4c:	24 60       	ori	r18, 0x04	; 4
    2b4e:	fc 01       	movw	r30, r24
    2b50:	20 83       	st	Z, r18

00002b52 <.Loc.62>:
    //DDRH |= (1<<PH3); //S0 enable als output
    //DDRH |= (1<<PH4); //S1 enable als output

    PORTH &= ~(1<<PH3); PORTH &= ~(1<<PH4); //alle sensoren uit
    2b52:	82 e0       	ldi	r24, 0x02	; 2
    2b54:	91 e0       	ldi	r25, 0x01	; 1
    2b56:	fc 01       	movw	r30, r24
    2b58:	20 81       	ld	r18, Z

00002b5a <.Loc.63>:
    2b5a:	82 e0       	ldi	r24, 0x02	; 2
    2b5c:	91 e0       	ldi	r25, 0x01	; 1

00002b5e <.Loc.64>:
    2b5e:	27 7f       	andi	r18, 0xF7	; 247
    2b60:	fc 01       	movw	r30, r24
    2b62:	20 83       	st	Z, r18

00002b64 <.Loc.65>:
    2b64:	82 e0       	ldi	r24, 0x02	; 2
    2b66:	91 e0       	ldi	r25, 0x01	; 1
    2b68:	fc 01       	movw	r30, r24
    2b6a:	20 81       	ld	r18, Z

00002b6c <.Loc.66>:
    2b6c:	82 e0       	ldi	r24, 0x02	; 2
    2b6e:	91 e0       	ldi	r25, 0x01	; 1

00002b70 <.Loc.67>:
    2b70:	2f 7e       	andi	r18, 0xEF	; 239
    2b72:	fc 01       	movw	r30, r24
    2b74:	20 83       	st	Z, r18

00002b76 <.Loc.68>:

    TCCR4B = (1<<CS11); // /8 klokdeler
    2b76:	81 ea       	ldi	r24, 0xA1	; 161
    2b78:	90 e0       	ldi	r25, 0x00	; 0

00002b7a <.Loc.69>:
    2b7a:	22 e0       	ldi	r18, 0x02	; 2
    2b7c:	fc 01       	movw	r30, r24
    2b7e:	20 83       	st	Z, r18

00002b80 <.Loc.70>:
	TCCR4B |= (1<<ICNC4); //enable input capture noise canceler
    2b80:	81 ea       	ldi	r24, 0xA1	; 161
    2b82:	90 e0       	ldi	r25, 0x00	; 0
    2b84:	fc 01       	movw	r30, r24
    2b86:	20 81       	ld	r18, Z
    2b88:	81 ea       	ldi	r24, 0xA1	; 161
    2b8a:	90 e0       	ldi	r25, 0x00	; 0

00002b8c <.Loc.71>:
    2b8c:	20 68       	ori	r18, 0x80	; 128
    2b8e:	fc 01       	movw	r30, r24
    2b90:	20 83       	st	Z, r18

00002b92 <.Loc.72>:
	TCCR4B |= (1<<ICES4); //change input capture edge select on rising edge
    2b92:	81 ea       	ldi	r24, 0xA1	; 161
    2b94:	90 e0       	ldi	r25, 0x00	; 0
    2b96:	fc 01       	movw	r30, r24
    2b98:	20 81       	ld	r18, Z
    2b9a:	81 ea       	ldi	r24, 0xA1	; 161
    2b9c:	90 e0       	ldi	r25, 0x00	; 0

00002b9e <.Loc.73>:
    2b9e:	20 64       	ori	r18, 0x40	; 64
    2ba0:	fc 01       	movw	r30, r24
    2ba2:	20 83       	st	Z, r18

00002ba4 <.Loc.74>:
	TIMSK4 |= (1<<ICIE4) | (1<<TOIE4); //enable input capture interrupt & timer overflow
    2ba4:	82 e7       	ldi	r24, 0x72	; 114
    2ba6:	90 e0       	ldi	r25, 0x00	; 0
    2ba8:	fc 01       	movw	r30, r24
    2baa:	20 81       	ld	r18, Z
    2bac:	82 e7       	ldi	r24, 0x72	; 114
    2bae:	90 e0       	ldi	r25, 0x00	; 0

00002bb0 <.Loc.75>:
    2bb0:	21 62       	ori	r18, 0x21	; 33
    2bb2:	fc 01       	movw	r30, r24
    2bb4:	20 83       	st	Z, r18

00002bb6 <.Loc.76>:
	TIFR4 = (1<<ICF4) | (1<<TOV4); //clear input capture flag & timer overflow flag
    2bb6:	89 e3       	ldi	r24, 0x39	; 57
    2bb8:	90 e0       	ldi	r25, 0x00	; 0

00002bba <.Loc.77>:
    2bba:	21 e2       	ldi	r18, 0x21	; 33
    2bbc:	fc 01       	movw	r30, r24
    2bbe:	20 83       	st	Z, r18

00002bc0 <.Loc.78>:
    TCNT4 = 0;
    2bc0:	84 ea       	ldi	r24, 0xA4	; 164
    2bc2:	90 e0       	ldi	r25, 0x00	; 0

00002bc4 <.Loc.79>:
    2bc4:	fc 01       	movw	r30, r24
    2bc6:	11 82       	std	Z+1, r1	; 0x01
    2bc8:	10 82       	st	Z, r1

00002bca <.Loc.80>:
	flag = 0;
    2bca:	10 92 47 02 	sts	0x0247, r1	; 0x800247 <flag+0x1>
    2bce:	10 92 46 02 	sts	0x0246, r1	; 0x800246 <flag>

00002bd2 <.Loc.81>:
    sei();
    2bd2:	78 94       	sei

00002bd4 <.Loc.82>:
}
    2bd4:	00 00       	nop
    2bd6:	df 91       	pop	r29
    2bd8:	cf 91       	pop	r28
    2bda:	08 95       	ret

00002bdc <draaiing>:


// Reken Functies:
int draaiing(void){
    2bdc:	cf 93       	push	r28
    2bde:	df 93       	push	r29
    2be0:	0f 92       	push	r0
    2be2:	0f 92       	push	r0
    2be4:	cd b7       	in	r28, 0x3d	; 61
    2be6:	de b7       	in	r29, 0x3e	; 62

00002be8 <.Loc.84>:
    // Berekening om te kijken of rijstrook getal even of oneven is, zodat de AGV weet welke kant die op moet draaien.

    int uitwerking;

    uitwerking = rijstrook%2;
    2be8:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <rijstrook>
    2bec:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <rijstrook+0x1>

00002bf0 <.Loc.85>:
    2bf0:	81 70       	andi	r24, 0x01	; 1
    2bf2:	90 78       	andi	r25, 0x80	; 128
    2bf4:	99 23       	and	r25, r25
    2bf6:	24 f4       	brge	.+8      	; 0x2c00 <.L9>
    2bf8:	01 97       	sbiw	r24, 0x01	; 1
    2bfa:	8e 6f       	ori	r24, 0xFE	; 254
    2bfc:	9f 6f       	ori	r25, 0xFF	; 255
    2bfe:	01 96       	adiw	r24, 0x01	; 1

00002c00 <.L9>:
    2c00:	9a 83       	std	Y+2, r25	; 0x02
    2c02:	89 83       	std	Y+1, r24	; 0x01

00002c04 <.Loc.86>:

    return uitwerking;
    2c04:	89 81       	ldd	r24, Y+1	; 0x01
    2c06:	9a 81       	ldd	r25, Y+2	; 0x02

00002c08 <.Loc.87>:
}
    2c08:	0f 90       	pop	r0
    2c0a:	0f 90       	pop	r0
    2c0c:	df 91       	pop	r29
    2c0e:	cf 91       	pop	r28
    2c10:	08 95       	ret

00002c12 <latVerschil>:

int latVerschil(void){
    2c12:	0f 93       	push	r16
    2c14:	1f 93       	push	r17
    2c16:	cf 93       	push	r28
    2c18:	df 93       	push	r29
    2c1a:	0f 92       	push	r0
    2c1c:	0f 92       	push	r0
    2c1e:	cd b7       	in	r28, 0x3d	; 61
    2c20:	de b7       	in	r29, 0x3e	; 62

00002c22 <.Loc.89>:
    // Berekening om te kijken of de AGV te ver van zijn route afwijkt

    int verschil;

    verschil = leessonaruit(1) - leessonaruit(2);
    2c22:	81 e0       	ldi	r24, 0x01	; 1
    2c24:	90 e0       	ldi	r25, 0x00	; 0
    2c26:	0e 94 8d 1b 	call	0x371a	; 0x371a <leessonaruit>
    2c2a:	8c 01       	movw	r16, r24

00002c2c <.Loc.90>:
    2c2c:	82 e0       	ldi	r24, 0x02	; 2
    2c2e:	90 e0       	ldi	r25, 0x00	; 0
    2c30:	0e 94 8d 1b 	call	0x371a	; 0x371a <leessonaruit>

00002c34 <.Loc.91>:
    2c34:	98 01       	movw	r18, r16
    2c36:	28 1b       	sub	r18, r24
    2c38:	39 0b       	sbc	r19, r25
    2c3a:	c9 01       	movw	r24, r18
    2c3c:	9a 83       	std	Y+2, r25	; 0x02
    2c3e:	89 83       	std	Y+1, r24	; 0x01

00002c40 <.Loc.92>:
    // Positief = Meer naar rechts
    // Negatief = Meer naar links

    return verschil;
    2c40:	89 81       	ldd	r24, Y+1	; 0x01
    2c42:	9a 81       	ldd	r25, Y+2	; 0x02

00002c44 <.Loc.93>:
}
    2c44:	0f 90       	pop	r0
    2c46:	0f 90       	pop	r0
    2c48:	df 91       	pop	r29
    2c4a:	cf 91       	pop	r28
    2c4c:	1f 91       	pop	r17
    2c4e:	0f 91       	pop	r16
    2c50:	08 95       	ret

00002c52 <rechtsboomled>:



// Led Functies:
void rechtsboomled(int aan){
    2c52:	cf 93       	push	r28
    2c54:	df 93       	push	r29
    2c56:	0f 92       	push	r0
    2c58:	0f 92       	push	r0
    2c5a:	cd b7       	in	r28, 0x3d	; 61
    2c5c:	de b7       	in	r29, 0x3e	; 62
    2c5e:	9a 83       	std	Y+2, r25	; 0x02
    2c60:	89 83       	std	Y+1, r24	; 0x01

00002c62 <.Loc.95>:
    if (aan) PORTA |= (1<<PA3);
    2c62:	89 81       	ldd	r24, Y+1	; 0x01
    2c64:	9a 81       	ldd	r25, Y+2	; 0x02
    2c66:	00 97       	sbiw	r24, 0x00	; 0
    2c68:	51 f0       	breq	.+20     	; 0x2c7e <.L14>

00002c6a <.Loc.96>:
    2c6a:	82 e2       	ldi	r24, 0x22	; 34
    2c6c:	90 e0       	ldi	r25, 0x00	; 0
    2c6e:	fc 01       	movw	r30, r24
    2c70:	20 81       	ld	r18, Z
    2c72:	82 e2       	ldi	r24, 0x22	; 34
    2c74:	90 e0       	ldi	r25, 0x00	; 0

00002c76 <.Loc.97>:
    2c76:	28 60       	ori	r18, 0x08	; 8
    2c78:	fc 01       	movw	r30, r24
    2c7a:	20 83       	st	Z, r18

00002c7c <.Loc.98>:
    else {
           PORTA &= ~(1<<PA3);
    }
}
    2c7c:	09 c0       	rjmp	.+18     	; 0x2c90 <.L16>

00002c7e <.L14>:
           PORTA &= ~(1<<PA3);
    2c7e:	82 e2       	ldi	r24, 0x22	; 34
    2c80:	90 e0       	ldi	r25, 0x00	; 0
    2c82:	fc 01       	movw	r30, r24
    2c84:	20 81       	ld	r18, Z

00002c86 <.Loc.100>:
    2c86:	82 e2       	ldi	r24, 0x22	; 34
    2c88:	90 e0       	ldi	r25, 0x00	; 0

00002c8a <.Loc.101>:
    2c8a:	27 7f       	andi	r18, 0xF7	; 247
    2c8c:	fc 01       	movw	r30, r24
    2c8e:	20 83       	st	Z, r18

00002c90 <.L16>:
}
    2c90:	00 00       	nop
    2c92:	0f 90       	pop	r0
    2c94:	0f 90       	pop	r0
    2c96:	df 91       	pop	r29
    2c98:	cf 91       	pop	r28
    2c9a:	08 95       	ret

00002c9c <linksboomled>:

void linksboomled(int aan){
    2c9c:	cf 93       	push	r28
    2c9e:	df 93       	push	r29
    2ca0:	0f 92       	push	r0
    2ca2:	0f 92       	push	r0
    2ca4:	cd b7       	in	r28, 0x3d	; 61
    2ca6:	de b7       	in	r29, 0x3e	; 62
    2ca8:	9a 83       	std	Y+2, r25	; 0x02
    2caa:	89 83       	std	Y+1, r24	; 0x01

00002cac <.Loc.104>:
    if (aan) PORTA |= (1<<PA4);
    2cac:	89 81       	ldd	r24, Y+1	; 0x01
    2cae:	9a 81       	ldd	r25, Y+2	; 0x02
    2cb0:	00 97       	sbiw	r24, 0x00	; 0
    2cb2:	51 f0       	breq	.+20     	; 0x2cc8 <.L18>

00002cb4 <.Loc.105>:
    2cb4:	82 e2       	ldi	r24, 0x22	; 34
    2cb6:	90 e0       	ldi	r25, 0x00	; 0
    2cb8:	fc 01       	movw	r30, r24
    2cba:	20 81       	ld	r18, Z
    2cbc:	82 e2       	ldi	r24, 0x22	; 34
    2cbe:	90 e0       	ldi	r25, 0x00	; 0

00002cc0 <.Loc.106>:
    2cc0:	20 61       	ori	r18, 0x10	; 16
    2cc2:	fc 01       	movw	r30, r24
    2cc4:	20 83       	st	Z, r18

00002cc6 <.Loc.107>:
    else {
           PORTA &= ~(1<<PA4);
    }
}
    2cc6:	09 c0       	rjmp	.+18     	; 0x2cda <.L20>

00002cc8 <.L18>:
           PORTA &= ~(1<<PA4);
    2cc8:	82 e2       	ldi	r24, 0x22	; 34
    2cca:	90 e0       	ldi	r25, 0x00	; 0
    2ccc:	fc 01       	movw	r30, r24
    2cce:	20 81       	ld	r18, Z

00002cd0 <.Loc.109>:
    2cd0:	82 e2       	ldi	r24, 0x22	; 34
    2cd2:	90 e0       	ldi	r25, 0x00	; 0

00002cd4 <.Loc.110>:
    2cd4:	2f 7e       	andi	r18, 0xEF	; 239
    2cd6:	fc 01       	movw	r30, r24
    2cd8:	20 83       	st	Z, r18

00002cda <.L20>:
}
    2cda:	00 00       	nop
    2cdc:	0f 90       	pop	r0
    2cde:	0f 90       	pop	r0
    2ce0:	df 91       	pop	r29
    2ce2:	cf 91       	pop	r28
    2ce4:	08 95       	ret

00002ce6 <followled>:

void followled(int aan){
    2ce6:	cf 93       	push	r28
    2ce8:	df 93       	push	r29
    2cea:	0f 92       	push	r0
    2cec:	0f 92       	push	r0
    2cee:	cd b7       	in	r28, 0x3d	; 61
    2cf0:	de b7       	in	r29, 0x3e	; 62
    2cf2:	9a 83       	std	Y+2, r25	; 0x02
    2cf4:	89 83       	std	Y+1, r24	; 0x01

00002cf6 <.Loc.113>:
    if (aan) PORTA |= (1<<PA5);
    2cf6:	89 81       	ldd	r24, Y+1	; 0x01
    2cf8:	9a 81       	ldd	r25, Y+2	; 0x02
    2cfa:	00 97       	sbiw	r24, 0x00	; 0
    2cfc:	51 f0       	breq	.+20     	; 0x2d12 <.L22>

00002cfe <.Loc.114>:
    2cfe:	82 e2       	ldi	r24, 0x22	; 34
    2d00:	90 e0       	ldi	r25, 0x00	; 0
    2d02:	fc 01       	movw	r30, r24
    2d04:	20 81       	ld	r18, Z
    2d06:	82 e2       	ldi	r24, 0x22	; 34
    2d08:	90 e0       	ldi	r25, 0x00	; 0

00002d0a <.Loc.115>:
    2d0a:	20 62       	ori	r18, 0x20	; 32
    2d0c:	fc 01       	movw	r30, r24
    2d0e:	20 83       	st	Z, r18

00002d10 <.Loc.116>:
    else {
           PORTA &= ~(1<<PA5);
    }
}
    2d10:	09 c0       	rjmp	.+18     	; 0x2d24 <.L24>

00002d12 <.L22>:
           PORTA &= ~(1<<PA5);
    2d12:	82 e2       	ldi	r24, 0x22	; 34
    2d14:	90 e0       	ldi	r25, 0x00	; 0
    2d16:	fc 01       	movw	r30, r24
    2d18:	20 81       	ld	r18, Z

00002d1a <.Loc.118>:
    2d1a:	82 e2       	ldi	r24, 0x22	; 34
    2d1c:	90 e0       	ldi	r25, 0x00	; 0

00002d1e <.Loc.119>:
    2d1e:	2f 7d       	andi	r18, 0xDF	; 223
    2d20:	fc 01       	movw	r30, r24
    2d22:	20 83       	st	Z, r18

00002d24 <.L24>:
}
    2d24:	00 00       	nop
    2d26:	0f 90       	pop	r0
    2d28:	0f 90       	pop	r0
    2d2a:	df 91       	pop	r29
    2d2c:	cf 91       	pop	r28
    2d2e:	08 95       	ret

00002d30 <onled>:

void onled(int aan){
    2d30:	cf 93       	push	r28
    2d32:	df 93       	push	r29
    2d34:	0f 92       	push	r0
    2d36:	0f 92       	push	r0
    2d38:	cd b7       	in	r28, 0x3d	; 61
    2d3a:	de b7       	in	r29, 0x3e	; 62
    2d3c:	9a 83       	std	Y+2, r25	; 0x02
    2d3e:	89 83       	std	Y+1, r24	; 0x01

00002d40 <.Loc.122>:
    if (aan) PORTA |= (1<<PA6);
    2d40:	89 81       	ldd	r24, Y+1	; 0x01
    2d42:	9a 81       	ldd	r25, Y+2	; 0x02
    2d44:	00 97       	sbiw	r24, 0x00	; 0
    2d46:	51 f0       	breq	.+20     	; 0x2d5c <.L26>

00002d48 <.Loc.123>:
    2d48:	82 e2       	ldi	r24, 0x22	; 34
    2d4a:	90 e0       	ldi	r25, 0x00	; 0
    2d4c:	fc 01       	movw	r30, r24
    2d4e:	20 81       	ld	r18, Z
    2d50:	82 e2       	ldi	r24, 0x22	; 34
    2d52:	90 e0       	ldi	r25, 0x00	; 0

00002d54 <.Loc.124>:
    2d54:	20 64       	ori	r18, 0x40	; 64
    2d56:	fc 01       	movw	r30, r24
    2d58:	20 83       	st	Z, r18

00002d5a <.Loc.125>:
    else {
           PORTA &= ~(1<<PA6);
    }
}
    2d5a:	09 c0       	rjmp	.+18     	; 0x2d6e <.L28>

00002d5c <.L26>:
           PORTA &= ~(1<<PA6);
    2d5c:	82 e2       	ldi	r24, 0x22	; 34
    2d5e:	90 e0       	ldi	r25, 0x00	; 0
    2d60:	fc 01       	movw	r30, r24
    2d62:	20 81       	ld	r18, Z

00002d64 <.Loc.127>:
    2d64:	82 e2       	ldi	r24, 0x22	; 34
    2d66:	90 e0       	ldi	r25, 0x00	; 0

00002d68 <.Loc.128>:
    2d68:	2f 7b       	andi	r18, 0xBF	; 191
    2d6a:	fc 01       	movw	r30, r24
    2d6c:	20 83       	st	Z, r18

00002d6e <.L28>:
}
    2d6e:	00 00       	nop
    2d70:	0f 90       	pop	r0
    2d72:	0f 90       	pop	r0
    2d74:	df 91       	pop	r29
    2d76:	cf 91       	pop	r28
    2d78:	08 95       	ret

00002d7a <noodstopled>:

void noodstopled(int aan){
    2d7a:	cf 93       	push	r28
    2d7c:	df 93       	push	r29
    2d7e:	0f 92       	push	r0
    2d80:	0f 92       	push	r0
    2d82:	cd b7       	in	r28, 0x3d	; 61
    2d84:	de b7       	in	r29, 0x3e	; 62
    2d86:	9a 83       	std	Y+2, r25	; 0x02
    2d88:	89 83       	std	Y+1, r24	; 0x01

00002d8a <.Loc.131>:
    if (aan) PORTA |= (1<<PA7);
    2d8a:	89 81       	ldd	r24, Y+1	; 0x01
    2d8c:	9a 81       	ldd	r25, Y+2	; 0x02
    2d8e:	00 97       	sbiw	r24, 0x00	; 0
    2d90:	51 f0       	breq	.+20     	; 0x2da6 <.L30>

00002d92 <.Loc.132>:
    2d92:	82 e2       	ldi	r24, 0x22	; 34
    2d94:	90 e0       	ldi	r25, 0x00	; 0
    2d96:	fc 01       	movw	r30, r24
    2d98:	20 81       	ld	r18, Z
    2d9a:	82 e2       	ldi	r24, 0x22	; 34
    2d9c:	90 e0       	ldi	r25, 0x00	; 0

00002d9e <.Loc.133>:
    2d9e:	20 68       	ori	r18, 0x80	; 128
    2da0:	fc 01       	movw	r30, r24
    2da2:	20 83       	st	Z, r18

00002da4 <.Loc.134>:
    else {
           PORTA &= ~(1<<PA7);
    }
}
    2da4:	09 c0       	rjmp	.+18     	; 0x2db8 <.L32>

00002da6 <.L30>:
           PORTA &= ~(1<<PA7);
    2da6:	82 e2       	ldi	r24, 0x22	; 34
    2da8:	90 e0       	ldi	r25, 0x00	; 0
    2daa:	fc 01       	movw	r30, r24
    2dac:	20 81       	ld	r18, Z

00002dae <.Loc.136>:
    2dae:	82 e2       	ldi	r24, 0x22	; 34
    2db0:	90 e0       	ldi	r25, 0x00	; 0

00002db2 <.Loc.137>:
    2db2:	2f 77       	andi	r18, 0x7F	; 127
    2db4:	fc 01       	movw	r30, r24
    2db6:	20 83       	st	Z, r18

00002db8 <.L32>:
}
    2db8:	00 00       	nop
    2dba:	0f 90       	pop	r0
    2dbc:	0f 90       	pop	r0
    2dbe:	df 91       	pop	r29
    2dc0:	cf 91       	pop	r28
    2dc2:	08 95       	ret

00002dc4 <buzzer>:


// Buzzer Functie:
void buzzer(int aan){
    2dc4:	cf 93       	push	r28
    2dc6:	df 93       	push	r29
    2dc8:	0f 92       	push	r0
    2dca:	0f 92       	push	r0
    2dcc:	cd b7       	in	r28, 0x3d	; 61
    2dce:	de b7       	in	r29, 0x3e	; 62
    2dd0:	9a 83       	std	Y+2, r25	; 0x02
    2dd2:	89 83       	std	Y+1, r24	; 0x01

00002dd4 <.Loc.140>:
    if (aan) PORTL |= (1<<PL2);
    2dd4:	89 81       	ldd	r24, Y+1	; 0x01
    2dd6:	9a 81       	ldd	r25, Y+2	; 0x02
    2dd8:	00 97       	sbiw	r24, 0x00	; 0
    2dda:	51 f0       	breq	.+20     	; 0x2df0 <.L34>

00002ddc <.Loc.141>:
    2ddc:	8b e0       	ldi	r24, 0x0B	; 11
    2dde:	91 e0       	ldi	r25, 0x01	; 1
    2de0:	fc 01       	movw	r30, r24
    2de2:	20 81       	ld	r18, Z
    2de4:	8b e0       	ldi	r24, 0x0B	; 11
    2de6:	91 e0       	ldi	r25, 0x01	; 1

00002de8 <.Loc.142>:
    2de8:	24 60       	ori	r18, 0x04	; 4
    2dea:	fc 01       	movw	r30, r24
    2dec:	20 83       	st	Z, r18

00002dee <.Loc.143>:
    else {
            PORTL &= ~(1<<PL2);}
}
    2dee:	09 c0       	rjmp	.+18     	; 0x2e02 <.L36>

00002df0 <.L34>:
            PORTL &= ~(1<<PL2);}
    2df0:	8b e0       	ldi	r24, 0x0B	; 11
    2df2:	91 e0       	ldi	r25, 0x01	; 1
    2df4:	fc 01       	movw	r30, r24
    2df6:	20 81       	ld	r18, Z

00002df8 <.Loc.145>:
    2df8:	8b e0       	ldi	r24, 0x0B	; 11
    2dfa:	91 e0       	ldi	r25, 0x01	; 1

00002dfc <.Loc.146>:
    2dfc:	2b 7f       	andi	r18, 0xFB	; 251
    2dfe:	fc 01       	movw	r30, r24
    2e00:	20 83       	st	Z, r18

00002e02 <.L36>:
}
    2e02:	00 00       	nop
    2e04:	0f 90       	pop	r0
    2e06:	0f 90       	pop	r0
    2e08:	df 91       	pop	r29
    2e0a:	cf 91       	pop	r28
    2e0c:	08 95       	ret

00002e0e <leestnoodstopuit>:


// Knop Functies:
int leestnoodstopuit(void){
    2e0e:	cf 93       	push	r28
    2e10:	df 93       	push	r29
    2e12:	cd b7       	in	r28, 0x3d	; 61
    2e14:	de b7       	in	r29, 0x3e	; 62
    2e16:	c4 54       	subi	r28, 0x44	; 68
    2e18:	d1 09       	sbc	r29, r1
    2e1a:	0f b6       	in	r0, 0x3f	; 63
    2e1c:	f8 94       	cli
    2e1e:	de bf       	out	0x3e, r29	; 62
    2e20:	0f be       	out	0x3f, r0	; 63
    2e22:	cd bf       	out	0x3d, r28	; 61

00002e24 <.Loc.149>:
        if ((PINA & (1<<PA2)) == 0){
    2e24:	80 e2       	ldi	r24, 0x20	; 32
    2e26:	90 e0       	ldi	r25, 0x00	; 0
    2e28:	dc 01       	movw	r26, r24
    2e2a:	8c 91       	ld	r24, X

00002e2c <.Loc.150>:
    2e2c:	88 2f       	mov	r24, r24
    2e2e:	90 e0       	ldi	r25, 0x00	; 0
    2e30:	84 70       	andi	r24, 0x04	; 4
    2e32:	99 27       	eor	r25, r25

00002e34 <.Loc.151>:
    2e34:	00 97       	sbiw	r24, 0x00	; 0
    2e36:	09 f0       	breq	.+2      	; 0x2e3a <L0^A+0x2>

00002e38 <L0^A>:
    2e38:	92 c0       	rjmp	.+292    	; 0x2f5e <.L38>
    2e3a:	80 e0       	ldi	r24, 0x00	; 0
    2e3c:	90 e0       	ldi	r25, 0x00	; 0
    2e3e:	a0 ea       	ldi	r26, 0xA0	; 160
    2e40:	b1 e4       	ldi	r27, 0x41	; 65
    2e42:	89 83       	std	Y+1, r24	; 0x01
    2e44:	9a 83       	std	Y+2, r25	; 0x02
    2e46:	ab 83       	std	Y+3, r26	; 0x03
    2e48:	bc 83       	std	Y+4, r27	; 0x04

00002e4a <.LBB80>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    2e4a:	20 e0       	ldi	r18, 0x00	; 0
    2e4c:	30 e0       	ldi	r19, 0x00	; 0
    2e4e:	4a e7       	ldi	r20, 0x7A	; 122
    2e50:	55 e4       	ldi	r21, 0x45	; 69
    2e52:	69 81       	ldd	r22, Y+1	; 0x01
    2e54:	7a 81       	ldd	r23, Y+2	; 0x02
    2e56:	8b 81       	ldd	r24, Y+3	; 0x03
    2e58:	9c 81       	ldd	r25, Y+4	; 0x04
    2e5a:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    2e5e:	6d a3       	std	Y+37, r22	; 0x25
    2e60:	7e a3       	std	Y+38, r23	; 0x26
    2e62:	8f a3       	std	Y+39, r24	; 0x27
    2e64:	98 a7       	std	Y+40, r25	; 0x28
    2e66:	8d a1       	ldd	r24, Y+37	; 0x25
    2e68:	9e a1       	ldd	r25, Y+38	; 0x26
    2e6a:	af a1       	ldd	r26, Y+39	; 0x27
    2e6c:	b8 a5       	ldd	r27, Y+40	; 0x28
    2e6e:	8d 83       	std	Y+5, r24	; 0x05
    2e70:	9e 83       	std	Y+6, r25	; 0x06
    2e72:	af 83       	std	Y+7, r26	; 0x07
    2e74:	b8 87       	std	Y+8, r27	; 0x08

00002e76 <.Loc.153>:
	if (__tmp < 1.0)
    2e76:	20 e0       	ldi	r18, 0x00	; 0
    2e78:	30 e0       	ldi	r19, 0x00	; 0
    2e7a:	40 e8       	ldi	r20, 0x80	; 128
    2e7c:	5f e3       	ldi	r21, 0x3F	; 63
    2e7e:	6d 81       	ldd	r22, Y+5	; 0x05
    2e80:	7e 81       	ldd	r23, Y+6	; 0x06
    2e82:	8f 81       	ldd	r24, Y+7	; 0x07
    2e84:	98 85       	ldd	r25, Y+8	; 0x08
    2e86:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    2e8a:	88 23       	and	r24, r24
    2e8c:	2c f4       	brge	.+10     	; 0x2e98 <.L61>

00002e8e <.Loc.154>:
		__ticks = 1;
    2e8e:	81 e0       	ldi	r24, 0x01	; 1
    2e90:	90 e0       	ldi	r25, 0x00	; 0
    2e92:	9a 87       	std	Y+10, r25	; 0x0a
    2e94:	89 87       	std	Y+9, r24	; 0x09
    2e96:	55 c0       	rjmp	.+170    	; 0x2f42 <.L41>

00002e98 <.L61>:
	else if (__tmp > 65535)
    2e98:	20 e0       	ldi	r18, 0x00	; 0
    2e9a:	3f ef       	ldi	r19, 0xFF	; 255
    2e9c:	4f e7       	ldi	r20, 0x7F	; 127
    2e9e:	57 e4       	ldi	r21, 0x47	; 71
    2ea0:	6d 81       	ldd	r22, Y+5	; 0x05
    2ea2:	7e 81       	ldd	r23, Y+6	; 0x06
    2ea4:	8f 81       	ldd	r24, Y+7	; 0x07
    2ea6:	98 85       	ldd	r25, Y+8	; 0x08
    2ea8:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    2eac:	88 23       	and	r24, r24
    2eae:	d9 f1       	breq	.+118    	; 0x2f26 <.L62>
    2eb0:	d4 f1       	brlt	.+116    	; 0x2f26 <.L62>

00002eb2 <.Loc.156>:
		__ticks = (uint16_t) (__ms * 10.0);
    2eb2:	20 e0       	ldi	r18, 0x00	; 0
    2eb4:	30 e0       	ldi	r19, 0x00	; 0
    2eb6:	40 e2       	ldi	r20, 0x20	; 32
    2eb8:	51 e4       	ldi	r21, 0x41	; 65
    2eba:	69 81       	ldd	r22, Y+1	; 0x01
    2ebc:	7a 81       	ldd	r23, Y+2	; 0x02
    2ebe:	8b 81       	ldd	r24, Y+3	; 0x03
    2ec0:	9c 81       	ldd	r25, Y+4	; 0x04
    2ec2:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    2ec6:	69 a7       	std	Y+41, r22	; 0x29
    2ec8:	7a a7       	std	Y+42, r23	; 0x2a
    2eca:	8b a7       	std	Y+43, r24	; 0x2b
    2ecc:	9c a7       	std	Y+44, r25	; 0x2c
    2ece:	89 a5       	ldd	r24, Y+41	; 0x29
    2ed0:	9a a5       	ldd	r25, Y+42	; 0x2a
    2ed2:	ab a5       	ldd	r26, Y+43	; 0x2b
    2ed4:	bc a5       	ldd	r27, Y+44	; 0x2c
    2ed6:	8d 8f       	std	Y+29, r24	; 0x1d
    2ed8:	9e 8f       	std	Y+30, r25	; 0x1e
    2eda:	af 8f       	std	Y+31, r26	; 0x1f
    2edc:	b8 a3       	std	Y+32, r27	; 0x20

00002ede <.Loc.157>:
    2ede:	6d 8d       	ldd	r22, Y+29	; 0x1d
    2ee0:	7e 8d       	ldd	r23, Y+30	; 0x1e
    2ee2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2ee4:	98 a1       	ldd	r25, Y+32	; 0x20
    2ee6:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    2eea:	6d a7       	std	Y+45, r22	; 0x2d
    2eec:	7e a7       	std	Y+46, r23	; 0x2e
    2eee:	8f a7       	std	Y+47, r24	; 0x2f
    2ef0:	98 ab       	std	Y+48, r25	; 0x30
    2ef2:	ad a5       	ldd	r26, Y+45	; 0x2d
    2ef4:	be a5       	ldd	r27, Y+46	; 0x2e
    2ef6:	ba 87       	std	Y+10, r27	; 0x0a
    2ef8:	a9 87       	std	Y+9, r26	; 0x09

00002efa <.Loc.158>:
		while(__ticks)
    2efa:	10 c0       	rjmp	.+32     	; 0x2f1c <.L44>

00002efc <.L45>:
    2efc:	80 e9       	ldi	r24, 0x90	; 144
    2efe:	91 e0       	ldi	r25, 0x01	; 1
    2f00:	9c 87       	std	Y+12, r25	; 0x0c
    2f02:	8b 87       	std	Y+11, r24	; 0x0b

00002f04 <.LBB82>:
	__asm__ volatile (
    2f04:	8b 85       	ldd	r24, Y+11	; 0x0b
    2f06:	9c 85       	ldd	r25, Y+12	; 0x0c

00002f08 <.L1^B1>:
    2f08:	01 97       	sbiw	r24, 0x01	; 1
    2f0a:	f1 f7       	brne	.-4      	; 0x2f08 <.L1^B1>
    2f0c:	9c 87       	std	Y+12, r25	; 0x0c
    2f0e:	8b 87       	std	Y+11, r24	; 0x0b

00002f10 <.Loc.160>:
	...

00002f12 <.LBE82>:
			__ticks --;
    2f12:	89 85       	ldd	r24, Y+9	; 0x09
    2f14:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f16:	01 97       	sbiw	r24, 0x01	; 1
    2f18:	9a 87       	std	Y+10, r25	; 0x0a
    2f1a:	89 87       	std	Y+9, r24	; 0x09

00002f1c <.L44>:
		while(__ticks)
    2f1c:	89 85       	ldd	r24, Y+9	; 0x09
    2f1e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f20:	00 97       	sbiw	r24, 0x00	; 0
    2f22:	61 f7       	brne	.-40     	; 0x2efc <.L45>

00002f24 <.Loc.163>:
		return;
    2f24:	19 c0       	rjmp	.+50     	; 0x2f58 <.L46>

00002f26 <.L62>:
		__ticks = (uint16_t)__tmp;
    2f26:	6d 81       	ldd	r22, Y+5	; 0x05
    2f28:	7e 81       	ldd	r23, Y+6	; 0x06
    2f2a:	8f 81       	ldd	r24, Y+7	; 0x07
    2f2c:	98 85       	ldd	r25, Y+8	; 0x08
    2f2e:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    2f32:	69 ab       	std	Y+49, r22	; 0x31
    2f34:	7a ab       	std	Y+50, r23	; 0x32
    2f36:	8b ab       	std	Y+51, r24	; 0x33
    2f38:	9c ab       	std	Y+52, r25	; 0x34
    2f3a:	e9 a9       	ldd	r30, Y+49	; 0x31
    2f3c:	fa a9       	ldd	r31, Y+50	; 0x32
    2f3e:	fa 87       	std	Y+10, r31	; 0x0a
    2f40:	e9 87       	std	Y+9, r30	; 0x09

00002f42 <.L41>:
    2f42:	89 85       	ldd	r24, Y+9	; 0x09
    2f44:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f46:	9e 87       	std	Y+14, r25	; 0x0e
    2f48:	8d 87       	std	Y+13, r24	; 0x0d

00002f4a <.LBB84>:
    2f4a:	8d 85       	ldd	r24, Y+13	; 0x0d
    2f4c:	9e 85       	ldd	r25, Y+14	; 0x0e

00002f4e <.L1^B2>:
    2f4e:	01 97       	sbiw	r24, 0x01	; 1
    2f50:	f1 f7       	brne	.-4      	; 0x2f4e <.L1^B2>
    2f52:	9e 87       	std	Y+14, r25	; 0x0e
    2f54:	8d 87       	std	Y+13, r24	; 0x0d

00002f56 <.Loc.166>:
	...

00002f58 <.L46>:
            _delay_ms(20);
            return(0);
    2f58:	80 e0       	ldi	r24, 0x00	; 0
    2f5a:	90 e0       	ldi	r25, 0x00	; 0
    2f5c:	a4 c0       	rjmp	.+328    	; 0x30a6 <.L37>

00002f5e <.L38>:
            }
        if ((PINA & (1<<PA2)) != 0){
    2f5e:	80 e2       	ldi	r24, 0x20	; 32
    2f60:	90 e0       	ldi	r25, 0x00	; 0
    2f62:	dc 01       	movw	r26, r24
    2f64:	8c 91       	ld	r24, X

00002f66 <.Loc.169>:
    2f66:	88 2f       	mov	r24, r24
    2f68:	90 e0       	ldi	r25, 0x00	; 0
    2f6a:	84 70       	andi	r24, 0x04	; 4
    2f6c:	99 27       	eor	r25, r25

00002f6e <.Loc.170>:
    2f6e:	00 97       	sbiw	r24, 0x00	; 0
    2f70:	09 f4       	brne	.+2      	; 0x2f74 <L0^A+0x2>

00002f72 <L0^A>:
    2f72:	99 c0       	rjmp	.+306    	; 0x30a6 <.L37>
    2f74:	80 e0       	ldi	r24, 0x00	; 0
    2f76:	90 e0       	ldi	r25, 0x00	; 0
    2f78:	a0 ea       	ldi	r26, 0xA0	; 160
    2f7a:	b1 e4       	ldi	r27, 0x41	; 65
    2f7c:	8f 87       	std	Y+15, r24	; 0x0f
    2f7e:	98 8b       	std	Y+16, r25	; 0x10
    2f80:	a9 8b       	std	Y+17, r26	; 0x11
    2f82:	ba 8b       	std	Y+18, r27	; 0x12

00002f84 <.LBB86>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    2f84:	20 e0       	ldi	r18, 0x00	; 0
    2f86:	30 e0       	ldi	r19, 0x00	; 0
    2f88:	4a e7       	ldi	r20, 0x7A	; 122
    2f8a:	55 e4       	ldi	r21, 0x45	; 69
    2f8c:	6f 85       	ldd	r22, Y+15	; 0x0f
    2f8e:	78 89       	ldd	r23, Y+16	; 0x10
    2f90:	89 89       	ldd	r24, Y+17	; 0x11
    2f92:	9a 89       	ldd	r25, Y+18	; 0x12
    2f94:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    2f98:	6d ab       	std	Y+53, r22	; 0x35
    2f9a:	7e ab       	std	Y+54, r23	; 0x36
    2f9c:	8f ab       	std	Y+55, r24	; 0x37
    2f9e:	98 af       	std	Y+56, r25	; 0x38
    2fa0:	8d a9       	ldd	r24, Y+53	; 0x35
    2fa2:	9e a9       	ldd	r25, Y+54	; 0x36
    2fa4:	af a9       	ldd	r26, Y+55	; 0x37
    2fa6:	b8 ad       	ldd	r27, Y+56	; 0x38
    2fa8:	8b 8b       	std	Y+19, r24	; 0x13
    2faa:	9c 8b       	std	Y+20, r25	; 0x14
    2fac:	ad 8b       	std	Y+21, r26	; 0x15
    2fae:	be 8b       	std	Y+22, r27	; 0x16

00002fb0 <.Loc.172>:
	if (__tmp < 1.0)
    2fb0:	20 e0       	ldi	r18, 0x00	; 0
    2fb2:	30 e0       	ldi	r19, 0x00	; 0
    2fb4:	40 e8       	ldi	r20, 0x80	; 128
    2fb6:	5f e3       	ldi	r21, 0x3F	; 63
    2fb8:	6b 89       	ldd	r22, Y+19	; 0x13
    2fba:	7c 89       	ldd	r23, Y+20	; 0x14
    2fbc:	8d 89       	ldd	r24, Y+21	; 0x15
    2fbe:	9e 89       	ldd	r25, Y+22	; 0x16
    2fc0:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    2fc4:	88 23       	and	r24, r24
    2fc6:	2c f4       	brge	.+10     	; 0x2fd2 <.L63>

00002fc8 <.Loc.173>:
		__ticks = 1;
    2fc8:	81 e0       	ldi	r24, 0x01	; 1
    2fca:	90 e0       	ldi	r25, 0x00	; 0
    2fcc:	98 8f       	std	Y+24, r25	; 0x18
    2fce:	8f 8b       	std	Y+23, r24	; 0x17
    2fd0:	5c c0       	rjmp	.+184    	; 0x308a <.L51>

00002fd2 <.L63>:
	else if (__tmp > 65535)
    2fd2:	20 e0       	ldi	r18, 0x00	; 0
    2fd4:	3f ef       	ldi	r19, 0xFF	; 255
    2fd6:	4f e7       	ldi	r20, 0x7F	; 127
    2fd8:	57 e4       	ldi	r21, 0x47	; 71
    2fda:	6b 89       	ldd	r22, Y+19	; 0x13
    2fdc:	7c 89       	ldd	r23, Y+20	; 0x14
    2fde:	8d 89       	ldd	r24, Y+21	; 0x15
    2fe0:	9e 89       	ldd	r25, Y+22	; 0x16
    2fe2:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    2fe6:	88 23       	and	r24, r24
    2fe8:	09 f0       	breq	.+2      	; 0x2fec <L0^A>

00002fea <L0^A>:
    2fea:	0c f4       	brge	.+2      	; 0x2fee <.Loc.175>

00002fec <L0^A>:
    2fec:	3c c0       	rjmp	.+120    	; 0x3066 <.L64>

00002fee <.Loc.175>:
		__ticks = (uint16_t) (__ms * 10.0);
    2fee:	20 e0       	ldi	r18, 0x00	; 0
    2ff0:	30 e0       	ldi	r19, 0x00	; 0
    2ff2:	40 e2       	ldi	r20, 0x20	; 32
    2ff4:	51 e4       	ldi	r21, 0x41	; 65
    2ff6:	6f 85       	ldd	r22, Y+15	; 0x0f
    2ff8:	78 89       	ldd	r23, Y+16	; 0x10
    2ffa:	89 89       	ldd	r24, Y+17	; 0x11
    2ffc:	9a 89       	ldd	r25, Y+18	; 0x12
    2ffe:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    3002:	69 af       	std	Y+57, r22	; 0x39
    3004:	7a af       	std	Y+58, r23	; 0x3a
    3006:	8b af       	std	Y+59, r24	; 0x3b
    3008:	9c af       	std	Y+60, r25	; 0x3c
    300a:	89 ad       	ldd	r24, Y+57	; 0x39
    300c:	9a ad       	ldd	r25, Y+58	; 0x3a
    300e:	ab ad       	ldd	r26, Y+59	; 0x3b
    3010:	bc ad       	ldd	r27, Y+60	; 0x3c
    3012:	89 a3       	std	Y+33, r24	; 0x21
    3014:	9a a3       	std	Y+34, r25	; 0x22
    3016:	ab a3       	std	Y+35, r26	; 0x23
    3018:	bc a3       	std	Y+36, r27	; 0x24

0000301a <.Loc.176>:
    301a:	69 a1       	ldd	r22, Y+33	; 0x21
    301c:	7a a1       	ldd	r23, Y+34	; 0x22
    301e:	8b a1       	ldd	r24, Y+35	; 0x23
    3020:	9c a1       	ldd	r25, Y+36	; 0x24
    3022:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    3026:	21 96       	adiw	r28, 0x01	; 1
    3028:	6c af       	std	Y+60, r22	; 0x3c
    302a:	7d af       	std	Y+61, r23	; 0x3d
    302c:	8e af       	std	Y+62, r24	; 0x3e
    302e:	9f af       	std	Y+63, r25	; 0x3f
    3030:	21 97       	sbiw	r28, 0x01	; 1
    3032:	ad ad       	ldd	r26, Y+61	; 0x3d
    3034:	be ad       	ldd	r27, Y+62	; 0x3e
    3036:	b8 8f       	std	Y+24, r27	; 0x18
    3038:	af 8b       	std	Y+23, r26	; 0x17

0000303a <.Loc.177>:
		while(__ticks)
    303a:	10 c0       	rjmp	.+32     	; 0x305c <.L54>

0000303c <.L55>:
    303c:	80 e9       	ldi	r24, 0x90	; 144
    303e:	91 e0       	ldi	r25, 0x01	; 1
    3040:	9a 8f       	std	Y+26, r25	; 0x1a
    3042:	89 8f       	std	Y+25, r24	; 0x19

00003044 <.LBB88>:
    3044:	89 8d       	ldd	r24, Y+25	; 0x19
    3046:	9a 8d       	ldd	r25, Y+26	; 0x1a

00003048 <.L1^B3>:
    3048:	01 97       	sbiw	r24, 0x01	; 1
    304a:	f1 f7       	brne	.-4      	; 0x3048 <.L1^B3>
    304c:	9a 8f       	std	Y+26, r25	; 0x1a
    304e:	89 8f       	std	Y+25, r24	; 0x19

00003050 <.Loc.179>:
	...

00003052 <.LBE88>:
			__ticks --;
    3052:	8f 89       	ldd	r24, Y+23	; 0x17
    3054:	98 8d       	ldd	r25, Y+24	; 0x18
    3056:	01 97       	sbiw	r24, 0x01	; 1
    3058:	98 8f       	std	Y+24, r25	; 0x18
    305a:	8f 8b       	std	Y+23, r24	; 0x17

0000305c <.L54>:
		while(__ticks)
    305c:	8f 89       	ldd	r24, Y+23	; 0x17
    305e:	98 8d       	ldd	r25, Y+24	; 0x18
    3060:	00 97       	sbiw	r24, 0x00	; 0
    3062:	61 f7       	brne	.-40     	; 0x303c <.L55>

00003064 <.Loc.182>:
		return;
    3064:	1d c0       	rjmp	.+58     	; 0x30a0 <.L56>

00003066 <.L64>:
		__ticks = (uint16_t)__tmp;
    3066:	6b 89       	ldd	r22, Y+19	; 0x13
    3068:	7c 89       	ldd	r23, Y+20	; 0x14
    306a:	8d 89       	ldd	r24, Y+21	; 0x15
    306c:	9e 89       	ldd	r25, Y+22	; 0x16
    306e:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    3072:	25 96       	adiw	r28, 0x05	; 5
    3074:	6c af       	std	Y+60, r22	; 0x3c
    3076:	7d af       	std	Y+61, r23	; 0x3d
    3078:	8e af       	std	Y+62, r24	; 0x3e
    307a:	9f af       	std	Y+63, r25	; 0x3f
    307c:	25 97       	sbiw	r28, 0x05	; 5
    307e:	23 96       	adiw	r28, 0x03	; 3
    3080:	ee ad       	ldd	r30, Y+62	; 0x3e
    3082:	ff ad       	ldd	r31, Y+63	; 0x3f
    3084:	23 97       	sbiw	r28, 0x03	; 3
    3086:	f8 8f       	std	Y+24, r31	; 0x18
    3088:	ef 8b       	std	Y+23, r30	; 0x17

0000308a <.L51>:
    308a:	8f 89       	ldd	r24, Y+23	; 0x17
    308c:	98 8d       	ldd	r25, Y+24	; 0x18
    308e:	9c 8f       	std	Y+28, r25	; 0x1c
    3090:	8b 8f       	std	Y+27, r24	; 0x1b

00003092 <.LBB90>:
    3092:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3094:	9c 8d       	ldd	r25, Y+28	; 0x1c

00003096 <.L1^B4>:
    3096:	01 97       	sbiw	r24, 0x01	; 1
    3098:	f1 f7       	brne	.-4      	; 0x3096 <.L1^B4>
    309a:	9c 8f       	std	Y+28, r25	; 0x1c
    309c:	8b 8f       	std	Y+27, r24	; 0x1b

0000309e <.Loc.185>:
	...

000030a0 <.L56>:
            _delay_ms(20);
            return(1);
    30a0:	81 e0       	ldi	r24, 0x01	; 1
    30a2:	90 e0       	ldi	r25, 0x00	; 0
    30a4:	00 c0       	rjmp	.+0      	; 0x30a6 <.L37>

000030a6 <.L37>:
            }
}
    30a6:	cc 5b       	subi	r28, 0xBC	; 188
    30a8:	df 4f       	sbci	r29, 0xFF	; 255
    30aa:	0f b6       	in	r0, 0x3f	; 63
    30ac:	f8 94       	cli
    30ae:	de bf       	out	0x3e, r29	; 62
    30b0:	0f be       	out	0x3f, r0	; 63
    30b2:	cd bf       	out	0x3d, r28	; 61
    30b4:	df 91       	pop	r29
    30b6:	cf 91       	pop	r28
    30b8:	08 95       	ret

000030ba <leestaanknopuit>:

int leestaanknopuit(void){
    30ba:	cf 93       	push	r28
    30bc:	df 93       	push	r29
    30be:	cd b7       	in	r28, 0x3d	; 61
    30c0:	de b7       	in	r29, 0x3e	; 62
    30c2:	c4 54       	subi	r28, 0x44	; 68
    30c4:	d1 09       	sbc	r29, r1
    30c6:	0f b6       	in	r0, 0x3f	; 63
    30c8:	f8 94       	cli
    30ca:	de bf       	out	0x3e, r29	; 62
    30cc:	0f be       	out	0x3f, r0	; 63
    30ce:	cd bf       	out	0x3d, r28	; 61

000030d0 <.Loc.189>:
        if ((PINA & (1<<PA0)) == 0){
    30d0:	80 e2       	ldi	r24, 0x20	; 32
    30d2:	90 e0       	ldi	r25, 0x00	; 0
    30d4:	dc 01       	movw	r26, r24
    30d6:	8c 91       	ld	r24, X

000030d8 <.Loc.190>:
    30d8:	88 2f       	mov	r24, r24
    30da:	90 e0       	ldi	r25, 0x00	; 0
    30dc:	81 70       	andi	r24, 0x01	; 1
    30de:	99 27       	eor	r25, r25

000030e0 <.Loc.191>:
    30e0:	00 97       	sbiw	r24, 0x00	; 0
    30e2:	09 f0       	breq	.+2      	; 0x30e6 <L0^A+0x2>

000030e4 <L0^A>:
    30e4:	92 c0       	rjmp	.+292    	; 0x320a <.L66>
    30e6:	80 e0       	ldi	r24, 0x00	; 0
    30e8:	90 e0       	ldi	r25, 0x00	; 0
    30ea:	a0 ea       	ldi	r26, 0xA0	; 160
    30ec:	b1 e4       	ldi	r27, 0x41	; 65
    30ee:	89 83       	std	Y+1, r24	; 0x01
    30f0:	9a 83       	std	Y+2, r25	; 0x02
    30f2:	ab 83       	std	Y+3, r26	; 0x03
    30f4:	bc 83       	std	Y+4, r27	; 0x04

000030f6 <.LBB92>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    30f6:	20 e0       	ldi	r18, 0x00	; 0
    30f8:	30 e0       	ldi	r19, 0x00	; 0
    30fa:	4a e7       	ldi	r20, 0x7A	; 122
    30fc:	55 e4       	ldi	r21, 0x45	; 69
    30fe:	69 81       	ldd	r22, Y+1	; 0x01
    3100:	7a 81       	ldd	r23, Y+2	; 0x02
    3102:	8b 81       	ldd	r24, Y+3	; 0x03
    3104:	9c 81       	ldd	r25, Y+4	; 0x04
    3106:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    310a:	6d a3       	std	Y+37, r22	; 0x25
    310c:	7e a3       	std	Y+38, r23	; 0x26
    310e:	8f a3       	std	Y+39, r24	; 0x27
    3110:	98 a7       	std	Y+40, r25	; 0x28
    3112:	8d a1       	ldd	r24, Y+37	; 0x25
    3114:	9e a1       	ldd	r25, Y+38	; 0x26
    3116:	af a1       	ldd	r26, Y+39	; 0x27
    3118:	b8 a5       	ldd	r27, Y+40	; 0x28
    311a:	8d 83       	std	Y+5, r24	; 0x05
    311c:	9e 83       	std	Y+6, r25	; 0x06
    311e:	af 83       	std	Y+7, r26	; 0x07
    3120:	b8 87       	std	Y+8, r27	; 0x08

00003122 <.Loc.193>:
	if (__tmp < 1.0)
    3122:	20 e0       	ldi	r18, 0x00	; 0
    3124:	30 e0       	ldi	r19, 0x00	; 0
    3126:	40 e8       	ldi	r20, 0x80	; 128
    3128:	5f e3       	ldi	r21, 0x3F	; 63
    312a:	6d 81       	ldd	r22, Y+5	; 0x05
    312c:	7e 81       	ldd	r23, Y+6	; 0x06
    312e:	8f 81       	ldd	r24, Y+7	; 0x07
    3130:	98 85       	ldd	r25, Y+8	; 0x08
    3132:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    3136:	88 23       	and	r24, r24
    3138:	2c f4       	brge	.+10     	; 0x3144 <.L89>

0000313a <.Loc.194>:
		__ticks = 1;
    313a:	81 e0       	ldi	r24, 0x01	; 1
    313c:	90 e0       	ldi	r25, 0x00	; 0
    313e:	9a 87       	std	Y+10, r25	; 0x0a
    3140:	89 87       	std	Y+9, r24	; 0x09
    3142:	55 c0       	rjmp	.+170    	; 0x31ee <.L69>

00003144 <.L89>:
	else if (__tmp > 65535)
    3144:	20 e0       	ldi	r18, 0x00	; 0
    3146:	3f ef       	ldi	r19, 0xFF	; 255
    3148:	4f e7       	ldi	r20, 0x7F	; 127
    314a:	57 e4       	ldi	r21, 0x47	; 71
    314c:	6d 81       	ldd	r22, Y+5	; 0x05
    314e:	7e 81       	ldd	r23, Y+6	; 0x06
    3150:	8f 81       	ldd	r24, Y+7	; 0x07
    3152:	98 85       	ldd	r25, Y+8	; 0x08
    3154:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    3158:	88 23       	and	r24, r24
    315a:	d9 f1       	breq	.+118    	; 0x31d2 <.L90>
    315c:	d4 f1       	brlt	.+116    	; 0x31d2 <.L90>

0000315e <.Loc.196>:
		__ticks = (uint16_t) (__ms * 10.0);
    315e:	20 e0       	ldi	r18, 0x00	; 0
    3160:	30 e0       	ldi	r19, 0x00	; 0
    3162:	40 e2       	ldi	r20, 0x20	; 32
    3164:	51 e4       	ldi	r21, 0x41	; 65
    3166:	69 81       	ldd	r22, Y+1	; 0x01
    3168:	7a 81       	ldd	r23, Y+2	; 0x02
    316a:	8b 81       	ldd	r24, Y+3	; 0x03
    316c:	9c 81       	ldd	r25, Y+4	; 0x04
    316e:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    3172:	69 a7       	std	Y+41, r22	; 0x29
    3174:	7a a7       	std	Y+42, r23	; 0x2a
    3176:	8b a7       	std	Y+43, r24	; 0x2b
    3178:	9c a7       	std	Y+44, r25	; 0x2c
    317a:	89 a5       	ldd	r24, Y+41	; 0x29
    317c:	9a a5       	ldd	r25, Y+42	; 0x2a
    317e:	ab a5       	ldd	r26, Y+43	; 0x2b
    3180:	bc a5       	ldd	r27, Y+44	; 0x2c
    3182:	8d 8f       	std	Y+29, r24	; 0x1d
    3184:	9e 8f       	std	Y+30, r25	; 0x1e
    3186:	af 8f       	std	Y+31, r26	; 0x1f
    3188:	b8 a3       	std	Y+32, r27	; 0x20

0000318a <.Loc.197>:
    318a:	6d 8d       	ldd	r22, Y+29	; 0x1d
    318c:	7e 8d       	ldd	r23, Y+30	; 0x1e
    318e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3190:	98 a1       	ldd	r25, Y+32	; 0x20
    3192:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    3196:	6d a7       	std	Y+45, r22	; 0x2d
    3198:	7e a7       	std	Y+46, r23	; 0x2e
    319a:	8f a7       	std	Y+47, r24	; 0x2f
    319c:	98 ab       	std	Y+48, r25	; 0x30
    319e:	ad a5       	ldd	r26, Y+45	; 0x2d
    31a0:	be a5       	ldd	r27, Y+46	; 0x2e
    31a2:	ba 87       	std	Y+10, r27	; 0x0a
    31a4:	a9 87       	std	Y+9, r26	; 0x09

000031a6 <.Loc.198>:
		while(__ticks)
    31a6:	10 c0       	rjmp	.+32     	; 0x31c8 <.L72>

000031a8 <.L73>:
    31a8:	80 e9       	ldi	r24, 0x90	; 144
    31aa:	91 e0       	ldi	r25, 0x01	; 1
    31ac:	9c 87       	std	Y+12, r25	; 0x0c
    31ae:	8b 87       	std	Y+11, r24	; 0x0b

000031b0 <.LBB94>:
    31b0:	8b 85       	ldd	r24, Y+11	; 0x0b
    31b2:	9c 85       	ldd	r25, Y+12	; 0x0c

000031b4 <.L1^B5>:
    31b4:	01 97       	sbiw	r24, 0x01	; 1
    31b6:	f1 f7       	brne	.-4      	; 0x31b4 <.L1^B5>
    31b8:	9c 87       	std	Y+12, r25	; 0x0c
    31ba:	8b 87       	std	Y+11, r24	; 0x0b

000031bc <.Loc.200>:
	...

000031be <.LBE94>:
			__ticks --;
    31be:	89 85       	ldd	r24, Y+9	; 0x09
    31c0:	9a 85       	ldd	r25, Y+10	; 0x0a
    31c2:	01 97       	sbiw	r24, 0x01	; 1
    31c4:	9a 87       	std	Y+10, r25	; 0x0a
    31c6:	89 87       	std	Y+9, r24	; 0x09

000031c8 <.L72>:
		while(__ticks)
    31c8:	89 85       	ldd	r24, Y+9	; 0x09
    31ca:	9a 85       	ldd	r25, Y+10	; 0x0a
    31cc:	00 97       	sbiw	r24, 0x00	; 0
    31ce:	61 f7       	brne	.-40     	; 0x31a8 <.L73>

000031d0 <.Loc.203>:
		return;
    31d0:	19 c0       	rjmp	.+50     	; 0x3204 <.L74>

000031d2 <.L90>:
		__ticks = (uint16_t)__tmp;
    31d2:	6d 81       	ldd	r22, Y+5	; 0x05
    31d4:	7e 81       	ldd	r23, Y+6	; 0x06
    31d6:	8f 81       	ldd	r24, Y+7	; 0x07
    31d8:	98 85       	ldd	r25, Y+8	; 0x08
    31da:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    31de:	69 ab       	std	Y+49, r22	; 0x31
    31e0:	7a ab       	std	Y+50, r23	; 0x32
    31e2:	8b ab       	std	Y+51, r24	; 0x33
    31e4:	9c ab       	std	Y+52, r25	; 0x34
    31e6:	e9 a9       	ldd	r30, Y+49	; 0x31
    31e8:	fa a9       	ldd	r31, Y+50	; 0x32
    31ea:	fa 87       	std	Y+10, r31	; 0x0a
    31ec:	e9 87       	std	Y+9, r30	; 0x09

000031ee <.L69>:
    31ee:	89 85       	ldd	r24, Y+9	; 0x09
    31f0:	9a 85       	ldd	r25, Y+10	; 0x0a
    31f2:	9e 87       	std	Y+14, r25	; 0x0e
    31f4:	8d 87       	std	Y+13, r24	; 0x0d

000031f6 <.LBB96>:
    31f6:	8d 85       	ldd	r24, Y+13	; 0x0d
    31f8:	9e 85       	ldd	r25, Y+14	; 0x0e

000031fa <.L1^B6>:
    31fa:	01 97       	sbiw	r24, 0x01	; 1
    31fc:	f1 f7       	brne	.-4      	; 0x31fa <.L1^B6>
    31fe:	9e 87       	std	Y+14, r25	; 0x0e
    3200:	8d 87       	std	Y+13, r24	; 0x0d

00003202 <.Loc.206>:
	...

00003204 <.L74>:
            _delay_ms(20);
            return(0);
    3204:	80 e0       	ldi	r24, 0x00	; 0
    3206:	90 e0       	ldi	r25, 0x00	; 0
    3208:	a4 c0       	rjmp	.+328    	; 0x3352 <.L65>

0000320a <.L66>:
            }
        if ((PINA & (1<<PA0)) != 0){
    320a:	80 e2       	ldi	r24, 0x20	; 32
    320c:	90 e0       	ldi	r25, 0x00	; 0
    320e:	dc 01       	movw	r26, r24
    3210:	8c 91       	ld	r24, X

00003212 <.Loc.209>:
    3212:	88 2f       	mov	r24, r24
    3214:	90 e0       	ldi	r25, 0x00	; 0
    3216:	81 70       	andi	r24, 0x01	; 1
    3218:	99 27       	eor	r25, r25

0000321a <.Loc.210>:
    321a:	00 97       	sbiw	r24, 0x00	; 0
    321c:	09 f4       	brne	.+2      	; 0x3220 <L0^A+0x2>

0000321e <L0^A>:
    321e:	99 c0       	rjmp	.+306    	; 0x3352 <.L65>
    3220:	80 e0       	ldi	r24, 0x00	; 0
    3222:	90 e0       	ldi	r25, 0x00	; 0
    3224:	a0 ea       	ldi	r26, 0xA0	; 160
    3226:	b1 e4       	ldi	r27, 0x41	; 65
    3228:	8f 87       	std	Y+15, r24	; 0x0f
    322a:	98 8b       	std	Y+16, r25	; 0x10
    322c:	a9 8b       	std	Y+17, r26	; 0x11
    322e:	ba 8b       	std	Y+18, r27	; 0x12

00003230 <.LBB98>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    3230:	20 e0       	ldi	r18, 0x00	; 0
    3232:	30 e0       	ldi	r19, 0x00	; 0
    3234:	4a e7       	ldi	r20, 0x7A	; 122
    3236:	55 e4       	ldi	r21, 0x45	; 69
    3238:	6f 85       	ldd	r22, Y+15	; 0x0f
    323a:	78 89       	ldd	r23, Y+16	; 0x10
    323c:	89 89       	ldd	r24, Y+17	; 0x11
    323e:	9a 89       	ldd	r25, Y+18	; 0x12
    3240:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    3244:	6d ab       	std	Y+53, r22	; 0x35
    3246:	7e ab       	std	Y+54, r23	; 0x36
    3248:	8f ab       	std	Y+55, r24	; 0x37
    324a:	98 af       	std	Y+56, r25	; 0x38
    324c:	8d a9       	ldd	r24, Y+53	; 0x35
    324e:	9e a9       	ldd	r25, Y+54	; 0x36
    3250:	af a9       	ldd	r26, Y+55	; 0x37
    3252:	b8 ad       	ldd	r27, Y+56	; 0x38
    3254:	8b 8b       	std	Y+19, r24	; 0x13
    3256:	9c 8b       	std	Y+20, r25	; 0x14
    3258:	ad 8b       	std	Y+21, r26	; 0x15
    325a:	be 8b       	std	Y+22, r27	; 0x16

0000325c <.Loc.212>:
	if (__tmp < 1.0)
    325c:	20 e0       	ldi	r18, 0x00	; 0
    325e:	30 e0       	ldi	r19, 0x00	; 0
    3260:	40 e8       	ldi	r20, 0x80	; 128
    3262:	5f e3       	ldi	r21, 0x3F	; 63
    3264:	6b 89       	ldd	r22, Y+19	; 0x13
    3266:	7c 89       	ldd	r23, Y+20	; 0x14
    3268:	8d 89       	ldd	r24, Y+21	; 0x15
    326a:	9e 89       	ldd	r25, Y+22	; 0x16
    326c:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    3270:	88 23       	and	r24, r24
    3272:	2c f4       	brge	.+10     	; 0x327e <.L91>

00003274 <.Loc.213>:
		__ticks = 1;
    3274:	81 e0       	ldi	r24, 0x01	; 1
    3276:	90 e0       	ldi	r25, 0x00	; 0
    3278:	98 8f       	std	Y+24, r25	; 0x18
    327a:	8f 8b       	std	Y+23, r24	; 0x17
    327c:	5c c0       	rjmp	.+184    	; 0x3336 <.L79>

0000327e <.L91>:
	else if (__tmp > 65535)
    327e:	20 e0       	ldi	r18, 0x00	; 0
    3280:	3f ef       	ldi	r19, 0xFF	; 255
    3282:	4f e7       	ldi	r20, 0x7F	; 127
    3284:	57 e4       	ldi	r21, 0x47	; 71
    3286:	6b 89       	ldd	r22, Y+19	; 0x13
    3288:	7c 89       	ldd	r23, Y+20	; 0x14
    328a:	8d 89       	ldd	r24, Y+21	; 0x15
    328c:	9e 89       	ldd	r25, Y+22	; 0x16
    328e:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    3292:	88 23       	and	r24, r24
    3294:	09 f0       	breq	.+2      	; 0x3298 <L0^A>

00003296 <L0^A>:
    3296:	0c f4       	brge	.+2      	; 0x329a <.Loc.215>

00003298 <L0^A>:
    3298:	3c c0       	rjmp	.+120    	; 0x3312 <.L92>

0000329a <.Loc.215>:
		__ticks = (uint16_t) (__ms * 10.0);
    329a:	20 e0       	ldi	r18, 0x00	; 0
    329c:	30 e0       	ldi	r19, 0x00	; 0
    329e:	40 e2       	ldi	r20, 0x20	; 32
    32a0:	51 e4       	ldi	r21, 0x41	; 65
    32a2:	6f 85       	ldd	r22, Y+15	; 0x0f
    32a4:	78 89       	ldd	r23, Y+16	; 0x10
    32a6:	89 89       	ldd	r24, Y+17	; 0x11
    32a8:	9a 89       	ldd	r25, Y+18	; 0x12
    32aa:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    32ae:	69 af       	std	Y+57, r22	; 0x39
    32b0:	7a af       	std	Y+58, r23	; 0x3a
    32b2:	8b af       	std	Y+59, r24	; 0x3b
    32b4:	9c af       	std	Y+60, r25	; 0x3c
    32b6:	89 ad       	ldd	r24, Y+57	; 0x39
    32b8:	9a ad       	ldd	r25, Y+58	; 0x3a
    32ba:	ab ad       	ldd	r26, Y+59	; 0x3b
    32bc:	bc ad       	ldd	r27, Y+60	; 0x3c
    32be:	89 a3       	std	Y+33, r24	; 0x21
    32c0:	9a a3       	std	Y+34, r25	; 0x22
    32c2:	ab a3       	std	Y+35, r26	; 0x23
    32c4:	bc a3       	std	Y+36, r27	; 0x24

000032c6 <.Loc.216>:
    32c6:	69 a1       	ldd	r22, Y+33	; 0x21
    32c8:	7a a1       	ldd	r23, Y+34	; 0x22
    32ca:	8b a1       	ldd	r24, Y+35	; 0x23
    32cc:	9c a1       	ldd	r25, Y+36	; 0x24
    32ce:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    32d2:	21 96       	adiw	r28, 0x01	; 1
    32d4:	6c af       	std	Y+60, r22	; 0x3c
    32d6:	7d af       	std	Y+61, r23	; 0x3d
    32d8:	8e af       	std	Y+62, r24	; 0x3e
    32da:	9f af       	std	Y+63, r25	; 0x3f
    32dc:	21 97       	sbiw	r28, 0x01	; 1
    32de:	ad ad       	ldd	r26, Y+61	; 0x3d
    32e0:	be ad       	ldd	r27, Y+62	; 0x3e
    32e2:	b8 8f       	std	Y+24, r27	; 0x18
    32e4:	af 8b       	std	Y+23, r26	; 0x17

000032e6 <.Loc.217>:
		while(__ticks)
    32e6:	10 c0       	rjmp	.+32     	; 0x3308 <.L82>

000032e8 <.L83>:
    32e8:	80 e9       	ldi	r24, 0x90	; 144
    32ea:	91 e0       	ldi	r25, 0x01	; 1
    32ec:	9a 8f       	std	Y+26, r25	; 0x1a
    32ee:	89 8f       	std	Y+25, r24	; 0x19

000032f0 <.LBB100>:
    32f0:	89 8d       	ldd	r24, Y+25	; 0x19
    32f2:	9a 8d       	ldd	r25, Y+26	; 0x1a

000032f4 <.L1^B7>:
    32f4:	01 97       	sbiw	r24, 0x01	; 1
    32f6:	f1 f7       	brne	.-4      	; 0x32f4 <.L1^B7>
    32f8:	9a 8f       	std	Y+26, r25	; 0x1a
    32fa:	89 8f       	std	Y+25, r24	; 0x19

000032fc <.Loc.219>:
	...

000032fe <.LBE100>:
			__ticks --;
    32fe:	8f 89       	ldd	r24, Y+23	; 0x17
    3300:	98 8d       	ldd	r25, Y+24	; 0x18
    3302:	01 97       	sbiw	r24, 0x01	; 1
    3304:	98 8f       	std	Y+24, r25	; 0x18
    3306:	8f 8b       	std	Y+23, r24	; 0x17

00003308 <.L82>:
		while(__ticks)
    3308:	8f 89       	ldd	r24, Y+23	; 0x17
    330a:	98 8d       	ldd	r25, Y+24	; 0x18
    330c:	00 97       	sbiw	r24, 0x00	; 0
    330e:	61 f7       	brne	.-40     	; 0x32e8 <.L83>

00003310 <.Loc.222>:
		return;
    3310:	1d c0       	rjmp	.+58     	; 0x334c <.L84>

00003312 <.L92>:
		__ticks = (uint16_t)__tmp;
    3312:	6b 89       	ldd	r22, Y+19	; 0x13
    3314:	7c 89       	ldd	r23, Y+20	; 0x14
    3316:	8d 89       	ldd	r24, Y+21	; 0x15
    3318:	9e 89       	ldd	r25, Y+22	; 0x16
    331a:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    331e:	25 96       	adiw	r28, 0x05	; 5
    3320:	6c af       	std	Y+60, r22	; 0x3c
    3322:	7d af       	std	Y+61, r23	; 0x3d
    3324:	8e af       	std	Y+62, r24	; 0x3e
    3326:	9f af       	std	Y+63, r25	; 0x3f
    3328:	25 97       	sbiw	r28, 0x05	; 5
    332a:	23 96       	adiw	r28, 0x03	; 3
    332c:	ee ad       	ldd	r30, Y+62	; 0x3e
    332e:	ff ad       	ldd	r31, Y+63	; 0x3f
    3330:	23 97       	sbiw	r28, 0x03	; 3
    3332:	f8 8f       	std	Y+24, r31	; 0x18
    3334:	ef 8b       	std	Y+23, r30	; 0x17

00003336 <.L79>:
    3336:	8f 89       	ldd	r24, Y+23	; 0x17
    3338:	98 8d       	ldd	r25, Y+24	; 0x18
    333a:	9c 8f       	std	Y+28, r25	; 0x1c
    333c:	8b 8f       	std	Y+27, r24	; 0x1b

0000333e <.LBB102>:
    333e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3340:	9c 8d       	ldd	r25, Y+28	; 0x1c

00003342 <.L1^B8>:
    3342:	01 97       	sbiw	r24, 0x01	; 1
    3344:	f1 f7       	brne	.-4      	; 0x3342 <.L1^B8>
    3346:	9c 8f       	std	Y+28, r25	; 0x1c
    3348:	8b 8f       	std	Y+27, r24	; 0x1b

0000334a <.Loc.225>:
	...

0000334c <.L84>:
            _delay_ms(20);
            return(1);
    334c:	81 e0       	ldi	r24, 0x01	; 1
    334e:	90 e0       	ldi	r25, 0x00	; 0
    3350:	00 c0       	rjmp	.+0      	; 0x3352 <.L65>

00003352 <.L65>:
            }
}
    3352:	cc 5b       	subi	r28, 0xBC	; 188
    3354:	df 4f       	sbci	r29, 0xFF	; 255
    3356:	0f b6       	in	r0, 0x3f	; 63
    3358:	f8 94       	cli
    335a:	de bf       	out	0x3e, r29	; 62
    335c:	0f be       	out	0x3f, r0	; 63
    335e:	cd bf       	out	0x3d, r28	; 61
    3360:	df 91       	pop	r29
    3362:	cf 91       	pop	r28
    3364:	08 95       	ret

00003366 <leestfollowknopuit>:

int leestfollowknopuit(void){
    3366:	cf 93       	push	r28
    3368:	df 93       	push	r29
    336a:	cd b7       	in	r28, 0x3d	; 61
    336c:	de b7       	in	r29, 0x3e	; 62
    336e:	c4 54       	subi	r28, 0x44	; 68
    3370:	d1 09       	sbc	r29, r1
    3372:	0f b6       	in	r0, 0x3f	; 63
    3374:	f8 94       	cli
    3376:	de bf       	out	0x3e, r29	; 62
    3378:	0f be       	out	0x3f, r0	; 63
    337a:	cd bf       	out	0x3d, r28	; 61

0000337c <.Loc.229>:
        if ((PINA & (1<<PA1)) == 0){
    337c:	80 e2       	ldi	r24, 0x20	; 32
    337e:	90 e0       	ldi	r25, 0x00	; 0
    3380:	dc 01       	movw	r26, r24
    3382:	8c 91       	ld	r24, X

00003384 <.Loc.230>:
    3384:	88 2f       	mov	r24, r24
    3386:	90 e0       	ldi	r25, 0x00	; 0
    3388:	82 70       	andi	r24, 0x02	; 2
    338a:	99 27       	eor	r25, r25

0000338c <.Loc.231>:
    338c:	00 97       	sbiw	r24, 0x00	; 0
    338e:	09 f0       	breq	.+2      	; 0x3392 <L0^A+0x2>

00003390 <L0^A>:
    3390:	92 c0       	rjmp	.+292    	; 0x34b6 <.L94>
    3392:	80 e0       	ldi	r24, 0x00	; 0
    3394:	90 e0       	ldi	r25, 0x00	; 0
    3396:	a0 ea       	ldi	r26, 0xA0	; 160
    3398:	b1 e4       	ldi	r27, 0x41	; 65
    339a:	89 83       	std	Y+1, r24	; 0x01
    339c:	9a 83       	std	Y+2, r25	; 0x02
    339e:	ab 83       	std	Y+3, r26	; 0x03
    33a0:	bc 83       	std	Y+4, r27	; 0x04

000033a2 <.LBB104>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    33a2:	20 e0       	ldi	r18, 0x00	; 0
    33a4:	30 e0       	ldi	r19, 0x00	; 0
    33a6:	4a e7       	ldi	r20, 0x7A	; 122
    33a8:	55 e4       	ldi	r21, 0x45	; 69
    33aa:	69 81       	ldd	r22, Y+1	; 0x01
    33ac:	7a 81       	ldd	r23, Y+2	; 0x02
    33ae:	8b 81       	ldd	r24, Y+3	; 0x03
    33b0:	9c 81       	ldd	r25, Y+4	; 0x04
    33b2:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    33b6:	6d a3       	std	Y+37, r22	; 0x25
    33b8:	7e a3       	std	Y+38, r23	; 0x26
    33ba:	8f a3       	std	Y+39, r24	; 0x27
    33bc:	98 a7       	std	Y+40, r25	; 0x28
    33be:	8d a1       	ldd	r24, Y+37	; 0x25
    33c0:	9e a1       	ldd	r25, Y+38	; 0x26
    33c2:	af a1       	ldd	r26, Y+39	; 0x27
    33c4:	b8 a5       	ldd	r27, Y+40	; 0x28
    33c6:	8d 83       	std	Y+5, r24	; 0x05
    33c8:	9e 83       	std	Y+6, r25	; 0x06
    33ca:	af 83       	std	Y+7, r26	; 0x07
    33cc:	b8 87       	std	Y+8, r27	; 0x08

000033ce <.Loc.233>:
	if (__tmp < 1.0)
    33ce:	20 e0       	ldi	r18, 0x00	; 0
    33d0:	30 e0       	ldi	r19, 0x00	; 0
    33d2:	40 e8       	ldi	r20, 0x80	; 128
    33d4:	5f e3       	ldi	r21, 0x3F	; 63
    33d6:	6d 81       	ldd	r22, Y+5	; 0x05
    33d8:	7e 81       	ldd	r23, Y+6	; 0x06
    33da:	8f 81       	ldd	r24, Y+7	; 0x07
    33dc:	98 85       	ldd	r25, Y+8	; 0x08
    33de:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    33e2:	88 23       	and	r24, r24
    33e4:	2c f4       	brge	.+10     	; 0x33f0 <.L117>

000033e6 <.Loc.234>:
		__ticks = 1;
    33e6:	81 e0       	ldi	r24, 0x01	; 1
    33e8:	90 e0       	ldi	r25, 0x00	; 0
    33ea:	9a 87       	std	Y+10, r25	; 0x0a
    33ec:	89 87       	std	Y+9, r24	; 0x09
    33ee:	55 c0       	rjmp	.+170    	; 0x349a <.L97>

000033f0 <.L117>:
	else if (__tmp > 65535)
    33f0:	20 e0       	ldi	r18, 0x00	; 0
    33f2:	3f ef       	ldi	r19, 0xFF	; 255
    33f4:	4f e7       	ldi	r20, 0x7F	; 127
    33f6:	57 e4       	ldi	r21, 0x47	; 71
    33f8:	6d 81       	ldd	r22, Y+5	; 0x05
    33fa:	7e 81       	ldd	r23, Y+6	; 0x06
    33fc:	8f 81       	ldd	r24, Y+7	; 0x07
    33fe:	98 85       	ldd	r25, Y+8	; 0x08
    3400:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    3404:	88 23       	and	r24, r24
    3406:	d9 f1       	breq	.+118    	; 0x347e <.L118>
    3408:	d4 f1       	brlt	.+116    	; 0x347e <.L118>

0000340a <.Loc.236>:
		__ticks = (uint16_t) (__ms * 10.0);
    340a:	20 e0       	ldi	r18, 0x00	; 0
    340c:	30 e0       	ldi	r19, 0x00	; 0
    340e:	40 e2       	ldi	r20, 0x20	; 32
    3410:	51 e4       	ldi	r21, 0x41	; 65
    3412:	69 81       	ldd	r22, Y+1	; 0x01
    3414:	7a 81       	ldd	r23, Y+2	; 0x02
    3416:	8b 81       	ldd	r24, Y+3	; 0x03
    3418:	9c 81       	ldd	r25, Y+4	; 0x04
    341a:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    341e:	69 a7       	std	Y+41, r22	; 0x29
    3420:	7a a7       	std	Y+42, r23	; 0x2a
    3422:	8b a7       	std	Y+43, r24	; 0x2b
    3424:	9c a7       	std	Y+44, r25	; 0x2c
    3426:	89 a5       	ldd	r24, Y+41	; 0x29
    3428:	9a a5       	ldd	r25, Y+42	; 0x2a
    342a:	ab a5       	ldd	r26, Y+43	; 0x2b
    342c:	bc a5       	ldd	r27, Y+44	; 0x2c
    342e:	8d 8f       	std	Y+29, r24	; 0x1d
    3430:	9e 8f       	std	Y+30, r25	; 0x1e
    3432:	af 8f       	std	Y+31, r26	; 0x1f
    3434:	b8 a3       	std	Y+32, r27	; 0x20

00003436 <.Loc.237>:
    3436:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3438:	7e 8d       	ldd	r23, Y+30	; 0x1e
    343a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    343c:	98 a1       	ldd	r25, Y+32	; 0x20
    343e:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    3442:	6d a7       	std	Y+45, r22	; 0x2d
    3444:	7e a7       	std	Y+46, r23	; 0x2e
    3446:	8f a7       	std	Y+47, r24	; 0x2f
    3448:	98 ab       	std	Y+48, r25	; 0x30
    344a:	ad a5       	ldd	r26, Y+45	; 0x2d
    344c:	be a5       	ldd	r27, Y+46	; 0x2e
    344e:	ba 87       	std	Y+10, r27	; 0x0a
    3450:	a9 87       	std	Y+9, r26	; 0x09

00003452 <.Loc.238>:
		while(__ticks)
    3452:	10 c0       	rjmp	.+32     	; 0x3474 <.L100>

00003454 <.L101>:
    3454:	80 e9       	ldi	r24, 0x90	; 144
    3456:	91 e0       	ldi	r25, 0x01	; 1
    3458:	9c 87       	std	Y+12, r25	; 0x0c
    345a:	8b 87       	std	Y+11, r24	; 0x0b

0000345c <.LBB106>:
    345c:	8b 85       	ldd	r24, Y+11	; 0x0b
    345e:	9c 85       	ldd	r25, Y+12	; 0x0c

00003460 <.L1^B9>:
    3460:	01 97       	sbiw	r24, 0x01	; 1
    3462:	f1 f7       	brne	.-4      	; 0x3460 <.L1^B9>
    3464:	9c 87       	std	Y+12, r25	; 0x0c
    3466:	8b 87       	std	Y+11, r24	; 0x0b

00003468 <.Loc.240>:
	...

0000346a <.LBE106>:
			__ticks --;
    346a:	89 85       	ldd	r24, Y+9	; 0x09
    346c:	9a 85       	ldd	r25, Y+10	; 0x0a
    346e:	01 97       	sbiw	r24, 0x01	; 1
    3470:	9a 87       	std	Y+10, r25	; 0x0a
    3472:	89 87       	std	Y+9, r24	; 0x09

00003474 <.L100>:
		while(__ticks)
    3474:	89 85       	ldd	r24, Y+9	; 0x09
    3476:	9a 85       	ldd	r25, Y+10	; 0x0a
    3478:	00 97       	sbiw	r24, 0x00	; 0
    347a:	61 f7       	brne	.-40     	; 0x3454 <.L101>

0000347c <.Loc.243>:
		return;
    347c:	19 c0       	rjmp	.+50     	; 0x34b0 <.L102>

0000347e <.L118>:
		__ticks = (uint16_t)__tmp;
    347e:	6d 81       	ldd	r22, Y+5	; 0x05
    3480:	7e 81       	ldd	r23, Y+6	; 0x06
    3482:	8f 81       	ldd	r24, Y+7	; 0x07
    3484:	98 85       	ldd	r25, Y+8	; 0x08
    3486:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    348a:	69 ab       	std	Y+49, r22	; 0x31
    348c:	7a ab       	std	Y+50, r23	; 0x32
    348e:	8b ab       	std	Y+51, r24	; 0x33
    3490:	9c ab       	std	Y+52, r25	; 0x34
    3492:	e9 a9       	ldd	r30, Y+49	; 0x31
    3494:	fa a9       	ldd	r31, Y+50	; 0x32
    3496:	fa 87       	std	Y+10, r31	; 0x0a
    3498:	e9 87       	std	Y+9, r30	; 0x09

0000349a <.L97>:
    349a:	89 85       	ldd	r24, Y+9	; 0x09
    349c:	9a 85       	ldd	r25, Y+10	; 0x0a
    349e:	9e 87       	std	Y+14, r25	; 0x0e
    34a0:	8d 87       	std	Y+13, r24	; 0x0d

000034a2 <.LBB108>:
    34a2:	8d 85       	ldd	r24, Y+13	; 0x0d
    34a4:	9e 85       	ldd	r25, Y+14	; 0x0e

000034a6 <.L1^B10>:
    34a6:	01 97       	sbiw	r24, 0x01	; 1
    34a8:	f1 f7       	brne	.-4      	; 0x34a6 <.L1^B10>
    34aa:	9e 87       	std	Y+14, r25	; 0x0e
    34ac:	8d 87       	std	Y+13, r24	; 0x0d

000034ae <.Loc.246>:
	...

000034b0 <.L102>:
            _delay_ms(20);
            return(0);
    34b0:	80 e0       	ldi	r24, 0x00	; 0
    34b2:	90 e0       	ldi	r25, 0x00	; 0
    34b4:	a4 c0       	rjmp	.+328    	; 0x35fe <.L104>

000034b6 <.L94>:
            }
        if ((PINA & (1<<PA1)) != 0){
    34b6:	80 e2       	ldi	r24, 0x20	; 32
    34b8:	90 e0       	ldi	r25, 0x00	; 0
    34ba:	dc 01       	movw	r26, r24
    34bc:	8c 91       	ld	r24, X

000034be <.Loc.249>:
    34be:	88 2f       	mov	r24, r24
    34c0:	90 e0       	ldi	r25, 0x00	; 0
    34c2:	82 70       	andi	r24, 0x02	; 2
    34c4:	99 27       	eor	r25, r25

000034c6 <.Loc.250>:
    34c6:	00 97       	sbiw	r24, 0x00	; 0
    34c8:	09 f4       	brne	.+2      	; 0x34cc <L0^A+0x2>

000034ca <L0^A>:
    34ca:	99 c0       	rjmp	.+306    	; 0x35fe <.L104>
    34cc:	80 e0       	ldi	r24, 0x00	; 0
    34ce:	90 e0       	ldi	r25, 0x00	; 0
    34d0:	a0 ea       	ldi	r26, 0xA0	; 160
    34d2:	b1 e4       	ldi	r27, 0x41	; 65
    34d4:	8f 87       	std	Y+15, r24	; 0x0f
    34d6:	98 8b       	std	Y+16, r25	; 0x10
    34d8:	a9 8b       	std	Y+17, r26	; 0x11
    34da:	ba 8b       	std	Y+18, r27	; 0x12

000034dc <.LBB110>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    34dc:	20 e0       	ldi	r18, 0x00	; 0
    34de:	30 e0       	ldi	r19, 0x00	; 0
    34e0:	4a e7       	ldi	r20, 0x7A	; 122
    34e2:	55 e4       	ldi	r21, 0x45	; 69
    34e4:	6f 85       	ldd	r22, Y+15	; 0x0f
    34e6:	78 89       	ldd	r23, Y+16	; 0x10
    34e8:	89 89       	ldd	r24, Y+17	; 0x11
    34ea:	9a 89       	ldd	r25, Y+18	; 0x12
    34ec:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    34f0:	6d ab       	std	Y+53, r22	; 0x35
    34f2:	7e ab       	std	Y+54, r23	; 0x36
    34f4:	8f ab       	std	Y+55, r24	; 0x37
    34f6:	98 af       	std	Y+56, r25	; 0x38
    34f8:	8d a9       	ldd	r24, Y+53	; 0x35
    34fa:	9e a9       	ldd	r25, Y+54	; 0x36
    34fc:	af a9       	ldd	r26, Y+55	; 0x37
    34fe:	b8 ad       	ldd	r27, Y+56	; 0x38
    3500:	8b 8b       	std	Y+19, r24	; 0x13
    3502:	9c 8b       	std	Y+20, r25	; 0x14
    3504:	ad 8b       	std	Y+21, r26	; 0x15
    3506:	be 8b       	std	Y+22, r27	; 0x16

00003508 <.Loc.252>:
	if (__tmp < 1.0)
    3508:	20 e0       	ldi	r18, 0x00	; 0
    350a:	30 e0       	ldi	r19, 0x00	; 0
    350c:	40 e8       	ldi	r20, 0x80	; 128
    350e:	5f e3       	ldi	r21, 0x3F	; 63
    3510:	6b 89       	ldd	r22, Y+19	; 0x13
    3512:	7c 89       	ldd	r23, Y+20	; 0x14
    3514:	8d 89       	ldd	r24, Y+21	; 0x15
    3516:	9e 89       	ldd	r25, Y+22	; 0x16
    3518:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    351c:	88 23       	and	r24, r24
    351e:	2c f4       	brge	.+10     	; 0x352a <.L119>

00003520 <.Loc.253>:
		__ticks = 1;
    3520:	81 e0       	ldi	r24, 0x01	; 1
    3522:	90 e0       	ldi	r25, 0x00	; 0
    3524:	98 8f       	std	Y+24, r25	; 0x18
    3526:	8f 8b       	std	Y+23, r24	; 0x17
    3528:	5c c0       	rjmp	.+184    	; 0x35e2 <.L107>

0000352a <.L119>:
	else if (__tmp > 65535)
    352a:	20 e0       	ldi	r18, 0x00	; 0
    352c:	3f ef       	ldi	r19, 0xFF	; 255
    352e:	4f e7       	ldi	r20, 0x7F	; 127
    3530:	57 e4       	ldi	r21, 0x47	; 71
    3532:	6b 89       	ldd	r22, Y+19	; 0x13
    3534:	7c 89       	ldd	r23, Y+20	; 0x14
    3536:	8d 89       	ldd	r24, Y+21	; 0x15
    3538:	9e 89       	ldd	r25, Y+22	; 0x16
    353a:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    353e:	88 23       	and	r24, r24
    3540:	09 f0       	breq	.+2      	; 0x3544 <L0^A>

00003542 <L0^A>:
    3542:	0c f4       	brge	.+2      	; 0x3546 <.Loc.255>

00003544 <L0^A>:
    3544:	3c c0       	rjmp	.+120    	; 0x35be <.L120>

00003546 <.Loc.255>:
		__ticks = (uint16_t) (__ms * 10.0);
    3546:	20 e0       	ldi	r18, 0x00	; 0
    3548:	30 e0       	ldi	r19, 0x00	; 0
    354a:	40 e2       	ldi	r20, 0x20	; 32
    354c:	51 e4       	ldi	r21, 0x41	; 65
    354e:	6f 85       	ldd	r22, Y+15	; 0x0f
    3550:	78 89       	ldd	r23, Y+16	; 0x10
    3552:	89 89       	ldd	r24, Y+17	; 0x11
    3554:	9a 89       	ldd	r25, Y+18	; 0x12
    3556:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    355a:	69 af       	std	Y+57, r22	; 0x39
    355c:	7a af       	std	Y+58, r23	; 0x3a
    355e:	8b af       	std	Y+59, r24	; 0x3b
    3560:	9c af       	std	Y+60, r25	; 0x3c
    3562:	89 ad       	ldd	r24, Y+57	; 0x39
    3564:	9a ad       	ldd	r25, Y+58	; 0x3a
    3566:	ab ad       	ldd	r26, Y+59	; 0x3b
    3568:	bc ad       	ldd	r27, Y+60	; 0x3c
    356a:	89 a3       	std	Y+33, r24	; 0x21
    356c:	9a a3       	std	Y+34, r25	; 0x22
    356e:	ab a3       	std	Y+35, r26	; 0x23
    3570:	bc a3       	std	Y+36, r27	; 0x24

00003572 <.Loc.256>:
    3572:	69 a1       	ldd	r22, Y+33	; 0x21
    3574:	7a a1       	ldd	r23, Y+34	; 0x22
    3576:	8b a1       	ldd	r24, Y+35	; 0x23
    3578:	9c a1       	ldd	r25, Y+36	; 0x24
    357a:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    357e:	21 96       	adiw	r28, 0x01	; 1
    3580:	6c af       	std	Y+60, r22	; 0x3c
    3582:	7d af       	std	Y+61, r23	; 0x3d
    3584:	8e af       	std	Y+62, r24	; 0x3e
    3586:	9f af       	std	Y+63, r25	; 0x3f
    3588:	21 97       	sbiw	r28, 0x01	; 1
    358a:	ad ad       	ldd	r26, Y+61	; 0x3d
    358c:	be ad       	ldd	r27, Y+62	; 0x3e
    358e:	b8 8f       	std	Y+24, r27	; 0x18
    3590:	af 8b       	std	Y+23, r26	; 0x17

00003592 <.Loc.257>:
		while(__ticks)
    3592:	10 c0       	rjmp	.+32     	; 0x35b4 <.L110>

00003594 <.L111>:
    3594:	80 e9       	ldi	r24, 0x90	; 144
    3596:	91 e0       	ldi	r25, 0x01	; 1
    3598:	9a 8f       	std	Y+26, r25	; 0x1a
    359a:	89 8f       	std	Y+25, r24	; 0x19

0000359c <.LBB112>:
    359c:	89 8d       	ldd	r24, Y+25	; 0x19
    359e:	9a 8d       	ldd	r25, Y+26	; 0x1a

000035a0 <.L1^B11>:
    35a0:	01 97       	sbiw	r24, 0x01	; 1
    35a2:	f1 f7       	brne	.-4      	; 0x35a0 <.L1^B11>
    35a4:	9a 8f       	std	Y+26, r25	; 0x1a
    35a6:	89 8f       	std	Y+25, r24	; 0x19

000035a8 <.Loc.259>:
	...

000035aa <.LBE112>:
			__ticks --;
    35aa:	8f 89       	ldd	r24, Y+23	; 0x17
    35ac:	98 8d       	ldd	r25, Y+24	; 0x18
    35ae:	01 97       	sbiw	r24, 0x01	; 1
    35b0:	98 8f       	std	Y+24, r25	; 0x18
    35b2:	8f 8b       	std	Y+23, r24	; 0x17

000035b4 <.L110>:
		while(__ticks)
    35b4:	8f 89       	ldd	r24, Y+23	; 0x17
    35b6:	98 8d       	ldd	r25, Y+24	; 0x18
    35b8:	00 97       	sbiw	r24, 0x00	; 0
    35ba:	61 f7       	brne	.-40     	; 0x3594 <.L111>

000035bc <.Loc.262>:
		return;
    35bc:	1d c0       	rjmp	.+58     	; 0x35f8 <.L112>

000035be <.L120>:
		__ticks = (uint16_t)__tmp;
    35be:	6b 89       	ldd	r22, Y+19	; 0x13
    35c0:	7c 89       	ldd	r23, Y+20	; 0x14
    35c2:	8d 89       	ldd	r24, Y+21	; 0x15
    35c4:	9e 89       	ldd	r25, Y+22	; 0x16
    35c6:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    35ca:	25 96       	adiw	r28, 0x05	; 5
    35cc:	6c af       	std	Y+60, r22	; 0x3c
    35ce:	7d af       	std	Y+61, r23	; 0x3d
    35d0:	8e af       	std	Y+62, r24	; 0x3e
    35d2:	9f af       	std	Y+63, r25	; 0x3f
    35d4:	25 97       	sbiw	r28, 0x05	; 5
    35d6:	23 96       	adiw	r28, 0x03	; 3
    35d8:	ee ad       	ldd	r30, Y+62	; 0x3e
    35da:	ff ad       	ldd	r31, Y+63	; 0x3f
    35dc:	23 97       	sbiw	r28, 0x03	; 3
    35de:	f8 8f       	std	Y+24, r31	; 0x18
    35e0:	ef 8b       	std	Y+23, r30	; 0x17

000035e2 <.L107>:
    35e2:	8f 89       	ldd	r24, Y+23	; 0x17
    35e4:	98 8d       	ldd	r25, Y+24	; 0x18
    35e6:	9c 8f       	std	Y+28, r25	; 0x1c
    35e8:	8b 8f       	std	Y+27, r24	; 0x1b

000035ea <.LBB114>:
    35ea:	8b 8d       	ldd	r24, Y+27	; 0x1b
    35ec:	9c 8d       	ldd	r25, Y+28	; 0x1c

000035ee <.L1^B12>:
    35ee:	01 97       	sbiw	r24, 0x01	; 1
    35f0:	f1 f7       	brne	.-4      	; 0x35ee <.L1^B12>
    35f2:	9c 8f       	std	Y+28, r25	; 0x1c
    35f4:	8b 8f       	std	Y+27, r24	; 0x1b

000035f6 <.Loc.265>:
	...

000035f8 <.L112>:
            _delay_ms(20);
            return(1);
    35f8:	81 e0       	ldi	r24, 0x01	; 1
    35fa:	90 e0       	ldi	r25, 0x00	; 0
    35fc:	00 c0       	rjmp	.+0      	; 0x35fe <.L104>

000035fe <.L104>:
            }
}
    35fe:	cc 5b       	subi	r28, 0xBC	; 188
    3600:	df 4f       	sbci	r29, 0xFF	; 255
    3602:	0f b6       	in	r0, 0x3f	; 63
    3604:	f8 94       	cli
    3606:	de bf       	out	0x3e, r29	; 62
    3608:	0f be       	out	0x3f, r0	; 63
    360a:	cd bf       	out	0x3d, r28	; 61
    360c:	df 91       	pop	r29
    360e:	cf 91       	pop	r28
    3610:	08 95       	ret

00003612 <detecteerboomlinks>:



// Sensoren Functies:
int detecteerboomlinks(void){
    3612:	cf 93       	push	r28
    3614:	df 93       	push	r29
    3616:	cd b7       	in	r28, 0x3d	; 61
    3618:	de b7       	in	r29, 0x3e	; 62

0000361a <.Loc.269>:
    //PIN 2 = PE4
    if ((PINE & (1<<PE4)) == 0) return(0);
    361a:	8c e2       	ldi	r24, 0x2C	; 44
    361c:	90 e0       	ldi	r25, 0x00	; 0
    361e:	fc 01       	movw	r30, r24
    3620:	80 81       	ld	r24, Z

00003622 <.Loc.270>:
    3622:	88 2f       	mov	r24, r24
    3624:	90 e0       	ldi	r25, 0x00	; 0
    3626:	80 71       	andi	r24, 0x10	; 16
    3628:	99 27       	eor	r25, r25

0000362a <.Loc.271>:
    362a:	00 97       	sbiw	r24, 0x00	; 0
    362c:	19 f4       	brne	.+6      	; 0x3634 <.L122>

0000362e <.Loc.272>:
    362e:	80 e0       	ldi	r24, 0x00	; 0
    3630:	90 e0       	ldi	r25, 0x00	; 0
    3632:	0d c0       	rjmp	.+26     	; 0x364e <.L121>

00003634 <.L122>:
    if ((PINE & (1<<PE4)) != 0) return(1);
    3634:	8c e2       	ldi	r24, 0x2C	; 44
    3636:	90 e0       	ldi	r25, 0x00	; 0
    3638:	fc 01       	movw	r30, r24
    363a:	80 81       	ld	r24, Z

0000363c <.Loc.274>:
    363c:	88 2f       	mov	r24, r24
    363e:	90 e0       	ldi	r25, 0x00	; 0
    3640:	80 71       	andi	r24, 0x10	; 16
    3642:	99 27       	eor	r25, r25

00003644 <.Loc.275>:
    3644:	00 97       	sbiw	r24, 0x00	; 0
    3646:	19 f0       	breq	.+6      	; 0x364e <.L121>

00003648 <.Loc.276>:
    3648:	81 e0       	ldi	r24, 0x01	; 1
    364a:	90 e0       	ldi	r25, 0x00	; 0
    364c:	00 c0       	rjmp	.+0      	; 0x364e <.L121>

0000364e <.L121>:
}
    364e:	df 91       	pop	r29
    3650:	cf 91       	pop	r28
    3652:	08 95       	ret

00003654 <detecteerboomrechts>:

int detecteerboomrechts(void){
    3654:	cf 93       	push	r28
    3656:	df 93       	push	r29
    3658:	cd b7       	in	r28, 0x3d	; 61
    365a:	de b7       	in	r29, 0x3e	; 62

0000365c <.Loc.279>:
    //PIN 3 = PE5
    if ((PINE & (1<<PE5)) == 0) return(0);
    365c:	8c e2       	ldi	r24, 0x2C	; 44
    365e:	90 e0       	ldi	r25, 0x00	; 0
    3660:	fc 01       	movw	r30, r24
    3662:	80 81       	ld	r24, Z

00003664 <.Loc.280>:
    3664:	88 2f       	mov	r24, r24
    3666:	90 e0       	ldi	r25, 0x00	; 0
    3668:	80 72       	andi	r24, 0x20	; 32
    366a:	99 27       	eor	r25, r25

0000366c <.Loc.281>:
    366c:	00 97       	sbiw	r24, 0x00	; 0
    366e:	19 f4       	brne	.+6      	; 0x3676 <.L126>

00003670 <.Loc.282>:
    3670:	80 e0       	ldi	r24, 0x00	; 0
    3672:	90 e0       	ldi	r25, 0x00	; 0
    3674:	0d c0       	rjmp	.+26     	; 0x3690 <.L125>

00003676 <.L126>:
    if ((PINE & (1<<PE5)) != 0) return(1);
    3676:	8c e2       	ldi	r24, 0x2C	; 44
    3678:	90 e0       	ldi	r25, 0x00	; 0
    367a:	fc 01       	movw	r30, r24
    367c:	80 81       	ld	r24, Z

0000367e <.Loc.284>:
    367e:	88 2f       	mov	r24, r24
    3680:	90 e0       	ldi	r25, 0x00	; 0
    3682:	80 72       	andi	r24, 0x20	; 32
    3684:	99 27       	eor	r25, r25

00003686 <.Loc.285>:
    3686:	00 97       	sbiw	r24, 0x00	; 0
    3688:	19 f0       	breq	.+6      	; 0x3690 <.L125>

0000368a <.Loc.286>:
    368a:	81 e0       	ldi	r24, 0x01	; 1
    368c:	90 e0       	ldi	r25, 0x00	; 0
    368e:	00 c0       	rjmp	.+0      	; 0x3690 <.L125>

00003690 <.L125>:
}
    3690:	df 91       	pop	r29
    3692:	cf 91       	pop	r28
    3694:	08 95       	ret

00003696 <detecteerlatlinks>:

int detecteerlatlinks(void){
    3696:	cf 93       	push	r28
    3698:	df 93       	push	r29
    369a:	cd b7       	in	r28, 0x3d	; 61
    369c:	de b7       	in	r29, 0x3e	; 62

0000369e <.Loc.289>:
    //PIN 4 = PG5
    if ((PING & (1<<PG5)) == 0) return(0);
    369e:	82 e3       	ldi	r24, 0x32	; 50
    36a0:	90 e0       	ldi	r25, 0x00	; 0
    36a2:	fc 01       	movw	r30, r24
    36a4:	80 81       	ld	r24, Z

000036a6 <.Loc.290>:
    36a6:	88 2f       	mov	r24, r24
    36a8:	90 e0       	ldi	r25, 0x00	; 0
    36aa:	80 72       	andi	r24, 0x20	; 32
    36ac:	99 27       	eor	r25, r25

000036ae <.Loc.291>:
    36ae:	00 97       	sbiw	r24, 0x00	; 0
    36b0:	19 f4       	brne	.+6      	; 0x36b8 <.L130>

000036b2 <.Loc.292>:
    36b2:	80 e0       	ldi	r24, 0x00	; 0
    36b4:	90 e0       	ldi	r25, 0x00	; 0
    36b6:	0d c0       	rjmp	.+26     	; 0x36d2 <.L129>

000036b8 <.L130>:
    if ((PING & (1<<PG5)) != 0) return(1);
    36b8:	82 e3       	ldi	r24, 0x32	; 50
    36ba:	90 e0       	ldi	r25, 0x00	; 0
    36bc:	fc 01       	movw	r30, r24
    36be:	80 81       	ld	r24, Z

000036c0 <.Loc.294>:
    36c0:	88 2f       	mov	r24, r24
    36c2:	90 e0       	ldi	r25, 0x00	; 0
    36c4:	80 72       	andi	r24, 0x20	; 32
    36c6:	99 27       	eor	r25, r25

000036c8 <.Loc.295>:
    36c8:	00 97       	sbiw	r24, 0x00	; 0
    36ca:	19 f0       	breq	.+6      	; 0x36d2 <.L129>

000036cc <.Loc.296>:
    36cc:	81 e0       	ldi	r24, 0x01	; 1
    36ce:	90 e0       	ldi	r25, 0x00	; 0
    36d0:	00 c0       	rjmp	.+0      	; 0x36d2 <.L129>

000036d2 <.L129>:
}
    36d2:	df 91       	pop	r29
    36d4:	cf 91       	pop	r28
    36d6:	08 95       	ret

000036d8 <detecteerlatrechts>:

int detecteerlatrechts(void){
    36d8:	cf 93       	push	r28
    36da:	df 93       	push	r29
    36dc:	cd b7       	in	r28, 0x3d	; 61
    36de:	de b7       	in	r29, 0x3e	; 62

000036e0 <.Loc.299>:
    //PIN 5 = PE3
    if ((PINE & (1<<PE3)) == 0) return(0);
    36e0:	8c e2       	ldi	r24, 0x2C	; 44
    36e2:	90 e0       	ldi	r25, 0x00	; 0
    36e4:	fc 01       	movw	r30, r24
    36e6:	80 81       	ld	r24, Z

000036e8 <.Loc.300>:
    36e8:	88 2f       	mov	r24, r24
    36ea:	90 e0       	ldi	r25, 0x00	; 0
    36ec:	88 70       	andi	r24, 0x08	; 8
    36ee:	99 27       	eor	r25, r25

000036f0 <.Loc.301>:
    36f0:	00 97       	sbiw	r24, 0x00	; 0
    36f2:	19 f4       	brne	.+6      	; 0x36fa <.L134>

000036f4 <.Loc.302>:
    36f4:	80 e0       	ldi	r24, 0x00	; 0
    36f6:	90 e0       	ldi	r25, 0x00	; 0
    36f8:	0d c0       	rjmp	.+26     	; 0x3714 <.L133>

000036fa <.L134>:
    if ((PINE & (1<<PE3)) != 0) return(1);
    36fa:	8c e2       	ldi	r24, 0x2C	; 44
    36fc:	90 e0       	ldi	r25, 0x00	; 0
    36fe:	fc 01       	movw	r30, r24
    3700:	80 81       	ld	r24, Z

00003702 <.Loc.304>:
    3702:	88 2f       	mov	r24, r24
    3704:	90 e0       	ldi	r25, 0x00	; 0
    3706:	88 70       	andi	r24, 0x08	; 8
    3708:	99 27       	eor	r25, r25

0000370a <.Loc.305>:
    370a:	00 97       	sbiw	r24, 0x00	; 0
    370c:	19 f0       	breq	.+6      	; 0x3714 <.L133>

0000370e <.Loc.306>:
    370e:	81 e0       	ldi	r24, 0x01	; 1
    3710:	90 e0       	ldi	r25, 0x00	; 0
    3712:	00 c0       	rjmp	.+0      	; 0x3714 <.L133>

00003714 <.L133>:
}
    3714:	df 91       	pop	r29
    3716:	cf 91       	pop	r28
    3718:	08 95       	ret

0000371a <leessonaruit>:


// Sonars Uitlezen:
int leessonaruit(int sensor){
    371a:	cf 93       	push	r28
    371c:	df 93       	push	r29
    371e:	cd b7       	in	r28, 0x3d	; 61
    3720:	de b7       	in	r29, 0x3e	; 62
    3722:	c6 56       	subi	r28, 0x66	; 102
    3724:	d1 09       	sbc	r29, r1
    3726:	0f b6       	in	r0, 0x3f	; 63
    3728:	f8 94       	cli
    372a:	de bf       	out	0x3e, r29	; 62
    372c:	0f be       	out	0x3f, r0	; 63
    372e:	cd bf       	out	0x3d, r28	; 61
    3730:	9a a3       	std	Y+34, r25	; 0x22
    3732:	89 a3       	std	Y+33, r24	; 0x21

00003734 <.Loc.309>:
    switch(sensor){
    3734:	89 a1       	ldd	r24, Y+33	; 0x21
    3736:	9a a1       	ldd	r25, Y+34	; 0x22
    3738:	83 30       	cpi	r24, 0x03	; 3
    373a:	91 05       	cpc	r25, r1
    373c:	09 f4       	brne	.+2      	; 0x3740 <L0^A+0x2>

0000373e <L0^A>:
    373e:	56 c0       	rjmp	.+172    	; 0x37ec <.L138>
    3740:	89 a1       	ldd	r24, Y+33	; 0x21
    3742:	9a a1       	ldd	r25, Y+34	; 0x22
    3744:	83 30       	cpi	r24, 0x03	; 3
    3746:	91 05       	cpc	r25, r1
    3748:	09 f0       	breq	.+2      	; 0x374c <L0^A+0x2>

0000374a <L0^A>:
    374a:	a4 f4       	brge	.+40     	; 0x3774 <.L139>
    374c:	89 a1       	ldd	r24, Y+33	; 0x21
    374e:	9a a1       	ldd	r25, Y+34	; 0x22
    3750:	82 30       	cpi	r24, 0x02	; 2
    3752:	91 05       	cpc	r25, r1
    3754:	c1 f1       	breq	.+112    	; 0x37c6 <.L140>
    3756:	89 a1       	ldd	r24, Y+33	; 0x21
    3758:	9a a1       	ldd	r25, Y+34	; 0x22
    375a:	82 30       	cpi	r24, 0x02	; 2
    375c:	91 05       	cpc	r25, r1
    375e:	09 f0       	breq	.+2      	; 0x3762 <L0^A+0x2>

00003760 <L0^A>:
    3760:	4c f4       	brge	.+18     	; 0x3774 <.L139>
    3762:	89 a1       	ldd	r24, Y+33	; 0x21
    3764:	9a a1       	ldd	r25, Y+34	; 0x22
    3766:	00 97       	sbiw	r24, 0x00	; 0
    3768:	41 f0       	breq	.+16     	; 0x377a <.L141>
    376a:	89 a1       	ldd	r24, Y+33	; 0x21
    376c:	9a a1       	ldd	r25, Y+34	; 0x22
    376e:	81 30       	cpi	r24, 0x01	; 1
    3770:	91 05       	cpc	r25, r1
    3772:	b1 f0       	breq	.+44     	; 0x37a0 <.L142>

00003774 <.L139>:
default:
    return 0;
    3774:	80 e0       	ldi	r24, 0x00	; 0
    3776:	90 e0       	ldi	r25, 0x00	; 0
    3778:	34 c2       	rjmp	.+1128   	; 0x3be2 <.L143>

0000377a <.L141>:
    break;
    //als je een getal opgeeft wat niet gelinkt is aan een sensor geeft de functie 0 terug.
case 0: // Voorkant
    //AB = 00
    PORTB &= ~(1<<PB0);
    377a:	85 e2       	ldi	r24, 0x25	; 37
    377c:	90 e0       	ldi	r25, 0x00	; 0
    377e:	dc 01       	movw	r26, r24
    3780:	2c 91       	ld	r18, X

00003782 <.Loc.312>:
    3782:	85 e2       	ldi	r24, 0x25	; 37
    3784:	90 e0       	ldi	r25, 0x00	; 0

00003786 <.Loc.313>:
    3786:	2e 7f       	andi	r18, 0xFE	; 254
    3788:	fc 01       	movw	r30, r24
    378a:	20 83       	st	Z, r18

0000378c <.Loc.314>:
    PORTB &= ~(1<<PB1);
    378c:	85 e2       	ldi	r24, 0x25	; 37
    378e:	90 e0       	ldi	r25, 0x00	; 0
    3790:	dc 01       	movw	r26, r24
    3792:	2c 91       	ld	r18, X

00003794 <.Loc.315>:
    3794:	85 e2       	ldi	r24, 0x25	; 37
    3796:	90 e0       	ldi	r25, 0x00	; 0

00003798 <.Loc.316>:
    3798:	2d 7f       	andi	r18, 0xFD	; 253
    379a:	fc 01       	movw	r30, r24
    379c:	20 83       	st	Z, r18

0000379e <.Loc.317>:
    break;
    379e:	39 c0       	rjmp	.+114    	; 0x3812 <.L144>

000037a0 <.L142>:
case 1: // Links
    //AB = 10
     PORTB |= (1<<PB0);
    37a0:	85 e2       	ldi	r24, 0x25	; 37
    37a2:	90 e0       	ldi	r25, 0x00	; 0
    37a4:	dc 01       	movw	r26, r24
    37a6:	2c 91       	ld	r18, X
    37a8:	85 e2       	ldi	r24, 0x25	; 37
    37aa:	90 e0       	ldi	r25, 0x00	; 0

000037ac <.Loc.319>:
    37ac:	21 60       	ori	r18, 0x01	; 1
    37ae:	fc 01       	movw	r30, r24
    37b0:	20 83       	st	Z, r18

000037b2 <.Loc.320>:
    PORTB &= ~(1<<PB1);
    37b2:	85 e2       	ldi	r24, 0x25	; 37
    37b4:	90 e0       	ldi	r25, 0x00	; 0
    37b6:	dc 01       	movw	r26, r24
    37b8:	2c 91       	ld	r18, X

000037ba <.Loc.321>:
    37ba:	85 e2       	ldi	r24, 0x25	; 37
    37bc:	90 e0       	ldi	r25, 0x00	; 0

000037be <.Loc.322>:
    37be:	2d 7f       	andi	r18, 0xFD	; 253
    37c0:	fc 01       	movw	r30, r24
    37c2:	20 83       	st	Z, r18

000037c4 <.Loc.323>:
    break;
    37c4:	26 c0       	rjmp	.+76     	; 0x3812 <.L144>

000037c6 <.L140>:
case 2: // Rechts
    //AB =01
     PORTB &= ~(1<<PB0);
    37c6:	85 e2       	ldi	r24, 0x25	; 37
    37c8:	90 e0       	ldi	r25, 0x00	; 0
    37ca:	dc 01       	movw	r26, r24
    37cc:	2c 91       	ld	r18, X

000037ce <.Loc.325>:
    37ce:	85 e2       	ldi	r24, 0x25	; 37
    37d0:	90 e0       	ldi	r25, 0x00	; 0

000037d2 <.Loc.326>:
    37d2:	2e 7f       	andi	r18, 0xFE	; 254
    37d4:	fc 01       	movw	r30, r24
    37d6:	20 83       	st	Z, r18

000037d8 <.Loc.327>:
    PORTB |= (1<<PB1);
    37d8:	85 e2       	ldi	r24, 0x25	; 37
    37da:	90 e0       	ldi	r25, 0x00	; 0
    37dc:	dc 01       	movw	r26, r24
    37de:	2c 91       	ld	r18, X
    37e0:	85 e2       	ldi	r24, 0x25	; 37
    37e2:	90 e0       	ldi	r25, 0x00	; 0

000037e4 <.Loc.328>:
    37e4:	22 60       	ori	r18, 0x02	; 2
    37e6:	fc 01       	movw	r30, r24
    37e8:	20 83       	st	Z, r18

000037ea <.Loc.329>:
    break;
    37ea:	13 c0       	rjmp	.+38     	; 0x3812 <.L144>

000037ec <.L138>:
case 3:
    //AB = 11
    PORTB |= (1<<PB0);
    37ec:	85 e2       	ldi	r24, 0x25	; 37
    37ee:	90 e0       	ldi	r25, 0x00	; 0
    37f0:	dc 01       	movw	r26, r24
    37f2:	2c 91       	ld	r18, X
    37f4:	85 e2       	ldi	r24, 0x25	; 37
    37f6:	90 e0       	ldi	r25, 0x00	; 0

000037f8 <.Loc.331>:
    37f8:	21 60       	ori	r18, 0x01	; 1
    37fa:	fc 01       	movw	r30, r24
    37fc:	20 83       	st	Z, r18

000037fe <.Loc.332>:
    PORTB |= (1<<PB1);
    37fe:	85 e2       	ldi	r24, 0x25	; 37
    3800:	90 e0       	ldi	r25, 0x00	; 0
    3802:	dc 01       	movw	r26, r24
    3804:	2c 91       	ld	r18, X
    3806:	85 e2       	ldi	r24, 0x25	; 37
    3808:	90 e0       	ldi	r25, 0x00	; 0

0000380a <.Loc.333>:
    380a:	22 60       	ori	r18, 0x02	; 2
    380c:	fc 01       	movw	r30, r24
    380e:	20 83       	st	Z, r18

00003810 <.Loc.334>:
	...

00003812 <.L144>:
    break;
    }
    PORTB |= (1<<PB2);
    3812:	85 e2       	ldi	r24, 0x25	; 37
    3814:	90 e0       	ldi	r25, 0x00	; 0
    3816:	dc 01       	movw	r26, r24
    3818:	2c 91       	ld	r18, X
    381a:	85 e2       	ldi	r24, 0x25	; 37
    381c:	90 e0       	ldi	r25, 0x00	; 0

0000381e <.Loc.336>:
    381e:	24 60       	ori	r18, 0x04	; 4
    3820:	fc 01       	movw	r30, r24
    3822:	20 83       	st	Z, r18
    3824:	80 e0       	ldi	r24, 0x00	; 0
    3826:	90 e0       	ldi	r25, 0x00	; 0
    3828:	a0 e0       	ldi	r26, 0x00	; 0
    382a:	b0 e4       	ldi	r27, 0x40	; 64
    382c:	89 83       	std	Y+1, r24	; 0x01
    382e:	9a 83       	std	Y+2, r25	; 0x02
    3830:	ab 83       	std	Y+3, r26	; 0x03
    3832:	bc 83       	std	Y+4, r27	; 0x04

00003834 <.LBB116>:
	__tmp = ((F_CPU) / 3e6) * __us;
    3834:	2b ea       	ldi	r18, 0xAB	; 171
    3836:	3a ea       	ldi	r19, 0xAA	; 170
    3838:	4a ea       	ldi	r20, 0xAA	; 170
    383a:	50 e4       	ldi	r21, 0x40	; 64
    383c:	69 81       	ldd	r22, Y+1	; 0x01
    383e:	7a 81       	ldd	r23, Y+2	; 0x02
    3840:	8b 81       	ldd	r24, Y+3	; 0x03
    3842:	9c 81       	ldd	r25, Y+4	; 0x04
    3844:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    3848:	6b ab       	std	Y+51, r22	; 0x33
    384a:	7c ab       	std	Y+52, r23	; 0x34
    384c:	8d ab       	std	Y+53, r24	; 0x35
    384e:	9e ab       	std	Y+54, r25	; 0x36
    3850:	2b a9       	ldd	r18, Y+51	; 0x33
    3852:	3c a9       	ldd	r19, Y+52	; 0x34
    3854:	4d a9       	ldd	r20, Y+53	; 0x35
    3856:	5e a9       	ldd	r21, Y+54	; 0x36
    3858:	2d 83       	std	Y+5, r18	; 0x05
    385a:	3e 83       	std	Y+6, r19	; 0x06
    385c:	4f 83       	std	Y+7, r20	; 0x07
    385e:	58 87       	std	Y+8, r21	; 0x08

00003860 <.Loc.338>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    3860:	20 e0       	ldi	r18, 0x00	; 0
    3862:	30 e0       	ldi	r19, 0x00	; 0
    3864:	40 e8       	ldi	r20, 0x80	; 128
    3866:	50 e4       	ldi	r21, 0x40	; 64
    3868:	69 81       	ldd	r22, Y+1	; 0x01
    386a:	7a 81       	ldd	r23, Y+2	; 0x02
    386c:	8b 81       	ldd	r24, Y+3	; 0x03
    386e:	9c 81       	ldd	r25, Y+4	; 0x04
    3870:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    3874:	6f ab       	std	Y+55, r22	; 0x37
    3876:	78 af       	std	Y+56, r23	; 0x38
    3878:	89 af       	std	Y+57, r24	; 0x39
    387a:	9a af       	std	Y+58, r25	; 0x3a
    387c:	8f a9       	ldd	r24, Y+55	; 0x37
    387e:	98 ad       	ldd	r25, Y+56	; 0x38
    3880:	a9 ad       	ldd	r26, Y+57	; 0x39
    3882:	ba ad       	ldd	r27, Y+58	; 0x3a
    3884:	89 87       	std	Y+9, r24	; 0x09
    3886:	9a 87       	std	Y+10, r25	; 0x0a
    3888:	ab 87       	std	Y+11, r26	; 0x0b
    388a:	bc 87       	std	Y+12, r27	; 0x0c

0000388c <.Loc.339>:
	if (__tmp < 1.0)
    388c:	20 e0       	ldi	r18, 0x00	; 0
    388e:	30 e0       	ldi	r19, 0x00	; 0
    3890:	40 e8       	ldi	r20, 0x80	; 128
    3892:	5f e3       	ldi	r21, 0x3F	; 63
    3894:	6d 81       	ldd	r22, Y+5	; 0x05
    3896:	7e 81       	ldd	r23, Y+6	; 0x06
    3898:	8f 81       	ldd	r24, Y+7	; 0x07
    389a:	98 85       	ldd	r25, Y+8	; 0x08
    389c:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    38a0:	88 23       	and	r24, r24
    38a2:	1c f4       	brge	.+6      	; 0x38aa <.L168>

000038a4 <.Loc.340>:
		__ticks = 1;
    38a4:	81 e0       	ldi	r24, 0x01	; 1
    38a6:	8d 87       	std	Y+13, r24	; 0x0d
    38a8:	f7 c0       	rjmp	.+494    	; 0x3a98 <.L147>

000038aa <.L168>:
	else if (__tmp2 > 65535)
    38aa:	20 e0       	ldi	r18, 0x00	; 0
    38ac:	3f ef       	ldi	r19, 0xFF	; 255
    38ae:	4f e7       	ldi	r20, 0x7F	; 127
    38b0:	57 e4       	ldi	r21, 0x47	; 71
    38b2:	69 85       	ldd	r22, Y+9	; 0x09
    38b4:	7a 85       	ldd	r23, Y+10	; 0x0a
    38b6:	8b 85       	ldd	r24, Y+11	; 0x0b
    38b8:	9c 85       	ldd	r25, Y+12	; 0x0c
    38ba:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    38be:	88 23       	and	r24, r24
    38c0:	09 f0       	breq	.+2      	; 0x38c4 <L0^A>

000038c2 <L0^A>:
    38c2:	0c f4       	brge	.+2      	; 0x38c6 <.Loc.342>

000038c4 <L0^A>:
    38c4:	ae c0       	rjmp	.+348    	; 0x3a22 <.L169>

000038c6 <.Loc.342>:
		_delay_ms(__us / 1000.0);
    38c6:	20 e0       	ldi	r18, 0x00	; 0
    38c8:	30 e0       	ldi	r19, 0x00	; 0
    38ca:	4a e7       	ldi	r20, 0x7A	; 122
    38cc:	54 e4       	ldi	r21, 0x44	; 68
    38ce:	69 81       	ldd	r22, Y+1	; 0x01
    38d0:	7a 81       	ldd	r23, Y+2	; 0x02
    38d2:	8b 81       	ldd	r24, Y+3	; 0x03
    38d4:	9c 81       	ldd	r25, Y+4	; 0x04
    38d6:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <__divsf3>
    38da:	6b af       	std	Y+59, r22	; 0x3b
    38dc:	7c af       	std	Y+60, r23	; 0x3c
    38de:	8d af       	std	Y+61, r24	; 0x3d
    38e0:	9e af       	std	Y+62, r25	; 0x3e
    38e2:	8b ad       	ldd	r24, Y+59	; 0x3b
    38e4:	9c ad       	ldd	r25, Y+60	; 0x3c
    38e6:	ad ad       	ldd	r26, Y+61	; 0x3d
    38e8:	be ad       	ldd	r27, Y+62	; 0x3e
    38ea:	8e 87       	std	Y+14, r24	; 0x0e
    38ec:	9f 87       	std	Y+15, r25	; 0x0f
    38ee:	a8 8b       	std	Y+16, r26	; 0x10
    38f0:	b9 8b       	std	Y+17, r27	; 0x11

000038f2 <.LBB118>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    38f2:	20 e0       	ldi	r18, 0x00	; 0
    38f4:	30 e0       	ldi	r19, 0x00	; 0
    38f6:	4a e7       	ldi	r20, 0x7A	; 122
    38f8:	55 e4       	ldi	r21, 0x45	; 69
    38fa:	6e 85       	ldd	r22, Y+14	; 0x0e
    38fc:	7f 85       	ldd	r23, Y+15	; 0x0f
    38fe:	88 89       	ldd	r24, Y+16	; 0x10
    3900:	99 89       	ldd	r25, Y+17	; 0x11
    3902:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    3906:	23 96       	adiw	r28, 0x03	; 3
    3908:	6c af       	std	Y+60, r22	; 0x3c
    390a:	7d af       	std	Y+61, r23	; 0x3d
    390c:	8e af       	std	Y+62, r24	; 0x3e
    390e:	9f af       	std	Y+63, r25	; 0x3f
    3910:	23 97       	sbiw	r28, 0x03	; 3
    3912:	23 96       	adiw	r28, 0x03	; 3
    3914:	2c ad       	ldd	r18, Y+60	; 0x3c
    3916:	3d ad       	ldd	r19, Y+61	; 0x3d
    3918:	4e ad       	ldd	r20, Y+62	; 0x3e
    391a:	5f ad       	ldd	r21, Y+63	; 0x3f
    391c:	23 97       	sbiw	r28, 0x03	; 3
    391e:	2a 8b       	std	Y+18, r18	; 0x12
    3920:	3b 8b       	std	Y+19, r19	; 0x13
    3922:	4c 8b       	std	Y+20, r20	; 0x14
    3924:	5d 8b       	std	Y+21, r21	; 0x15

00003926 <.Loc.344>:
	if (__tmp < 1.0)
    3926:	20 e0       	ldi	r18, 0x00	; 0
    3928:	30 e0       	ldi	r19, 0x00	; 0
    392a:	40 e8       	ldi	r20, 0x80	; 128
    392c:	5f e3       	ldi	r21, 0x3F	; 63
    392e:	6a 89       	ldd	r22, Y+18	; 0x12
    3930:	7b 89       	ldd	r23, Y+19	; 0x13
    3932:	8c 89       	ldd	r24, Y+20	; 0x14
    3934:	9d 89       	ldd	r25, Y+21	; 0x15
    3936:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    393a:	88 23       	and	r24, r24
    393c:	2c f4       	brge	.+10     	; 0x3948 <.L170>

0000393e <.Loc.345>:
		__ticks = 1;
    393e:	81 e0       	ldi	r24, 0x01	; 1
    3940:	90 e0       	ldi	r25, 0x00	; 0
    3942:	9f 8b       	std	Y+23, r25	; 0x17
    3944:	8e 8b       	std	Y+22, r24	; 0x16
    3946:	62 c0       	rjmp	.+196    	; 0x3a0c <.L152>

00003948 <.L170>:
	else if (__tmp > 65535)
    3948:	20 e0       	ldi	r18, 0x00	; 0
    394a:	3f ef       	ldi	r19, 0xFF	; 255
    394c:	4f e7       	ldi	r20, 0x7F	; 127
    394e:	57 e4       	ldi	r21, 0x47	; 71
    3950:	6a 89       	ldd	r22, Y+18	; 0x12
    3952:	7b 89       	ldd	r23, Y+19	; 0x13
    3954:	8c 89       	ldd	r24, Y+20	; 0x14
    3956:	9d 89       	ldd	r25, Y+21	; 0x15
    3958:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    395c:	88 23       	and	r24, r24
    395e:	09 f0       	breq	.+2      	; 0x3962 <L0^A>

00003960 <L0^A>:
    3960:	0c f4       	brge	.+2      	; 0x3964 <.Loc.347>

00003962 <L0^A>:
    3962:	42 c0       	rjmp	.+132    	; 0x39e8 <.L171>

00003964 <.Loc.347>:
		__ticks = (uint16_t) (__ms * 10.0);
    3964:	20 e0       	ldi	r18, 0x00	; 0
    3966:	30 e0       	ldi	r19, 0x00	; 0
    3968:	40 e2       	ldi	r20, 0x20	; 32
    396a:	51 e4       	ldi	r21, 0x41	; 65
    396c:	6e 85       	ldd	r22, Y+14	; 0x0e
    396e:	7f 85       	ldd	r23, Y+15	; 0x0f
    3970:	88 89       	ldd	r24, Y+16	; 0x10
    3972:	99 89       	ldd	r25, Y+17	; 0x11
    3974:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    3978:	27 96       	adiw	r28, 0x07	; 7
    397a:	6c af       	std	Y+60, r22	; 0x3c
    397c:	7d af       	std	Y+61, r23	; 0x3d
    397e:	8e af       	std	Y+62, r24	; 0x3e
    3980:	9f af       	std	Y+63, r25	; 0x3f
    3982:	27 97       	sbiw	r28, 0x07	; 7
    3984:	27 96       	adiw	r28, 0x07	; 7
    3986:	8c ad       	ldd	r24, Y+60	; 0x3c
    3988:	9d ad       	ldd	r25, Y+61	; 0x3d
    398a:	ae ad       	ldd	r26, Y+62	; 0x3e
    398c:	bf ad       	ldd	r27, Y+63	; 0x3f
    398e:	27 97       	sbiw	r28, 0x07	; 7
    3990:	8f a7       	std	Y+47, r24	; 0x2f
    3992:	98 ab       	std	Y+48, r25	; 0x30
    3994:	a9 ab       	std	Y+49, r26	; 0x31
    3996:	ba ab       	std	Y+50, r27	; 0x32

00003998 <.Loc.348>:
    3998:	6f a5       	ldd	r22, Y+47	; 0x2f
    399a:	78 a9       	ldd	r23, Y+48	; 0x30
    399c:	89 a9       	ldd	r24, Y+49	; 0x31
    399e:	9a a9       	ldd	r25, Y+50	; 0x32
    39a0:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    39a4:	2b 96       	adiw	r28, 0x0b	; 11
    39a6:	6c af       	std	Y+60, r22	; 0x3c
    39a8:	7d af       	std	Y+61, r23	; 0x3d
    39aa:	8e af       	std	Y+62, r24	; 0x3e
    39ac:	9f af       	std	Y+63, r25	; 0x3f
    39ae:	2b 97       	sbiw	r28, 0x0b	; 11
    39b0:	29 96       	adiw	r28, 0x09	; 9
    39b2:	ae ad       	ldd	r26, Y+62	; 0x3e
    39b4:	bf ad       	ldd	r27, Y+63	; 0x3f
    39b6:	29 97       	sbiw	r28, 0x09	; 9
    39b8:	bf 8b       	std	Y+23, r27	; 0x17
    39ba:	ae 8b       	std	Y+22, r26	; 0x16

000039bc <.Loc.349>:
		while(__ticks)
    39bc:	10 c0       	rjmp	.+32     	; 0x39de <.L155>

000039be <.L156>:
    39be:	80 e9       	ldi	r24, 0x90	; 144
    39c0:	91 e0       	ldi	r25, 0x01	; 1
    39c2:	99 8f       	std	Y+25, r25	; 0x19
    39c4:	88 8f       	std	Y+24, r24	; 0x18

000039c6 <.LBB120>:
    39c6:	88 8d       	ldd	r24, Y+24	; 0x18
    39c8:	99 8d       	ldd	r25, Y+25	; 0x19

000039ca <.L1^B13>:
    39ca:	01 97       	sbiw	r24, 0x01	; 1
    39cc:	f1 f7       	brne	.-4      	; 0x39ca <.L1^B13>
    39ce:	99 8f       	std	Y+25, r25	; 0x19
    39d0:	88 8f       	std	Y+24, r24	; 0x18

000039d2 <.Loc.351>:
	...

000039d4 <.LBE120>:
			__ticks --;
    39d4:	8e 89       	ldd	r24, Y+22	; 0x16
    39d6:	9f 89       	ldd	r25, Y+23	; 0x17
    39d8:	01 97       	sbiw	r24, 0x01	; 1
    39da:	9f 8b       	std	Y+23, r25	; 0x17
    39dc:	8e 8b       	std	Y+22, r24	; 0x16

000039de <.L155>:
		while(__ticks)
    39de:	8e 89       	ldd	r24, Y+22	; 0x16
    39e0:	9f 89       	ldd	r25, Y+23	; 0x17
    39e2:	00 97       	sbiw	r24, 0x00	; 0
    39e4:	61 f7       	brne	.-40     	; 0x39be <.L156>

000039e6 <.Loc.354>:
		return;
    39e6:	58 c0       	rjmp	.+176    	; 0x3a98 <.L147>

000039e8 <.L171>:
		__ticks = (uint16_t)__tmp;
    39e8:	6a 89       	ldd	r22, Y+18	; 0x12
    39ea:	7b 89       	ldd	r23, Y+19	; 0x13
    39ec:	8c 89       	ldd	r24, Y+20	; 0x14
    39ee:	9d 89       	ldd	r25, Y+21	; 0x15
    39f0:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    39f4:	2f 96       	adiw	r28, 0x0f	; 15
    39f6:	6c af       	std	Y+60, r22	; 0x3c
    39f8:	7d af       	std	Y+61, r23	; 0x3d
    39fa:	8e af       	std	Y+62, r24	; 0x3e
    39fc:	9f af       	std	Y+63, r25	; 0x3f
    39fe:	2f 97       	sbiw	r28, 0x0f	; 15
    3a00:	2d 96       	adiw	r28, 0x0d	; 13
    3a02:	ee ad       	ldd	r30, Y+62	; 0x3e
    3a04:	ff ad       	ldd	r31, Y+63	; 0x3f
    3a06:	2d 97       	sbiw	r28, 0x0d	; 13
    3a08:	ff 8b       	std	Y+23, r31	; 0x17
    3a0a:	ee 8b       	std	Y+22, r30	; 0x16

00003a0c <.L152>:
    3a0c:	8e 89       	ldd	r24, Y+22	; 0x16
    3a0e:	9f 89       	ldd	r25, Y+23	; 0x17
    3a10:	9b 8f       	std	Y+27, r25	; 0x1b
    3a12:	8a 8f       	std	Y+26, r24	; 0x1a

00003a14 <.LBB122>:
    3a14:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3a16:	9b 8d       	ldd	r25, Y+27	; 0x1b

00003a18 <.L1^B14>:
    3a18:	01 97       	sbiw	r24, 0x01	; 1
    3a1a:	f1 f7       	brne	.-4      	; 0x3a18 <.L1^B14>
    3a1c:	9b 8f       	std	Y+27, r25	; 0x1b
    3a1e:	8a 8f       	std	Y+26, r24	; 0x1a

00003a20 <.Loc.357>:
}
    3a20:	3b c0       	rjmp	.+118    	; 0x3a98 <.L147>

00003a22 <.L169>:
	else if (__tmp > 255)
    3a22:	20 e0       	ldi	r18, 0x00	; 0
    3a24:	30 e0       	ldi	r19, 0x00	; 0
    3a26:	4f e7       	ldi	r20, 0x7F	; 127
    3a28:	53 e4       	ldi	r21, 0x43	; 67
    3a2a:	6d 81       	ldd	r22, Y+5	; 0x05
    3a2c:	7e 81       	ldd	r23, Y+6	; 0x06
    3a2e:	8f 81       	ldd	r24, Y+7	; 0x07
    3a30:	98 85       	ldd	r25, Y+8	; 0x08
    3a32:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    3a36:	88 23       	and	r24, r24
    3a38:	f9 f0       	breq	.+62     	; 0x3a78 <.L172>
    3a3a:	f4 f0       	brlt	.+60     	; 0x3a78 <.L172>

00003a3c <.LBB124>:
		uint16_t __ticks=(uint16_t)__tmp2;
    3a3c:	69 85       	ldd	r22, Y+9	; 0x09
    3a3e:	7a 85       	ldd	r23, Y+10	; 0x0a
    3a40:	8b 85       	ldd	r24, Y+11	; 0x0b
    3a42:	9c 85       	ldd	r25, Y+12	; 0x0c
    3a44:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    3a48:	63 96       	adiw	r28, 0x13	; 19
    3a4a:	6c af       	std	Y+60, r22	; 0x3c
    3a4c:	7d af       	std	Y+61, r23	; 0x3d
    3a4e:	8e af       	std	Y+62, r24	; 0x3e
    3a50:	9f af       	std	Y+63, r25	; 0x3f
    3a52:	63 97       	sbiw	r28, 0x13	; 19
    3a54:	61 96       	adiw	r28, 0x11	; 17
    3a56:	2e ad       	ldd	r18, Y+62	; 0x3e
    3a58:	3f ad       	ldd	r19, Y+63	; 0x3f
    3a5a:	61 97       	sbiw	r28, 0x11	; 17
    3a5c:	3d 8f       	std	Y+29, r19	; 0x1d
    3a5e:	2c 8f       	std	Y+28, r18	; 0x1c
    3a60:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3a62:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3a64:	9f 8f       	std	Y+31, r25	; 0x1f
    3a66:	8e 8f       	std	Y+30, r24	; 0x1e

00003a68 <.LBB125>:
	__asm__ volatile (
    3a68:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3a6a:	9f 8d       	ldd	r25, Y+31	; 0x1f

00003a6c <.L1^B15>:
    3a6c:	01 97       	sbiw	r24, 0x01	; 1
    3a6e:	f1 f7       	brne	.-4      	; 0x3a6c <.L1^B15>
    3a70:	9f 8f       	std	Y+31, r25	; 0x1f
    3a72:	8e 8f       	std	Y+30, r24	; 0x1e

00003a74 <.Loc.361>:
	...

00003a76 <.LBE125>:
		return;
    3a76:	17 c0       	rjmp	.+46     	; 0x3aa6 <.L160>

00003a78 <.L172>:
		__ticks = (uint8_t)__tmp;
    3a78:	6d 81       	ldd	r22, Y+5	; 0x05
    3a7a:	7e 81       	ldd	r23, Y+6	; 0x06
    3a7c:	8f 81       	ldd	r24, Y+7	; 0x07
    3a7e:	98 85       	ldd	r25, Y+8	; 0x08
    3a80:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    3a84:	67 96       	adiw	r28, 0x17	; 23
    3a86:	6c af       	std	Y+60, r22	; 0x3c
    3a88:	7d af       	std	Y+61, r23	; 0x3d
    3a8a:	8e af       	std	Y+62, r24	; 0x3e
    3a8c:	9f af       	std	Y+63, r25	; 0x3f
    3a8e:	67 97       	sbiw	r28, 0x17	; 23
    3a90:	64 96       	adiw	r28, 0x14	; 20
    3a92:	3f ad       	ldd	r19, Y+63	; 0x3f
    3a94:	64 97       	sbiw	r28, 0x14	; 20
    3a96:	3d 87       	std	Y+13, r19	; 0x0d

00003a98 <.L147>:
    3a98:	8d 85       	ldd	r24, Y+13	; 0x0d
    3a9a:	88 a3       	std	Y+32, r24	; 0x20

00003a9c <.LBB127>:
	__asm__ volatile (
    3a9c:	88 a1       	ldd	r24, Y+32	; 0x20

00003a9e <.L1^B16>:
    3a9e:	8a 95       	dec	r24
    3aa0:	f1 f7       	brne	.-4      	; 0x3a9e <.L1^B16>
    3aa2:	88 a3       	std	Y+32, r24	; 0x20

00003aa4 <.Loc.365>:
	...

00003aa6 <.L160>:
    _delay_us(2);
    PORTB &= ~(1<<PB2);
    3aa6:	85 e2       	ldi	r24, 0x25	; 37
    3aa8:	90 e0       	ldi	r25, 0x00	; 0
    3aaa:	dc 01       	movw	r26, r24
    3aac:	2c 91       	ld	r18, X

00003aae <.Loc.367>:
    3aae:	85 e2       	ldi	r24, 0x25	; 37
    3ab0:	90 e0       	ldi	r25, 0x00	; 0

00003ab2 <.Loc.368>:
    3ab2:	2b 7f       	andi	r18, 0xFB	; 251
    3ab4:	fc 01       	movw	r30, r24
    3ab6:	20 83       	st	Z, r18

00003ab8 <.Loc.369>:
        flag = 0;
    3ab8:	10 92 47 02 	sts	0x0247, r1	; 0x800247 <flag+0x1>
    3abc:	10 92 46 02 	sts	0x0246, r1	; 0x800246 <flag>

00003ac0 <.Loc.370>:
        TCNT4 = 0;
    3ac0:	84 ea       	ldi	r24, 0xA4	; 164
    3ac2:	90 e0       	ldi	r25, 0x00	; 0

00003ac4 <.Loc.371>:
    3ac4:	dc 01       	movw	r26, r24
    3ac6:	11 96       	adiw	r26, 0x01	; 1
    3ac8:	1c 92       	st	X, r1
    3aca:	1e 92       	st	-X, r1

00003acc <.Loc.372>:
    	TCCR4B |= (1<<CS40); //start de timer
    3acc:	81 ea       	ldi	r24, 0xA1	; 161
    3ace:	90 e0       	ldi	r25, 0x00	; 0
    3ad0:	fc 01       	movw	r30, r24
    3ad2:	20 81       	ld	r18, Z
    3ad4:	81 ea       	ldi	r24, 0xA1	; 161
    3ad6:	90 e0       	ldi	r25, 0x00	; 0

00003ad8 <.Loc.373>:
    3ad8:	21 60       	ori	r18, 0x01	; 1
    3ada:	dc 01       	movw	r26, r24
    3adc:	2c 93       	st	X, r18

00003ade <.Loc.374>:
    	TIMSK4 |= (1<<ICIE4); //enable input capture interrupts
    3ade:	82 e7       	ldi	r24, 0x72	; 114
    3ae0:	90 e0       	ldi	r25, 0x00	; 0
    3ae2:	fc 01       	movw	r30, r24
    3ae4:	20 81       	ld	r18, Z
    3ae6:	82 e7       	ldi	r24, 0x72	; 114
    3ae8:	90 e0       	ldi	r25, 0x00	; 0

00003aea <.Loc.375>:
    3aea:	20 62       	ori	r18, 0x20	; 32
    3aec:	dc 01       	movw	r26, r24
    3aee:	2c 93       	st	X, r18

00003af0 <.Loc.376>:
	...

00003af2 <.L161>:
    	while(flag < 2){}
    3af2:	80 91 46 02 	lds	r24, 0x0246	; 0x800246 <flag>
    3af6:	90 91 47 02 	lds	r25, 0x0247	; 0x800247 <flag+0x1>
    3afa:	81 30       	cpi	r24, 0x01	; 1
    3afc:	91 05       	cpc	r25, r1
    3afe:	c9 f3       	breq	.-14     	; 0x3af2 <.L161>
    3b00:	c4 f3       	brlt	.-16     	; 0x3af2 <.L161>

00003b02 <.Loc.378>:
    	//clicks = fall_edge - rise_edge;
    	//updateLCDScreen(1, "RE:",re, "");
    	afstand = (fe *0.858)-20;
    3b02:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <fe>
    3b06:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <fe+0x1>
    3b0a:	9c 01       	movw	r18, r24
    3b0c:	99 0f       	add	r25, r25
    3b0e:	44 0b       	sbc	r20, r20
    3b10:	55 0b       	sbc	r21, r21
    3b12:	6b 96       	adiw	r28, 0x1b	; 27
    3b14:	2c af       	std	Y+60, r18	; 0x3c
    3b16:	3d af       	std	Y+61, r19	; 0x3d
    3b18:	4e af       	std	Y+62, r20	; 0x3e
    3b1a:	5f af       	std	Y+63, r21	; 0x3f
    3b1c:	6b 97       	sbiw	r28, 0x1b	; 27
    3b1e:	6b 96       	adiw	r28, 0x1b	; 27
    3b20:	6c ad       	ldd	r22, Y+60	; 0x3c
    3b22:	7d ad       	ldd	r23, Y+61	; 0x3d
    3b24:	8e ad       	ldd	r24, Y+62	; 0x3e
    3b26:	9f ad       	ldd	r25, Y+63	; 0x3f
    3b28:	6b 97       	sbiw	r28, 0x1b	; 27
    3b2a:	0e 94 8d 24 	call	0x491a	; 0x491a <__floatsisf>
    3b2e:	6b a3       	std	Y+35, r22	; 0x23
    3b30:	7c a3       	std	Y+36, r23	; 0x24
    3b32:	8d a3       	std	Y+37, r24	; 0x25
    3b34:	9e a3       	std	Y+38, r25	; 0x26
    3b36:	23 ee       	ldi	r18, 0xE3	; 227
    3b38:	35 ea       	ldi	r19, 0xA5	; 165
    3b3a:	4b e5       	ldi	r20, 0x5B	; 91
    3b3c:	5f e3       	ldi	r21, 0x3F	; 63
    3b3e:	6b a1       	ldd	r22, Y+35	; 0x23
    3b40:	7c a1       	ldd	r23, Y+36	; 0x24
    3b42:	8d a1       	ldd	r24, Y+37	; 0x25
    3b44:	9e a1       	ldd	r25, Y+38	; 0x26
    3b46:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    3b4a:	6f 96       	adiw	r28, 0x1f	; 31
    3b4c:	6c af       	std	Y+60, r22	; 0x3c
    3b4e:	7d af       	std	Y+61, r23	; 0x3d
    3b50:	8e af       	std	Y+62, r24	; 0x3e
    3b52:	9f af       	std	Y+63, r25	; 0x3f
    3b54:	6f 97       	sbiw	r28, 0x1f	; 31
    3b56:	6f 96       	adiw	r28, 0x1f	; 31
    3b58:	8c ad       	ldd	r24, Y+60	; 0x3c
    3b5a:	9d ad       	ldd	r25, Y+61	; 0x3d
    3b5c:	ae ad       	ldd	r26, Y+62	; 0x3e
    3b5e:	bf ad       	ldd	r27, Y+63	; 0x3f
    3b60:	6f 97       	sbiw	r28, 0x1f	; 31
    3b62:	8f a3       	std	Y+39, r24	; 0x27
    3b64:	98 a7       	std	Y+40, r25	; 0x28
    3b66:	a9 a7       	std	Y+41, r26	; 0x29
    3b68:	ba a7       	std	Y+42, r27	; 0x2a

00003b6a <.Loc.379>:
    3b6a:	20 e0       	ldi	r18, 0x00	; 0
    3b6c:	30 e0       	ldi	r19, 0x00	; 0
    3b6e:	40 ea       	ldi	r20, 0xA0	; 160
    3b70:	51 e4       	ldi	r21, 0x41	; 65
    3b72:	6f a1       	ldd	r22, Y+39	; 0x27
    3b74:	78 a5       	ldd	r23, Y+40	; 0x28
    3b76:	89 a5       	ldd	r24, Y+41	; 0x29
    3b78:	9a a5       	ldd	r25, Y+42	; 0x2a
    3b7a:	0e 94 71 23 	call	0x46e2	; 0x46e2 <__subsf3>
    3b7e:	a3 96       	adiw	r28, 0x23	; 35
    3b80:	6c af       	std	Y+60, r22	; 0x3c
    3b82:	7d af       	std	Y+61, r23	; 0x3d
    3b84:	8e af       	std	Y+62, r24	; 0x3e
    3b86:	9f af       	std	Y+63, r25	; 0x3f
    3b88:	a3 97       	sbiw	r28, 0x23	; 35
    3b8a:	a3 96       	adiw	r28, 0x23	; 35
    3b8c:	2c ad       	ldd	r18, Y+60	; 0x3c
    3b8e:	3d ad       	ldd	r19, Y+61	; 0x3d
    3b90:	4e ad       	ldd	r20, Y+62	; 0x3e
    3b92:	5f ad       	ldd	r21, Y+63	; 0x3f
    3b94:	a3 97       	sbiw	r28, 0x23	; 35
    3b96:	2b a7       	std	Y+43, r18	; 0x2b
    3b98:	3c a7       	std	Y+44, r19	; 0x2c
    3b9a:	4d a7       	std	Y+45, r20	; 0x2d
    3b9c:	5e a7       	std	Y+46, r21	; 0x2e

00003b9e <.Loc.380>:
    3b9e:	6b a5       	ldd	r22, Y+43	; 0x2b
    3ba0:	7c a5       	ldd	r23, Y+44	; 0x2c
    3ba2:	8d a5       	ldd	r24, Y+45	; 0x2d
    3ba4:	9e a5       	ldd	r25, Y+46	; 0x2e
    3ba6:	0e 94 55 24 	call	0x48aa	; 0x48aa <__fixsfsi>
    3baa:	a7 96       	adiw	r28, 0x27	; 39
    3bac:	6c af       	std	Y+60, r22	; 0x3c
    3bae:	7d af       	std	Y+61, r23	; 0x3d
    3bb0:	8e af       	std	Y+62, r24	; 0x3e
    3bb2:	9f af       	std	Y+63, r25	; 0x3f
    3bb4:	a7 97       	sbiw	r28, 0x27	; 39
    3bb6:	a5 96       	adiw	r28, 0x25	; 37
    3bb8:	8e ad       	ldd	r24, Y+62	; 0x3e
    3bba:	9f ad       	ldd	r25, Y+63	; 0x3f
    3bbc:	a5 97       	sbiw	r28, 0x25	; 37
    3bbe:	90 93 49 02 	sts	0x0249, r25	; 0x800249 <afstand+0x1>
    3bc2:	80 93 48 02 	sts	0x0248, r24	; 0x800248 <afstand>

00003bc6 <.Loc.381>:
    	if (afstand < 0 ) afstand = 0;
    3bc6:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <afstand>
    3bca:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <afstand+0x1>

00003bce <.Loc.382>:
    3bce:	99 23       	and	r25, r25
    3bd0:	24 f4       	brge	.+8      	; 0x3bda <.L162>

00003bd2 <.Loc.383>:
    3bd2:	10 92 49 02 	sts	0x0249, r1	; 0x800249 <afstand+0x1>
    3bd6:	10 92 48 02 	sts	0x0248, r1	; 0x800248 <afstand>

00003bda <.L162>:
       return afstand;
    3bda:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <afstand>
    3bde:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <afstand+0x1>

00003be2 <.L143>:
}
    3be2:	ca 59       	subi	r28, 0x9A	; 154
    3be4:	df 4f       	sbci	r29, 0xFF	; 255
    3be6:	0f b6       	in	r0, 0x3f	; 63
    3be8:	f8 94       	cli
    3bea:	de bf       	out	0x3e, r29	; 62
    3bec:	0f be       	out	0x3f, r0	; 63
    3bee:	cd bf       	out	0x3d, r28	; 61
    3bf0:	df 91       	pop	r29
    3bf2:	cf 91       	pop	r28
    3bf4:	08 95       	ret

00003bf6 <rrichting>:



// Rijd Functies:
void rrichting(int richting){
    3bf6:	cf 93       	push	r28
    3bf8:	df 93       	push	r29
    3bfa:	0f 92       	push	r0
    3bfc:	0f 92       	push	r0
    3bfe:	cd b7       	in	r28, 0x3d	; 61
    3c00:	de b7       	in	r29, 0x3e	; 62
    3c02:	9a 83       	std	Y+2, r25	; 0x02
    3c04:	89 83       	std	Y+1, r24	; 0x01

00003c06 <.Loc.387>:
    if (richting){
    3c06:	89 81       	ldd	r24, Y+1	; 0x01
    3c08:	9a 81       	ldd	r25, Y+2	; 0x02
    3c0a:	00 97       	sbiw	r24, 0x00	; 0
    3c0c:	99 f0       	breq	.+38     	; 0x3c34 <.L174>

00003c0e <.Loc.388>:
        TCCR1A &= ~(1<<COM1A1); //zet vooruit uit
    3c0e:	80 e8       	ldi	r24, 0x80	; 128
    3c10:	90 e0       	ldi	r25, 0x00	; 0
    3c12:	fc 01       	movw	r30, r24
    3c14:	20 81       	ld	r18, Z

00003c16 <.Loc.389>:
    3c16:	80 e8       	ldi	r24, 0x80	; 128
    3c18:	90 e0       	ldi	r25, 0x00	; 0

00003c1a <.Loc.390>:
    3c1a:	2f 77       	andi	r18, 0x7F	; 127
    3c1c:	fc 01       	movw	r30, r24
    3c1e:	20 83       	st	Z, r18

00003c20 <.Loc.391>:
        TCCR1A |= (1<<COM1B1); //zet achteruit aan
    3c20:	80 e8       	ldi	r24, 0x80	; 128
    3c22:	90 e0       	ldi	r25, 0x00	; 0
    3c24:	fc 01       	movw	r30, r24
    3c26:	20 81       	ld	r18, Z
    3c28:	80 e8       	ldi	r24, 0x80	; 128
    3c2a:	90 e0       	ldi	r25, 0x00	; 0

00003c2c <.Loc.392>:
    3c2c:	20 62       	ori	r18, 0x20	; 32
    3c2e:	fc 01       	movw	r30, r24
    3c30:	20 83       	st	Z, r18

00003c32 <.Loc.393>:
    }
    else{
        TCCR1A &= ~(1<<COM1B1); //achteruit uit
        TCCR1A |= (1<<COM1A1); //vooruit aan
    }
}
    3c32:	12 c0       	rjmp	.+36     	; 0x3c58 <.L176>

00003c34 <.L174>:
        TCCR1A &= ~(1<<COM1B1); //achteruit uit
    3c34:	80 e8       	ldi	r24, 0x80	; 128
    3c36:	90 e0       	ldi	r25, 0x00	; 0
    3c38:	fc 01       	movw	r30, r24
    3c3a:	20 81       	ld	r18, Z

00003c3c <.Loc.395>:
    3c3c:	80 e8       	ldi	r24, 0x80	; 128
    3c3e:	90 e0       	ldi	r25, 0x00	; 0

00003c40 <.Loc.396>:
    3c40:	2f 7d       	andi	r18, 0xDF	; 223
    3c42:	fc 01       	movw	r30, r24
    3c44:	20 83       	st	Z, r18

00003c46 <.Loc.397>:
        TCCR1A |= (1<<COM1A1); //vooruit aan
    3c46:	80 e8       	ldi	r24, 0x80	; 128
    3c48:	90 e0       	ldi	r25, 0x00	; 0
    3c4a:	fc 01       	movw	r30, r24
    3c4c:	20 81       	ld	r18, Z
    3c4e:	80 e8       	ldi	r24, 0x80	; 128
    3c50:	90 e0       	ldi	r25, 0x00	; 0

00003c52 <.Loc.398>:
    3c52:	20 68       	ori	r18, 0x80	; 128
    3c54:	fc 01       	movw	r30, r24
    3c56:	20 83       	st	Z, r18

00003c58 <.L176>:
}
    3c58:	00 00       	nop
    3c5a:	0f 90       	pop	r0
    3c5c:	0f 90       	pop	r0
    3c5e:	df 91       	pop	r29
    3c60:	cf 91       	pop	r28
    3c62:	08 95       	ret

00003c64 <lrichting>:

void lrichting(int richting){
    3c64:	cf 93       	push	r28
    3c66:	df 93       	push	r29
    3c68:	0f 92       	push	r0
    3c6a:	0f 92       	push	r0
    3c6c:	cd b7       	in	r28, 0x3d	; 61
    3c6e:	de b7       	in	r29, 0x3e	; 62
    3c70:	9a 83       	std	Y+2, r25	; 0x02
    3c72:	89 83       	std	Y+1, r24	; 0x01

00003c74 <.Loc.401>:
    if (richting){
    3c74:	89 81       	ldd	r24, Y+1	; 0x01
    3c76:	9a 81       	ldd	r25, Y+2	; 0x02
    3c78:	00 97       	sbiw	r24, 0x00	; 0
    3c7a:	99 f0       	breq	.+38     	; 0x3ca2 <.L178>

00003c7c <.Loc.402>:
            TCCR4A &= ~(1<<COM4B1); //achteruit uit
    3c7c:	80 ea       	ldi	r24, 0xA0	; 160
    3c7e:	90 e0       	ldi	r25, 0x00	; 0
    3c80:	fc 01       	movw	r30, r24
    3c82:	20 81       	ld	r18, Z

00003c84 <.Loc.403>:
    3c84:	80 ea       	ldi	r24, 0xA0	; 160
    3c86:	90 e0       	ldi	r25, 0x00	; 0

00003c88 <.Loc.404>:
    3c88:	2f 7d       	andi	r18, 0xDF	; 223
    3c8a:	fc 01       	movw	r30, r24
    3c8c:	20 83       	st	Z, r18

00003c8e <.Loc.405>:
            TCCR4A |= (1<<COM4A1); //vooruit aan
    3c8e:	80 ea       	ldi	r24, 0xA0	; 160
    3c90:	90 e0       	ldi	r25, 0x00	; 0
    3c92:	fc 01       	movw	r30, r24
    3c94:	20 81       	ld	r18, Z
    3c96:	80 ea       	ldi	r24, 0xA0	; 160
    3c98:	90 e0       	ldi	r25, 0x00	; 0

00003c9a <.Loc.406>:
    3c9a:	20 68       	ori	r18, 0x80	; 128
    3c9c:	fc 01       	movw	r30, r24
    3c9e:	20 83       	st	Z, r18

00003ca0 <.Loc.407>:
    }
    else{
        TCCR4A &= ~(1<<COM4A1); //zet vooruit uit
        TCCR4A |= (1<<COM4B1); //zet achteruit aan
    }
}
    3ca0:	12 c0       	rjmp	.+36     	; 0x3cc6 <.L180>

00003ca2 <.L178>:
        TCCR4A &= ~(1<<COM4A1); //zet vooruit uit
    3ca2:	80 ea       	ldi	r24, 0xA0	; 160
    3ca4:	90 e0       	ldi	r25, 0x00	; 0
    3ca6:	fc 01       	movw	r30, r24
    3ca8:	20 81       	ld	r18, Z

00003caa <.Loc.409>:
    3caa:	80 ea       	ldi	r24, 0xA0	; 160
    3cac:	90 e0       	ldi	r25, 0x00	; 0

00003cae <.Loc.410>:
    3cae:	2f 77       	andi	r18, 0x7F	; 127
    3cb0:	fc 01       	movw	r30, r24
    3cb2:	20 83       	st	Z, r18

00003cb4 <.Loc.411>:
        TCCR4A |= (1<<COM4B1); //zet achteruit aan
    3cb4:	80 ea       	ldi	r24, 0xA0	; 160
    3cb6:	90 e0       	ldi	r25, 0x00	; 0
    3cb8:	fc 01       	movw	r30, r24
    3cba:	20 81       	ld	r18, Z
    3cbc:	80 ea       	ldi	r24, 0xA0	; 160
    3cbe:	90 e0       	ldi	r25, 0x00	; 0

00003cc0 <.Loc.412>:
    3cc0:	20 62       	ori	r18, 0x20	; 32
    3cc2:	fc 01       	movw	r30, r24
    3cc4:	20 83       	st	Z, r18

00003cc6 <.L180>:
}
    3cc6:	00 00       	nop
    3cc8:	0f 90       	pop	r0
    3cca:	0f 90       	pop	r0
    3ccc:	df 91       	pop	r29
    3cce:	cf 91       	pop	r28
    3cd0:	08 95       	ret

00003cd2 <lsnelheid>:


// Snelheid = 21 voor Aan
void lsnelheid(int snelheid){
    3cd2:	cf 93       	push	r28
    3cd4:	df 93       	push	r29
    3cd6:	0f 92       	push	r0
    3cd8:	0f 92       	push	r0
    3cda:	cd b7       	in	r28, 0x3d	; 61
    3cdc:	de b7       	in	r29, 0x3e	; 62
    3cde:	9a 83       	std	Y+2, r25	; 0x02
    3ce0:	89 83       	std	Y+1, r24	; 0x01

00003ce2 <.Loc.415>:
    OCR4A = snelheid;
    3ce2:	88 ea       	ldi	r24, 0xA8	; 168
    3ce4:	90 e0       	ldi	r25, 0x00	; 0

00003ce6 <.Loc.416>:
    3ce6:	29 81       	ldd	r18, Y+1	; 0x01
    3ce8:	3a 81       	ldd	r19, Y+2	; 0x02
    3cea:	fc 01       	movw	r30, r24
    3cec:	31 83       	std	Z+1, r19	; 0x01
    3cee:	20 83       	st	Z, r18

00003cf0 <.Loc.417>:
    OCR4B = snelheid;
    3cf0:	8a ea       	ldi	r24, 0xAA	; 170
    3cf2:	90 e0       	ldi	r25, 0x00	; 0

00003cf4 <.Loc.418>:
    3cf4:	29 81       	ldd	r18, Y+1	; 0x01
    3cf6:	3a 81       	ldd	r19, Y+2	; 0x02
    3cf8:	fc 01       	movw	r30, r24
    3cfa:	31 83       	std	Z+1, r19	; 0x01
    3cfc:	20 83       	st	Z, r18

00003cfe <.Loc.419>:
}
    3cfe:	00 00       	nop
    3d00:	0f 90       	pop	r0
    3d02:	0f 90       	pop	r0
    3d04:	df 91       	pop	r29
    3d06:	cf 91       	pop	r28
    3d08:	08 95       	ret

00003d0a <rsnelheid>:

// Snelheid = 20 voor Aan
void rsnelheid(int snelheid){
    3d0a:	cf 93       	push	r28
    3d0c:	df 93       	push	r29
    3d0e:	0f 92       	push	r0
    3d10:	0f 92       	push	r0
    3d12:	cd b7       	in	r28, 0x3d	; 61
    3d14:	de b7       	in	r29, 0x3e	; 62
    3d16:	9a 83       	std	Y+2, r25	; 0x02
    3d18:	89 83       	std	Y+1, r24	; 0x01

00003d1a <.Loc.421>:
    OCR1A = snelheid;
    3d1a:	88 e8       	ldi	r24, 0x88	; 136
    3d1c:	90 e0       	ldi	r25, 0x00	; 0

00003d1e <.Loc.422>:
    3d1e:	29 81       	ldd	r18, Y+1	; 0x01
    3d20:	3a 81       	ldd	r19, Y+2	; 0x02
    3d22:	fc 01       	movw	r30, r24
    3d24:	31 83       	std	Z+1, r19	; 0x01
    3d26:	20 83       	st	Z, r18

00003d28 <.Loc.423>:
    OCR1B = snelheid;
    3d28:	8a e8       	ldi	r24, 0x8A	; 138
    3d2a:	90 e0       	ldi	r25, 0x00	; 0

00003d2c <.Loc.424>:
    3d2c:	29 81       	ldd	r18, Y+1	; 0x01
    3d2e:	3a 81       	ldd	r19, Y+2	; 0x02
    3d30:	fc 01       	movw	r30, r24
    3d32:	31 83       	std	Z+1, r19	; 0x01
    3d34:	20 83       	st	Z, r18

00003d36 <.Loc.425>:
}
    3d36:	00 00       	nop
    3d38:	0f 90       	pop	r0
    3d3a:	0f 90       	pop	r0
    3d3c:	df 91       	pop	r29
    3d3e:	cf 91       	pop	r28
    3d40:	08 95       	ret

00003d42 <__vector_41>:



// Interrupts:
ISR(TIMER4_CAPT_vect){
    3d42:	1f 92       	push	r1
    3d44:	0f 92       	push	r0
    3d46:	0f b6       	in	r0, 0x3f	; 63
    3d48:	0f 92       	push	r0
    3d4a:	11 24       	eor	r1, r1
    3d4c:	0b b6       	in	r0, 0x3b	; 59
    3d4e:	0f 92       	push	r0
    3d50:	2f 93       	push	r18
    3d52:	8f 93       	push	r24
    3d54:	9f 93       	push	r25
    3d56:	ef 93       	push	r30
    3d58:	ff 93       	push	r31
    3d5a:	cf 93       	push	r28
    3d5c:	df 93       	push	r29
    3d5e:	cd b7       	in	r28, 0x3d	; 61
    3d60:	de b7       	in	r29, 0x3e	; 62

00003d62 <.Loc.427>:
	if (flag == 0)  //rising edge
    3d62:	80 91 46 02 	lds	r24, 0x0246	; 0x800246 <flag>
    3d66:	90 91 47 02 	lds	r25, 0x0247	; 0x800247 <flag+0x1>

00003d6a <.Loc.428>:
    3d6a:	00 97       	sbiw	r24, 0x00	; 0
    3d6c:	b9 f4       	brne	.+46     	; 0x3d9c <.L184>

00003d6e <.Loc.429>:
	{
		re = ICR4; //save rise fall edge time to input capture register
    3d6e:	86 ea       	ldi	r24, 0xA6	; 166
    3d70:	90 e0       	ldi	r25, 0x00	; 0
    3d72:	fc 01       	movw	r30, r24
    3d74:	80 81       	ld	r24, Z
    3d76:	91 81       	ldd	r25, Z+1	; 0x01

00003d78 <.Loc.430>:
    3d78:	90 93 4d 02 	sts	0x024D, r25	; 0x80024d <re+0x1>
    3d7c:	80 93 4c 02 	sts	0x024C, r24	; 0x80024c <re>

00003d80 <.Loc.431>:
		TCCR4B &= ~(1<<ICES4); //change input capture edge select on falling edge
    3d80:	81 ea       	ldi	r24, 0xA1	; 161
    3d82:	90 e0       	ldi	r25, 0x00	; 0
    3d84:	fc 01       	movw	r30, r24
    3d86:	20 81       	ld	r18, Z

00003d88 <.Loc.432>:
    3d88:	81 ea       	ldi	r24, 0xA1	; 161
    3d8a:	90 e0       	ldi	r25, 0x00	; 0

00003d8c <.Loc.433>:
    3d8c:	2f 7b       	andi	r18, 0xBF	; 191
    3d8e:	fc 01       	movw	r30, r24
    3d90:	20 83       	st	Z, r18

00003d92 <.Loc.434>:
		TCNT4 = 0;
    3d92:	84 ea       	ldi	r24, 0xA4	; 164
    3d94:	90 e0       	ldi	r25, 0x00	; 0

00003d96 <.Loc.435>:
    3d96:	fc 01       	movw	r30, r24
    3d98:	11 82       	std	Z+1, r1	; 0x01
    3d9a:	10 82       	st	Z, r1

00003d9c <.L184>:
	}
	if (flag == 1) //falling edge
    3d9c:	80 91 46 02 	lds	r24, 0x0246	; 0x800246 <flag>
    3da0:	90 91 47 02 	lds	r25, 0x0247	; 0x800247 <flag+0x1>

00003da4 <.Loc.437>:
    3da4:	81 30       	cpi	r24, 0x01	; 1
    3da6:	91 05       	cpc	r25, r1
    3da8:	49 f5       	brne	.+82     	; 0x3dfc <.L185>

00003daa <.Loc.438>:
	{
		fe = ICR4; //save fall edge time to input capture register
    3daa:	86 ea       	ldi	r24, 0xA6	; 166
    3dac:	90 e0       	ldi	r25, 0x00	; 0
    3dae:	fc 01       	movw	r30, r24
    3db0:	80 81       	ld	r24, Z
    3db2:	91 81       	ldd	r25, Z+1	; 0x01

00003db4 <.Loc.439>:
    3db4:	90 93 4b 02 	sts	0x024B, r25	; 0x80024b <fe+0x1>
    3db8:	80 93 4a 02 	sts	0x024A, r24	; 0x80024a <fe>

00003dbc <.Loc.440>:
        TCCR4B |= (1<<ICES4); //change input capture edge select on rising edge
    3dbc:	81 ea       	ldi	r24, 0xA1	; 161
    3dbe:	90 e0       	ldi	r25, 0x00	; 0
    3dc0:	fc 01       	movw	r30, r24
    3dc2:	20 81       	ld	r18, Z
    3dc4:	81 ea       	ldi	r24, 0xA1	; 161
    3dc6:	90 e0       	ldi	r25, 0x00	; 0

00003dc8 <.Loc.441>:
    3dc8:	20 64       	ori	r18, 0x40	; 64
    3dca:	fc 01       	movw	r30, r24
    3dcc:	20 83       	st	Z, r18

00003dce <.Loc.442>:
		TIMSK4 &= ~(1<<ICIE4); //disable input capture interrupt
    3dce:	82 e7       	ldi	r24, 0x72	; 114
    3dd0:	90 e0       	ldi	r25, 0x00	; 0
    3dd2:	fc 01       	movw	r30, r24
    3dd4:	20 81       	ld	r18, Z

00003dd6 <.Loc.443>:
    3dd6:	82 e7       	ldi	r24, 0x72	; 114
    3dd8:	90 e0       	ldi	r25, 0x00	; 0

00003dda <.Loc.444>:
    3dda:	2f 7d       	andi	r18, 0xDF	; 223
    3ddc:	fc 01       	movw	r30, r24
    3dde:	20 83       	st	Z, r18

00003de0 <.Loc.445>:
		TCCR4B &= ~(1<<CS40); //stop de timer
    3de0:	81 ea       	ldi	r24, 0xA1	; 161
    3de2:	90 e0       	ldi	r25, 0x00	; 0
    3de4:	fc 01       	movw	r30, r24
    3de6:	20 81       	ld	r18, Z

00003de8 <.Loc.446>:
    3de8:	81 ea       	ldi	r24, 0xA1	; 161
    3dea:	90 e0       	ldi	r25, 0x00	; 0

00003dec <.Loc.447>:
    3dec:	2e 7f       	andi	r18, 0xFE	; 254
    3dee:	fc 01       	movw	r30, r24
    3df0:	20 83       	st	Z, r18

00003df2 <.Loc.448>:
		TCNT1 = 0;
    3df2:	84 e8       	ldi	r24, 0x84	; 132
    3df4:	90 e0       	ldi	r25, 0x00	; 0

00003df6 <.Loc.449>:
    3df6:	fc 01       	movw	r30, r24
    3df8:	11 82       	std	Z+1, r1	; 0x01
    3dfa:	10 82       	st	Z, r1

00003dfc <.L185>:
	}
	flag ++; //increment flag
    3dfc:	80 91 46 02 	lds	r24, 0x0246	; 0x800246 <flag>
    3e00:	90 91 47 02 	lds	r25, 0x0247	; 0x800247 <flag+0x1>
    3e04:	01 96       	adiw	r24, 0x01	; 1
    3e06:	90 93 47 02 	sts	0x0247, r25	; 0x800247 <flag+0x1>
    3e0a:	80 93 46 02 	sts	0x0246, r24	; 0x800246 <flag>

00003e0e <.Loc.451>:
}
    3e0e:	00 00       	nop
    3e10:	df 91       	pop	r29
    3e12:	cf 91       	pop	r28
    3e14:	ff 91       	pop	r31
    3e16:	ef 91       	pop	r30
    3e18:	9f 91       	pop	r25
    3e1a:	8f 91       	pop	r24
    3e1c:	2f 91       	pop	r18
    3e1e:	0f 90       	pop	r0
    3e20:	0b be       	out	0x3b, r0	; 59
    3e22:	0f 90       	pop	r0
    3e24:	0f be       	out	0x3f, r0	; 63
    3e26:	0f 90       	pop	r0
    3e28:	1f 90       	pop	r1
    3e2a:	18 95       	reti

00003e2c <__vector_45>:

ISR(TIMER4_OVF_vect){
    3e2c:	1f 92       	push	r1
    3e2e:	0f 92       	push	r0
    3e30:	0f b6       	in	r0, 0x3f	; 63
    3e32:	0f 92       	push	r0
    3e34:	11 24       	eor	r1, r1
    3e36:	0b b6       	in	r0, 0x3b	; 59
    3e38:	0f 92       	push	r0
    3e3a:	2f 93       	push	r18
    3e3c:	8f 93       	push	r24
    3e3e:	9f 93       	push	r25
    3e40:	ef 93       	push	r30
    3e42:	ff 93       	push	r31
    3e44:	cf 93       	push	r28
    3e46:	df 93       	push	r29
    3e48:	cd b7       	in	r28, 0x3d	; 61
    3e4a:	de b7       	in	r29, 0x3e	; 62

00003e4c <.Loc.453>:
    flag = 3;
    3e4c:	83 e0       	ldi	r24, 0x03	; 3
    3e4e:	90 e0       	ldi	r25, 0x00	; 0
    3e50:	90 93 47 02 	sts	0x0247, r25	; 0x800247 <flag+0x1>
    3e54:	80 93 46 02 	sts	0x0246, r24	; 0x800246 <flag>

00003e58 <.Loc.454>:
    fe = 0;
    3e58:	10 92 4b 02 	sts	0x024B, r1	; 0x80024b <fe+0x1>
    3e5c:	10 92 4a 02 	sts	0x024A, r1	; 0x80024a <fe>

00003e60 <.Loc.455>:
    re = 0;
    3e60:	10 92 4d 02 	sts	0x024D, r1	; 0x80024d <re+0x1>
    3e64:	10 92 4c 02 	sts	0x024C, r1	; 0x80024c <re>

00003e68 <.Loc.456>:
    TCCR4B |= (1<<ICES4); //change input capture edge select on rising edge
    3e68:	81 ea       	ldi	r24, 0xA1	; 161
    3e6a:	90 e0       	ldi	r25, 0x00	; 0
    3e6c:	fc 01       	movw	r30, r24
    3e6e:	20 81       	ld	r18, Z
    3e70:	81 ea       	ldi	r24, 0xA1	; 161
    3e72:	90 e0       	ldi	r25, 0x00	; 0

00003e74 <.Loc.457>:
    3e74:	20 64       	ori	r18, 0x40	; 64
    3e76:	fc 01       	movw	r30, r24
    3e78:	20 83       	st	Z, r18

00003e7a <.Loc.458>:
    TIMSK4 &= ~(1<<ICIE4); //disable input capture interrupt
    3e7a:	82 e7       	ldi	r24, 0x72	; 114
    3e7c:	90 e0       	ldi	r25, 0x00	; 0
    3e7e:	fc 01       	movw	r30, r24
    3e80:	20 81       	ld	r18, Z

00003e82 <.Loc.459>:
    3e82:	82 e7       	ldi	r24, 0x72	; 114
    3e84:	90 e0       	ldi	r25, 0x00	; 0

00003e86 <.Loc.460>:
    3e86:	2f 7d       	andi	r18, 0xDF	; 223
    3e88:	fc 01       	movw	r30, r24
    3e8a:	20 83       	st	Z, r18

00003e8c <.Loc.461>:
    TCCR4B &= ~(1<<CS40); //stop de timer
    3e8c:	81 ea       	ldi	r24, 0xA1	; 161
    3e8e:	90 e0       	ldi	r25, 0x00	; 0
    3e90:	fc 01       	movw	r30, r24
    3e92:	20 81       	ld	r18, Z

00003e94 <.Loc.462>:
    3e94:	81 ea       	ldi	r24, 0xA1	; 161
    3e96:	90 e0       	ldi	r25, 0x00	; 0

00003e98 <.Loc.463>:
    3e98:	2e 7f       	andi	r18, 0xFE	; 254
    3e9a:	fc 01       	movw	r30, r24
    3e9c:	20 83       	st	Z, r18

00003e9e <.Loc.464>:
    TCNT1 = 0;
    3e9e:	84 e8       	ldi	r24, 0x84	; 132
    3ea0:	90 e0       	ldi	r25, 0x00	; 0

00003ea2 <.Loc.465>:
    3ea2:	fc 01       	movw	r30, r24
    3ea4:	11 82       	std	Z+1, r1	; 0x01
    3ea6:	10 82       	st	Z, r1

00003ea8 <.Loc.466>:
}
    3ea8:	00 00       	nop
    3eaa:	df 91       	pop	r29
    3eac:	cf 91       	pop	r28
    3eae:	ff 91       	pop	r31
    3eb0:	ef 91       	pop	r30
    3eb2:	9f 91       	pop	r25
    3eb4:	8f 91       	pop	r24
    3eb6:	2f 91       	pop	r18
    3eb8:	0f 90       	pop	r0
    3eba:	0b be       	out	0x3b, r0	; 59
    3ebc:	0f 90       	pop	r0
    3ebe:	0f be       	out	0x3f, r0	; 63
    3ec0:	0f 90       	pop	r0
    3ec2:	1f 90       	pop	r1
    3ec4:	18 95       	reti

00003ec6 <main>:




// Main Functie
int main(void){
    3ec6:	cf 93       	push	r28
    3ec8:	df 93       	push	r29
    3eca:	cd b7       	in	r28, 0x3d	; 61
    3ecc:	de b7       	in	r29, 0x3e	; 62
    3ece:	ca 54       	subi	r28, 0x4A	; 74
    3ed0:	d1 09       	sbc	r29, r1
    3ed2:	0f b6       	in	r0, 0x3f	; 63
    3ed4:	f8 94       	cli
    3ed6:	de bf       	out	0x3e, r29	; 62
    3ed8:	0f be       	out	0x3f, r0	; 63
    3eda:	cd bf       	out	0x3d, r28	; 61

00003edc <.Loc.468>:
    init();
    3edc:	0e 94 bf 14 	call	0x297e	; 0x297e <init>

00003ee0 <.Loc.469>:
    enum states {Rechtdoorrijden, DraaienR, DraaienL, Volgen, Noodstop, Uit, BoomSignaleren, RouteCorrigeren};
    int state;
    state = Uit;
    3ee0:	85 e0       	ldi	r24, 0x05	; 5
    3ee2:	90 e0       	ldi	r25, 0x00	; 0
    3ee4:	9a 83       	std	Y+2, r25	; 0x02
    3ee6:	89 83       	std	Y+1, r24	; 0x01

00003ee8 <.L252>:
    while(1){
    switch (state){
    3ee8:	89 81       	ldd	r24, Y+1	; 0x01
    3eea:	9a 81       	ldd	r25, Y+2	; 0x02
    3eec:	09 2e       	mov	r0, r25
    3eee:	00 0c       	add	r0, r0
    3ef0:	aa 0b       	sbc	r26, r26
    3ef2:	bb 0b       	sbc	r27, r27
    3ef4:	87 30       	cpi	r24, 0x07	; 7
    3ef6:	91 05       	cpc	r25, r1
    3ef8:	a1 05       	cpc	r26, r1
    3efa:	b1 05       	cpc	r27, r1
    3efc:	09 f0       	breq	.+2      	; 0x3f00 <L0^A+0x2>

00003efe <L0^A>:
    3efe:	a0 f7       	brcc	.-24     	; 0x3ee8 <.L252>
    3f00:	fc 01       	movw	r30, r24
    3f02:	88 27       	eor	r24, r24
    3f04:	ef 5f       	subi	r30, 0xFF	; 255
    3f06:	f6 4d       	sbci	r31, 0xD6	; 214
    3f08:	8f 4f       	sbci	r24, 0xFF	; 255
    3f0a:	0c 94 69 23 	jmp	0x46d2	; 0x46d2 <__tablejump2__>

00003f0e <.L193>:
        case Noodstop:
            onled(0);
    3f0e:	80 e0       	ldi	r24, 0x00	; 0
    3f10:	90 e0       	ldi	r25, 0x00	; 0
    3f12:	0e 94 98 16 	call	0x2d30	; 0x2d30 <onled>

00003f16 <.Loc.472>:
            noodstopled(1);
    3f16:	81 e0       	ldi	r24, 0x01	; 1
    3f18:	90 e0       	ldi	r25, 0x00	; 0
    3f1a:	0e 94 bd 16 	call	0x2d7a	; 0x2d7a <noodstopled>

00003f1e <.Loc.473>:


            // Snelheid uitzetten
            rsnelheid(0);
    3f1e:	80 e0       	ldi	r24, 0x00	; 0
    3f20:	90 e0       	ldi	r25, 0x00	; 0
    3f22:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <rsnelheid>

00003f26 <.Loc.474>:
            lsnelheid(0);
    3f26:	80 e0       	ldi	r24, 0x00	; 0
    3f28:	90 e0       	ldi	r25, 0x00	; 0
    3f2a:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <lsnelheid>

00003f2e <.Loc.475>:


            rrichting(0);
    3f2e:	80 e0       	ldi	r24, 0x00	; 0
    3f30:	90 e0       	ldi	r25, 0x00	; 0
    3f32:	0e 94 fb 1d 	call	0x3bf6	; 0x3bf6 <rrichting>

00003f36 <.Loc.476>:
            lrichting(0);
    3f36:	80 e0       	ldi	r24, 0x00	; 0
    3f38:	90 e0       	ldi	r25, 0x00	; 0
    3f3a:	0e 94 32 1e 	call	0x3c64	; 0x3c64 <lrichting>

00003f3e <.Loc.477>:

            if(leestnoodstopuit() && (noodstop_Onthouden == 1))
    3f3e:	0e 94 07 17 	call	0x2e0e	; 0x2e0e <leestnoodstopuit>

00003f42 <.Loc.478>:
    3f42:	00 97       	sbiw	r24, 0x00	; 0
    3f44:	59 f0       	breq	.+22     	; 0x3f5c <.L198>

00003f46 <.Loc.479>:
    3f46:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <noodstop_Onthouden>
    3f4a:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <noodstop_Onthouden+0x1>

00003f4e <.Loc.480>:
    3f4e:	81 30       	cpi	r24, 0x01	; 1
    3f50:	91 05       	cpc	r25, r1
    3f52:	21 f4       	brne	.+8      	; 0x3f5c <.L198>

00003f54 <.Loc.481>:
            {
                noodstop_Onthouden = 0;
    3f54:	10 92 37 02 	sts	0x0237, r1	; 0x800237 <noodstop_Onthouden+0x1>
    3f58:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <noodstop_Onthouden>

00003f5c <.L198>:
            }

            if(leestaanknopuit() && (noodstop_Onthouden == 0))
    3f5c:	0e 94 5d 18 	call	0x30ba	; 0x30ba <leestaanknopuit>

00003f60 <.Loc.483>:
    3f60:	00 97       	sbiw	r24, 0x00	; 0
    3f62:	09 f4       	brne	.+2      	; 0x3f66 <.Loc.484>

00003f64 <L0^A>:
    3f64:	aa c3       	rjmp	.+1876   	; 0x46ba <.L261>

00003f66 <.Loc.484>:
    3f66:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <noodstop_Onthouden>
    3f6a:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <noodstop_Onthouden+0x1>

00003f6e <.Loc.485>:
    3f6e:	00 97       	sbiw	r24, 0x00	; 0
    3f70:	09 f0       	breq	.+2      	; 0x3f74 <.Loc.486>

00003f72 <L0^A>:
    3f72:	a3 c3       	rjmp	.+1862   	; 0x46ba <.L261>

00003f74 <.Loc.486>:
            {
                if(draaienL_Onthouden == 1){
    3f74:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <draaienL_Onthouden>
    3f78:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <draaienL_Onthouden+0x1>

00003f7c <.Loc.487>:
    3f7c:	81 30       	cpi	r24, 0x01	; 1
    3f7e:	91 05       	cpc	r25, r1
    3f80:	29 f4       	brne	.+10     	; 0x3f8c <.L200>

00003f82 <.Loc.488>:
                    state = DraaienL;
    3f82:	82 e0       	ldi	r24, 0x02	; 2
    3f84:	90 e0       	ldi	r25, 0x00	; 0
    3f86:	9a 83       	std	Y+2, r25	; 0x02
    3f88:	89 83       	std	Y+1, r24	; 0x01

00003f8a <.Loc.489>:
                    break;
    3f8a:	a2 c3       	rjmp	.+1860   	; 0x46d0 <.L188>

00003f8c <.L200>:
                }
                else if(draaienR_Onthouden == 1){
    3f8c:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <draaienR_Onthouden>
    3f90:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <draaienR_Onthouden+0x1>

00003f94 <.Loc.491>:
    3f94:	81 30       	cpi	r24, 0x01	; 1
    3f96:	91 05       	cpc	r25, r1
    3f98:	29 f4       	brne	.+10     	; 0x3fa4 <.L201>

00003f9a <.Loc.492>:
                    state = DraaienR;
    3f9a:	81 e0       	ldi	r24, 0x01	; 1
    3f9c:	90 e0       	ldi	r25, 0x00	; 0
    3f9e:	9a 83       	std	Y+2, r25	; 0x02
    3fa0:	89 83       	std	Y+1, r24	; 0x01

00003fa2 <.Loc.493>:
                    break;
    3fa2:	96 c3       	rjmp	.+1836   	; 0x46d0 <.L188>

00003fa4 <.L201>:
                }
                else{
                    state = Rechtdoorrijden;
    3fa4:	1a 82       	std	Y+2, r1	; 0x02
    3fa6:	19 82       	std	Y+1, r1	; 0x01

00003fa8 <.Loc.495>:
                    break;
    3fa8:	93 c3       	rjmp	.+1830   	; 0x46d0 <.L188>

00003faa <.L197>:
            }

            break;

        case Rechtdoorrijden:
            onled(1);
    3faa:	81 e0       	ldi	r24, 0x01	; 1
    3fac:	90 e0       	ldi	r25, 0x00	; 0
    3fae:	0e 94 98 16 	call	0x2d30	; 0x2d30 <onled>

00003fb2 <.Loc.497>:

            // Laten rijden
            rsnelheid(20);
    3fb2:	84 e1       	ldi	r24, 0x14	; 20
    3fb4:	90 e0       	ldi	r25, 0x00	; 0
    3fb6:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <rsnelheid>

00003fba <.Loc.498>:
            lsnelheid(21);
    3fba:	85 e1       	ldi	r24, 0x15	; 21
    3fbc:	90 e0       	ldi	r25, 0x00	; 0
    3fbe:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <lsnelheid>

00003fc2 <.Loc.499>:

            // 1 zodat die vooruit rijdt
            rrichting(1);
    3fc2:	81 e0       	ldi	r24, 0x01	; 1
    3fc4:	90 e0       	ldi	r25, 0x00	; 0
    3fc6:	0e 94 fb 1d 	call	0x3bf6	; 0x3bf6 <rrichting>

00003fca <.Loc.500>:
            lrichting(1);
    3fca:	81 e0       	ldi	r24, 0x01	; 1
    3fcc:	90 e0       	ldi	r25, 0x00	; 0
    3fce:	0e 94 32 1e 	call	0x3c64	; 0x3c64 <lrichting>

00003fd2 <.Loc.501>:



            if(leestnoodstopuit() || (leessonaruit(0) < 25)){
    3fd2:	0e 94 07 17 	call	0x2e0e	; 0x2e0e <leestnoodstopuit>

00003fd6 <.Loc.502>:
    3fd6:	00 97       	sbiw	r24, 0x00	; 0
    3fd8:	41 f4       	brne	.+16     	; 0x3fea <.L202>

00003fda <.Loc.503>:
    3fda:	80 e0       	ldi	r24, 0x00	; 0
    3fdc:	90 e0       	ldi	r25, 0x00	; 0
    3fde:	0e 94 8d 1b 	call	0x371a	; 0x371a <leessonaruit>

00003fe2 <.Loc.504>:
    3fe2:	88 31       	cpi	r24, 0x18	; 24
    3fe4:	91 05       	cpc	r25, r1
    3fe6:	09 f0       	breq	.+2      	; 0x3fea <.L202>

00003fe8 <L0^A>:
    3fe8:	5c f4       	brge	.+22     	; 0x4000 <.L203>

00003fea <.L202>:
                noodstop_Onthouden = 1;
    3fea:	81 e0       	ldi	r24, 0x01	; 1
    3fec:	90 e0       	ldi	r25, 0x00	; 0
    3fee:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <noodstop_Onthouden+0x1>
    3ff2:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <noodstop_Onthouden>

00003ff6 <.Loc.506>:
                state = Noodstop;
    3ff6:	84 e0       	ldi	r24, 0x04	; 4
    3ff8:	90 e0       	ldi	r25, 0x00	; 0
    3ffa:	9a 83       	std	Y+2, r25	; 0x02
    3ffc:	89 83       	std	Y+1, r24	; 0x01

00003ffe <.Loc.507>:
                break;
    3ffe:	68 c3       	rjmp	.+1744   	; 0x46d0 <.L188>

00004000 <.L203>:
            }
            if((leestaanknopuit()) && (aan_Onthouden == 1)){
    4000:	0e 94 5d 18 	call	0x30ba	; 0x30ba <leestaanknopuit>

00004004 <.Loc.509>:
    4004:	00 97       	sbiw	r24, 0x00	; 0
    4006:	81 f0       	breq	.+32     	; 0x4028 <.L204>

00004008 <.Loc.510>:
    4008:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <aan_Onthouden>
    400c:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <aan_Onthouden+0x1>

00004010 <.Loc.511>:
    4010:	81 30       	cpi	r24, 0x01	; 1
    4012:	91 05       	cpc	r25, r1
    4014:	49 f4       	brne	.+18     	; 0x4028 <.L204>

00004016 <.Loc.512>:
                aan_Onthouden = 0;
    4016:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <aan_Onthouden+0x1>
    401a:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <aan_Onthouden>

0000401e <.Loc.513>:
                state = Uit;
    401e:	85 e0       	ldi	r24, 0x05	; 5
    4020:	90 e0       	ldi	r25, 0x00	; 0
    4022:	9a 83       	std	Y+2, r25	; 0x02
    4024:	89 83       	std	Y+1, r24	; 0x01

00004026 <.Loc.514>:
                break;
    4026:	54 c3       	rjmp	.+1704   	; 0x46d0 <.L188>

00004028 <.L204>:
            }

            if((detecteerboomlinks()) && (!boomL_Gezien)){
    4028:	0e 94 09 1b 	call	0x3612	; 0x3612 <detecteerboomlinks>

0000402c <.Loc.516>:
    402c:	00 97       	sbiw	r24, 0x00	; 0
    402e:	89 f0       	breq	.+34     	; 0x4052 <.L205>

00004030 <.Loc.517>:
    4030:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <boomL_Gezien>
    4034:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <boomL_Gezien+0x1>

00004038 <.Loc.518>:
    4038:	00 97       	sbiw	r24, 0x00	; 0
    403a:	59 f4       	brne	.+22     	; 0x4052 <.L205>

0000403c <.Loc.519>:
                boomL_Gezien = 1;
    403c:	81 e0       	ldi	r24, 0x01	; 1
    403e:	90 e0       	ldi	r25, 0x00	; 0
    4040:	90 93 3f 02 	sts	0x023F, r25	; 0x80023f <boomL_Gezien+0x1>
    4044:	80 93 3e 02 	sts	0x023E, r24	; 0x80023e <boomL_Gezien>

00004048 <.Loc.520>:
                state = BoomSignaleren;
    4048:	86 e0       	ldi	r24, 0x06	; 6
    404a:	90 e0       	ldi	r25, 0x00	; 0
    404c:	9a 83       	std	Y+2, r25	; 0x02
    404e:	89 83       	std	Y+1, r24	; 0x01

00004050 <.Loc.521>:
                break;
    4050:	3f c3       	rjmp	.+1662   	; 0x46d0 <.L188>

00004052 <.L205>:
            }
            else if((!detecteerboomlinks()) && (boomL_Gezien)){
    4052:	0e 94 09 1b 	call	0x3612	; 0x3612 <detecteerboomlinks>

00004056 <.Loc.523>:
    4056:	00 97       	sbiw	r24, 0x00	; 0
    4058:	59 f4       	brne	.+22     	; 0x4070 <.L206>

0000405a <.Loc.524>:
    405a:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <boomL_Gezien>
    405e:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <boomL_Gezien+0x1>
    4062:	00 97       	sbiw	r24, 0x00	; 0
    4064:	29 f0       	breq	.+10     	; 0x4070 <.L206>

00004066 <.Loc.525>:
                boomL_Gezien = 0;
    4066:	10 92 3f 02 	sts	0x023F, r1	; 0x80023f <boomL_Gezien+0x1>
    406a:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <boomL_Gezien>

0000406e <.Loc.526>:
                break;
    406e:	30 c3       	rjmp	.+1632   	; 0x46d0 <.L188>

00004070 <.L206>:
            }

            if((detecteerboomrechts()) && (!boomR_Gezien)){
    4070:	0e 94 2a 1b 	call	0x3654	; 0x3654 <detecteerboomrechts>

00004074 <.Loc.528>:
    4074:	00 97       	sbiw	r24, 0x00	; 0
    4076:	89 f0       	breq	.+34     	; 0x409a <.L207>

00004078 <.Loc.529>:
    4078:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <boomR_Gezien>
    407c:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <boomR_Gezien+0x1>

00004080 <.Loc.530>:
    4080:	00 97       	sbiw	r24, 0x00	; 0
    4082:	59 f4       	brne	.+22     	; 0x409a <.L207>

00004084 <.Loc.531>:
                boomR_Gezien = 1;
    4084:	81 e0       	ldi	r24, 0x01	; 1
    4086:	90 e0       	ldi	r25, 0x00	; 0
    4088:	90 93 3d 02 	sts	0x023D, r25	; 0x80023d <boomR_Gezien+0x1>
    408c:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <boomR_Gezien>

00004090 <.Loc.532>:
                state = BoomSignaleren;
    4090:	86 e0       	ldi	r24, 0x06	; 6
    4092:	90 e0       	ldi	r25, 0x00	; 0
    4094:	9a 83       	std	Y+2, r25	; 0x02
    4096:	89 83       	std	Y+1, r24	; 0x01

00004098 <.Loc.533>:
                break;
    4098:	1b c3       	rjmp	.+1590   	; 0x46d0 <.L188>

0000409a <.L207>:
            }
            else if((!detecteerboomrechts()) && (boomR_Gezien)){
    409a:	0e 94 2a 1b 	call	0x3654	; 0x3654 <detecteerboomrechts>

0000409e <.Loc.535>:
    409e:	00 97       	sbiw	r24, 0x00	; 0
    40a0:	59 f4       	brne	.+22     	; 0x40b8 <.L208>

000040a2 <.Loc.536>:
    40a2:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <boomR_Gezien>
    40a6:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <boomR_Gezien+0x1>
    40aa:	00 97       	sbiw	r24, 0x00	; 0
    40ac:	29 f0       	breq	.+10     	; 0x40b8 <.L208>

000040ae <.Loc.537>:
                boomR_Gezien = 0;
    40ae:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <boomR_Gezien+0x1>
    40b2:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <boomR_Gezien>

000040b6 <.Loc.538>:
                break;
    40b6:	0c c3       	rjmp	.+1560   	; 0x46d0 <.L188>

000040b8 <.L208>:
            }

            if(((!detecteerlatlinks()) && (!detecteerlatrechts())) && (rijstrook > 4))
    40b8:	0e 94 4b 1b 	call	0x3696	; 0x3696 <detecteerlatlinks>

000040bc <.Loc.540>:
    40bc:	00 97       	sbiw	r24, 0x00	; 0
    40be:	89 f4       	brne	.+34     	; 0x40e2 <.L209>

000040c0 <.Loc.541>:
    40c0:	0e 94 6c 1b 	call	0x36d8	; 0x36d8 <detecteerlatrechts>

000040c4 <.Loc.542>:
    40c4:	00 97       	sbiw	r24, 0x00	; 0
    40c6:	69 f4       	brne	.+26     	; 0x40e2 <.L209>

000040c8 <.Loc.543>:
    40c8:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <rijstrook>
    40cc:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <rijstrook+0x1>

000040d0 <.Loc.544>:
    40d0:	84 30       	cpi	r24, 0x04	; 4
    40d2:	91 05       	cpc	r25, r1
    40d4:	31 f0       	breq	.+12     	; 0x40e2 <.L209>
    40d6:	2c f0       	brlt	.+10     	; 0x40e2 <.L209>

000040d8 <.Loc.545>:
            {
                state = Uit;
    40d8:	85 e0       	ldi	r24, 0x05	; 5
    40da:	90 e0       	ldi	r25, 0x00	; 0
    40dc:	9a 83       	std	Y+2, r25	; 0x02
    40de:	89 83       	std	Y+1, r24	; 0x01

000040e0 <.Loc.546>:
                break;
    40e0:	f7 c2       	rjmp	.+1518   	; 0x46d0 <.L188>

000040e2 <.L209>:
            }

            if((!detecteerlatlinks()) && (draaiing() == 0)){
    40e2:	0e 94 4b 1b 	call	0x3696	; 0x3696 <detecteerlatlinks>

000040e6 <.Loc.548>:
    40e6:	00 97       	sbiw	r24, 0x00	; 0
    40e8:	79 f4       	brne	.+30     	; 0x4108 <.L210>

000040ea <.Loc.549>:
    40ea:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <draaiing>

000040ee <.Loc.550>:
    40ee:	00 97       	sbiw	r24, 0x00	; 0
    40f0:	59 f4       	brne	.+22     	; 0x4108 <.L210>

000040f2 <.Loc.551>:
                draaienL_Onthouden = 1;
    40f2:	81 e0       	ldi	r24, 0x01	; 1
    40f4:	90 e0       	ldi	r25, 0x00	; 0
    40f6:	90 93 39 02 	sts	0x0239, r25	; 0x800239 <draaienL_Onthouden+0x1>
    40fa:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <draaienL_Onthouden>

000040fe <.Loc.552>:
                state = DraaienL;
    40fe:	82 e0       	ldi	r24, 0x02	; 2
    4100:	90 e0       	ldi	r25, 0x00	; 0
    4102:	9a 83       	std	Y+2, r25	; 0x02
    4104:	89 83       	std	Y+1, r24	; 0x01

00004106 <.Loc.553>:
                break;
    4106:	e4 c2       	rjmp	.+1480   	; 0x46d0 <.L188>

00004108 <.L210>:
            }

            if((!detecteerlatrechts()) && (draaiing() == 1)){
    4108:	0e 94 6c 1b 	call	0x36d8	; 0x36d8 <detecteerlatrechts>

0000410c <.Loc.555>:
    410c:	00 97       	sbiw	r24, 0x00	; 0
    410e:	81 f4       	brne	.+32     	; 0x4130 <.L211>

00004110 <.Loc.556>:
    4110:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <draaiing>

00004114 <.Loc.557>:
    4114:	81 30       	cpi	r24, 0x01	; 1
    4116:	91 05       	cpc	r25, r1
    4118:	59 f4       	brne	.+22     	; 0x4130 <.L211>

0000411a <.Loc.558>:
                draaienR_Onthouden = 1;
    411a:	81 e0       	ldi	r24, 0x01	; 1
    411c:	90 e0       	ldi	r25, 0x00	; 0
    411e:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <draaienR_Onthouden+0x1>
    4122:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <draaienR_Onthouden>

00004126 <.Loc.559>:
                state = DraaienR;
    4126:	81 e0       	ldi	r24, 0x01	; 1
    4128:	90 e0       	ldi	r25, 0x00	; 0
    412a:	9a 83       	std	Y+2, r25	; 0x02
    412c:	89 83       	std	Y+1, r24	; 0x01

0000412e <.Loc.560>:
                break;
    412e:	d0 c2       	rjmp	.+1440   	; 0x46d0 <.L188>

00004130 <.L211>:
            }

            if((latVerschil() > 9) || (latVerschil() < -9))
    4130:	0e 94 09 16 	call	0x2c12	; 0x2c12 <latVerschil>

00004134 <.Loc.562>:
    4134:	89 30       	cpi	r24, 0x09	; 9
    4136:	91 05       	cpc	r25, r1
    4138:	09 f0       	breq	.+2      	; 0x413c <.Loc.563>

0000413a <L0^A>:
    413a:	3c f4       	brge	.+14     	; 0x414a <.L212>

0000413c <.Loc.563>:
    413c:	0e 94 09 16 	call	0x2c12	; 0x2c12 <latVerschil>

00004140 <.Loc.564>:
    4140:	87 3f       	cpi	r24, 0xF7	; 247
    4142:	2f ef       	ldi	r18, 0xFF	; 255
    4144:	92 07       	cpc	r25, r18
    4146:	0c f0       	brlt	.+2      	; 0x414a <.L212>

00004148 <L0^A>:
    4148:	ba c2       	rjmp	.+1396   	; 0x46be <.L262>

0000414a <.L212>:
            {
                rsnelheid(0);
    414a:	80 e0       	ldi	r24, 0x00	; 0
    414c:	90 e0       	ldi	r25, 0x00	; 0
    414e:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <rsnelheid>

00004152 <.Loc.566>:
                lsnelheid(0);
    4152:	80 e0       	ldi	r24, 0x00	; 0
    4154:	90 e0       	ldi	r25, 0x00	; 0
    4156:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <lsnelheid>

0000415a <.Loc.567>:
                state = RouteCorrigeren;
    415a:	87 e0       	ldi	r24, 0x07	; 7
    415c:	90 e0       	ldi	r25, 0x00	; 0
    415e:	9a 83       	std	Y+2, r25	; 0x02
    4160:	89 83       	std	Y+1, r24	; 0x01

00004162 <.Loc.568>:
                break;
    4162:	b6 c2       	rjmp	.+1388   	; 0x46d0 <.L188>

00004164 <.L189>:

            break;

        case RouteCorrigeren:

            if(latVerschil() > 9)
    4164:	0e 94 09 16 	call	0x2c12	; 0x2c12 <latVerschil>

00004168 <.Loc.570>:
    4168:	89 30       	cpi	r24, 0x09	; 9
    416a:	91 05       	cpc	r25, r1
    416c:	51 f0       	breq	.+20     	; 0x4182 <.L214>
    416e:	4c f0       	brlt	.+18     	; 0x4182 <.L214>

00004170 <.Loc.571>:
            {
                rsnelheid(20);
    4170:	84 e1       	ldi	r24, 0x14	; 20
    4172:	90 e0       	ldi	r25, 0x00	; 0
    4174:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <rsnelheid>

00004178 <.Loc.572>:
                lsnelheid(5);
    4178:	85 e0       	ldi	r24, 0x05	; 5
    417a:	90 e0       	ldi	r25, 0x00	; 0
    417c:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <lsnelheid>

00004180 <.Loc.573>:
            {
                state = Rechtdoorrijden;
                break;
            }

            break;
    4180:	a7 c2       	rjmp	.+1358   	; 0x46d0 <.L188>

00004182 <.L214>:
            else if(latVerschil() < -9)
    4182:	0e 94 09 16 	call	0x2c12	; 0x2c12 <latVerschil>

00004186 <.Loc.575>:
    4186:	87 3f       	cpi	r24, 0xF7	; 247
    4188:	af ef       	ldi	r26, 0xFF	; 255
    418a:	9a 07       	cpc	r25, r26
    418c:	4c f4       	brge	.+18     	; 0x41a0 <.L216>

0000418e <.Loc.576>:
                rsnelheid(5);
    418e:	85 e0       	ldi	r24, 0x05	; 5
    4190:	90 e0       	ldi	r25, 0x00	; 0
    4192:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <rsnelheid>

00004196 <.Loc.577>:
                lsnelheid(21);
    4196:	85 e1       	ldi	r24, 0x15	; 21
    4198:	90 e0       	ldi	r25, 0x00	; 0
    419a:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <lsnelheid>

0000419e <.Loc.578>:
            break;
    419e:	98 c2       	rjmp	.+1328   	; 0x46d0 <.L188>

000041a0 <.L216>:
                state = Rechtdoorrijden;
    41a0:	1a 82       	std	Y+2, r1	; 0x02
    41a2:	19 82       	std	Y+1, r1	; 0x01

000041a4 <.Loc.580>:
                break;
    41a4:	95 c2       	rjmp	.+1322   	; 0x46d0 <.L188>

000041a6 <.L192>:

        case Uit:
            onled(0);
    41a6:	80 e0       	ldi	r24, 0x00	; 0
    41a8:	90 e0       	ldi	r25, 0x00	; 0
    41aa:	0e 94 98 16 	call	0x2d30	; 0x2d30 <onled>

000041ae <.Loc.582>:
            followled(0);
    41ae:	80 e0       	ldi	r24, 0x00	; 0
    41b0:	90 e0       	ldi	r25, 0x00	; 0
    41b2:	0e 94 73 16 	call	0x2ce6	; 0x2ce6 <followled>

000041b6 <.Loc.583>:
            noodstopled(0);
    41b6:	80 e0       	ldi	r24, 0x00	; 0
    41b8:	90 e0       	ldi	r25, 0x00	; 0
    41ba:	0e 94 bd 16 	call	0x2d7a	; 0x2d7a <noodstopled>

000041be <.Loc.584>:

            rsnelheid(0);
    41be:	80 e0       	ldi	r24, 0x00	; 0
    41c0:	90 e0       	ldi	r25, 0x00	; 0
    41c2:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <rsnelheid>

000041c6 <.Loc.585>:
            lsnelheid(0);
    41c6:	80 e0       	ldi	r24, 0x00	; 0
    41c8:	90 e0       	ldi	r25, 0x00	; 0
    41ca:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <lsnelheid>

000041ce <.Loc.586>:

            lrichting(0);
    41ce:	80 e0       	ldi	r24, 0x00	; 0
    41d0:	90 e0       	ldi	r25, 0x00	; 0
    41d2:	0e 94 32 1e 	call	0x3c64	; 0x3c64 <lrichting>

000041d6 <.Loc.587>:
            rrichting(0);
    41d6:	80 e0       	ldi	r24, 0x00	; 0
    41d8:	90 e0       	ldi	r25, 0x00	; 0
    41da:	0e 94 fb 1d 	call	0x3bf6	; 0x3bf6 <rrichting>

000041de <.Loc.588>:
                state = Noodstop;
                break;
            }
            */

            if((leestaanknopuit()) && (aan_Onthouden == 0)){
    41de:	0e 94 5d 18 	call	0x30ba	; 0x30ba <leestaanknopuit>

000041e2 <.Loc.589>:
    41e2:	00 97       	sbiw	r24, 0x00	; 0
    41e4:	79 f0       	breq	.+30     	; 0x4204 <.L217>

000041e6 <.Loc.590>:
    41e6:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <aan_Onthouden>
    41ea:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <aan_Onthouden+0x1>

000041ee <.Loc.591>:
    41ee:	00 97       	sbiw	r24, 0x00	; 0
    41f0:	49 f4       	brne	.+18     	; 0x4204 <.L217>

000041f2 <.Loc.592>:
                aan_Onthouden = 1;
    41f2:	81 e0       	ldi	r24, 0x01	; 1
    41f4:	90 e0       	ldi	r25, 0x00	; 0
    41f6:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <aan_Onthouden+0x1>
    41fa:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <aan_Onthouden>

000041fe <.Loc.593>:
                state = Rechtdoorrijden;
    41fe:	1a 82       	std	Y+2, r1	; 0x02
    4200:	19 82       	std	Y+1, r1	; 0x01

00004202 <.Loc.594>:
                break;
    4202:	66 c2       	rjmp	.+1228   	; 0x46d0 <.L188>

00004204 <.L217>:
            }

            if(leestfollowknopuit()){
    4204:	0e 94 b3 19 	call	0x3366	; 0x3366 <leestfollowknopuit>

00004208 <.Loc.596>:
    4208:	00 97       	sbiw	r24, 0x00	; 0
    420a:	09 f4       	brne	.+2      	; 0x420e <.Loc.597>

0000420c <L0^A>:
    420c:	5a c2       	rjmp	.+1204   	; 0x46c2 <.L263>

0000420e <.Loc.597>:
                state = Volgen;
    420e:	83 e0       	ldi	r24, 0x03	; 3
    4210:	90 e0       	ldi	r25, 0x00	; 0
    4212:	9a 83       	std	Y+2, r25	; 0x02
    4214:	89 83       	std	Y+1, r24	; 0x01

00004216 <.Loc.598>:
                break;
    4216:	5c c2       	rjmp	.+1208   	; 0x46d0 <.L188>

00004218 <.L196>:
            break;

        case DraaienR:

            // Laten draaien
            rsnelheid(10);
    4218:	8a e0       	ldi	r24, 0x0A	; 10
    421a:	90 e0       	ldi	r25, 0x00	; 0
    421c:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <rsnelheid>

00004220 <.Loc.600>:
            lsnelheid(21);
    4220:	85 e1       	ldi	r24, 0x15	; 21
    4222:	90 e0       	ldi	r25, 0x00	; 0
    4224:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <lsnelheid>

00004228 <.Loc.601>:

            // uit state als sonar rechts minder dan 50 mm
            // Dan rechtdoor
            if(leessonaruit(2) < 30){
    4228:	82 e0       	ldi	r24, 0x02	; 2
    422a:	90 e0       	ldi	r25, 0x00	; 0
    422c:	0e 94 8d 1b 	call	0x371a	; 0x371a <leessonaruit>

00004230 <.Loc.602>:
    4230:	8d 31       	cpi	r24, 0x1D	; 29
    4232:	91 05       	cpc	r25, r1
    4234:	09 f0       	breq	.+2      	; 0x4238 <.Loc.603>

00004236 <L0^A>:
    4236:	84 f4       	brge	.+32     	; 0x4258 <.L219>

00004238 <.Loc.603>:
                draaienR_Onthouden = 0;
    4238:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <draaienR_Onthouden+0x1>
    423c:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <draaienR_Onthouden>

00004240 <.Loc.604>:
                rijstrook += 1;
    4240:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <rijstrook>
    4244:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <rijstrook+0x1>
    4248:	01 96       	adiw	r24, 0x01	; 1
    424a:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <rijstrook+0x1>
    424e:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <rijstrook>

00004252 <.Loc.605>:
                state = Rechtdoorrijden;
    4252:	1a 82       	std	Y+2, r1	; 0x02
    4254:	19 82       	std	Y+1, r1	; 0x01

00004256 <.Loc.606>:
                break;
    4256:	3c c2       	rjmp	.+1144   	; 0x46d0 <.L188>

00004258 <.L219>:
            }

            if(leestnoodstopuit()){
    4258:	0e 94 07 17 	call	0x2e0e	; 0x2e0e <leestnoodstopuit>

0000425c <.Loc.608>:
    425c:	00 97       	sbiw	r24, 0x00	; 0
    425e:	09 f4       	brne	.+2      	; 0x4262 <.Loc.609>

00004260 <L0^A>:
    4260:	32 c2       	rjmp	.+1124   	; 0x46c6 <.L264>

00004262 <.Loc.609>:
                noodstop_Onthouden = 1;
    4262:	81 e0       	ldi	r24, 0x01	; 1
    4264:	90 e0       	ldi	r25, 0x00	; 0
    4266:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <noodstop_Onthouden+0x1>
    426a:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <noodstop_Onthouden>

0000426e <.Loc.610>:
                state = Noodstop;
    426e:	84 e0       	ldi	r24, 0x04	; 4
    4270:	90 e0       	ldi	r25, 0x00	; 0
    4272:	9a 83       	std	Y+2, r25	; 0x02
    4274:	89 83       	std	Y+1, r24	; 0x01

00004276 <.Loc.611>:
                break;
    4276:	2c c2       	rjmp	.+1112   	; 0x46d0 <.L188>

00004278 <.L195>:
            break;

        case DraaienL:

            // Laten rijden
            rsnelheid(20);
    4278:	84 e1       	ldi	r24, 0x14	; 20
    427a:	90 e0       	ldi	r25, 0x00	; 0
    427c:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <rsnelheid>

00004280 <.Loc.613>:
            lsnelheid(10);
    4280:	8a e0       	ldi	r24, 0x0A	; 10
    4282:	90 e0       	ldi	r25, 0x00	; 0
    4284:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <lsnelheid>

00004288 <.Loc.614>:

            // uit state als sonar links minder dan 50 mm
            // Daarna weer rechtdoor rijden
            if(leessonaruit(1) < 30){
    4288:	81 e0       	ldi	r24, 0x01	; 1
    428a:	90 e0       	ldi	r25, 0x00	; 0
    428c:	0e 94 8d 1b 	call	0x371a	; 0x371a <leessonaruit>

00004290 <.Loc.615>:
    4290:	8d 31       	cpi	r24, 0x1D	; 29
    4292:	91 05       	cpc	r25, r1
    4294:	09 f0       	breq	.+2      	; 0x4298 <.Loc.616>

00004296 <L0^A>:
    4296:	84 f4       	brge	.+32     	; 0x42b8 <.L221>

00004298 <.Loc.616>:
                draaienL_Onthouden = 0;
    4298:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <draaienL_Onthouden+0x1>
    429c:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <draaienL_Onthouden>

000042a0 <.Loc.617>:
                rijstrook += 1;
    42a0:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <rijstrook>
    42a4:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <rijstrook+0x1>
    42a8:	01 96       	adiw	r24, 0x01	; 1
    42aa:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <rijstrook+0x1>
    42ae:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <rijstrook>

000042b2 <.Loc.618>:
                state = Rechtdoorrijden;
    42b2:	1a 82       	std	Y+2, r1	; 0x02
    42b4:	19 82       	std	Y+1, r1	; 0x01

000042b6 <.Loc.619>:
                break;
    42b6:	0c c2       	rjmp	.+1048   	; 0x46d0 <.L188>

000042b8 <.L221>:
            }

            if(leestnoodstopuit()){
    42b8:	0e 94 07 17 	call	0x2e0e	; 0x2e0e <leestnoodstopuit>

000042bc <.Loc.621>:
    42bc:	00 97       	sbiw	r24, 0x00	; 0
    42be:	09 f4       	brne	.+2      	; 0x42c2 <.Loc.622>

000042c0 <L0^A>:
    42c0:	04 c2       	rjmp	.+1032   	; 0x46ca <.L265>

000042c2 <.Loc.622>:
                noodstop_Onthouden = 1;
    42c2:	81 e0       	ldi	r24, 0x01	; 1
    42c4:	90 e0       	ldi	r25, 0x00	; 0
    42c6:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <noodstop_Onthouden+0x1>
    42ca:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <noodstop_Onthouden>

000042ce <.Loc.623>:
                state = Noodstop;
    42ce:	84 e0       	ldi	r24, 0x04	; 4
    42d0:	90 e0       	ldi	r25, 0x00	; 0
    42d2:	9a 83       	std	Y+2, r25	; 0x02
    42d4:	89 83       	std	Y+1, r24	; 0x01

000042d6 <.Loc.624>:
                break;
    42d6:	fc c1       	rjmp	.+1016   	; 0x46d0 <.L188>

000042d8 <.L194>:
            }
            break;

        case Volgen:
            followled(1);
    42d8:	81 e0       	ldi	r24, 0x01	; 1
    42da:	90 e0       	ldi	r25, 0x00	; 0
    42dc:	0e 94 73 16 	call	0x2ce6	; 0x2ce6 <followled>

000042e0 <.Loc.626>:

            // In deze toestand rijdt hij niet, omdat het (nog) niet geprogrammeerd is
            rsnelheid(0);
    42e0:	80 e0       	ldi	r24, 0x00	; 0
    42e2:	90 e0       	ldi	r25, 0x00	; 0
    42e4:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <rsnelheid>

000042e8 <.Loc.627>:
            lsnelheid(0);
    42e8:	80 e0       	ldi	r24, 0x00	; 0
    42ea:	90 e0       	ldi	r25, 0x00	; 0
    42ec:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <lsnelheid>

000042f0 <.Loc.628>:

            if(leestaanknopuit()){
    42f0:	0e 94 5d 18 	call	0x30ba	; 0x30ba <leestaanknopuit>

000042f4 <.Loc.629>:
    42f4:	00 97       	sbiw	r24, 0x00	; 0
    42f6:	29 f0       	breq	.+10     	; 0x4302 <.L223>

000042f8 <.Loc.630>:
                state = Uit;
    42f8:	85 e0       	ldi	r24, 0x05	; 5
    42fa:	90 e0       	ldi	r25, 0x00	; 0
    42fc:	9a 83       	std	Y+2, r25	; 0x02
    42fe:	89 83       	std	Y+1, r24	; 0x01

00004300 <.Loc.631>:
                break;
    4300:	e7 c1       	rjmp	.+974    	; 0x46d0 <.L188>

00004302 <.L223>:
            }

            if(leestnoodstopuit()){
    4302:	0e 94 07 17 	call	0x2e0e	; 0x2e0e <leestnoodstopuit>

00004306 <.Loc.633>:
    4306:	00 97       	sbiw	r24, 0x00	; 0
    4308:	09 f4       	brne	.+2      	; 0x430c <.Loc.634>

0000430a <L0^A>:
    430a:	e1 c1       	rjmp	.+962    	; 0x46ce <.L266>

0000430c <.Loc.634>:
                noodstop_Onthouden = 1;
    430c:	81 e0       	ldi	r24, 0x01	; 1
    430e:	90 e0       	ldi	r25, 0x00	; 0
    4310:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <noodstop_Onthouden+0x1>
    4314:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <noodstop_Onthouden>

00004318 <.Loc.635>:
                state = Noodstop;
    4318:	84 e0       	ldi	r24, 0x04	; 4
    431a:	90 e0       	ldi	r25, 0x00	; 0
    431c:	9a 83       	std	Y+2, r25	; 0x02
    431e:	89 83       	std	Y+1, r24	; 0x01

00004320 <.Loc.636>:
                break;
    4320:	d7 c1       	rjmp	.+942    	; 0x46d0 <.L188>

00004322 <.L191>:

        case BoomSignaleren:


            // Snelheid uitzetten
            rsnelheid(0);
    4322:	80 e0       	ldi	r24, 0x00	; 0
    4324:	90 e0       	ldi	r25, 0x00	; 0
    4326:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <rsnelheid>

0000432a <.Loc.638>:
            lsnelheid(0);
    432a:	80 e0       	ldi	r24, 0x00	; 0
    432c:	90 e0       	ldi	r25, 0x00	; 0
    432e:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <lsnelheid>

00004332 <.Loc.639>:

            rrichting(0);
    4332:	80 e0       	ldi	r24, 0x00	; 0
    4334:	90 e0       	ldi	r25, 0x00	; 0
    4336:	0e 94 fb 1d 	call	0x3bf6	; 0x3bf6 <rrichting>

0000433a <.Loc.640>:
            lrichting(0);
    433a:	80 e0       	ldi	r24, 0x00	; 0
    433c:	90 e0       	ldi	r25, 0x00	; 0
    433e:	0e 94 32 1e 	call	0x3c64	; 0x3c64 <lrichting>

00004342 <.Loc.641>:


            if(boomL_Gezien){
    4342:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <boomL_Gezien>
    4346:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <boomL_Gezien+0x1>

0000434a <.Loc.642>:
    434a:	00 97       	sbiw	r24, 0x00	; 0
    434c:	71 f0       	breq	.+28     	; 0x436a <.L225>

0000434e <.Loc.643>:
                bomenL_Geteld += 1;
    434e:	80 91 42 02 	lds	r24, 0x0242	; 0x800242 <bomenL_Geteld>
    4352:	90 91 43 02 	lds	r25, 0x0243	; 0x800243 <bomenL_Geteld+0x1>
    4356:	01 96       	adiw	r24, 0x01	; 1
    4358:	90 93 43 02 	sts	0x0243, r25	; 0x800243 <bomenL_Geteld+0x1>
    435c:	80 93 42 02 	sts	0x0242, r24	; 0x800242 <bomenL_Geteld>

00004360 <.Loc.644>:
                linksboomled(1);
    4360:	81 e0       	ldi	r24, 0x01	; 1
    4362:	90 e0       	ldi	r25, 0x00	; 0
    4364:	0e 94 4e 16 	call	0x2c9c	; 0x2c9c <linksboomled>
    4368:	13 c0       	rjmp	.+38     	; 0x4390 <.L226>

0000436a <.L225>:
            }
            else if(boomR_Gezien){
    436a:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <boomR_Gezien>
    436e:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <boomR_Gezien+0x1>

00004372 <.Loc.646>:
    4372:	00 97       	sbiw	r24, 0x00	; 0
    4374:	69 f0       	breq	.+26     	; 0x4390 <.L226>

00004376 <.Loc.647>:
                bomenR_Geteld += 1;
    4376:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <bomenR_Geteld>
    437a:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <bomenR_Geteld+0x1>
    437e:	01 96       	adiw	r24, 0x01	; 1
    4380:	90 93 41 02 	sts	0x0241, r25	; 0x800241 <bomenR_Geteld+0x1>
    4384:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <bomenR_Geteld>

00004388 <.Loc.648>:
                rechtsboomled(1);
    4388:	81 e0       	ldi	r24, 0x01	; 1
    438a:	90 e0       	ldi	r25, 0x00	; 0
    438c:	0e 94 29 16 	call	0x2c52	; 0x2c52 <rechtsboomled>

00004390 <.L226>:
            }

            // Buzzer gaat 1 seconde aan en noodstop kan gedetecteerd worden
            buzzer(1);
    4390:	81 e0       	ldi	r24, 0x01	; 1
    4392:	90 e0       	ldi	r25, 0x00	; 0
    4394:	0e 94 e2 16 	call	0x2dc4	; 0x2dc4 <buzzer>

00004398 <.LBB129>:

            for(int i = 0; i < 11; i++){
    4398:	1c 82       	std	Y+4, r1	; 0x04
    439a:	1b 82       	std	Y+3, r1	; 0x03

0000439c <.Loc.651>:
    439c:	a7 c0       	rjmp	.+334    	; 0x44ec <.L227>

0000439e <.L238>:
                if(leestnoodstopuit()){
    439e:	0e 94 07 17 	call	0x2e0e	; 0x2e0e <leestnoodstopuit>

000043a2 <.Loc.653>:
    43a2:	00 97       	sbiw	r24, 0x00	; 0
    43a4:	79 f0       	breq	.+30     	; 0x43c4 <.L228>

000043a6 <.Loc.654>:
                    buzzer(0);
    43a6:	80 e0       	ldi	r24, 0x00	; 0
    43a8:	90 e0       	ldi	r25, 0x00	; 0
    43aa:	0e 94 e2 16 	call	0x2dc4	; 0x2dc4 <buzzer>

000043ae <.Loc.655>:
                    noodstop_Onthouden = 1;
    43ae:	81 e0       	ldi	r24, 0x01	; 1
    43b0:	90 e0       	ldi	r25, 0x00	; 0
    43b2:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <noodstop_Onthouden+0x1>
    43b6:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <noodstop_Onthouden>

000043ba <.Loc.656>:
                    state = Noodstop;
    43ba:	84 e0       	ldi	r24, 0x04	; 4
    43bc:	90 e0       	ldi	r25, 0x00	; 0
    43be:	9a 83       	std	Y+2, r25	; 0x02
    43c0:	89 83       	std	Y+1, r24	; 0x01

000043c2 <.Loc.657>:
                    break;
    43c2:	9b c0       	rjmp	.+310    	; 0x44fa <.L229>

000043c4 <.L228>:
    43c4:	80 e0       	ldi	r24, 0x00	; 0
    43c6:	90 e0       	ldi	r25, 0x00	; 0
    43c8:	a8 ec       	ldi	r26, 0xC8	; 200
    43ca:	b2 e4       	ldi	r27, 0x42	; 66
    43cc:	8f 83       	std	Y+7, r24	; 0x07
    43ce:	98 87       	std	Y+8, r25	; 0x08
    43d0:	a9 87       	std	Y+9, r26	; 0x09
    43d2:	ba 87       	std	Y+10, r27	; 0x0a

000043d4 <.LBB130>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    43d4:	20 e0       	ldi	r18, 0x00	; 0
    43d6:	30 e0       	ldi	r19, 0x00	; 0
    43d8:	4a e7       	ldi	r20, 0x7A	; 122
    43da:	55 e4       	ldi	r21, 0x45	; 69
    43dc:	6f 81       	ldd	r22, Y+7	; 0x07
    43de:	78 85       	ldd	r23, Y+8	; 0x08
    43e0:	89 85       	ldd	r24, Y+9	; 0x09
    43e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    43e4:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    43e8:	6b a7       	std	Y+43, r22	; 0x2b
    43ea:	7c a7       	std	Y+44, r23	; 0x2c
    43ec:	8d a7       	std	Y+45, r24	; 0x2d
    43ee:	9e a7       	std	Y+46, r25	; 0x2e
    43f0:	8b a5       	ldd	r24, Y+43	; 0x2b
    43f2:	9c a5       	ldd	r25, Y+44	; 0x2c
    43f4:	ad a5       	ldd	r26, Y+45	; 0x2d
    43f6:	be a5       	ldd	r27, Y+46	; 0x2e
    43f8:	8b 87       	std	Y+11, r24	; 0x0b
    43fa:	9c 87       	std	Y+12, r25	; 0x0c
    43fc:	ad 87       	std	Y+13, r26	; 0x0d
    43fe:	be 87       	std	Y+14, r27	; 0x0e

00004400 <.Loc.659>:
	if (__tmp < 1.0)
    4400:	20 e0       	ldi	r18, 0x00	; 0
    4402:	30 e0       	ldi	r19, 0x00	; 0
    4404:	40 e8       	ldi	r20, 0x80	; 128
    4406:	5f e3       	ldi	r21, 0x3F	; 63
    4408:	6b 85       	ldd	r22, Y+11	; 0x0b
    440a:	7c 85       	ldd	r23, Y+12	; 0x0c
    440c:	8d 85       	ldd	r24, Y+13	; 0x0d
    440e:	9e 85       	ldd	r25, Y+14	; 0x0e
    4410:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    4414:	88 23       	and	r24, r24
    4416:	2c f4       	brge	.+10     	; 0x4422 <.L257>

00004418 <.Loc.660>:
		__ticks = 1;
    4418:	81 e0       	ldi	r24, 0x01	; 1
    441a:	90 e0       	ldi	r25, 0x00	; 0
    441c:	98 8b       	std	Y+16, r25	; 0x10
    441e:	8f 87       	std	Y+15, r24	; 0x0f
    4420:	55 c0       	rjmp	.+170    	; 0x44cc <.L232>

00004422 <.L257>:
	else if (__tmp > 65535)
    4422:	20 e0       	ldi	r18, 0x00	; 0
    4424:	3f ef       	ldi	r19, 0xFF	; 255
    4426:	4f e7       	ldi	r20, 0x7F	; 127
    4428:	57 e4       	ldi	r21, 0x47	; 71
    442a:	6b 85       	ldd	r22, Y+11	; 0x0b
    442c:	7c 85       	ldd	r23, Y+12	; 0x0c
    442e:	8d 85       	ldd	r24, Y+13	; 0x0d
    4430:	9e 85       	ldd	r25, Y+14	; 0x0e
    4432:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    4436:	88 23       	and	r24, r24
    4438:	d9 f1       	breq	.+118    	; 0x44b0 <.L258>
    443a:	d4 f1       	brlt	.+116    	; 0x44b0 <.L258>

0000443c <.Loc.662>:
		__ticks = (uint16_t) (__ms * 10.0);
    443c:	20 e0       	ldi	r18, 0x00	; 0
    443e:	30 e0       	ldi	r19, 0x00	; 0
    4440:	40 e2       	ldi	r20, 0x20	; 32
    4442:	51 e4       	ldi	r21, 0x41	; 65
    4444:	6f 81       	ldd	r22, Y+7	; 0x07
    4446:	78 85       	ldd	r23, Y+8	; 0x08
    4448:	89 85       	ldd	r24, Y+9	; 0x09
    444a:	9a 85       	ldd	r25, Y+10	; 0x0a
    444c:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    4450:	6f a7       	std	Y+47, r22	; 0x2f
    4452:	78 ab       	std	Y+48, r23	; 0x30
    4454:	89 ab       	std	Y+49, r24	; 0x31
    4456:	9a ab       	std	Y+50, r25	; 0x32
    4458:	8f a5       	ldd	r24, Y+47	; 0x2f
    445a:	98 a9       	ldd	r25, Y+48	; 0x30
    445c:	a9 a9       	ldd	r26, Y+49	; 0x31
    445e:	ba a9       	ldd	r27, Y+50	; 0x32
    4460:	8b a3       	std	Y+35, r24	; 0x23
    4462:	9c a3       	std	Y+36, r25	; 0x24
    4464:	ad a3       	std	Y+37, r26	; 0x25
    4466:	be a3       	std	Y+38, r27	; 0x26

00004468 <.Loc.663>:
    4468:	6b a1       	ldd	r22, Y+35	; 0x23
    446a:	7c a1       	ldd	r23, Y+36	; 0x24
    446c:	8d a1       	ldd	r24, Y+37	; 0x25
    446e:	9e a1       	ldd	r25, Y+38	; 0x26
    4470:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    4474:	6b ab       	std	Y+51, r22	; 0x33
    4476:	7c ab       	std	Y+52, r23	; 0x34
    4478:	8d ab       	std	Y+53, r24	; 0x35
    447a:	9e ab       	std	Y+54, r25	; 0x36
    447c:	ab a9       	ldd	r26, Y+51	; 0x33
    447e:	bc a9       	ldd	r27, Y+52	; 0x34
    4480:	b8 8b       	std	Y+16, r27	; 0x10
    4482:	af 87       	std	Y+15, r26	; 0x0f

00004484 <.Loc.664>:
		while(__ticks)
    4484:	10 c0       	rjmp	.+32     	; 0x44a6 <.L235>

00004486 <.L236>:
    4486:	80 e9       	ldi	r24, 0x90	; 144
    4488:	91 e0       	ldi	r25, 0x01	; 1
    448a:	9a 8b       	std	Y+18, r25	; 0x12
    448c:	89 8b       	std	Y+17, r24	; 0x11

0000448e <.LBB132>:
	__asm__ volatile (
    448e:	89 89       	ldd	r24, Y+17	; 0x11
    4490:	9a 89       	ldd	r25, Y+18	; 0x12

00004492 <.L1^B17>:
    4492:	01 97       	sbiw	r24, 0x01	; 1
    4494:	f1 f7       	brne	.-4      	; 0x4492 <.L1^B17>
    4496:	9a 8b       	std	Y+18, r25	; 0x12
    4498:	89 8b       	std	Y+17, r24	; 0x11

0000449a <.Loc.666>:
	...

0000449c <.LBE132>:
			__ticks --;
    449c:	8f 85       	ldd	r24, Y+15	; 0x0f
    449e:	98 89       	ldd	r25, Y+16	; 0x10
    44a0:	01 97       	sbiw	r24, 0x01	; 1
    44a2:	98 8b       	std	Y+16, r25	; 0x10
    44a4:	8f 87       	std	Y+15, r24	; 0x0f

000044a6 <.L235>:
		while(__ticks)
    44a6:	8f 85       	ldd	r24, Y+15	; 0x0f
    44a8:	98 89       	ldd	r25, Y+16	; 0x10
    44aa:	00 97       	sbiw	r24, 0x00	; 0
    44ac:	61 f7       	brne	.-40     	; 0x4486 <.L236>

000044ae <.Loc.669>:
		return;
    44ae:	19 c0       	rjmp	.+50     	; 0x44e2 <.L237>

000044b0 <.L258>:
		__ticks = (uint16_t)__tmp;
    44b0:	6b 85       	ldd	r22, Y+11	; 0x0b
    44b2:	7c 85       	ldd	r23, Y+12	; 0x0c
    44b4:	8d 85       	ldd	r24, Y+13	; 0x0d
    44b6:	9e 85       	ldd	r25, Y+14	; 0x0e
    44b8:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    44bc:	6f ab       	std	Y+55, r22	; 0x37
    44be:	78 af       	std	Y+56, r23	; 0x38
    44c0:	89 af       	std	Y+57, r24	; 0x39
    44c2:	9a af       	std	Y+58, r25	; 0x3a
    44c4:	8f a9       	ldd	r24, Y+55	; 0x37
    44c6:	98 ad       	ldd	r25, Y+56	; 0x38
    44c8:	98 8b       	std	Y+16, r25	; 0x10
    44ca:	8f 87       	std	Y+15, r24	; 0x0f

000044cc <.L232>:
    44cc:	8f 85       	ldd	r24, Y+15	; 0x0f
    44ce:	98 89       	ldd	r25, Y+16	; 0x10
    44d0:	9c 8b       	std	Y+20, r25	; 0x14
    44d2:	8b 8b       	std	Y+19, r24	; 0x13

000044d4 <.LBB134>:
    44d4:	8b 89       	ldd	r24, Y+19	; 0x13
    44d6:	9c 89       	ldd	r25, Y+20	; 0x14

000044d8 <.L1^B18>:
    44d8:	01 97       	sbiw	r24, 0x01	; 1
    44da:	f1 f7       	brne	.-4      	; 0x44d8 <.L1^B18>
    44dc:	9c 8b       	std	Y+20, r25	; 0x14
    44de:	8b 8b       	std	Y+19, r24	; 0x13

000044e0 <.Loc.672>:
	...

000044e2 <.L237>:
            for(int i = 0; i < 11; i++){
    44e2:	8b 81       	ldd	r24, Y+3	; 0x03
    44e4:	9c 81       	ldd	r25, Y+4	; 0x04
    44e6:	01 96       	adiw	r24, 0x01	; 1
    44e8:	9c 83       	std	Y+4, r25	; 0x04
    44ea:	8b 83       	std	Y+3, r24	; 0x03

000044ec <.L227>:
    44ec:	8b 81       	ldd	r24, Y+3	; 0x03
    44ee:	9c 81       	ldd	r25, Y+4	; 0x04
    44f0:	8a 30       	cpi	r24, 0x0A	; 10
    44f2:	91 05       	cpc	r25, r1
    44f4:	09 f0       	breq	.+2      	; 0x44f8 <L0^A>

000044f6 <L0^A>:
    44f6:	0c f4       	brge	.+2      	; 0x44fa <.L229>

000044f8 <L0^A>:
    44f8:	52 cf       	rjmp	.-348    	; 0x439e <.L238>

000044fa <.L229>:
                }
                _delay_ms(100);
            }

            buzzer(0);
    44fa:	80 e0       	ldi	r24, 0x00	; 0
    44fc:	90 e0       	ldi	r25, 0x00	; 0
    44fe:	0e 94 e2 16 	call	0x2dc4	; 0x2dc4 <buzzer>

00004502 <.LBB136>:


            // Even de led aan laten
            for(int i = 0; i < 31; i++){
    4502:	1e 82       	std	Y+6, r1	; 0x06
    4504:	1d 82       	std	Y+5, r1	; 0x05

00004506 <.Loc.677>:
    4506:	b8 c0       	rjmp	.+368    	; 0x4678 <.L239>

00004508 <.L250>:
                if(leestnoodstopuit()){
    4508:	0e 94 07 17 	call	0x2e0e	; 0x2e0e <leestnoodstopuit>

0000450c <.Loc.679>:
    450c:	00 97       	sbiw	r24, 0x00	; 0
    450e:	99 f0       	breq	.+38     	; 0x4536 <.L240>

00004510 <.Loc.680>:
                    linksboomled(0);
    4510:	80 e0       	ldi	r24, 0x00	; 0
    4512:	90 e0       	ldi	r25, 0x00	; 0
    4514:	0e 94 4e 16 	call	0x2c9c	; 0x2c9c <linksboomled>

00004518 <.Loc.681>:
                    rechtsboomled(0);
    4518:	80 e0       	ldi	r24, 0x00	; 0
    451a:	90 e0       	ldi	r25, 0x00	; 0
    451c:	0e 94 29 16 	call	0x2c52	; 0x2c52 <rechtsboomled>

00004520 <.Loc.682>:
                    noodstop_Onthouden = 1;
    4520:	81 e0       	ldi	r24, 0x01	; 1
    4522:	90 e0       	ldi	r25, 0x00	; 0
    4524:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <noodstop_Onthouden+0x1>
    4528:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <noodstop_Onthouden>

0000452c <.Loc.683>:
                    state = Noodstop;
    452c:	84 e0       	ldi	r24, 0x04	; 4
    452e:	90 e0       	ldi	r25, 0x00	; 0
    4530:	9a 83       	std	Y+2, r25	; 0x02
    4532:	89 83       	std	Y+1, r24	; 0x01

00004534 <.Loc.684>:
                    break;
    4534:	a8 c0       	rjmp	.+336    	; 0x4686 <.L241>

00004536 <.L240>:
    4536:	80 e0       	ldi	r24, 0x00	; 0
    4538:	90 e0       	ldi	r25, 0x00	; 0
    453a:	a8 ec       	ldi	r26, 0xC8	; 200
    453c:	b2 e4       	ldi	r27, 0x42	; 66
    453e:	8d 8b       	std	Y+21, r24	; 0x15
    4540:	9e 8b       	std	Y+22, r25	; 0x16
    4542:	af 8b       	std	Y+23, r26	; 0x17
    4544:	b8 8f       	std	Y+24, r27	; 0x18

00004546 <.LBB137>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    4546:	20 e0       	ldi	r18, 0x00	; 0
    4548:	30 e0       	ldi	r19, 0x00	; 0
    454a:	4a e7       	ldi	r20, 0x7A	; 122
    454c:	55 e4       	ldi	r21, 0x45	; 69
    454e:	6d 89       	ldd	r22, Y+21	; 0x15
    4550:	7e 89       	ldd	r23, Y+22	; 0x16
    4552:	8f 89       	ldd	r24, Y+23	; 0x17
    4554:	98 8d       	ldd	r25, Y+24	; 0x18
    4556:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    455a:	6b af       	std	Y+59, r22	; 0x3b
    455c:	7c af       	std	Y+60, r23	; 0x3c
    455e:	8d af       	std	Y+61, r24	; 0x3d
    4560:	9e af       	std	Y+62, r25	; 0x3e
    4562:	8b ad       	ldd	r24, Y+59	; 0x3b
    4564:	9c ad       	ldd	r25, Y+60	; 0x3c
    4566:	ad ad       	ldd	r26, Y+61	; 0x3d
    4568:	be ad       	ldd	r27, Y+62	; 0x3e
    456a:	89 8f       	std	Y+25, r24	; 0x19
    456c:	9a 8f       	std	Y+26, r25	; 0x1a
    456e:	ab 8f       	std	Y+27, r26	; 0x1b
    4570:	bc 8f       	std	Y+28, r27	; 0x1c

00004572 <.Loc.686>:
	if (__tmp < 1.0)
    4572:	20 e0       	ldi	r18, 0x00	; 0
    4574:	30 e0       	ldi	r19, 0x00	; 0
    4576:	40 e8       	ldi	r20, 0x80	; 128
    4578:	5f e3       	ldi	r21, 0x3F	; 63
    457a:	69 8d       	ldd	r22, Y+25	; 0x19
    457c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    457e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4580:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4582:	0e 94 de 23 	call	0x47bc	; 0x47bc <__cmpsf2>
    4586:	88 23       	and	r24, r24
    4588:	2c f4       	brge	.+10     	; 0x4594 <.L259>

0000458a <.Loc.687>:
		__ticks = 1;
    458a:	81 e0       	ldi	r24, 0x01	; 1
    458c:	90 e0       	ldi	r25, 0x00	; 0
    458e:	9e 8f       	std	Y+30, r25	; 0x1e
    4590:	8d 8f       	std	Y+29, r24	; 0x1d
    4592:	62 c0       	rjmp	.+196    	; 0x4658 <.L244>

00004594 <.L259>:
	else if (__tmp > 65535)
    4594:	20 e0       	ldi	r18, 0x00	; 0
    4596:	3f ef       	ldi	r19, 0xFF	; 255
    4598:	4f e7       	ldi	r20, 0x7F	; 127
    459a:	57 e4       	ldi	r21, 0x47	; 71
    459c:	69 8d       	ldd	r22, Y+25	; 0x19
    459e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    45a0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    45a2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    45a4:	0e 94 3d 25 	call	0x4a7a	; 0x4a7a <__gesf2>
    45a8:	88 23       	and	r24, r24
    45aa:	09 f0       	breq	.+2      	; 0x45ae <L0^A>

000045ac <L0^A>:
    45ac:	0c f4       	brge	.+2      	; 0x45b0 <.Loc.689>

000045ae <L0^A>:
    45ae:	42 c0       	rjmp	.+132    	; 0x4634 <.L260>

000045b0 <.Loc.689>:
		__ticks = (uint16_t) (__ms * 10.0);
    45b0:	20 e0       	ldi	r18, 0x00	; 0
    45b2:	30 e0       	ldi	r19, 0x00	; 0
    45b4:	40 e2       	ldi	r20, 0x20	; 32
    45b6:	51 e4       	ldi	r21, 0x41	; 65
    45b8:	6d 89       	ldd	r22, Y+21	; 0x15
    45ba:	7e 89       	ldd	r23, Y+22	; 0x16
    45bc:	8f 89       	ldd	r24, Y+23	; 0x17
    45be:	98 8d       	ldd	r25, Y+24	; 0x18
    45c0:	0e 94 42 25 	call	0x4a84	; 0x4a84 <__mulsf3>
    45c4:	23 96       	adiw	r28, 0x03	; 3
    45c6:	6c af       	std	Y+60, r22	; 0x3c
    45c8:	7d af       	std	Y+61, r23	; 0x3d
    45ca:	8e af       	std	Y+62, r24	; 0x3e
    45cc:	9f af       	std	Y+63, r25	; 0x3f
    45ce:	23 97       	sbiw	r28, 0x03	; 3
    45d0:	23 96       	adiw	r28, 0x03	; 3
    45d2:	8c ad       	ldd	r24, Y+60	; 0x3c
    45d4:	9d ad       	ldd	r25, Y+61	; 0x3d
    45d6:	ae ad       	ldd	r26, Y+62	; 0x3e
    45d8:	bf ad       	ldd	r27, Y+63	; 0x3f
    45da:	23 97       	sbiw	r28, 0x03	; 3
    45dc:	8f a3       	std	Y+39, r24	; 0x27
    45de:	98 a7       	std	Y+40, r25	; 0x28
    45e0:	a9 a7       	std	Y+41, r26	; 0x29
    45e2:	ba a7       	std	Y+42, r27	; 0x2a

000045e4 <.Loc.690>:
    45e4:	6f a1       	ldd	r22, Y+39	; 0x27
    45e6:	78 a5       	ldd	r23, Y+40	; 0x28
    45e8:	89 a5       	ldd	r24, Y+41	; 0x29
    45ea:	9a a5       	ldd	r25, Y+42	; 0x2a
    45ec:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    45f0:	27 96       	adiw	r28, 0x07	; 7
    45f2:	6c af       	std	Y+60, r22	; 0x3c
    45f4:	7d af       	std	Y+61, r23	; 0x3d
    45f6:	8e af       	std	Y+62, r24	; 0x3e
    45f8:	9f af       	std	Y+63, r25	; 0x3f
    45fa:	27 97       	sbiw	r28, 0x07	; 7
    45fc:	25 96       	adiw	r28, 0x05	; 5
    45fe:	ae ad       	ldd	r26, Y+62	; 0x3e
    4600:	bf ad       	ldd	r27, Y+63	; 0x3f
    4602:	25 97       	sbiw	r28, 0x05	; 5
    4604:	be 8f       	std	Y+30, r27	; 0x1e
    4606:	ad 8f       	std	Y+29, r26	; 0x1d

00004608 <.Loc.691>:
		while(__ticks)
    4608:	10 c0       	rjmp	.+32     	; 0x462a <.L247>

0000460a <.L248>:
    460a:	80 e9       	ldi	r24, 0x90	; 144
    460c:	91 e0       	ldi	r25, 0x01	; 1
    460e:	98 a3       	std	Y+32, r25	; 0x20
    4610:	8f 8f       	std	Y+31, r24	; 0x1f

00004612 <.LBB139>:
    4612:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4614:	98 a1       	ldd	r25, Y+32	; 0x20

00004616 <.L1^B19>:
    4616:	01 97       	sbiw	r24, 0x01	; 1
    4618:	f1 f7       	brne	.-4      	; 0x4616 <.L1^B19>
    461a:	98 a3       	std	Y+32, r25	; 0x20
    461c:	8f 8f       	std	Y+31, r24	; 0x1f

0000461e <.Loc.693>:
	...

00004620 <.LBE139>:
			__ticks --;
    4620:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4622:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4624:	01 97       	sbiw	r24, 0x01	; 1
    4626:	9e 8f       	std	Y+30, r25	; 0x1e
    4628:	8d 8f       	std	Y+29, r24	; 0x1d

0000462a <.L247>:
		while(__ticks)
    462a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    462c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    462e:	00 97       	sbiw	r24, 0x00	; 0
    4630:	61 f7       	brne	.-40     	; 0x460a <.L248>

00004632 <.Loc.696>:
		return;
    4632:	1d c0       	rjmp	.+58     	; 0x466e <.L249>

00004634 <.L260>:
		__ticks = (uint16_t)__tmp;
    4634:	69 8d       	ldd	r22, Y+25	; 0x19
    4636:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4638:	8b 8d       	ldd	r24, Y+27	; 0x1b
    463a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    463c:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    4640:	2b 96       	adiw	r28, 0x0b	; 11
    4642:	6c af       	std	Y+60, r22	; 0x3c
    4644:	7d af       	std	Y+61, r23	; 0x3d
    4646:	8e af       	std	Y+62, r24	; 0x3e
    4648:	9f af       	std	Y+63, r25	; 0x3f
    464a:	2b 97       	sbiw	r28, 0x0b	; 11
    464c:	29 96       	adiw	r28, 0x09	; 9
    464e:	8e ad       	ldd	r24, Y+62	; 0x3e
    4650:	9f ad       	ldd	r25, Y+63	; 0x3f
    4652:	29 97       	sbiw	r28, 0x09	; 9
    4654:	9e 8f       	std	Y+30, r25	; 0x1e
    4656:	8d 8f       	std	Y+29, r24	; 0x1d

00004658 <.L244>:
    4658:	8d 8d       	ldd	r24, Y+29	; 0x1d
    465a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    465c:	9a a3       	std	Y+34, r25	; 0x22
    465e:	89 a3       	std	Y+33, r24	; 0x21

00004660 <.LBB141>:
    4660:	89 a1       	ldd	r24, Y+33	; 0x21
    4662:	9a a1       	ldd	r25, Y+34	; 0x22

00004664 <.L1^B20>:
    4664:	01 97       	sbiw	r24, 0x01	; 1
    4666:	f1 f7       	brne	.-4      	; 0x4664 <.L1^B20>
    4668:	9a a3       	std	Y+34, r25	; 0x22
    466a:	89 a3       	std	Y+33, r24	; 0x21

0000466c <.Loc.699>:
	...

0000466e <.L249>:
            for(int i = 0; i < 31; i++){
    466e:	8d 81       	ldd	r24, Y+5	; 0x05
    4670:	9e 81       	ldd	r25, Y+6	; 0x06
    4672:	01 96       	adiw	r24, 0x01	; 1
    4674:	9e 83       	std	Y+6, r25	; 0x06
    4676:	8d 83       	std	Y+5, r24	; 0x05

00004678 <.L239>:
    4678:	8d 81       	ldd	r24, Y+5	; 0x05
    467a:	9e 81       	ldd	r25, Y+6	; 0x06
    467c:	8e 31       	cpi	r24, 0x1E	; 30
    467e:	91 05       	cpc	r25, r1
    4680:	09 f0       	breq	.+2      	; 0x4684 <L0^A>

00004682 <L0^A>:
    4682:	0c f4       	brge	.+2      	; 0x4686 <.L241>

00004684 <L0^A>:
    4684:	41 cf       	rjmp	.-382    	; 0x4508 <.L250>

00004686 <.L241>:
                }
                _delay_ms(100);
            }


            linksboomled(0);
    4686:	80 e0       	ldi	r24, 0x00	; 0
    4688:	90 e0       	ldi	r25, 0x00	; 0
    468a:	0e 94 4e 16 	call	0x2c9c	; 0x2c9c <linksboomled>

0000468e <.Loc.703>:
            rechtsboomled(0);
    468e:	80 e0       	ldi	r24, 0x00	; 0
    4690:	90 e0       	ldi	r25, 0x00	; 0
    4692:	0e 94 29 16 	call	0x2c52	; 0x2c52 <rechtsboomled>

00004696 <.Loc.704>:

            if(leestnoodstopuit()){
    4696:	0e 94 07 17 	call	0x2e0e	; 0x2e0e <leestnoodstopuit>

0000469a <.Loc.705>:
    469a:	00 97       	sbiw	r24, 0x00	; 0
    469c:	59 f0       	breq	.+22     	; 0x46b4 <.L251>

0000469e <.Loc.706>:
                noodstop_Onthouden = 1;
    469e:	81 e0       	ldi	r24, 0x01	; 1
    46a0:	90 e0       	ldi	r25, 0x00	; 0
    46a2:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <noodstop_Onthouden+0x1>
    46a6:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <noodstop_Onthouden>

000046aa <.Loc.707>:
                state = Noodstop;
    46aa:	84 e0       	ldi	r24, 0x04	; 4
    46ac:	90 e0       	ldi	r25, 0x00	; 0
    46ae:	9a 83       	std	Y+2, r25	; 0x02
    46b0:	89 83       	std	Y+1, r24	; 0x01

000046b2 <.Loc.708>:
                break;
    46b2:	0e c0       	rjmp	.+28     	; 0x46d0 <.L188>

000046b4 <.L251>:
            }
            else{
                state = Rechtdoorrijden;
    46b4:	1a 82       	std	Y+2, r1	; 0x02
    46b6:	19 82       	std	Y+1, r1	; 0x01

000046b8 <.Loc.710>:
                break;
    46b8:	0b c0       	rjmp	.+22     	; 0x46d0 <.L188>

000046ba <.L261>:
            break;
    46ba:	00 00       	nop
    46bc:	15 cc       	rjmp	.-2006   	; 0x3ee8 <.L252>

000046be <.L262>:
            break;
    46be:	00 00       	nop
    46c0:	13 cc       	rjmp	.-2010   	; 0x3ee8 <.L252>

000046c2 <.L263>:
            break;
    46c2:	00 00       	nop
    46c4:	11 cc       	rjmp	.-2014   	; 0x3ee8 <.L252>

000046c6 <.L264>:
            break;
    46c6:	00 00       	nop
    46c8:	0f cc       	rjmp	.-2018   	; 0x3ee8 <.L252>

000046ca <.L265>:
            break;
    46ca:	00 00       	nop
    46cc:	0d cc       	rjmp	.-2022   	; 0x3ee8 <.L252>

000046ce <.L266>:
	...

000046d0 <.L188>:
    switch (state){
    46d0:	0b cc       	rjmp	.-2026   	; 0x3ee8 <.L252>

000046d2 <__tablejump2__>:
    46d2:	ee 0f       	add	r30, r30

000046d4 <.Loc.1>:
    46d4:	ff 1f       	adc	r31, r31

000046d6 <.Loc.2>:
    46d6:	88 1f       	adc	r24, r24

000046d8 <.Loc.3>:
    46d8:	8b bf       	out	0x3b, r24	; 59

000046da <.Loc.4>:
    46da:	07 90       	elpm	r0, Z+

000046dc <.Loc.5>:
    46dc:	f6 91       	elpm	r31, Z

000046de <.Loc.6>:
    46de:	e0 2d       	mov	r30, r0

000046e0 <.Loc.7>:
    46e0:	19 94       	eijmp

000046e2 <__subsf3>:
    46e2:	50 58       	subi	r21, 0x80	; 128

000046e4 <__addsf3>:
    46e4:	bb 27       	eor	r27, r27
    46e6:	aa 27       	eor	r26, r26
    46e8:	0e 94 89 23 	call	0x4712	; 0x4712 <__addsf3x>
    46ec:	0c 94 03 25 	jmp	0x4a06	; 0x4a06 <__fp_round>

000046f0 <.L^B1>:
    46f0:	0e 94 f5 24 	call	0x49ea	; 0x49ea <__fp_pscA>
    46f4:	38 f0       	brcs	.+14     	; 0x4704 <.L_nan>
    46f6:	0e 94 fc 24 	call	0x49f8	; 0x49f8 <__fp_pscB>
    46fa:	20 f0       	brcs	.+8      	; 0x4704 <.L_nan>
    46fc:	39 f4       	brne	.+14     	; 0x470c <.L_inf>
    46fe:	9f 3f       	cpi	r25, 0xFF	; 255
    4700:	19 f4       	brne	.+6      	; 0x4708 <.L_infB>
    4702:	26 f4       	brtc	.+8      	; 0x470c <.L_inf>

00004704 <.L_nan>:
    4704:	0c 94 f2 24 	jmp	0x49e4	; 0x49e4 <__fp_nan>

00004708 <.L_infB>:
    4708:	0e f4       	brtc	.+2      	; 0x470c <.L_inf>
    470a:	e0 95       	com	r30

0000470c <.L_inf>:
    470c:	e7 fb       	bst	r30, 7
    470e:	0c 94 ec 24 	jmp	0x49d8	; 0x49d8 <__fp_inf>

00004712 <__addsf3x>:
    4712:	e9 2f       	mov	r30, r25
    4714:	0e 94 14 25 	call	0x4a28	; 0x4a28 <__fp_split3>
    4718:	58 f3       	brcs	.-42     	; 0x46f0 <.L^B1>
    471a:	ba 17       	cp	r27, r26
    471c:	62 07       	cpc	r22, r18
    471e:	73 07       	cpc	r23, r19
    4720:	84 07       	cpc	r24, r20
    4722:	95 07       	cpc	r25, r21
    4724:	20 f0       	brcs	.+8      	; 0x472e <.L2^B1>
    4726:	79 f4       	brne	.+30     	; 0x4746 <.L4^B1>
    4728:	a6 f5       	brtc	.+104    	; 0x4792 <.L_add>
    472a:	0c 94 36 25 	jmp	0x4a6c	; 0x4a6c <__fp_zero>

0000472e <.L2^B1>:
    472e:	0e f4       	brtc	.+2      	; 0x4732 <.L3^B1>
    4730:	e0 95       	com	r30

00004732 <.L3^B1>:
    4732:	0b 2e       	mov	r0, r27
    4734:	ba 2f       	mov	r27, r26
    4736:	a0 2d       	mov	r26, r0
    4738:	0b 01       	movw	r0, r22
    473a:	b9 01       	movw	r22, r18
    473c:	90 01       	movw	r18, r0
    473e:	0c 01       	movw	r0, r24
    4740:	ca 01       	movw	r24, r20
    4742:	a0 01       	movw	r20, r0
    4744:	11 24       	eor	r1, r1

00004746 <.L4^B1>:
    4746:	ff 27       	eor	r31, r31
    4748:	59 1b       	sub	r21, r25

0000474a <.L5^B1>:
    474a:	99 f0       	breq	.+38     	; 0x4772 <.L7^B1>
    474c:	59 3f       	cpi	r21, 0xF9	; 249
    474e:	50 f4       	brcc	.+20     	; 0x4764 <.L6^B1>
    4750:	50 3e       	cpi	r21, 0xE0	; 224
    4752:	68 f1       	brcs	.+90     	; 0x47ae <.L_ret>
    4754:	1a 16       	cp	r1, r26
    4756:	f0 40       	sbci	r31, 0x00	; 0
    4758:	a2 2f       	mov	r26, r18
    475a:	23 2f       	mov	r18, r19
    475c:	34 2f       	mov	r19, r20
    475e:	44 27       	eor	r20, r20
    4760:	58 5f       	subi	r21, 0xF8	; 248
    4762:	f3 cf       	rjmp	.-26     	; 0x474a <.L5^B1>

00004764 <.L6^B1>:
    4764:	46 95       	lsr	r20
    4766:	37 95       	ror	r19
    4768:	27 95       	ror	r18
    476a:	a7 95       	ror	r26
    476c:	f0 40       	sbci	r31, 0x00	; 0
    476e:	53 95       	inc	r21
    4770:	c9 f7       	brne	.-14     	; 0x4764 <.L6^B1>

00004772 <.L7^B1>:
    4772:	7e f4       	brtc	.+30     	; 0x4792 <.L_add>
    4774:	1f 16       	cp	r1, r31
    4776:	ba 0b       	sbc	r27, r26
    4778:	62 0b       	sbc	r22, r18
    477a:	73 0b       	sbc	r23, r19
    477c:	84 0b       	sbc	r24, r20
    477e:	ba f0       	brmi	.+46     	; 0x47ae <.L_ret>

00004780 <.L8^B1>:
    4780:	91 50       	subi	r25, 0x01	; 1
    4782:	a1 f0       	breq	.+40     	; 0x47ac <.L9^B1>
    4784:	ff 0f       	add	r31, r31
    4786:	bb 1f       	adc	r27, r27
    4788:	66 1f       	adc	r22, r22
    478a:	77 1f       	adc	r23, r23
    478c:	88 1f       	adc	r24, r24
    478e:	c2 f7       	brpl	.-16     	; 0x4780 <.L8^B1>
    4790:	0e c0       	rjmp	.+28     	; 0x47ae <.L_ret>

00004792 <.L_add>:
    4792:	ba 0f       	add	r27, r26
    4794:	62 1f       	adc	r22, r18
    4796:	73 1f       	adc	r23, r19
    4798:	84 1f       	adc	r24, r20
    479a:	48 f4       	brcc	.+18     	; 0x47ae <.L_ret>
    479c:	87 95       	ror	r24
    479e:	77 95       	ror	r23
    47a0:	67 95       	ror	r22
    47a2:	b7 95       	ror	r27
    47a4:	f7 95       	ror	r31
    47a6:	9e 3f       	cpi	r25, 0xFE	; 254
    47a8:	08 f0       	brcs	.+2      	; 0x47ac <.L9^B1>
    47aa:	b0 cf       	rjmp	.-160    	; 0x470c <.L_inf>

000047ac <.L9^B1>:
    47ac:	93 95       	inc	r25

000047ae <.L_ret>:
    47ae:	88 0f       	add	r24, r24
    47b0:	08 f0       	brcs	.+2      	; 0x47b4 <.L1^B1>
    47b2:	99 27       	eor	r25, r25

000047b4 <.L1^B1>:
    47b4:	ee 0f       	add	r30, r30
    47b6:	97 95       	ror	r25
    47b8:	87 95       	ror	r24
    47ba:	08 95       	ret

000047bc <__cmpsf2>:
    47bc:	0e 94 c8 24 	call	0x4990	; 0x4990 <__fp_cmp>
    47c0:	08 f4       	brcc	.+2      	; 0x47c4 <.L1^B1>
    47c2:	81 e0       	ldi	r24, 0x01	; 1

000047c4 <.L1^B1>:
    47c4:	08 95       	ret

000047c6 <__divsf3>:
    47c6:	0e 94 f7 23 	call	0x47ee	; 0x47ee <__divsf3x>
    47ca:	0c 94 03 25 	jmp	0x4a06	; 0x4a06 <__fp_round>

000047ce <.L^B1>:
    47ce:	0e 94 fc 24 	call	0x49f8	; 0x49f8 <__fp_pscB>
    47d2:	58 f0       	brcs	.+22     	; 0x47ea <.L_nan>
    47d4:	0e 94 f5 24 	call	0x49ea	; 0x49ea <__fp_pscA>
    47d8:	40 f0       	brcs	.+16     	; 0x47ea <.L_nan>
    47da:	29 f4       	brne	.+10     	; 0x47e6 <.L_zr>
    47dc:	5f 3f       	cpi	r21, 0xFF	; 255
    47de:	29 f0       	breq	.+10     	; 0x47ea <.L_nan>

000047e0 <.L_inf>:
    47e0:	0c 94 ec 24 	jmp	0x49d8	; 0x49d8 <__fp_inf>

000047e4 <.L1^B1>:
    47e4:	51 11       	cpse	r21, r1

000047e6 <.L_zr>:
    47e6:	0c 94 37 25 	jmp	0x4a6e	; 0x4a6e <__fp_szero>

000047ea <.L_nan>:
    47ea:	0c 94 f2 24 	jmp	0x49e4	; 0x49e4 <__fp_nan>

000047ee <__divsf3x>:
    47ee:	0e 94 14 25 	call	0x4a28	; 0x4a28 <__fp_split3>
    47f2:	68 f3       	brcs	.-38     	; 0x47ce <.L^B1>

000047f4 <__divsf3_pse>:
    47f4:	99 23       	and	r25, r25
    47f6:	b1 f3       	breq	.-20     	; 0x47e4 <.L1^B1>
    47f8:	55 23       	and	r21, r21
    47fa:	91 f3       	breq	.-28     	; 0x47e0 <.L_inf>
    47fc:	95 1b       	sub	r25, r21
    47fe:	55 0b       	sbc	r21, r21
    4800:	bb 27       	eor	r27, r27
    4802:	aa 27       	eor	r26, r26

00004804 <.L2^B1>:
    4804:	62 17       	cp	r22, r18
    4806:	73 07       	cpc	r23, r19
    4808:	84 07       	cpc	r24, r20
    480a:	38 f0       	brcs	.+14     	; 0x481a <.L3^B1>
    480c:	9f 5f       	subi	r25, 0xFF	; 255
    480e:	5f 4f       	sbci	r21, 0xFF	; 255
    4810:	22 0f       	add	r18, r18
    4812:	33 1f       	adc	r19, r19
    4814:	44 1f       	adc	r20, r20
    4816:	aa 1f       	adc	r26, r26
    4818:	a9 f3       	breq	.-22     	; 0x4804 <.L2^B1>

0000481a <.L3^B1>:
    481a:	35 d0       	rcall	.+106    	; 0x4886 <.L_div>
    481c:	0e 2e       	mov	r0, r30
    481e:	3a f0       	brmi	.+14     	; 0x482e <.L5^B1>

00004820 <.L4^B1>:
    4820:	e0 e8       	ldi	r30, 0x80	; 128
    4822:	32 d0       	rcall	.+100    	; 0x4888 <.L_div1>
    4824:	91 50       	subi	r25, 0x01	; 1
    4826:	50 40       	sbci	r21, 0x00	; 0
    4828:	e6 95       	lsr	r30
    482a:	00 1c       	adc	r0, r0
    482c:	ca f7       	brpl	.-14     	; 0x4820 <.L4^B1>

0000482e <.L5^B1>:
    482e:	2b d0       	rcall	.+86     	; 0x4886 <.L_div>
    4830:	fe 2f       	mov	r31, r30
    4832:	29 d0       	rcall	.+82     	; 0x4886 <.L_div>
    4834:	66 0f       	add	r22, r22
    4836:	77 1f       	adc	r23, r23
    4838:	88 1f       	adc	r24, r24
    483a:	bb 1f       	adc	r27, r27
    483c:	26 17       	cp	r18, r22
    483e:	37 07       	cpc	r19, r23
    4840:	48 07       	cpc	r20, r24
    4842:	ab 07       	cpc	r26, r27
    4844:	b0 e8       	ldi	r27, 0x80	; 128
    4846:	09 f0       	breq	.+2      	; 0x484a <.L4^B2>
    4848:	bb 0b       	sbc	r27, r27

0000484a <.L4^B2>:
    484a:	80 2d       	mov	r24, r0
    484c:	bf 01       	movw	r22, r30
    484e:	ff 27       	eor	r31, r31
    4850:	93 58       	subi	r25, 0x83	; 131
    4852:	5f 4f       	sbci	r21, 0xFF	; 255
    4854:	3a f0       	brmi	.+14     	; 0x4864 <.L13^B1>
    4856:	9e 3f       	cpi	r25, 0xFE	; 254
    4858:	51 05       	cpc	r21, r1
    485a:	78 f0       	brcs	.+30     	; 0x487a <.L15^B1>
    485c:	0c 94 ec 24 	jmp	0x49d8	; 0x49d8 <__fp_inf>

00004860 <.L12^B1>:
    4860:	0c 94 37 25 	jmp	0x4a6e	; 0x4a6e <__fp_szero>

00004864 <.L13^B1>:
    4864:	5f 3f       	cpi	r21, 0xFF	; 255
    4866:	e4 f3       	brlt	.-8      	; 0x4860 <.L12^B1>
    4868:	98 3e       	cpi	r25, 0xE8	; 232
    486a:	d4 f3       	brlt	.-12     	; 0x4860 <.L12^B1>

0000486c <.L14^B1>:
    486c:	86 95       	lsr	r24
    486e:	77 95       	ror	r23
    4870:	67 95       	ror	r22
    4872:	b7 95       	ror	r27
    4874:	f7 95       	ror	r31
    4876:	9f 5f       	subi	r25, 0xFF	; 255
    4878:	c9 f7       	brne	.-14     	; 0x486c <.L14^B1>

0000487a <.L15^B1>:
    487a:	88 0f       	add	r24, r24
    487c:	91 1d       	adc	r25, r1
    487e:	96 95       	lsr	r25
    4880:	87 95       	ror	r24
    4882:	97 f9       	bld	r25, 7
    4884:	08 95       	ret

00004886 <.L_div>:
    4886:	e1 e0       	ldi	r30, 0x01	; 1

00004888 <.L_div1>:
    4888:	66 0f       	add	r22, r22
    488a:	77 1f       	adc	r23, r23
    488c:	88 1f       	adc	r24, r24
    488e:	bb 1f       	adc	r27, r27
    4890:	62 17       	cp	r22, r18
    4892:	73 07       	cpc	r23, r19
    4894:	84 07       	cpc	r24, r20
    4896:	ba 07       	cpc	r27, r26
    4898:	20 f0       	brcs	.+8      	; 0x48a2 <.L2^B2>
    489a:	62 1b       	sub	r22, r18
    489c:	73 0b       	sbc	r23, r19
    489e:	84 0b       	sbc	r24, r20
    48a0:	ba 0b       	sbc	r27, r26

000048a2 <.L2^B2>:
    48a2:	ee 1f       	adc	r30, r30
    48a4:	88 f7       	brcc	.-30     	; 0x4888 <.L_div1>
    48a6:	e0 95       	com	r30
    48a8:	08 95       	ret

000048aa <__fixsfsi>:
    48aa:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <__fixunssfsi>
    48ae:	68 94       	set
    48b0:	b1 11       	cpse	r27, r1
    48b2:	0c 94 37 25 	jmp	0x4a6e	; 0x4a6e <__fp_szero>
    48b6:	08 95       	ret

000048b8 <__fixunssfsi>:
    48b8:	0e 94 1c 25 	call	0x4a38	; 0x4a38 <__fp_splitA>
    48bc:	88 f0       	brcs	.+34     	; 0x48e0 <.L_err>
    48be:	9f 57       	subi	r25, 0x7F	; 127
    48c0:	98 f0       	brcs	.+38     	; 0x48e8 <.L_zr>
    48c2:	b9 2f       	mov	r27, r25
    48c4:	99 27       	eor	r25, r25
    48c6:	b7 51       	subi	r27, 0x17	; 23
    48c8:	b0 f0       	brcs	.+44     	; 0x48f6 <.L4^B1>
    48ca:	e1 f0       	breq	.+56     	; 0x4904 <.L_sign>

000048cc <.L1^B1>:
    48cc:	66 0f       	add	r22, r22
    48ce:	77 1f       	adc	r23, r23
    48d0:	88 1f       	adc	r24, r24
    48d2:	99 1f       	adc	r25, r25
    48d4:	1a f0       	brmi	.+6      	; 0x48dc <.L2^B1>
    48d6:	ba 95       	dec	r27
    48d8:	c9 f7       	brne	.-14     	; 0x48cc <.L1^B1>
    48da:	14 c0       	rjmp	.+40     	; 0x4904 <.L_sign>

000048dc <.L2^B1>:
    48dc:	b1 30       	cpi	r27, 0x01	; 1
    48de:	91 f0       	breq	.+36     	; 0x4904 <.L_sign>

000048e0 <.L_err>:
    48e0:	0e 94 36 25 	call	0x4a6c	; 0x4a6c <__fp_zero>
    48e4:	b1 e0       	ldi	r27, 0x01	; 1
    48e6:	08 95       	ret

000048e8 <.L_zr>:
    48e8:	0c 94 36 25 	jmp	0x4a6c	; 0x4a6c <__fp_zero>

000048ec <.L3^B1>:
    48ec:	67 2f       	mov	r22, r23
    48ee:	78 2f       	mov	r23, r24
    48f0:	88 27       	eor	r24, r24
    48f2:	b8 5f       	subi	r27, 0xF8	; 248
    48f4:	39 f0       	breq	.+14     	; 0x4904 <.L_sign>

000048f6 <.L4^B1>:
    48f6:	b9 3f       	cpi	r27, 0xF9	; 249
    48f8:	cc f3       	brlt	.-14     	; 0x48ec <.L3^B1>

000048fa <.L5^B1>:
    48fa:	86 95       	lsr	r24
    48fc:	77 95       	ror	r23
    48fe:	67 95       	ror	r22
    4900:	b3 95       	inc	r27
    4902:	d9 f7       	brne	.-10     	; 0x48fa <.L5^B1>

00004904 <.L_sign>:
    4904:	3e f4       	brtc	.+14     	; 0x4914 <.L6^B1>
    4906:	90 95       	com	r25
    4908:	80 95       	com	r24
    490a:	70 95       	com	r23
    490c:	61 95       	neg	r22
    490e:	7f 4f       	sbci	r23, 0xFF	; 255
    4910:	8f 4f       	sbci	r24, 0xFF	; 255
    4912:	9f 4f       	sbci	r25, 0xFF	; 255

00004914 <.L6^B1>:
    4914:	08 95       	ret

00004916 <__floatunsisf>:
    4916:	e8 94       	clt
    4918:	09 c0       	rjmp	.+18     	; 0x492c <.L1^B1>

0000491a <__floatsisf>:
    491a:	97 fb       	bst	r25, 7
    491c:	3e f4       	brtc	.+14     	; 0x492c <.L1^B1>
    491e:	90 95       	com	r25
    4920:	80 95       	com	r24
    4922:	70 95       	com	r23
    4924:	61 95       	neg	r22
    4926:	7f 4f       	sbci	r23, 0xFF	; 255
    4928:	8f 4f       	sbci	r24, 0xFF	; 255
    492a:	9f 4f       	sbci	r25, 0xFF	; 255

0000492c <.L1^B1>:
    492c:	99 23       	and	r25, r25
    492e:	a9 f0       	breq	.+42     	; 0x495a <.L4^B1>
    4930:	f9 2f       	mov	r31, r25
    4932:	96 e9       	ldi	r25, 0x96	; 150
    4934:	bb 27       	eor	r27, r27

00004936 <.L2^B1>:
    4936:	93 95       	inc	r25
    4938:	f6 95       	lsr	r31
    493a:	87 95       	ror	r24
    493c:	77 95       	ror	r23
    493e:	67 95       	ror	r22
    4940:	b7 95       	ror	r27
    4942:	f1 11       	cpse	r31, r1
    4944:	f8 cf       	rjmp	.-16     	; 0x4936 <.L2^B1>
    4946:	fa f4       	brpl	.+62     	; 0x4986 <.L_pack>
    4948:	bb 0f       	add	r27, r27
    494a:	11 f4       	brne	.+4      	; 0x4950 <.L3^B1>
    494c:	60 ff       	sbrs	r22, 0
    494e:	1b c0       	rjmp	.+54     	; 0x4986 <.L_pack>

00004950 <.L3^B1>:
    4950:	6f 5f       	subi	r22, 0xFF	; 255
    4952:	7f 4f       	sbci	r23, 0xFF	; 255
    4954:	8f 4f       	sbci	r24, 0xFF	; 255
    4956:	9f 4f       	sbci	r25, 0xFF	; 255
    4958:	16 c0       	rjmp	.+44     	; 0x4986 <.L_pack>

0000495a <.L4^B1>:
    495a:	88 23       	and	r24, r24
    495c:	11 f0       	breq	.+4      	; 0x4962 <.L5^B1>
    495e:	96 e9       	ldi	r25, 0x96	; 150
    4960:	11 c0       	rjmp	.+34     	; 0x4984 <.L8^B1>

00004962 <.L5^B1>:
    4962:	77 23       	and	r23, r23
    4964:	21 f0       	breq	.+8      	; 0x496e <.L6^B1>
    4966:	9e e8       	ldi	r25, 0x8E	; 142
    4968:	87 2f       	mov	r24, r23
    496a:	76 2f       	mov	r23, r22
    496c:	05 c0       	rjmp	.+10     	; 0x4978 <.L7^B1>

0000496e <.L6^B1>:
    496e:	66 23       	and	r22, r22
    4970:	71 f0       	breq	.+28     	; 0x498e <.L9^B1>
    4972:	96 e8       	ldi	r25, 0x86	; 134
    4974:	86 2f       	mov	r24, r22
    4976:	70 e0       	ldi	r23, 0x00	; 0

00004978 <.L7^B1>:
    4978:	60 e0       	ldi	r22, 0x00	; 0
    497a:	2a f0       	brmi	.+10     	; 0x4986 <.L_pack>

0000497c <.L10^B1>:
    497c:	9a 95       	dec	r25
    497e:	66 0f       	add	r22, r22
    4980:	77 1f       	adc	r23, r23
    4982:	88 1f       	adc	r24, r24

00004984 <.L8^B1>:
    4984:	da f7       	brpl	.-10     	; 0x497c <.L10^B1>

00004986 <.L_pack>:
    4986:	88 0f       	add	r24, r24
    4988:	96 95       	lsr	r25
    498a:	87 95       	ror	r24
    498c:	97 f9       	bld	r25, 7

0000498e <.L9^B1>:
    498e:	08 95       	ret

00004990 <__fp_cmp>:
    4990:	99 0f       	add	r25, r25
    4992:	00 08       	sbc	r0, r0
    4994:	55 0f       	add	r21, r21
    4996:	aa 0b       	sbc	r26, r26
    4998:	e0 e8       	ldi	r30, 0x80	; 128
    499a:	fe ef       	ldi	r31, 0xFE	; 254
    499c:	16 16       	cp	r1, r22
    499e:	17 06       	cpc	r1, r23
    49a0:	e8 07       	cpc	r30, r24
    49a2:	f9 07       	cpc	r31, r25
    49a4:	c0 f0       	brcs	.+48     	; 0x49d6 <.L9^B1>
    49a6:	12 16       	cp	r1, r18
    49a8:	13 06       	cpc	r1, r19
    49aa:	e4 07       	cpc	r30, r20
    49ac:	f5 07       	cpc	r31, r21
    49ae:	98 f0       	brcs	.+38     	; 0x49d6 <.L9^B1>
    49b0:	62 1b       	sub	r22, r18
    49b2:	73 0b       	sbc	r23, r19
    49b4:	84 0b       	sbc	r24, r20
    49b6:	95 0b       	sbc	r25, r21
    49b8:	39 f4       	brne	.+14     	; 0x49c8 <.L1^B1>
    49ba:	0a 26       	eor	r0, r26
    49bc:	61 f0       	breq	.+24     	; 0x49d6 <.L9^B1>
    49be:	23 2b       	or	r18, r19
    49c0:	24 2b       	or	r18, r20
    49c2:	25 2b       	or	r18, r21
    49c4:	21 f4       	brne	.+8      	; 0x49ce <.L2^B1>
    49c6:	08 95       	ret

000049c8 <.L1^B1>:
    49c8:	0a 26       	eor	r0, r26
    49ca:	09 f4       	brne	.+2      	; 0x49ce <.L2^B1>
    49cc:	a1 40       	sbci	r26, 0x01	; 1

000049ce <.L2^B1>:
    49ce:	a6 95       	lsr	r26
    49d0:	8f ef       	ldi	r24, 0xFF	; 255
    49d2:	81 1d       	adc	r24, r1
    49d4:	81 1d       	adc	r24, r1

000049d6 <.L9^B1>:
    49d6:	08 95       	ret

000049d8 <__fp_inf>:
    49d8:	97 f9       	bld	r25, 7
    49da:	9f 67       	ori	r25, 0x7F	; 127
    49dc:	80 e8       	ldi	r24, 0x80	; 128
    49de:	70 e0       	ldi	r23, 0x00	; 0
    49e0:	60 e0       	ldi	r22, 0x00	; 0
    49e2:	08 95       	ret

000049e4 <__fp_nan>:
    49e4:	9f ef       	ldi	r25, 0xFF	; 255
    49e6:	80 ec       	ldi	r24, 0xC0	; 192
    49e8:	08 95       	ret

000049ea <__fp_pscA>:
    49ea:	00 24       	eor	r0, r0
    49ec:	0a 94       	dec	r0
    49ee:	16 16       	cp	r1, r22
    49f0:	17 06       	cpc	r1, r23
    49f2:	18 06       	cpc	r1, r24
    49f4:	09 06       	cpc	r0, r25
    49f6:	08 95       	ret

000049f8 <__fp_pscB>:
    49f8:	00 24       	eor	r0, r0
    49fa:	0a 94       	dec	r0
    49fc:	12 16       	cp	r1, r18
    49fe:	13 06       	cpc	r1, r19
    4a00:	14 06       	cpc	r1, r20
    4a02:	05 06       	cpc	r0, r21
    4a04:	08 95       	ret

00004a06 <__fp_round>:
    4a06:	09 2e       	mov	r0, r25
    4a08:	03 94       	inc	r0
    4a0a:	00 0c       	add	r0, r0
    4a0c:	11 f4       	brne	.+4      	; 0x4a12 <.L1^B1>
    4a0e:	88 23       	and	r24, r24
    4a10:	52 f0       	brmi	.+20     	; 0x4a26 <.L3^B1>

00004a12 <.L1^B1>:
    4a12:	bb 0f       	add	r27, r27
    4a14:	40 f4       	brcc	.+16     	; 0x4a26 <.L3^B1>
    4a16:	bf 2b       	or	r27, r31
    4a18:	11 f4       	brne	.+4      	; 0x4a1e <.L2^B1>
    4a1a:	60 ff       	sbrs	r22, 0
    4a1c:	04 c0       	rjmp	.+8      	; 0x4a26 <.L3^B1>

00004a1e <.L2^B1>:
    4a1e:	6f 5f       	subi	r22, 0xFF	; 255
    4a20:	7f 4f       	sbci	r23, 0xFF	; 255
    4a22:	8f 4f       	sbci	r24, 0xFF	; 255
    4a24:	9f 4f       	sbci	r25, 0xFF	; 255

00004a26 <.L3^B1>:
    4a26:	08 95       	ret

00004a28 <__fp_split3>:
    4a28:	57 fd       	sbrc	r21, 7
    4a2a:	90 58       	subi	r25, 0x80	; 128
    4a2c:	44 0f       	add	r20, r20
    4a2e:	55 1f       	adc	r21, r21
    4a30:	59 f0       	breq	.+22     	; 0x4a48 <.L4^B1>
    4a32:	5f 3f       	cpi	r21, 0xFF	; 255
    4a34:	71 f0       	breq	.+28     	; 0x4a52 <.L5^B1>

00004a36 <.L1^B1>:
    4a36:	47 95       	ror	r20

00004a38 <__fp_splitA>:
    4a38:	88 0f       	add	r24, r24
    4a3a:	97 fb       	bst	r25, 7
    4a3c:	99 1f       	adc	r25, r25
    4a3e:	61 f0       	breq	.+24     	; 0x4a58 <.L6^B1>
    4a40:	9f 3f       	cpi	r25, 0xFF	; 255
    4a42:	79 f0       	breq	.+30     	; 0x4a62 <.L7^B1>

00004a44 <.L3^B1>:
    4a44:	87 95       	ror	r24
    4a46:	08 95       	ret

00004a48 <.L4^B1>:
    4a48:	12 16       	cp	r1, r18
    4a4a:	13 06       	cpc	r1, r19
    4a4c:	14 06       	cpc	r1, r20
    4a4e:	55 1f       	adc	r21, r21
    4a50:	f2 cf       	rjmp	.-28     	; 0x4a36 <.L1^B1>

00004a52 <.L5^B1>:
    4a52:	46 95       	lsr	r20
    4a54:	f1 df       	rcall	.-30     	; 0x4a38 <__fp_splitA>
    4a56:	08 c0       	rjmp	.+16     	; 0x4a68 <.L8^B1>

00004a58 <.L6^B1>:
    4a58:	16 16       	cp	r1, r22
    4a5a:	17 06       	cpc	r1, r23
    4a5c:	18 06       	cpc	r1, r24
    4a5e:	99 1f       	adc	r25, r25
    4a60:	f1 cf       	rjmp	.-30     	; 0x4a44 <.L3^B1>

00004a62 <.L7^B1>:
    4a62:	86 95       	lsr	r24
    4a64:	71 05       	cpc	r23, r1
    4a66:	61 05       	cpc	r22, r1

00004a68 <.L8^B1>:
    4a68:	08 94       	sec
    4a6a:	08 95       	ret

00004a6c <__fp_zero>:
    4a6c:	e8 94       	clt

00004a6e <__fp_szero>:
    4a6e:	bb 27       	eor	r27, r27
    4a70:	66 27       	eor	r22, r22
    4a72:	77 27       	eor	r23, r23
    4a74:	cb 01       	movw	r24, r22
    4a76:	97 f9       	bld	r25, 7
    4a78:	08 95       	ret

00004a7a <__gesf2>:
    4a7a:	0e 94 c8 24 	call	0x4990	; 0x4990 <__fp_cmp>
    4a7e:	08 f4       	brcc	.+2      	; 0x4a82 <.L1^B1>
    4a80:	8f ef       	ldi	r24, 0xFF	; 255

00004a82 <.L1^B1>:
    4a82:	08 95       	ret

00004a84 <__mulsf3>:
    4a84:	0e 94 55 25 	call	0x4aaa	; 0x4aaa <__mulsf3x>
    4a88:	0c 94 03 25 	jmp	0x4a06	; 0x4a06 <__fp_round>

00004a8c <.L^B1>:
    4a8c:	0e 94 f5 24 	call	0x49ea	; 0x49ea <__fp_pscA>
    4a90:	38 f0       	brcs	.+14     	; 0x4aa0 <.L1^B1>
    4a92:	0e 94 fc 24 	call	0x49f8	; 0x49f8 <__fp_pscB>
    4a96:	20 f0       	brcs	.+8      	; 0x4aa0 <.L1^B1>
    4a98:	95 23       	and	r25, r21
    4a9a:	11 f0       	breq	.+4      	; 0x4aa0 <.L1^B1>
    4a9c:	0c 94 ec 24 	jmp	0x49d8	; 0x49d8 <__fp_inf>

00004aa0 <.L1^B1>:
    4aa0:	0c 94 f2 24 	jmp	0x49e4	; 0x49e4 <__fp_nan>

00004aa4 <.L2^B1>:
    4aa4:	11 24       	eor	r1, r1
    4aa6:	0c 94 37 25 	jmp	0x4a6e	; 0x4a6e <__fp_szero>

00004aaa <__mulsf3x>:
    4aaa:	0e 94 14 25 	call	0x4a28	; 0x4a28 <__fp_split3>
    4aae:	70 f3       	brcs	.-36     	; 0x4a8c <.L^B1>

00004ab0 <__mulsf3_pse>:
    4ab0:	95 9f       	mul	r25, r21
    4ab2:	c1 f3       	breq	.-16     	; 0x4aa4 <.L2^B1>
    4ab4:	95 0f       	add	r25, r21
    4ab6:	50 e0       	ldi	r21, 0x00	; 0
    4ab8:	55 1f       	adc	r21, r21
    4aba:	62 9f       	mul	r22, r18
    4abc:	f0 01       	movw	r30, r0
    4abe:	72 9f       	mul	r23, r18
    4ac0:	bb 27       	eor	r27, r27
    4ac2:	f0 0d       	add	r31, r0
    4ac4:	b1 1d       	adc	r27, r1
    4ac6:	63 9f       	mul	r22, r19
    4ac8:	aa 27       	eor	r26, r26
    4aca:	f0 0d       	add	r31, r0
    4acc:	b1 1d       	adc	r27, r1
    4ace:	aa 1f       	adc	r26, r26
    4ad0:	64 9f       	mul	r22, r20
    4ad2:	66 27       	eor	r22, r22
    4ad4:	b0 0d       	add	r27, r0
    4ad6:	a1 1d       	adc	r26, r1
    4ad8:	66 1f       	adc	r22, r22
    4ada:	82 9f       	mul	r24, r18
    4adc:	22 27       	eor	r18, r18
    4ade:	b0 0d       	add	r27, r0
    4ae0:	a1 1d       	adc	r26, r1
    4ae2:	62 1f       	adc	r22, r18
    4ae4:	73 9f       	mul	r23, r19
    4ae6:	b0 0d       	add	r27, r0
    4ae8:	a1 1d       	adc	r26, r1
    4aea:	62 1f       	adc	r22, r18
    4aec:	83 9f       	mul	r24, r19
    4aee:	a0 0d       	add	r26, r0
    4af0:	61 1d       	adc	r22, r1
    4af2:	22 1f       	adc	r18, r18
    4af4:	74 9f       	mul	r23, r20
    4af6:	33 27       	eor	r19, r19
    4af8:	a0 0d       	add	r26, r0
    4afa:	61 1d       	adc	r22, r1
    4afc:	23 1f       	adc	r18, r19
    4afe:	84 9f       	mul	r24, r20
    4b00:	60 0d       	add	r22, r0
    4b02:	21 1d       	adc	r18, r1
    4b04:	82 2f       	mov	r24, r18
    4b06:	76 2f       	mov	r23, r22
    4b08:	6a 2f       	mov	r22, r26
    4b0a:	11 24       	eor	r1, r1
    4b0c:	9f 57       	subi	r25, 0x7F	; 127
    4b0e:	50 40       	sbci	r21, 0x00	; 0
    4b10:	9a f0       	brmi	.+38     	; 0x4b38 <.L13^B1>
    4b12:	f1 f0       	breq	.+60     	; 0x4b50 <.L15^B1>

00004b14 <.L10^B1>:
    4b14:	88 23       	and	r24, r24
    4b16:	4a f0       	brmi	.+18     	; 0x4b2a <.L11^B1>
    4b18:	ee 0f       	add	r30, r30
    4b1a:	ff 1f       	adc	r31, r31
    4b1c:	bb 1f       	adc	r27, r27
    4b1e:	66 1f       	adc	r22, r22
    4b20:	77 1f       	adc	r23, r23
    4b22:	88 1f       	adc	r24, r24
    4b24:	91 50       	subi	r25, 0x01	; 1
    4b26:	50 40       	sbci	r21, 0x00	; 0
    4b28:	a9 f7       	brne	.-22     	; 0x4b14 <.L10^B1>

00004b2a <.L11^B1>:
    4b2a:	9e 3f       	cpi	r25, 0xFE	; 254
    4b2c:	51 05       	cpc	r21, r1
    4b2e:	80 f0       	brcs	.+32     	; 0x4b50 <.L15^B1>
    4b30:	0c 94 ec 24 	jmp	0x49d8	; 0x49d8 <__fp_inf>

00004b34 <.L12^B1>:
    4b34:	0c 94 37 25 	jmp	0x4a6e	; 0x4a6e <__fp_szero>

00004b38 <.L13^B1>:
    4b38:	5f 3f       	cpi	r21, 0xFF	; 255
    4b3a:	e4 f3       	brlt	.-8      	; 0x4b34 <.L12^B1>
    4b3c:	98 3e       	cpi	r25, 0xE8	; 232
    4b3e:	d4 f3       	brlt	.-12     	; 0x4b34 <.L12^B1>

00004b40 <.L14^B1>:
    4b40:	86 95       	lsr	r24
    4b42:	77 95       	ror	r23
    4b44:	67 95       	ror	r22
    4b46:	b7 95       	ror	r27
    4b48:	f7 95       	ror	r31
    4b4a:	e7 95       	ror	r30
    4b4c:	9f 5f       	subi	r25, 0xFF	; 255
    4b4e:	c1 f7       	brne	.-16     	; 0x4b40 <.L14^B1>

00004b50 <.L15^B1>:
    4b50:	fe 2b       	or	r31, r30
    4b52:	88 0f       	add	r24, r24
    4b54:	91 1d       	adc	r25, r1
    4b56:	96 95       	lsr	r25
    4b58:	87 95       	ror	r24
    4b5a:	97 f9       	bld	r25, 7
    4b5c:	08 95       	ret

00004b5e <strcmp>:
    4b5e:	fb 01       	movw	r30, r22
    4b60:	dc 01       	movw	r26, r24

00004b62 <.L_strcmp_loop>:
    4b62:	8d 91       	ld	r24, X+
    4b64:	01 90       	ld	r0, Z+
    4b66:	80 19       	sub	r24, r0
    4b68:	01 10       	cpse	r0, r1
    4b6a:	d9 f3       	breq	.-10     	; 0x4b62 <.L_strcmp_loop>
    4b6c:	99 0b       	sbc	r25, r25
    4b6e:	08 95       	ret

00004b70 <itoa>:
    4b70:	45 32       	cpi	r20, 0x25	; 37
    4b72:	51 05       	cpc	r21, r1
    4b74:	20 f4       	brcc	.+8      	; 0x4b7e <.L1^B1>
    4b76:	42 30       	cpi	r20, 0x02	; 2
    4b78:	10 f0       	brcs	.+4      	; 0x4b7e <.L1^B1>
    4b7a:	0c 94 c3 25 	jmp	0x4b86	; 0x4b86 <__itoa_ncheck>

00004b7e <.L1^B1>:
    4b7e:	fb 01       	movw	r30, r22
    4b80:	10 82       	st	Z, r1
    4b82:	cb 01       	movw	r24, r22
    4b84:	08 95       	ret

00004b86 <__itoa_ncheck>:
    4b86:	bb 27       	eor	r27, r27
    4b88:	4a 30       	cpi	r20, 0x0A	; 10
    4b8a:	31 f4       	brne	.+12     	; 0x4b98 <.L1^B1>
    4b8c:	99 23       	and	r25, r25
    4b8e:	22 f4       	brpl	.+8      	; 0x4b98 <.L1^B1>
    4b90:	bd e2       	ldi	r27, 0x2D	; 45
    4b92:	90 95       	com	r25
    4b94:	81 95       	neg	r24
    4b96:	9f 4f       	sbci	r25, 0xFF	; 255

00004b98 <.L1^B1>:
    4b98:	0c 94 cf 25 	jmp	0x4b9e	; 0x4b9e <__utoa_common>

00004b9c <__utoa_ncheck>:
    4b9c:	bb 27       	eor	r27, r27

00004b9e <__utoa_common>:
    4b9e:	fb 01       	movw	r30, r22
    4ba0:	55 27       	eor	r21, r21

00004ba2 <.L1^B1>:
    4ba2:	aa 27       	eor	r26, r26

00004ba4 <.L2^B1>:
    4ba4:	88 0f       	add	r24, r24
    4ba6:	99 1f       	adc	r25, r25
    4ba8:	aa 1f       	adc	r26, r26
    4baa:	a4 17       	cp	r26, r20
    4bac:	10 f0       	brcs	.+4      	; 0x4bb2 <.L3^B1>
    4bae:	a4 1b       	sub	r26, r20
    4bb0:	83 95       	inc	r24

00004bb2 <.L3^B1>:
    4bb2:	50 51       	subi	r21, 0x10	; 16
    4bb4:	b9 f7       	brne	.-18     	; 0x4ba4 <.L2^B1>
    4bb6:	a0 5d       	subi	r26, 0xD0	; 208
    4bb8:	aa 33       	cpi	r26, 0x3A	; 58
    4bba:	08 f0       	brcs	.+2      	; 0x4bbe <.L4^B1>
    4bbc:	a9 5d       	subi	r26, 0xD9	; 217

00004bbe <.L4^B1>:
    4bbe:	a1 93       	st	Z+, r26
    4bc0:	00 97       	sbiw	r24, 0x00	; 0
    4bc2:	79 f7       	brne	.-34     	; 0x4ba2 <.L1^B1>
    4bc4:	b1 11       	cpse	r27, r1
    4bc6:	b1 93       	st	Z+, r27
    4bc8:	11 92       	st	Z+, r1
    4bca:	cb 01       	movw	r24, r22
    4bcc:	0c 94 61 28 	jmp	0x50c2	; 0x50c2 <strrev>

00004bd0 <snprintf>:
    4bd0:	0f 93       	push	r16
    4bd2:	1f 93       	push	r17
    4bd4:	cf 93       	push	r28
    4bd6:	df 93       	push	r29
    4bd8:	cd b7       	in	r28, 0x3d	; 61
    4bda:	de b7       	in	r29, 0x3e	; 62
    4bdc:	2e 97       	sbiw	r28, 0x0e	; 14
    4bde:	0f b6       	in	r0, 0x3f	; 63
    4be0:	f8 94       	cli
    4be2:	de bf       	out	0x3e, r29	; 62
    4be4:	0f be       	out	0x3f, r0	; 63
    4be6:	cd bf       	out	0x3d, r28	; 61
    4be8:	0e 89       	ldd	r16, Y+22	; 0x16
    4bea:	1f 89       	ldd	r17, Y+23	; 0x17
    4bec:	86 e0       	ldi	r24, 0x06	; 6
    4bee:	8c 83       	std	Y+4, r24	; 0x04
    4bf0:	1a 83       	std	Y+2, r17	; 0x02
    4bf2:	09 83       	std	Y+1, r16	; 0x01
    4bf4:	88 8d       	ldd	r24, Y+24	; 0x18
    4bf6:	99 8d       	ldd	r25, Y+25	; 0x19
    4bf8:	81 30       	cpi	r24, 0x01	; 1
    4bfa:	20 e8       	ldi	r18, 0x80	; 128
    4bfc:	92 07       	cpc	r25, r18
    4bfe:	10 f0       	brcs	.+4      	; 0x4c04 <.L2>
    4c00:	80 e0       	ldi	r24, 0x00	; 0
    4c02:	90 e8       	ldi	r25, 0x80	; 128

00004c04 <.L2>:
    4c04:	01 97       	sbiw	r24, 0x01	; 1
    4c06:	9e 83       	std	Y+6, r25	; 0x06
    4c08:	8d 83       	std	Y+5, r24	; 0x05
    4c0a:	ae 01       	movw	r20, r28
    4c0c:	44 5e       	subi	r20, 0xE4	; 228
    4c0e:	5f 4f       	sbci	r21, 0xFF	; 255
    4c10:	6a 8d       	ldd	r22, Y+26	; 0x1a
    4c12:	7b 8d       	ldd	r23, Y+27	; 0x1b
    4c14:	ce 01       	movw	r24, r28
    4c16:	01 96       	adiw	r24, 0x01	; 1
    4c18:	0e 94 27 26 	call	0x4c4e	; 0x4c4e <vfprintf>
    4c1c:	4d 81       	ldd	r20, Y+5	; 0x05
    4c1e:	5e 81       	ldd	r21, Y+6	; 0x06
    4c20:	57 fd       	sbrc	r21, 7
    4c22:	0a c0       	rjmp	.+20     	; 0x4c38 <.L1>
    4c24:	2f 81       	ldd	r18, Y+7	; 0x07
    4c26:	38 85       	ldd	r19, Y+8	; 0x08
    4c28:	42 17       	cp	r20, r18
    4c2a:	53 07       	cpc	r21, r19
    4c2c:	0c f4       	brge	.+2      	; 0x4c30 <.L4>
    4c2e:	9a 01       	movw	r18, r20

00004c30 <.L4>:
    4c30:	02 0f       	add	r16, r18
    4c32:	13 1f       	adc	r17, r19
    4c34:	f8 01       	movw	r30, r16
    4c36:	10 82       	st	Z, r1

00004c38 <.L1>:
    4c38:	2e 96       	adiw	r28, 0x0e	; 14
    4c3a:	0f b6       	in	r0, 0x3f	; 63
    4c3c:	f8 94       	cli
    4c3e:	de bf       	out	0x3e, r29	; 62
    4c40:	0f be       	out	0x3f, r0	; 63
    4c42:	cd bf       	out	0x3d, r28	; 61
    4c44:	df 91       	pop	r29
    4c46:	cf 91       	pop	r28
    4c48:	1f 91       	pop	r17
    4c4a:	0f 91       	pop	r16
    4c4c:	08 95       	ret

00004c4e <vfprintf>:
    4c4e:	5f 92       	push	r5
    4c50:	6f 92       	push	r6
    4c52:	7f 92       	push	r7
    4c54:	8f 92       	push	r8
    4c56:	9f 92       	push	r9
    4c58:	af 92       	push	r10
    4c5a:	bf 92       	push	r11
    4c5c:	cf 92       	push	r12
    4c5e:	df 92       	push	r13
    4c60:	ef 92       	push	r14
    4c62:	ff 92       	push	r15
    4c64:	0f 93       	push	r16
    4c66:	1f 93       	push	r17
    4c68:	cf 93       	push	r28
    4c6a:	df 93       	push	r29
    4c6c:	cd b7       	in	r28, 0x3d	; 61
    4c6e:	de b7       	in	r29, 0x3e	; 62
    4c70:	2f 97       	sbiw	r28, 0x0f	; 15
    4c72:	0f b6       	in	r0, 0x3f	; 63
    4c74:	f8 94       	cli
    4c76:	de bf       	out	0x3e, r29	; 62
    4c78:	0f be       	out	0x3f, r0	; 63
    4c7a:	cd bf       	out	0x3d, r28	; 61
    4c7c:	6c 01       	movw	r12, r24
    4c7e:	7b 01       	movw	r14, r22
    4c80:	8a 01       	movw	r16, r20
    4c82:	dc 01       	movw	r26, r24
    4c84:	17 96       	adiw	r26, 0x07	; 7
    4c86:	1c 92       	st	X, r1
    4c88:	1e 92       	st	-X, r1
    4c8a:	16 97       	sbiw	r26, 0x06	; 6
    4c8c:	13 96       	adiw	r26, 0x03	; 3
    4c8e:	8c 91       	ld	r24, X
    4c90:	81 ff       	sbrs	r24, 1
    4c92:	fe c1       	rjmp	.+1020   	; 0x5090 <.L79>
    4c94:	2a e0       	ldi	r18, 0x0A	; 10
    4c96:	52 2e       	mov	r5, r18

00004c98 <.L3>:
    4c98:	f6 01       	movw	r30, r12
    4c9a:	93 81       	ldd	r25, Z+3	; 0x03
    4c9c:	f7 01       	movw	r30, r14
    4c9e:	93 fd       	sbrc	r25, 3
    4ca0:	85 91       	lpm	r24, Z+
    4ca2:	93 ff       	sbrs	r25, 3
    4ca4:	81 91       	ld	r24, Z+
    4ca6:	7f 01       	movw	r14, r30
    4ca8:	88 23       	and	r24, r24
    4caa:	09 f4       	brne	.+2      	; 0x4cae <L0^A+0x2>

00004cac <L0^A>:
    4cac:	73 c0       	rjmp	.+230    	; 0x4d94 <.L4>
    4cae:	85 32       	cpi	r24, 0x25	; 37
    4cb0:	39 f4       	brne	.+14     	; 0x4cc0 <.L5>
    4cb2:	93 fd       	sbrc	r25, 3
    4cb4:	85 91       	lpm	r24, Z+
    4cb6:	93 ff       	sbrs	r25, 3
    4cb8:	81 91       	ld	r24, Z+
    4cba:	7f 01       	movw	r14, r30
    4cbc:	85 32       	cpi	r24, 0x25	; 37
    4cbe:	29 f4       	brne	.+10     	; 0x4cca <.L80>

00004cc0 <.L5>:
    4cc0:	b6 01       	movw	r22, r12
    4cc2:	90 e0       	ldi	r25, 0x00	; 0
    4cc4:	0e 94 71 28 	call	0x50e2	; 0x50e2 <fputc>
    4cc8:	e7 cf       	rjmp	.-50     	; 0x4c98 <.L3>

00004cca <.L80>:
    4cca:	91 2c       	mov	r9, r1
    4ccc:	61 2c       	mov	r6, r1
    4cce:	71 2c       	mov	r7, r1

00004cd0 <.L6>:
    4cd0:	ff e1       	ldi	r31, 0x1F	; 31
    4cd2:	f7 15       	cp	r31, r7
    4cd4:	08 f4       	brcc	.+2      	; 0x4cd8 <L0^A+0x2>

00004cd6 <L0^A>:
    4cd6:	46 c0       	rjmp	.+140    	; 0x4d64 <.L8>
    4cd8:	8b 32       	cpi	r24, 0x2B	; 43
    4cda:	c9 f1       	breq	.+114    	; 0x4d4e <.L9>
    4cdc:	f8 f4       	brcc	.+62     	; 0x4d1c <.L10>
    4cde:	80 32       	cpi	r24, 0x20	; 32
    4ce0:	c1 f1       	breq	.+112    	; 0x4d52 <.L11>
    4ce2:	83 32       	cpi	r24, 0x23	; 35
    4ce4:	09 f4       	brne	.+2      	; 0x4ce8 <.L13>

00004ce6 <L0^A>:
    4ce6:	3b c0       	rjmp	.+118    	; 0x4d5e <.L12>

00004ce8 <.L13>:
    4ce8:	83 36       	cpi	r24, 0x63	; 99
    4cea:	09 f4       	brne	.+2      	; 0x4cee <L0^A+0x2>

00004cec <L0^A>:
    4cec:	9c c0       	rjmp	.+312    	; 0x4e26 <.L25>
    4cee:	83 37       	cpi	r24, 0x73	; 115
    4cf0:	09 f4       	brne	.+2      	; 0x4cf4 <L0^A+0x2>

00004cf2 <L0^A>:
    4cf2:	a5 c0       	rjmp	.+330    	; 0x4e3e <.L26>
    4cf4:	83 35       	cpi	r24, 0x53	; 83
    4cf6:	09 f0       	breq	.+2      	; 0x4cfa <L0^A+0x2>

00004cf8 <L0^A>:
    4cf8:	c8 c0       	rjmp	.+400    	; 0x4e8a <.L128>
    4cfa:	f8 01       	movw	r30, r16
    4cfc:	a1 90       	ld	r10, Z+
    4cfe:	b1 90       	ld	r11, Z+
    4d00:	8f 01       	movw	r16, r30
    4d02:	69 2d       	mov	r22, r9
    4d04:	70 e0       	ldi	r23, 0x00	; 0
    4d06:	76 fc       	sbrc	r7, 6
    4d08:	02 c0       	rjmp	.+4      	; 0x4d0e <.L32>
    4d0a:	6f ef       	ldi	r22, 0xFF	; 255
    4d0c:	7f ef       	ldi	r23, 0xFF	; 255

00004d0e <.L32>:
    4d0e:	c5 01       	movw	r24, r10
    4d10:	0e 94 4b 28 	call	0x5096	; 0x5096 <strnlen_P>
    4d14:	4c 01       	movw	r8, r24
    4d16:	68 94       	set
    4d18:	77 f8       	bld	r7, 7
    4d1a:	71 c0       	rjmp	.+226    	; 0x4dfe <.L31>

00004d1c <.L10>:
    4d1c:	8d 32       	cpi	r24, 0x2D	; 45
    4d1e:	e1 f0       	breq	.+56     	; 0x4d58 <.L14>
    4d20:	80 33       	cpi	r24, 0x30	; 48
    4d22:	51 f0       	breq	.+20     	; 0x4d38 <.L15>
    4d24:	20 ed       	ldi	r18, 0xD0	; 208
    4d26:	28 0f       	add	r18, r24
    4d28:	2a 30       	cpi	r18, 0x0A	; 10
    4d2a:	48 f1       	brcs	.+82     	; 0x4d7e <.L16>
    4d2c:	8e 32       	cpi	r24, 0x2E	; 46
    4d2e:	09 f0       	breq	.+2      	; 0x4d32 <.L21>

00004d30 <L0^A>:
    4d30:	4b c0       	rjmp	.+150    	; 0x4dc8 <.L22>

00004d32 <.L21>:
    4d32:	68 94       	set
    4d34:	76 f8       	bld	r7, 6
    4d36:	02 c0       	rjmp	.+4      	; 0x4d3c <.L18>

00004d38 <.L15>:
    4d38:	68 94       	set
    4d3a:	70 f8       	bld	r7, 0

00004d3c <.L18>:
    4d3c:	f7 01       	movw	r30, r14
    4d3e:	93 fd       	sbrc	r25, 3
    4d40:	85 91       	lpm	r24, Z+
    4d42:	93 ff       	sbrs	r25, 3
    4d44:	81 91       	ld	r24, Z+
    4d46:	7f 01       	movw	r14, r30
    4d48:	81 11       	cpse	r24, r1
    4d4a:	c2 cf       	rjmp	.-124    	; 0x4cd0 <.L6>
    4d4c:	45 c0       	rjmp	.+138    	; 0x4dd8 <.L19>

00004d4e <.L9>:
    4d4e:	68 94       	set
    4d50:	71 f8       	bld	r7, 1

00004d52 <.L11>:
    4d52:	68 94       	set
    4d54:	72 f8       	bld	r7, 2
    4d56:	f2 cf       	rjmp	.-28     	; 0x4d3c <.L18>

00004d58 <.L14>:
    4d58:	68 94       	set
    4d5a:	73 f8       	bld	r7, 3
    4d5c:	ef cf       	rjmp	.-34     	; 0x4d3c <.L18>

00004d5e <.L12>:
    4d5e:	68 94       	set
    4d60:	74 f8       	bld	r7, 4
    4d62:	ec cf       	rjmp	.-40     	; 0x4d3c <.L18>

00004d64 <.L8>:
    4d64:	77 fc       	sbrc	r7, 7
    4d66:	38 c0       	rjmp	.+112    	; 0x4dd8 <.L19>
    4d68:	20 ed       	ldi	r18, 0xD0	; 208
    4d6a:	28 0f       	add	r18, r24
    4d6c:	2a 30       	cpi	r18, 0x0A	; 10
    4d6e:	70 f4       	brcc	.+28     	; 0x4d8c <.L20>
    4d70:	76 fe       	sbrs	r7, 6
    4d72:	05 c0       	rjmp	.+10     	; 0x4d7e <.L16>
    4d74:	95 9c       	mul	r9, r5
    4d76:	20 0d       	add	r18, r0
    4d78:	11 24       	eor	r1, r1
    4d7a:	92 2e       	mov	r9, r18
    4d7c:	df cf       	rjmp	.-66     	; 0x4d3c <.L18>

00004d7e <.L16>:
    4d7e:	65 9c       	mul	r6, r5
    4d80:	20 0d       	add	r18, r0
    4d82:	11 24       	eor	r1, r1
    4d84:	62 2e       	mov	r6, r18
    4d86:	68 94       	set
    4d88:	75 f8       	bld	r7, 5
    4d8a:	d8 cf       	rjmp	.-80     	; 0x4d3c <.L18>

00004d8c <.L20>:
    4d8c:	8e 32       	cpi	r24, 0x2E	; 46
    4d8e:	e1 f4       	brne	.+56     	; 0x4dc8 <.L22>
    4d90:	76 fe       	sbrs	r7, 6
    4d92:	cf cf       	rjmp	.-98     	; 0x4d32 <.L21>

00004d94 <.L4>:
    4d94:	d6 01       	movw	r26, r12
    4d96:	16 96       	adiw	r26, 0x06	; 6
    4d98:	8d 91       	ld	r24, X+
    4d9a:	9c 91       	ld	r25, X

00004d9c <.L1>:
    4d9c:	2f 96       	adiw	r28, 0x0f	; 15
    4d9e:	0f b6       	in	r0, 0x3f	; 63
    4da0:	f8 94       	cli
    4da2:	de bf       	out	0x3e, r29	; 62
    4da4:	0f be       	out	0x3f, r0	; 63
    4da6:	cd bf       	out	0x3d, r28	; 61
    4da8:	df 91       	pop	r29
    4daa:	cf 91       	pop	r28
    4dac:	1f 91       	pop	r17
    4dae:	0f 91       	pop	r16
    4db0:	ff 90       	pop	r15
    4db2:	ef 90       	pop	r14
    4db4:	df 90       	pop	r13
    4db6:	cf 90       	pop	r12
    4db8:	bf 90       	pop	r11
    4dba:	af 90       	pop	r10
    4dbc:	9f 90       	pop	r9
    4dbe:	8f 90       	pop	r8
    4dc0:	7f 90       	pop	r7
    4dc2:	6f 90       	pop	r6
    4dc4:	5f 90       	pop	r5
    4dc6:	08 95       	ret

00004dc8 <.L22>:
    4dc8:	8c 36       	cpi	r24, 0x6C	; 108
    4dca:	19 f4       	brne	.+6      	; 0x4dd2 <.L23>
    4dcc:	68 94       	set
    4dce:	77 f8       	bld	r7, 7
    4dd0:	b5 cf       	rjmp	.-150    	; 0x4d3c <.L18>

00004dd2 <.L23>:
    4dd2:	88 36       	cpi	r24, 0x68	; 104
    4dd4:	09 f4       	brne	.+2      	; 0x4dd8 <.L19>

00004dd6 <L0^A>:
    4dd6:	b2 cf       	rjmp	.-156    	; 0x4d3c <.L18>

00004dd8 <.L19>:
    4dd8:	98 2f       	mov	r25, r24
    4dda:	9f 7d       	andi	r25, 0xDF	; 223
    4ddc:	95 54       	subi	r25, 0x45	; 69
    4dde:	93 30       	cpi	r25, 0x03	; 3
    4de0:	08 f0       	brcs	.+2      	; 0x4de4 <L0^A+0x2>

00004de2 <L0^A>:
    4de2:	82 cf       	rjmp	.-252    	; 0x4ce8 <.L13>
    4de4:	0c 5f       	subi	r16, 0xFC	; 252
    4de6:	1f 4f       	sbci	r17, 0xFF	; 255
    4de8:	8f e3       	ldi	r24, 0x3F	; 63
    4dea:	89 83       	std	Y+1, r24	; 0x01
    4dec:	88 24       	eor	r8, r8
    4dee:	83 94       	inc	r8
    4df0:	91 2c       	mov	r9, r1
    4df2:	ae 01       	movw	r20, r28
    4df4:	4f 5f       	subi	r20, 0xFF	; 255
    4df6:	5f 4f       	sbci	r21, 0xFF	; 255
    4df8:	5a 01       	movw	r10, r20

00004dfa <.L29>:
    4dfa:	e8 94       	clt
    4dfc:	77 f8       	bld	r7, 7

00004dfe <.L31>:
    4dfe:	73 fc       	sbrc	r7, 3
    4e00:	05 c0       	rjmp	.+10     	; 0x4e0c <.L34>

00004e02 <.L33>:
    4e02:	86 2d       	mov	r24, r6
    4e04:	90 e0       	ldi	r25, 0x00	; 0
    4e06:	88 16       	cp	r8, r24
    4e08:	99 06       	cpc	r9, r25
    4e0a:	40 f1       	brcs	.+80     	; 0x4e5c <.L35>

00004e0c <.L34>:
    4e0c:	81 14       	cp	r8, r1
    4e0e:	91 04       	cpc	r9, r1
    4e10:	61 f5       	brne	.+88     	; 0x4e6a <.L38>

00004e12 <.L39>:
    4e12:	66 20       	and	r6, r6
    4e14:	09 f4       	brne	.+2      	; 0x4e18 <L0^A+0x2>

00004e16 <L0^A>:
    4e16:	40 cf       	rjmp	.-384    	; 0x4c98 <.L3>
    4e18:	b6 01       	movw	r22, r12
    4e1a:	80 e2       	ldi	r24, 0x20	; 32
    4e1c:	90 e0       	ldi	r25, 0x00	; 0
    4e1e:	0e 94 71 28 	call	0x50e2	; 0x50e2 <fputc>
    4e22:	6a 94       	dec	r6
    4e24:	f6 cf       	rjmp	.-20     	; 0x4e12 <.L39>

00004e26 <.L25>:
    4e26:	d8 01       	movw	r26, r16
    4e28:	8c 91       	ld	r24, X
    4e2a:	89 83       	std	Y+1, r24	; 0x01
    4e2c:	0e 5f       	subi	r16, 0xFE	; 254
    4e2e:	1f 4f       	sbci	r17, 0xFF	; 255
    4e30:	88 24       	eor	r8, r8
    4e32:	83 94       	inc	r8
    4e34:	91 2c       	mov	r9, r1
    4e36:	fe 01       	movw	r30, r28
    4e38:	31 96       	adiw	r30, 0x01	; 1
    4e3a:	5f 01       	movw	r10, r30
    4e3c:	de cf       	rjmp	.-68     	; 0x4dfa <.L29>

00004e3e <.L26>:
    4e3e:	d8 01       	movw	r26, r16
    4e40:	ad 90       	ld	r10, X+
    4e42:	bd 90       	ld	r11, X+
    4e44:	8d 01       	movw	r16, r26
    4e46:	69 2d       	mov	r22, r9
    4e48:	70 e0       	ldi	r23, 0x00	; 0
    4e4a:	76 fc       	sbrc	r7, 6
    4e4c:	02 c0       	rjmp	.+4      	; 0x4e52 <.L30>
    4e4e:	6f ef       	ldi	r22, 0xFF	; 255
    4e50:	7f ef       	ldi	r23, 0xFF	; 255

00004e52 <.L30>:
    4e52:	c5 01       	movw	r24, r10
    4e54:	0e 94 56 28 	call	0x50ac	; 0x50ac <strnlen>
    4e58:	4c 01       	movw	r8, r24
    4e5a:	cf cf       	rjmp	.-98     	; 0x4dfa <.L29>

00004e5c <.L35>:
    4e5c:	b6 01       	movw	r22, r12
    4e5e:	80 e2       	ldi	r24, 0x20	; 32
    4e60:	90 e0       	ldi	r25, 0x00	; 0
    4e62:	0e 94 71 28 	call	0x50e2	; 0x50e2 <fputc>
    4e66:	6a 94       	dec	r6
    4e68:	cc cf       	rjmp	.-104    	; 0x4e02 <.L33>

00004e6a <.L38>:
    4e6a:	f5 01       	movw	r30, r10
    4e6c:	77 fc       	sbrc	r7, 7
    4e6e:	85 91       	lpm	r24, Z+
    4e70:	77 fe       	sbrs	r7, 7
    4e72:	81 91       	ld	r24, Z+
    4e74:	5f 01       	movw	r10, r30
    4e76:	b6 01       	movw	r22, r12
    4e78:	90 e0       	ldi	r25, 0x00	; 0
    4e7a:	0e 94 71 28 	call	0x50e2	; 0x50e2 <fputc>
    4e7e:	61 10       	cpse	r6, r1
    4e80:	6a 94       	dec	r6
    4e82:	f1 e0       	ldi	r31, 0x01	; 1
    4e84:	8f 1a       	sub	r8, r31
    4e86:	91 08       	sbc	r9, r1
    4e88:	c1 cf       	rjmp	.-126    	; 0x4e0c <.L34>

00004e8a <.L128>:
    4e8a:	84 36       	cpi	r24, 0x64	; 100
    4e8c:	19 f0       	breq	.+6      	; 0x4e94 <.L40>
    4e8e:	89 36       	cpi	r24, 0x69	; 105
    4e90:	09 f0       	breq	.+2      	; 0x4e94 <.L40>

00004e92 <L0^A>:
    4e92:	81 c0       	rjmp	.+258    	; 0x4f96 <.L41>

00004e94 <.L40>:
    4e94:	f8 01       	movw	r30, r16
    4e96:	77 fe       	sbrs	r7, 7
    4e98:	77 c0       	rjmp	.+238    	; 0x4f88 <.L42>
    4e9a:	61 91       	ld	r22, Z+
    4e9c:	71 91       	ld	r23, Z+
    4e9e:	81 91       	ld	r24, Z+
    4ea0:	91 91       	ld	r25, Z+

00004ea2 <.L129>:
    4ea2:	8f 01       	movw	r16, r30
    4ea4:	27 2d       	mov	r18, r7
    4ea6:	2f 76       	andi	r18, 0x6F	; 111
    4ea8:	82 2e       	mov	r8, r18
    4eaa:	97 ff       	sbrs	r25, 7
    4eac:	09 c0       	rjmp	.+18     	; 0x4ec0 <.L44>
    4eae:	90 95       	com	r25
    4eb0:	80 95       	com	r24
    4eb2:	70 95       	com	r23
    4eb4:	61 95       	neg	r22
    4eb6:	7f 4f       	sbci	r23, 0xFF	; 255
    4eb8:	8f 4f       	sbci	r24, 0xFF	; 255
    4eba:	9f 4f       	sbci	r25, 0xFF	; 255
    4ebc:	68 94       	set
    4ebe:	87 f8       	bld	r8, 7

00004ec0 <.L44>:
    4ec0:	2a e0       	ldi	r18, 0x0A	; 10
    4ec2:	30 e0       	ldi	r19, 0x00	; 0
    4ec4:	ae 01       	movw	r20, r28
    4ec6:	4f 5f       	subi	r20, 0xFF	; 255
    4ec8:	5f 4f       	sbci	r21, 0xFF	; 255
    4eca:	5a 01       	movw	r10, r20
    4ecc:	0e 94 a1 28 	call	0x5142	; 0x5142 <__ultoa_invert>
    4ed0:	8a 19       	sub	r24, r10
    4ed2:	a8 2e       	mov	r10, r24

00004ed4 <.L45>:
    4ed4:	ba 2c       	mov	r11, r10
    4ed6:	78 2c       	mov	r7, r8
    4ed8:	86 fe       	sbrs	r8, 6
    4eda:	0c c0       	rjmp	.+24     	; 0x4ef4 <.L54>
    4edc:	e8 94       	clt
    4ede:	70 f8       	bld	r7, 0
    4ee0:	a9 14       	cp	r10, r9
    4ee2:	40 f4       	brcc	.+16     	; 0x4ef4 <.L54>
    4ee4:	84 fe       	sbrs	r8, 4
    4ee6:	05 c0       	rjmp	.+10     	; 0x4ef2 <.L89>
    4ee8:	82 fc       	sbrc	r8, 2
    4eea:	03 c0       	rjmp	.+6      	; 0x4ef2 <.L89>
    4eec:	78 2d       	mov	r23, r8
    4eee:	7e 7e       	andi	r23, 0xEE	; 238
    4ef0:	77 2e       	mov	r7, r23

00004ef2 <.L89>:
    4ef2:	b9 2c       	mov	r11, r9

00004ef4 <.L54>:
    4ef4:	74 fe       	sbrs	r7, 4
    4ef6:	a5 c0       	rjmp	.+330    	; 0x5042 <.L55>
    4ef8:	fe 01       	movw	r30, r28
    4efa:	ea 0d       	add	r30, r10
    4efc:	f1 1d       	adc	r31, r1
    4efe:	80 81       	ld	r24, Z
    4f00:	80 33       	cpi	r24, 0x30	; 48
    4f02:	09 f0       	breq	.+2      	; 0x4f06 <L0^A+0x2>

00004f04 <L0^A>:
    4f04:	97 c0       	rjmp	.+302    	; 0x5034 <.L56>
    4f06:	87 2d       	mov	r24, r7
    4f08:	89 7e       	andi	r24, 0xE9	; 233
    4f0a:	78 2e       	mov	r7, r24

00004f0c <.L57>:
    4f0c:	73 fc       	sbrc	r7, 3
    4f0e:	0e c0       	rjmp	.+28     	; 0x4f2c <.L59>
    4f10:	70 fe       	sbrs	r7, 0
    4f12:	a6 c0       	rjmp	.+332    	; 0x5060 <.L90>
    4f14:	9a 2c       	mov	r9, r10
    4f16:	b6 14       	cp	r11, r6
    4f18:	18 f4       	brcc	.+6      	; 0x4f20 <.L78>
    4f1a:	96 0c       	add	r9, r6
    4f1c:	9b 18       	sub	r9, r11
    4f1e:	b6 2c       	mov	r11, r6

00004f20 <.L78>:
    4f20:	86 2d       	mov	r24, r6
    4f22:	8b 19       	sub	r24, r11
    4f24:	6b 14       	cp	r6, r11
    4f26:	08 f4       	brcc	.+2      	; 0x4f2a <.L64>
    4f28:	80 e0       	ldi	r24, 0x00	; 0

00004f2a <.L64>:
    4f2a:	b8 0e       	add	r11, r24

00004f2c <.L59>:
    4f2c:	b6 14       	cp	r11, r6
    4f2e:	08 f0       	brcs	.+2      	; 0x4f32 <L0^A+0x2>

00004f30 <L0^A>:
    4f30:	99 c0       	rjmp	.+306    	; 0x5064 <.L92>
    4f32:	6b 18       	sub	r6, r11

00004f34 <.L65>:
    4f34:	74 fe       	sbrs	r7, 4
    4f36:	98 c0       	rjmp	.+304    	; 0x5068 <.L66>
    4f38:	b6 01       	movw	r22, r12
    4f3a:	80 e3       	ldi	r24, 0x30	; 48
    4f3c:	90 e0       	ldi	r25, 0x00	; 0
    4f3e:	0e 94 71 28 	call	0x50e2	; 0x50e2 <fputc>
    4f42:	72 fe       	sbrs	r7, 2
    4f44:	09 c0       	rjmp	.+18     	; 0x4f58 <.L73>
    4f46:	88 e5       	ldi	r24, 0x58	; 88
    4f48:	90 e0       	ldi	r25, 0x00	; 0
    4f4a:	71 fc       	sbrc	r7, 1
    4f4c:	02 c0       	rjmp	.+4      	; 0x4f52 <.L69>
    4f4e:	88 e7       	ldi	r24, 0x78	; 120
    4f50:	90 e0       	ldi	r25, 0x00	; 0

00004f52 <.L69>:
    4f52:	b6 01       	movw	r22, r12

00004f54 <.L132>:
    4f54:	0e 94 71 28 	call	0x50e2	; 0x50e2 <fputc>

00004f58 <.L73>:
    4f58:	a9 14       	cp	r10, r9
    4f5a:	08 f4       	brcc	.+2      	; 0x4f5e <L0^A+0x2>

00004f5c <L0^A>:
    4f5c:	92 c0       	rjmp	.+292    	; 0x5082 <.L74>
    4f5e:	aa 94       	dec	r10
    4f60:	b1 2c       	mov	r11, r1
    4f62:	9f ef       	ldi	r25, 0xFF	; 255
    4f64:	a9 1a       	sub	r10, r25
    4f66:	b9 0a       	sbc	r11, r25
    4f68:	de 01       	movw	r26, r28
    4f6a:	11 96       	adiw	r26, 0x01	; 1
    4f6c:	4d 01       	movw	r8, r26
    4f6e:	aa 0e       	add	r10, r26
    4f70:	bb 1e       	adc	r11, r27

00004f72 <.L75>:
    4f72:	f5 01       	movw	r30, r10
    4f74:	82 91       	ld	r24, -Z
    4f76:	5f 01       	movw	r10, r30
    4f78:	b6 01       	movw	r22, r12
    4f7a:	90 e0       	ldi	r25, 0x00	; 0
    4f7c:	0e 94 71 28 	call	0x50e2	; 0x50e2 <fputc>
    4f80:	8a 14       	cp	r8, r10
    4f82:	9b 04       	cpc	r9, r11
    4f84:	b1 f7       	brne	.-20     	; 0x4f72 <.L75>
    4f86:	45 cf       	rjmp	.-374    	; 0x4e12 <.L39>

00004f88 <.L42>:
    4f88:	61 91       	ld	r22, Z+
    4f8a:	71 91       	ld	r23, Z+
    4f8c:	07 2e       	mov	r0, r23
    4f8e:	00 0c       	add	r0, r0
    4f90:	88 0b       	sbc	r24, r24
    4f92:	99 0b       	sbc	r25, r25
    4f94:	86 cf       	rjmp	.-244    	; 0x4ea2 <.L129>

00004f96 <.L41>:
    4f96:	87 2c       	mov	r8, r7
    4f98:	e8 94       	clt
    4f9a:	84 f8       	bld	r8, 4
    4f9c:	2a e0       	ldi	r18, 0x0A	; 10
    4f9e:	30 e0       	ldi	r19, 0x00	; 0
    4fa0:	85 37       	cpi	r24, 0x75	; 117
    4fa2:	69 f0       	breq	.+26     	; 0x4fbe <.L47>
    4fa4:	57 2d       	mov	r21, r7
    4fa6:	59 7f       	andi	r21, 0xF9	; 249
    4fa8:	85 2e       	mov	r8, r21
    4faa:	80 37       	cpi	r24, 0x70	; 112
    4fac:	71 f1       	breq	.+92     	; 0x500a <.L48>
    4fae:	18 f5       	brcc	.+70     	; 0x4ff6 <.L49>
    4fb0:	88 35       	cpi	r24, 0x58	; 88
    4fb2:	71 f1       	breq	.+92     	; 0x5010 <.L50>
    4fb4:	8f 36       	cpi	r24, 0x6F	; 111
    4fb6:	09 f0       	breq	.+2      	; 0x4fba <L0^A+0x2>

00004fb8 <L0^A>:
    4fb8:	ed ce       	rjmp	.-550    	; 0x4d94 <.L4>
    4fba:	28 e0       	ldi	r18, 0x08	; 8
    4fbc:	30 e0       	ldi	r19, 0x00	; 0

00004fbe <.L47>:
    4fbe:	f8 01       	movw	r30, r16
    4fc0:	87 fe       	sbrs	r8, 7
    4fc2:	2e c0       	rjmp	.+92     	; 0x5020 <.L52>
    4fc4:	81 91       	ld	r24, Z+
    4fc6:	91 91       	ld	r25, Z+
    4fc8:	a1 91       	ld	r26, Z+
    4fca:	b1 91       	ld	r27, Z+
    4fcc:	8c 87       	std	Y+12, r24	; 0x0c
    4fce:	9d 87       	std	Y+13, r25	; 0x0d
    4fd0:	ae 87       	std	Y+14, r26	; 0x0e
    4fd2:	bf 87       	std	Y+15, r27	; 0x0f

00004fd4 <.L130>:
    4fd4:	8f 01       	movw	r16, r30
    4fd6:	be 01       	movw	r22, r28
    4fd8:	6f 5f       	subi	r22, 0xFF	; 255
    4fda:	7f 4f       	sbci	r23, 0xFF	; 255
    4fdc:	5b 01       	movw	r10, r22
    4fde:	ab 01       	movw	r20, r22
    4fe0:	6c 85       	ldd	r22, Y+12	; 0x0c
    4fe2:	7d 85       	ldd	r23, Y+13	; 0x0d
    4fe4:	8e 85       	ldd	r24, Y+14	; 0x0e
    4fe6:	9f 85       	ldd	r25, Y+15	; 0x0f
    4fe8:	0e 94 a1 28 	call	0x5142	; 0x5142 <__ultoa_invert>
    4fec:	8a 19       	sub	r24, r10
    4fee:	a8 2e       	mov	r10, r24
    4ff0:	e8 94       	clt
    4ff2:	87 f8       	bld	r8, 7
    4ff4:	6f cf       	rjmp	.-290    	; 0x4ed4 <.L45>

00004ff6 <.L49>:
    4ff6:	88 37       	cpi	r24, 0x78	; 120
    4ff8:	09 f0       	breq	.+2      	; 0x4ffc <.L51>

00004ffa <L0^A>:
    4ffa:	cc ce       	rjmp	.-616    	; 0x4d94 <.L4>

00004ffc <.L51>:
    4ffc:	84 fe       	sbrs	r8, 4
    4ffe:	02 c0       	rjmp	.+4      	; 0x5004 <.L84>
    5000:	68 94       	set
    5002:	82 f8       	bld	r8, 2

00005004 <.L84>:
    5004:	20 e1       	ldi	r18, 0x10	; 16
    5006:	30 e0       	ldi	r19, 0x00	; 0
    5008:	da cf       	rjmp	.-76     	; 0x4fbe <.L47>

0000500a <.L48>:
    500a:	68 94       	set
    500c:	84 f8       	bld	r8, 4
    500e:	f6 cf       	rjmp	.-20     	; 0x4ffc <.L51>

00005010 <.L50>:
    5010:	74 fe       	sbrs	r7, 4
    5012:	03 c0       	rjmp	.+6      	; 0x501a <.L85>
    5014:	65 2f       	mov	r22, r21
    5016:	66 60       	ori	r22, 0x06	; 6
    5018:	86 2e       	mov	r8, r22

0000501a <.L85>:
    501a:	20 e1       	ldi	r18, 0x10	; 16
    501c:	32 e0       	ldi	r19, 0x02	; 2
    501e:	cf cf       	rjmp	.-98     	; 0x4fbe <.L47>

00005020 <.L52>:
    5020:	81 91       	ld	r24, Z+
    5022:	91 91       	ld	r25, Z+
    5024:	ac 01       	movw	r20, r24
    5026:	60 e0       	ldi	r22, 0x00	; 0
    5028:	70 e0       	ldi	r23, 0x00	; 0
    502a:	4c 87       	std	Y+12, r20	; 0x0c
    502c:	5d 87       	std	Y+13, r21	; 0x0d
    502e:	6e 87       	std	Y+14, r22	; 0x0e
    5030:	7f 87       	std	Y+15, r23	; 0x0f
    5032:	d0 cf       	rjmp	.-96     	; 0x4fd4 <.L130>

00005034 <.L56>:
    5034:	72 fc       	sbrc	r7, 2
    5036:	02 c0       	rjmp	.+4      	; 0x503c <.L58>

00005038 <.L131>:
    5038:	b3 94       	inc	r11
    503a:	68 cf       	rjmp	.-304    	; 0x4f0c <.L57>

0000503c <.L58>:
    503c:	b3 94       	inc	r11
    503e:	b3 94       	inc	r11
    5040:	65 cf       	rjmp	.-310    	; 0x4f0c <.L57>

00005042 <.L55>:
    5042:	87 2d       	mov	r24, r7
    5044:	86 78       	andi	r24, 0x86	; 134
    5046:	88 23       	and	r24, r24
    5048:	09 f4       	brne	.+2      	; 0x504c <L0^A+0x2>

0000504a <L0^A>:
    504a:	60 cf       	rjmp	.-320    	; 0x4f0c <.L57>
    504c:	f5 cf       	rjmp	.-22     	; 0x5038 <.L131>

0000504e <.L62>:
    504e:	b6 01       	movw	r22, r12
    5050:	80 e2       	ldi	r24, 0x20	; 32
    5052:	90 e0       	ldi	r25, 0x00	; 0
    5054:	0e 94 71 28 	call	0x50e2	; 0x50e2 <fputc>
    5058:	83 94       	inc	r8

0000505a <.L60>:
    505a:	86 14       	cp	r8, r6
    505c:	c0 f3       	brcs	.-16     	; 0x504e <.L62>
    505e:	60 cf       	rjmp	.-320    	; 0x4f20 <.L78>

00005060 <.L90>:
    5060:	8b 2c       	mov	r8, r11
    5062:	fb cf       	rjmp	.-10     	; 0x505a <.L60>

00005064 <.L92>:
    5064:	61 2c       	mov	r6, r1
    5066:	66 cf       	rjmp	.-308    	; 0x4f34 <.L65>

00005068 <.L66>:
    5068:	87 2d       	mov	r24, r7
    506a:	86 78       	andi	r24, 0x86	; 134
    506c:	88 23       	and	r24, r24
    506e:	09 f4       	brne	.+2      	; 0x5072 <L0^A+0x2>

00005070 <L0^A>:
    5070:	73 cf       	rjmp	.-282    	; 0x4f58 <.L73>
    5072:	8b e2       	ldi	r24, 0x2B	; 43
    5074:	71 fe       	sbrs	r7, 1
    5076:	80 e2       	ldi	r24, 0x20	; 32
    5078:	77 fc       	sbrc	r7, 7
    507a:	8d e2       	ldi	r24, 0x2D	; 45
    507c:	b6 01       	movw	r22, r12
    507e:	90 e0       	ldi	r25, 0x00	; 0
    5080:	69 cf       	rjmp	.-302    	; 0x4f54 <.L132>

00005082 <.L74>:
    5082:	b6 01       	movw	r22, r12
    5084:	80 e3       	ldi	r24, 0x30	; 48
    5086:	90 e0       	ldi	r25, 0x00	; 0
    5088:	0e 94 71 28 	call	0x50e2	; 0x50e2 <fputc>
    508c:	9a 94       	dec	r9
    508e:	64 cf       	rjmp	.-312    	; 0x4f58 <.L73>

00005090 <.L79>:
    5090:	8f ef       	ldi	r24, 0xFF	; 255
    5092:	9f ef       	ldi	r25, 0xFF	; 255
    5094:	83 ce       	rjmp	.-762    	; 0x4d9c <.L1>

00005096 <strnlen_P>:
    5096:	fc 01       	movw	r30, r24

00005098 <.L_strnlen_P_loop>:
    5098:	05 90       	lpm	r0, Z+
    509a:	61 50       	subi	r22, 0x01	; 1
    509c:	70 40       	sbci	r23, 0x00	; 0
    509e:	01 10       	cpse	r0, r1
    50a0:	d8 f7       	brcc	.-10     	; 0x5098 <.L_strnlen_P_loop>
    50a2:	80 95       	com	r24
    50a4:	90 95       	com	r25
    50a6:	8e 0f       	add	r24, r30
    50a8:	9f 1f       	adc	r25, r31
    50aa:	08 95       	ret

000050ac <strnlen>:
    50ac:	fc 01       	movw	r30, r24

000050ae <.L_strnlen_loop>:
    50ae:	61 50       	subi	r22, 0x01	; 1
    50b0:	70 40       	sbci	r23, 0x00	; 0
    50b2:	01 90       	ld	r0, Z+
    50b4:	01 10       	cpse	r0, r1
    50b6:	d8 f7       	brcc	.-10     	; 0x50ae <.L_strnlen_loop>
    50b8:	80 95       	com	r24
    50ba:	90 95       	com	r25
    50bc:	8e 0f       	add	r24, r30
    50be:	9f 1f       	adc	r25, r31
    50c0:	08 95       	ret

000050c2 <strrev>:
    50c2:	dc 01       	movw	r26, r24
    50c4:	fc 01       	movw	r30, r24

000050c6 <.L1^B1>:
    50c6:	67 2f       	mov	r22, r23
    50c8:	71 91       	ld	r23, Z+
    50ca:	77 23       	and	r23, r23
    50cc:	e1 f7       	brne	.-8      	; 0x50c6 <.L1^B1>
    50ce:	32 97       	sbiw	r30, 0x02	; 2
    50d0:	04 c0       	rjmp	.+8      	; 0x50da <.L3^B1>

000050d2 <.L2^B1>:
    50d2:	7c 91       	ld	r23, X
    50d4:	6d 93       	st	X+, r22
    50d6:	70 83       	st	Z, r23
    50d8:	62 91       	ld	r22, -Z

000050da <.L3^B1>:
    50da:	ae 17       	cp	r26, r30
    50dc:	bf 07       	cpc	r27, r31
    50de:	c8 f3       	brcs	.-14     	; 0x50d2 <.L2^B1>
    50e0:	08 95       	ret

000050e2 <fputc>:
    50e2:	0f 93       	push	r16
    50e4:	1f 93       	push	r17
    50e6:	cf 93       	push	r28
    50e8:	df 93       	push	r29
    50ea:	18 2f       	mov	r17, r24
    50ec:	09 2f       	mov	r16, r25
    50ee:	eb 01       	movw	r28, r22
    50f0:	8b 81       	ldd	r24, Y+3	; 0x03
    50f2:	81 fd       	sbrc	r24, 1
    50f4:	09 c0       	rjmp	.+18     	; 0x5108 <.L2>

000050f6 <.L7>:
    50f6:	1f ef       	ldi	r17, 0xFF	; 255
    50f8:	0f ef       	ldi	r16, 0xFF	; 255

000050fa <.L3>:
    50fa:	81 2f       	mov	r24, r17
    50fc:	90 2f       	mov	r25, r16
    50fe:	df 91       	pop	r29
    5100:	cf 91       	pop	r28
    5102:	1f 91       	pop	r17
    5104:	0f 91       	pop	r16
    5106:	08 95       	ret

00005108 <.L2>:
    5108:	82 ff       	sbrs	r24, 2
    510a:	14 c0       	rjmp	.+40     	; 0x5134 <.L4>
    510c:	2e 81       	ldd	r18, Y+6	; 0x06
    510e:	3f 81       	ldd	r19, Y+7	; 0x07
    5110:	8c 81       	ldd	r24, Y+4	; 0x04
    5112:	9d 81       	ldd	r25, Y+5	; 0x05
    5114:	28 17       	cp	r18, r24
    5116:	39 07       	cpc	r19, r25
    5118:	3c f4       	brge	.+14     	; 0x5128 <.L8>
    511a:	e8 81       	ld	r30, Y
    511c:	f9 81       	ldd	r31, Y+1	; 0x01
    511e:	cf 01       	movw	r24, r30
    5120:	01 96       	adiw	r24, 0x01	; 1
    5122:	99 83       	std	Y+1, r25	; 0x01
    5124:	88 83       	st	Y, r24
    5126:	10 83       	st	Z, r17

00005128 <.L8>:
    5128:	8e 81       	ldd	r24, Y+6	; 0x06
    512a:	9f 81       	ldd	r25, Y+7	; 0x07
    512c:	01 96       	adiw	r24, 0x01	; 1
    512e:	9f 83       	std	Y+7, r25	; 0x07
    5130:	8e 83       	std	Y+6, r24	; 0x06
    5132:	e3 cf       	rjmp	.-58     	; 0x50fa <.L3>

00005134 <.L4>:
    5134:	e8 85       	ldd	r30, Y+8	; 0x08
    5136:	f9 85       	ldd	r31, Y+9	; 0x09
    5138:	81 2f       	mov	r24, r17
    513a:	19 95       	eicall
    513c:	89 2b       	or	r24, r25
    513e:	a1 f3       	breq	.-24     	; 0x5128 <.L8>
    5140:	da cf       	rjmp	.-76     	; 0x50f6 <.L7>

00005142 <__ultoa_invert>:
    5142:	fa 01       	movw	r30, r20
    5144:	aa 27       	eor	r26, r26
    5146:	28 30       	cpi	r18, 0x08	; 8
    5148:	51 f1       	breq	.+84     	; 0x519e <.L_oct>
    514a:	20 31       	cpi	r18, 0x10	; 16
    514c:	81 f1       	breq	.+96     	; 0x51ae <.L_hex>
    514e:	e8 94       	clt

00005150 <.L_dec_loop>:
    5150:	6f 93       	push	r22
    5152:	6e 7f       	andi	r22, 0xFE	; 254
    5154:	6e 5f       	subi	r22, 0xFE	; 254
    5156:	7f 4f       	sbci	r23, 0xFF	; 255
    5158:	8f 4f       	sbci	r24, 0xFF	; 255
    515a:	9f 4f       	sbci	r25, 0xFF	; 255
    515c:	af 4f       	sbci	r26, 0xFF	; 255
    515e:	b1 e0       	ldi	r27, 0x01	; 1
    5160:	3e d0       	rcall	.+124    	; 0x51de <.L_div_add>
    5162:	b4 e0       	ldi	r27, 0x04	; 4
    5164:	3c d0       	rcall	.+120    	; 0x51de <.L_div_add>
    5166:	67 0f       	add	r22, r23
    5168:	78 1f       	adc	r23, r24
    516a:	89 1f       	adc	r24, r25
    516c:	9a 1f       	adc	r25, r26
    516e:	a1 1d       	adc	r26, r1
    5170:	68 0f       	add	r22, r24
    5172:	79 1f       	adc	r23, r25
    5174:	8a 1f       	adc	r24, r26
    5176:	91 1d       	adc	r25, r1
    5178:	a1 1d       	adc	r26, r1
    517a:	6a 0f       	add	r22, r26
    517c:	71 1d       	adc	r23, r1
    517e:	81 1d       	adc	r24, r1
    5180:	91 1d       	adc	r25, r1
    5182:	a1 1d       	adc	r26, r1
    5184:	20 d0       	rcall	.+64     	; 0x51c6 <.L_lsr_4>
    5186:	09 f4       	brne	.+2      	; 0x518a <.L1^B1>
    5188:	68 94       	set

0000518a <.L1^B1>:
    518a:	3f 91       	pop	r19
    518c:	2a e0       	ldi	r18, 0x0A	; 10
    518e:	26 9f       	mul	r18, r22
    5190:	11 24       	eor	r1, r1
    5192:	30 19       	sub	r19, r0
    5194:	30 5d       	subi	r19, 0xD0	; 208
    5196:	31 93       	st	Z+, r19
    5198:	de f6       	brtc	.-74     	; 0x5150 <.L_dec_loop>

0000519a <.L_eos>:
    519a:	cf 01       	movw	r24, r30
    519c:	08 95       	ret

0000519e <.L_oct>:
    519e:	46 2f       	mov	r20, r22
    51a0:	47 70       	andi	r20, 0x07	; 7
    51a2:	40 5d       	subi	r20, 0xD0	; 208
    51a4:	41 93       	st	Z+, r20
    51a6:	b3 e0       	ldi	r27, 0x03	; 3
    51a8:	0f d0       	rcall	.+30     	; 0x51c8 <.L_lsr>
    51aa:	c9 f7       	brne	.-14     	; 0x519e <.L_oct>
    51ac:	f6 cf       	rjmp	.-20     	; 0x519a <.L_eos>

000051ae <.L_hex>:
    51ae:	46 2f       	mov	r20, r22
    51b0:	4f 70       	andi	r20, 0x0F	; 15
    51b2:	40 5d       	subi	r20, 0xD0	; 208
    51b4:	4a 33       	cpi	r20, 0x3A	; 58
    51b6:	18 f0       	brcs	.+6      	; 0x51be <.L3^B1>
    51b8:	49 5d       	subi	r20, 0xD9	; 217
    51ba:	31 fd       	sbrc	r19, 1
    51bc:	40 52       	subi	r20, 0x20	; 32

000051be <.L3^B1>:
    51be:	41 93       	st	Z+, r20
    51c0:	02 d0       	rcall	.+4      	; 0x51c6 <.L_lsr_4>
    51c2:	a9 f7       	brne	.-22     	; 0x51ae <.L_hex>
    51c4:	ea cf       	rjmp	.-44     	; 0x519a <.L_eos>

000051c6 <.L_lsr_4>:
    51c6:	b4 e0       	ldi	r27, 0x04	; 4

000051c8 <.L_lsr>:
    51c8:	a6 95       	lsr	r26
    51ca:	97 95       	ror	r25
    51cc:	87 95       	ror	r24
    51ce:	77 95       	ror	r23
    51d0:	67 95       	ror	r22
    51d2:	ba 95       	dec	r27
    51d4:	c9 f7       	brne	.-14     	; 0x51c8 <.L_lsr>
    51d6:	00 97       	sbiw	r24, 0x00	; 0
    51d8:	61 05       	cpc	r22, r1
    51da:	71 05       	cpc	r23, r1
    51dc:	08 95       	ret

000051de <.L_div_add>:
    51de:	9b 01       	movw	r18, r22
    51e0:	ac 01       	movw	r20, r24
    51e2:	0a 2e       	mov	r0, r26

000051e4 <.L7^B1>:
    51e4:	06 94       	lsr	r0
    51e6:	57 95       	ror	r21
    51e8:	47 95       	ror	r20
    51ea:	37 95       	ror	r19
    51ec:	27 95       	ror	r18
    51ee:	ba 95       	dec	r27
    51f0:	c9 f7       	brne	.-14     	; 0x51e4 <.L7^B1>
    51f2:	62 0f       	add	r22, r18
    51f4:	73 1f       	adc	r23, r19
    51f6:	84 1f       	adc	r24, r20
    51f8:	95 1f       	adc	r25, r21
    51fa:	a0 1d       	adc	r26, r0
    51fc:	08 95       	ret

000051fe <_exit>:
    51fe:	f8 94       	cli

00005200 <__stop_program>:
    5200:	ff cf       	rjmp	.-2      	; 0x5200 <__stop_program>

00005202 <L0^A>:
    5202:	d5 1f       	adc	r29, r21
    5204:	0c 21       	and	r16, r12
    5206:	3c 21       	and	r19, r12
    5208:	6c 21       	and	r22, r12
    520a:	87 1f       	adc	r24, r23
    520c:	d3 20       	and	r13, r3
    520e:	91 21       	and	r25, r1
    5210:	b2 20       	and	r11, r2
