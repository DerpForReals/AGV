
bin\Debug\stmmooier.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800200  00004890  00004944  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004890  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800232  00800232  00004976  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00004976  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00004979  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000498c  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000000d8  00000000  00000000  000049d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   0000215d  00000000  00000000  00004aa8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00001130  00000000  00000000  00006c05  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   0000233b  00000000  00000000  00007d35  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000564  00000000  00000000  0000a070  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    000008b4  00000000  00000000  0000a5d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 000001b2  00000000  00000000  0000ae88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 80 00 	jmp	0x100	; 0x100 <__ctors_end>
       4:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
       8:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
       c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      10:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      14:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      18:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      1c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      20:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      24:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      28:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      2c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      30:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      34:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      38:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      3c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      40:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      44:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      48:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      4c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      50:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      54:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      58:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      5c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      60:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      64:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      68:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      6c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      70:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      74:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      78:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      7c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      80:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      84:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      88:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      8c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      90:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      94:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      98:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      9c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      a0:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      a4:	0c 94 e0 1a 	jmp	0x35c0	; 0x35c0 <__vector_41>
      a8:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      ac:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      b0:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      b4:	0c 94 55 1b 	jmp	0x36aa	; 0x36aa <__vector_45>
      b8:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      bc:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      c0:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      c4:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      c8:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      cc:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      d0:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      d4:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      d8:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      dc:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>
      e0:	0c 94 a1 00 	jmp	0x142	; 0x142 <__bad_interrupt>

000000e4 <__trampolines_start>:
      e4:	0c 94 df 1b 	jmp	0x37be	; 0x37be <.L122>
      e8:	0c 94 f3 1c 	jmp	0x39e6	; 0x39e6 <.L115>
      ec:	0c 94 c3 1c 	jmp	0x3986	; 0x3986 <.L121>
      f0:	0c 94 d5 1c 	jmp	0x39aa	; 0x39aa <.L120>
      f4:	0c 94 c6 1b 	jmp	0x378c	; 0x378c <.L118>
      f8:	0c 94 ee 1c 	jmp	0x39dc	; 0x39dc <.L119>
      fc:	0c 94 75 1c 	jmp	0x38ea	; 0x38ea <.L117>

00000100 <__ctors_end>:
     100:	11 24       	eor	r1, r1
     102:	1f be       	out	0x3f, r1	; 63
     104:	cf ef       	ldi	r28, 0xFF	; 255
     106:	d1 e2       	ldi	r29, 0x21	; 33
     108:	de bf       	out	0x3e, r29	; 62
     10a:	cd bf       	out	0x3d, r28	; 61
     10c:	00 e0       	ldi	r16, 0x00	; 0
     10e:	0c bf       	out	0x3c, r16	; 60

00000110 <__do_copy_data>:
     110:	12 e0       	ldi	r17, 0x02	; 2

00000112 <.Loc.1>:
     112:	a0 e0       	ldi	r26, 0x00	; 0

00000114 <.Loc.2>:
     114:	b2 e0       	ldi	r27, 0x02	; 2

00000116 <.Loc.3>:
     116:	e0 e9       	ldi	r30, 0x90	; 144

00000118 <.Loc.4>:
     118:	f8 e4       	ldi	r31, 0x48	; 72

0000011a <.Loc.5>:
     11a:	00 e0       	ldi	r16, 0x00	; 0

0000011c <.Loc.6>:
     11c:	0b bf       	out	0x3b, r16	; 59

0000011e <.Loc.7>:
     11e:	02 c0       	rjmp	.+4      	; 0x124 <.L__do_copy_data_start>

00000120 <.L__do_copy_data_loop>:
     120:	07 90       	elpm	r0, Z+

00000122 <.Loc.9>:
     122:	0d 92       	st	X+, r0

00000124 <.L__do_copy_data_start>:
     124:	a2 33       	cpi	r26, 0x32	; 50

00000126 <.Loc.11>:
     126:	b1 07       	cpc	r27, r17

00000128 <.Loc.12>:
     128:	d9 f7       	brne	.-10     	; 0x120 <.L__do_copy_data_loop>

0000012a <__do_clear_bss>:
     12a:	22 e0       	ldi	r18, 0x02	; 2

0000012c <.Loc.1>:
     12c:	a2 e3       	ldi	r26, 0x32	; 50

0000012e <.Loc.2>:
     12e:	b2 e0       	ldi	r27, 0x02	; 2

00000130 <.Loc.3>:
     130:	01 c0       	rjmp	.+2      	; 0x134 <.Loc.5>

00000132 <.Loc.4>:
     132:	1d 92       	st	X+, r1

00000134 <.Loc.5>:
     134:	a6 34       	cpi	r26, 0x46	; 70

00000136 <.Loc.6>:
     136:	b2 07       	cpc	r27, r18

00000138 <.Loc.7>:
     138:	e1 f7       	brne	.-8      	; 0x132 <.Loc.4>

0000013a <L0^A>:
     13a:	0e 94 a2 1b 	call	0x3744	; 0x3744 <main>
     13e:	0c 94 3f 24 	jmp	0x487e	; 0x487e <_exit>

00000142 <__bad_interrupt>:
     142:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000146 <initLCD>:
Outputs:	none
Description:Configures the Data / command
			ports and initializes the LCD
******************************************************************** */
void initLCD(void)
{
     146:	cf 93       	push	r28
     148:	df 93       	push	r29
     14a:	cd b7       	in	r28, 0x3d	; 61
     14c:	de b7       	in	r29, 0x3e	; 62
     14e:	a2 97       	sbiw	r28, 0x22	; 34
     150:	0f b6       	in	r0, 0x3f	; 63
     152:	f8 94       	cli
     154:	de bf       	out	0x3e, r29	; 62
     156:	0f be       	out	0x3f, r0	; 63
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <.Loc.1>:
	/* Configure the data ports and pins */
	configLCDPorts();
     15a:	0e 94 4a 01 	call	0x294	; 0x294 <configLCDPorts>

0000015e <.Loc.2>:

	/* Initialize the LCD controller as determined by instructions */
	lcd_init_4f();
     15e:	0e 94 6d 01 	call	0x2da	; 0x2da <lcd_init_4f>
     162:	80 e0       	ldi	r24, 0x00	; 0
     164:	90 e0       	ldi	r25, 0x00	; 0
     166:	a8 ec       	ldi	r26, 0xC8	; 200
     168:	b2 e4       	ldi	r27, 0x42	; 66
     16a:	89 83       	std	Y+1, r24	; 0x01
     16c:	9a 83       	std	Y+2, r25	; 0x02
     16e:	ab 83       	std	Y+3, r26	; 0x03
     170:	bc 83       	std	Y+4, r27	; 0x04

00000172 <.LBB147>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     172:	20 e0       	ldi	r18, 0x00	; 0
     174:	30 e0       	ldi	r19, 0x00	; 0
     176:	4a e7       	ldi	r20, 0x7A	; 122
     178:	55 e4       	ldi	r21, 0x45	; 69
     17a:	69 81       	ldd	r22, Y+1	; 0x01
     17c:	7a 81       	ldd	r23, Y+2	; 0x02
     17e:	8b 81       	ldd	r24, Y+3	; 0x03
     180:	9c 81       	ldd	r25, Y+4	; 0x04
     182:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
     186:	6b 8b       	std	Y+19, r22	; 0x13
     188:	7c 8b       	std	Y+20, r23	; 0x14
     18a:	8d 8b       	std	Y+21, r24	; 0x15
     18c:	9e 8b       	std	Y+22, r25	; 0x16
     18e:	8b 89       	ldd	r24, Y+19	; 0x13
     190:	9c 89       	ldd	r25, Y+20	; 0x14
     192:	ad 89       	ldd	r26, Y+21	; 0x15
     194:	be 89       	ldd	r27, Y+22	; 0x16
     196:	8d 83       	std	Y+5, r24	; 0x05
     198:	9e 83       	std	Y+6, r25	; 0x06
     19a:	af 83       	std	Y+7, r26	; 0x07
     19c:	b8 87       	std	Y+8, r27	; 0x08

0000019e <.Loc.4>:
	if (__tmp < 1.0)
     19e:	20 e0       	ldi	r18, 0x00	; 0
     1a0:	30 e0       	ldi	r19, 0x00	; 0
     1a2:	40 e8       	ldi	r20, 0x80	; 128
     1a4:	5f e3       	ldi	r21, 0x3F	; 63
     1a6:	6d 81       	ldd	r22, Y+5	; 0x05
     1a8:	7e 81       	ldd	r23, Y+6	; 0x06
     1aa:	8f 81       	ldd	r24, Y+7	; 0x07
     1ac:	98 85       	ldd	r25, Y+8	; 0x08
     1ae:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
     1b2:	88 23       	and	r24, r24
     1b4:	2c f4       	brge	.+10     	; 0x1c0 <.L12>

000001b6 <.Loc.5>:
		__ticks = 1;
     1b6:	81 e0       	ldi	r24, 0x01	; 1
     1b8:	90 e0       	ldi	r25, 0x00	; 0
     1ba:	9a 87       	std	Y+10, r25	; 0x0a
     1bc:	89 87       	std	Y+9, r24	; 0x09
     1be:	55 c0       	rjmp	.+170    	; 0x26a <.L4>

000001c0 <.L12>:
	else if (__tmp > 65535)
     1c0:	20 e0       	ldi	r18, 0x00	; 0
     1c2:	3f ef       	ldi	r19, 0xFF	; 255
     1c4:	4f e7       	ldi	r20, 0x7F	; 127
     1c6:	57 e4       	ldi	r21, 0x47	; 71
     1c8:	6d 81       	ldd	r22, Y+5	; 0x05
     1ca:	7e 81       	ldd	r23, Y+6	; 0x06
     1cc:	8f 81       	ldd	r24, Y+7	; 0x07
     1ce:	98 85       	ldd	r25, Y+8	; 0x08
     1d0:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
     1d4:	88 23       	and	r24, r24
     1d6:	d9 f1       	breq	.+118    	; 0x24e <.L13>
     1d8:	d4 f1       	brlt	.+116    	; 0x24e <.L13>

000001da <.Loc.7>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1da:	20 e0       	ldi	r18, 0x00	; 0
     1dc:	30 e0       	ldi	r19, 0x00	; 0
     1de:	40 e2       	ldi	r20, 0x20	; 32
     1e0:	51 e4       	ldi	r21, 0x41	; 65
     1e2:	69 81       	ldd	r22, Y+1	; 0x01
     1e4:	7a 81       	ldd	r23, Y+2	; 0x02
     1e6:	8b 81       	ldd	r24, Y+3	; 0x03
     1e8:	9c 81       	ldd	r25, Y+4	; 0x04
     1ea:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
     1ee:	6f 8b       	std	Y+23, r22	; 0x17
     1f0:	78 8f       	std	Y+24, r23	; 0x18
     1f2:	89 8f       	std	Y+25, r24	; 0x19
     1f4:	9a 8f       	std	Y+26, r25	; 0x1a
     1f6:	8f 89       	ldd	r24, Y+23	; 0x17
     1f8:	98 8d       	ldd	r25, Y+24	; 0x18
     1fa:	a9 8d       	ldd	r26, Y+25	; 0x19
     1fc:	ba 8d       	ldd	r27, Y+26	; 0x1a
     1fe:	8f 87       	std	Y+15, r24	; 0x0f
     200:	98 8b       	std	Y+16, r25	; 0x10
     202:	a9 8b       	std	Y+17, r26	; 0x11
     204:	ba 8b       	std	Y+18, r27	; 0x12

00000206 <.Loc.8>:
     206:	6f 85       	ldd	r22, Y+15	; 0x0f
     208:	78 89       	ldd	r23, Y+16	; 0x10
     20a:	89 89       	ldd	r24, Y+17	; 0x11
     20c:	9a 89       	ldd	r25, Y+18	; 0x12
     20e:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
     212:	6b 8f       	std	Y+27, r22	; 0x1b
     214:	7c 8f       	std	Y+28, r23	; 0x1c
     216:	8d 8f       	std	Y+29, r24	; 0x1d
     218:	9e 8f       	std	Y+30, r25	; 0x1e
     21a:	ab 8d       	ldd	r26, Y+27	; 0x1b
     21c:	bc 8d       	ldd	r27, Y+28	; 0x1c
     21e:	ba 87       	std	Y+10, r27	; 0x0a
     220:	a9 87       	std	Y+9, r26	; 0x09

00000222 <.Loc.9>:
		while(__ticks)
     222:	10 c0       	rjmp	.+32     	; 0x244 <.L7>

00000224 <.L8>:
     224:	80 e9       	ldi	r24, 0x90	; 144
     226:	91 e0       	ldi	r25, 0x01	; 1
     228:	9c 87       	std	Y+12, r25	; 0x0c
     22a:	8b 87       	std	Y+11, r24	; 0x0b

0000022c <.LBB149>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     22c:	8b 85       	ldd	r24, Y+11	; 0x0b
     22e:	9c 85       	ldd	r25, Y+12	; 0x0c

00000230 <.L1^B1>:
     230:	01 97       	sbiw	r24, 0x01	; 1
     232:	f1 f7       	brne	.-4      	; 0x230 <.L1^B1>
     234:	9c 87       	std	Y+12, r25	; 0x0c
     236:	8b 87       	std	Y+11, r24	; 0x0b

00000238 <.Loc.11>:
	...

0000023a <.LBE149>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     23a:	89 85       	ldd	r24, Y+9	; 0x09
     23c:	9a 85       	ldd	r25, Y+10	; 0x0a
     23e:	01 97       	sbiw	r24, 0x01	; 1
     240:	9a 87       	std	Y+10, r25	; 0x0a
     242:	89 87       	std	Y+9, r24	; 0x09

00000244 <.L7>:
		while(__ticks)
     244:	89 85       	ldd	r24, Y+9	; 0x09
     246:	9a 85       	ldd	r25, Y+10	; 0x0a
     248:	00 97       	sbiw	r24, 0x00	; 0
     24a:	61 f7       	brne	.-40     	; 0x224 <.L8>

0000024c <.Loc.14>:
		}
		return;
     24c:	19 c0       	rjmp	.+50     	; 0x280 <.L9>

0000024e <.L13>:
	}
	else
		__ticks = (uint16_t)__tmp;
     24e:	6d 81       	ldd	r22, Y+5	; 0x05
     250:	7e 81       	ldd	r23, Y+6	; 0x06
     252:	8f 81       	ldd	r24, Y+7	; 0x07
     254:	98 85       	ldd	r25, Y+8	; 0x08
     256:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
     25a:	6f 8f       	std	Y+31, r22	; 0x1f
     25c:	78 a3       	std	Y+32, r23	; 0x20
     25e:	89 a3       	std	Y+33, r24	; 0x21
     260:	9a a3       	std	Y+34, r25	; 0x22
     262:	8f 8d       	ldd	r24, Y+31	; 0x1f
     264:	98 a1       	ldd	r25, Y+32	; 0x20
     266:	9a 87       	std	Y+10, r25	; 0x0a
     268:	89 87       	std	Y+9, r24	; 0x09

0000026a <.L4>:
     26a:	89 85       	ldd	r24, Y+9	; 0x09
     26c:	9a 85       	ldd	r25, Y+10	; 0x0a
     26e:	9e 87       	std	Y+14, r25	; 0x0e
     270:	8d 87       	std	Y+13, r24	; 0x0d

00000272 <.LBB151>:
     272:	8d 85       	ldd	r24, Y+13	; 0x0d
     274:	9e 85       	ldd	r25, Y+14	; 0x0e

00000276 <.L1^B2>:
     276:	01 97       	sbiw	r24, 0x01	; 1
     278:	f1 f7       	brne	.-4      	; 0x276 <.L1^B2>
     27a:	9e 87       	std	Y+14, r25	; 0x0e
     27c:	8d 87       	std	Y+13, r24	; 0x0d

0000027e <.Loc.17>:
	...

00000280 <.L9>:

	_delay_ms(100);
}
     280:	00 00       	nop
     282:	a2 96       	adiw	r28, 0x22	; 34
     284:	0f b6       	in	r0, 0x3f	; 63
     286:	f8 94       	cli
     288:	de bf       	out	0x3e, r29	; 62
     28a:	0f be       	out	0x3f, r0	; 63
     28c:	cd bf       	out	0x3d, r28	; 61
     28e:	df 91       	pop	r29
     290:	cf 91       	pop	r28
     292:	08 95       	ret

00000294 <configLCDPorts>:
Inputs:		none
Outputs:	none
Description:maps the data and control pins to the uC i/o ports
******************************************************************** */
void configLCDPorts(void)
{
     294:	cf 93       	push	r28
     296:	df 93       	push	r29
     298:	cd b7       	in	r28, 0x3d	; 61
     29a:	de b7       	in	r29, 0x3e	; 62

0000029c <.Loc.20>:
	/* configure the microprocessor pins for the data lines */
	lcd_Data_DDR |= (1<<lcd_D7_bit) | (1<<lcd_D6_bit) | (1<<lcd_D5_bit) | (1<<lcd_D4_bit);
     29c:	87 e2       	ldi	r24, 0x27	; 39
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	fc 01       	movw	r30, r24
     2a2:	20 81       	ld	r18, Z
     2a4:	87 e2       	ldi	r24, 0x27	; 39
     2a6:	90 e0       	ldi	r25, 0x00	; 0

000002a8 <.Loc.21>:
     2a8:	20 6f       	ori	r18, 0xF0	; 240
     2aa:	fc 01       	movw	r30, r24
     2ac:	20 83       	st	Z, r18

000002ae <.Loc.22>:

	/* configure the microprocessor pins for the control lines */
	lcd_Ctlr_DDR |= (1<<lcd_RW_bit) | (1<<lcd_RS_bit) | (1<<lcd_E_bit);
     2ae:	87 e2       	ldi	r24, 0x27	; 39
     2b0:	90 e0       	ldi	r25, 0x00	; 0
     2b2:	fc 01       	movw	r30, r24
     2b4:	20 81       	ld	r18, Z
     2b6:	87 e2       	ldi	r24, 0x27	; 39
     2b8:	90 e0       	ldi	r25, 0x00	; 0

000002ba <.Loc.23>:
     2ba:	2e 60       	ori	r18, 0x0E	; 14
     2bc:	fc 01       	movw	r30, r24
     2be:	20 83       	st	Z, r18

000002c0 <.Loc.24>:

	/* Turn on LCD */
	DDRB |= (1<<lcd_ONOFF_bit);
     2c0:	84 e2       	ldi	r24, 0x24	; 36
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	fc 01       	movw	r30, r24
     2c6:	20 81       	ld	r18, Z
     2c8:	84 e2       	ldi	r24, 0x24	; 36
     2ca:	90 e0       	ldi	r25, 0x00	; 0

000002cc <.Loc.25>:
     2cc:	21 60       	ori	r18, 0x01	; 1
     2ce:	fc 01       	movw	r30, r24
     2d0:	20 83       	st	Z, r18

000002d2 <.Loc.26>:
}
     2d2:	00 00       	nop
     2d4:	df 91       	pop	r29
     2d6:	cf 91       	pop	r28
     2d8:	08 95       	ret

000002da <lcd_init_4f>:
Outputs:	none
Description:initializes the LCD for 4-bit data interface; uses the
			busy flag instead of time delay when possible
******************************************************************** */
void lcd_init_4f(void)
{
     2da:	0f 93       	push	r16
     2dc:	1f 93       	push	r17
     2de:	cf 93       	push	r28
     2e0:	df 93       	push	r29
     2e2:	cd b7       	in	r28, 0x3d	; 61
     2e4:	de b7       	in	r29, 0x3e	; 62
     2e6:	ca 5f       	subi	r28, 0xFA	; 250
     2e8:	d1 09       	sbc	r29, r1
     2ea:	0f b6       	in	r0, 0x3f	; 63
     2ec:	f8 94       	cli
     2ee:	de bf       	out	0x3e, r29	; 62
     2f0:	0f be       	out	0x3f, r0	; 63
     2f2:	cd bf       	out	0x3d, r28	; 61
     2f4:	9e 01       	movw	r18, r28
     2f6:	2f 59       	subi	r18, 0x9F	; 159
     2f8:	3f 4f       	sbci	r19, 0xFF	; 255
     2fa:	80 e0       	ldi	r24, 0x00	; 0
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	a8 e4       	ldi	r26, 0x48	; 72
     300:	b2 e4       	ldi	r27, 0x42	; 66
     302:	f9 01       	movw	r30, r18
     304:	80 83       	st	Z, r24
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	a2 83       	std	Z+2, r26	; 0x02
     30a:	b3 83       	std	Z+3, r27	; 0x03

0000030c <.LBB153>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     30c:	8e 01       	movw	r16, r28
     30e:	0b 59       	subi	r16, 0x9B	; 155
     310:	1f 4f       	sbci	r17, 0xFF	; 255
     312:	ce 01       	movw	r24, r28
     314:	8f 59       	subi	r24, 0x9F	; 159
     316:	9f 4f       	sbci	r25, 0xFF	; 255
     318:	20 e0       	ldi	r18, 0x00	; 0
     31a:	30 e0       	ldi	r19, 0x00	; 0
     31c:	4a e7       	ldi	r20, 0x7A	; 122
     31e:	55 e4       	ldi	r21, 0x45	; 69
     320:	dc 01       	movw	r26, r24
     322:	6d 91       	ld	r22, X+
     324:	7d 91       	ld	r23, X+
     326:	8d 91       	ld	r24, X+
     328:	9c 91       	ld	r25, X
     32a:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
     32e:	c1 58       	subi	r28, 0x81	; 129
     330:	df 4f       	sbci	r29, 0xFF	; 255
     332:	68 83       	st	Y, r22
     334:	79 83       	std	Y+1, r23	; 0x01
     336:	8a 83       	std	Y+2, r24	; 0x02
     338:	9b 83       	std	Y+3, r25	; 0x03
     33a:	cf 57       	subi	r28, 0x7F	; 127
     33c:	d0 40       	sbci	r29, 0x00	; 0
     33e:	c1 58       	subi	r28, 0x81	; 129
     340:	df 4f       	sbci	r29, 0xFF	; 255
     342:	88 81       	ld	r24, Y
     344:	99 81       	ldd	r25, Y+1	; 0x01
     346:	aa 81       	ldd	r26, Y+2	; 0x02
     348:	bb 81       	ldd	r27, Y+3	; 0x03
     34a:	cf 57       	subi	r28, 0x7F	; 127
     34c:	d0 40       	sbci	r29, 0x00	; 0
     34e:	f8 01       	movw	r30, r16
     350:	80 83       	st	Z, r24
     352:	91 83       	std	Z+1, r25	; 0x01
     354:	a2 83       	std	Z+2, r26	; 0x02
     356:	b3 83       	std	Z+3, r27	; 0x03

00000358 <.Loc.29>:
	if (__tmp < 1.0)
     358:	ce 01       	movw	r24, r28
     35a:	8b 59       	subi	r24, 0x9B	; 155
     35c:	9f 4f       	sbci	r25, 0xFF	; 255
     35e:	20 e0       	ldi	r18, 0x00	; 0
     360:	30 e0       	ldi	r19, 0x00	; 0
     362:	40 e8       	ldi	r20, 0x80	; 128
     364:	5f e3       	ldi	r21, 0x3F	; 63
     366:	dc 01       	movw	r26, r24
     368:	6d 91       	ld	r22, X+
     36a:	7d 91       	ld	r23, X+
     36c:	8d 91       	ld	r24, X+
     36e:	9c 91       	ld	r25, X
     370:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
     374:	88 23       	and	r24, r24
     376:	4c f4       	brge	.+18     	; 0x38a <.L89>

00000378 <.Loc.30>:
		__ticks = 1;
     378:	ce 01       	movw	r24, r28
     37a:	87 59       	subi	r24, 0x97	; 151
     37c:	9f 4f       	sbci	r25, 0xFF	; 255
     37e:	21 e0       	ldi	r18, 0x01	; 1
     380:	30 e0       	ldi	r19, 0x00	; 0
     382:	fc 01       	movw	r30, r24
     384:	31 83       	std	Z+1, r19	; 0x01
     386:	20 83       	st	Z, r18
     388:	a1 c0       	rjmp	.+322    	; 0x4cc <.L18>

0000038a <.L89>:
	else if (__tmp > 65535)
     38a:	ce 01       	movw	r24, r28
     38c:	8b 59       	subi	r24, 0x9B	; 155
     38e:	9f 4f       	sbci	r25, 0xFF	; 255
     390:	20 e0       	ldi	r18, 0x00	; 0
     392:	3f ef       	ldi	r19, 0xFF	; 255
     394:	4f e7       	ldi	r20, 0x7F	; 127
     396:	57 e4       	ldi	r21, 0x47	; 71
     398:	dc 01       	movw	r26, r24
     39a:	6d 91       	ld	r22, X+
     39c:	7d 91       	ld	r23, X+
     39e:	8d 91       	ld	r24, X+
     3a0:	9c 91       	ld	r25, X
     3a2:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
     3a6:	88 23       	and	r24, r24
     3a8:	09 f0       	breq	.+2      	; 0x3ac <L0^A>

000003aa <L0^A>:
     3aa:	0c f4       	brge	.+2      	; 0x3ae <.Loc.32>

000003ac <L0^A>:
     3ac:	71 c0       	rjmp	.+226    	; 0x490 <.L90>

000003ae <.Loc.32>:
		__ticks = (uint16_t) (__ms * 10.0);
     3ae:	ce 01       	movw	r24, r28
     3b0:	8f 59       	subi	r24, 0x9F	; 159
     3b2:	9f 4f       	sbci	r25, 0xFF	; 255
     3b4:	20 e0       	ldi	r18, 0x00	; 0
     3b6:	30 e0       	ldi	r19, 0x00	; 0
     3b8:	40 e2       	ldi	r20, 0x20	; 32
     3ba:	51 e4       	ldi	r21, 0x41	; 65
     3bc:	fc 01       	movw	r30, r24
     3be:	60 81       	ld	r22, Z
     3c0:	71 81       	ldd	r23, Z+1	; 0x01
     3c2:	82 81       	ldd	r24, Z+2	; 0x02
     3c4:	93 81       	ldd	r25, Z+3	; 0x03
     3c6:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
     3ca:	cd 57       	subi	r28, 0x7D	; 125
     3cc:	df 4f       	sbci	r29, 0xFF	; 255
     3ce:	68 83       	st	Y, r22
     3d0:	79 83       	std	Y+1, r23	; 0x01
     3d2:	8a 83       	std	Y+2, r24	; 0x02
     3d4:	9b 83       	std	Y+3, r25	; 0x03
     3d6:	c3 58       	subi	r28, 0x83	; 131
     3d8:	d0 40       	sbci	r29, 0x00	; 0
     3da:	cd 57       	subi	r28, 0x7D	; 125
     3dc:	df 4f       	sbci	r29, 0xFF	; 255
     3de:	88 81       	ld	r24, Y
     3e0:	99 81       	ldd	r25, Y+1	; 0x01
     3e2:	aa 81       	ldd	r26, Y+2	; 0x02
     3e4:	bb 81       	ldd	r27, Y+3	; 0x03
     3e6:	c3 58       	subi	r28, 0x83	; 131
     3e8:	d0 40       	sbci	r29, 0x00	; 0
     3ea:	ef 96       	adiw	r28, 0x3f	; 63
     3ec:	8c af       	std	Y+60, r24	; 0x3c
     3ee:	9d af       	std	Y+61, r25	; 0x3d
     3f0:	ae af       	std	Y+62, r26	; 0x3e
     3f2:	bf af       	std	Y+63, r27	; 0x3f
     3f4:	ef 97       	sbiw	r28, 0x3f	; 63

000003f6 <.Loc.33>:
     3f6:	8e 01       	movw	r16, r28
     3f8:	07 59       	subi	r16, 0x97	; 151
     3fa:	1f 4f       	sbci	r17, 0xFF	; 255
     3fc:	ef 96       	adiw	r28, 0x3f	; 63
     3fe:	6c ad       	ldd	r22, Y+60	; 0x3c
     400:	7d ad       	ldd	r23, Y+61	; 0x3d
     402:	8e ad       	ldd	r24, Y+62	; 0x3e
     404:	9f ad       	ldd	r25, Y+63	; 0x3f
     406:	ef 97       	sbiw	r28, 0x3f	; 63
     408:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
     40c:	c9 57       	subi	r28, 0x79	; 121
     40e:	df 4f       	sbci	r29, 0xFF	; 255
     410:	68 83       	st	Y, r22
     412:	79 83       	std	Y+1, r23	; 0x01
     414:	8a 83       	std	Y+2, r24	; 0x02
     416:	9b 83       	std	Y+3, r25	; 0x03
     418:	c7 58       	subi	r28, 0x87	; 135
     41a:	d0 40       	sbci	r29, 0x00	; 0
     41c:	c9 57       	subi	r28, 0x79	; 121
     41e:	df 4f       	sbci	r29, 0xFF	; 255
     420:	e8 81       	ld	r30, Y
     422:	f9 81       	ldd	r31, Y+1	; 0x01
     424:	c7 58       	subi	r28, 0x87	; 135
     426:	d0 40       	sbci	r29, 0x00	; 0
     428:	d8 01       	movw	r26, r16
     42a:	11 96       	adiw	r26, 0x01	; 1
     42c:	fc 93       	st	X, r31
     42e:	ee 93       	st	-X, r30

00000430 <.Loc.34>:
		while(__ticks)
     430:	26 c0       	rjmp	.+76     	; 0x47e <.L21>

00000432 <.L22>:
     432:	ce 01       	movw	r24, r28
     434:	85 59       	subi	r24, 0x95	; 149
     436:	9f 4f       	sbci	r25, 0xFF	; 255
     438:	20 e9       	ldi	r18, 0x90	; 144
     43a:	31 e0       	ldi	r19, 0x01	; 1
     43c:	dc 01       	movw	r26, r24
     43e:	2d 93       	st	X+, r18
     440:	3c 93       	st	X, r19

00000442 <.LBB155>:
     442:	ce 01       	movw	r24, r28
     444:	85 59       	subi	r24, 0x95	; 149
     446:	9f 4f       	sbci	r25, 0xFF	; 255
     448:	fc 01       	movw	r30, r24
     44a:	80 81       	ld	r24, Z
     44c:	91 81       	ldd	r25, Z+1	; 0x01

0000044e <.L1^B3>:
     44e:	01 97       	sbiw	r24, 0x01	; 1
     450:	f1 f7       	brne	.-4      	; 0x44e <.L1^B3>
     452:	9e 01       	movw	r18, r28
     454:	25 59       	subi	r18, 0x95	; 149
     456:	3f 4f       	sbci	r19, 0xFF	; 255
     458:	d9 01       	movw	r26, r18
     45a:	8d 93       	st	X+, r24
     45c:	9c 93       	st	X, r25

0000045e <.Loc.36>:
	...

00000460 <.LBE155>:
			__ticks --;
     460:	ce 01       	movw	r24, r28
     462:	87 59       	subi	r24, 0x97	; 151
     464:	9f 4f       	sbci	r25, 0xFF	; 255
     466:	9e 01       	movw	r18, r28
     468:	27 59       	subi	r18, 0x97	; 151
     46a:	3f 4f       	sbci	r19, 0xFF	; 255
     46c:	f9 01       	movw	r30, r18
     46e:	20 81       	ld	r18, Z
     470:	31 81       	ldd	r19, Z+1	; 0x01
     472:	21 50       	subi	r18, 0x01	; 1
     474:	31 09       	sbc	r19, r1
     476:	dc 01       	movw	r26, r24
     478:	11 96       	adiw	r26, 0x01	; 1
     47a:	3c 93       	st	X, r19
     47c:	2e 93       	st	-X, r18

0000047e <.L21>:
		while(__ticks)
     47e:	ce 01       	movw	r24, r28
     480:	87 59       	subi	r24, 0x97	; 151
     482:	9f 4f       	sbci	r25, 0xFF	; 255
     484:	fc 01       	movw	r30, r24
     486:	80 81       	ld	r24, Z
     488:	91 81       	ldd	r25, Z+1	; 0x01
     48a:	00 97       	sbiw	r24, 0x00	; 0
     48c:	91 f6       	brne	.-92     	; 0x432 <.L22>

0000048e <.Loc.39>:
		return;
     48e:	39 c0       	rjmp	.+114    	; 0x502 <.L23>

00000490 <.L90>:
		__ticks = (uint16_t)__tmp;
     490:	8e 01       	movw	r16, r28
     492:	07 59       	subi	r16, 0x97	; 151
     494:	1f 4f       	sbci	r17, 0xFF	; 255
     496:	ce 01       	movw	r24, r28
     498:	8b 59       	subi	r24, 0x9B	; 155
     49a:	9f 4f       	sbci	r25, 0xFF	; 255
     49c:	dc 01       	movw	r26, r24
     49e:	6d 91       	ld	r22, X+
     4a0:	7d 91       	ld	r23, X+
     4a2:	8d 91       	ld	r24, X+
     4a4:	9c 91       	ld	r25, X
     4a6:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
     4aa:	c5 57       	subi	r28, 0x75	; 117
     4ac:	df 4f       	sbci	r29, 0xFF	; 255
     4ae:	68 83       	st	Y, r22
     4b0:	79 83       	std	Y+1, r23	; 0x01
     4b2:	8a 83       	std	Y+2, r24	; 0x02
     4b4:	9b 83       	std	Y+3, r25	; 0x03
     4b6:	cb 58       	subi	r28, 0x8B	; 139
     4b8:	d0 40       	sbci	r29, 0x00	; 0
     4ba:	c5 57       	subi	r28, 0x75	; 117
     4bc:	df 4f       	sbci	r29, 0xFF	; 255
     4be:	88 81       	ld	r24, Y
     4c0:	99 81       	ldd	r25, Y+1	; 0x01
     4c2:	cb 58       	subi	r28, 0x8B	; 139
     4c4:	d0 40       	sbci	r29, 0x00	; 0
     4c6:	f8 01       	movw	r30, r16
     4c8:	91 83       	std	Z+1, r25	; 0x01
     4ca:	80 83       	st	Z, r24

000004cc <.L18>:
     4cc:	ce 01       	movw	r24, r28
     4ce:	83 59       	subi	r24, 0x93	; 147
     4d0:	9f 4f       	sbci	r25, 0xFF	; 255
     4d2:	9e 01       	movw	r18, r28
     4d4:	27 59       	subi	r18, 0x97	; 151
     4d6:	3f 4f       	sbci	r19, 0xFF	; 255
     4d8:	d9 01       	movw	r26, r18
     4da:	2d 91       	ld	r18, X+
     4dc:	3c 91       	ld	r19, X
     4de:	fc 01       	movw	r30, r24
     4e0:	31 83       	std	Z+1, r19	; 0x01
     4e2:	20 83       	st	Z, r18

000004e4 <.LBB157>:
     4e4:	ce 01       	movw	r24, r28
     4e6:	83 59       	subi	r24, 0x93	; 147
     4e8:	9f 4f       	sbci	r25, 0xFF	; 255
     4ea:	dc 01       	movw	r26, r24
     4ec:	8d 91       	ld	r24, X+
     4ee:	9c 91       	ld	r25, X

000004f0 <.L1^B4>:
     4f0:	01 97       	sbiw	r24, 0x01	; 1
     4f2:	f1 f7       	brne	.-4      	; 0x4f0 <.L1^B4>
     4f4:	9e 01       	movw	r18, r28
     4f6:	23 59       	subi	r18, 0x93	; 147
     4f8:	3f 4f       	sbci	r19, 0xFF	; 255
     4fa:	f9 01       	movw	r30, r18
     4fc:	91 83       	std	Z+1, r25	; 0x01
     4fe:	80 83       	st	Z, r24

00000500 <.Loc.42>:
	...

00000502 <.L23>:
	 this instruction can be sent on just the four available data lines and it will be interpreted
	 properly by the LCD controller.  The 'lcd_write_4' subroutine will accomplish this if the
	 control lines have previously been configured properly. */

	/* Set up the RS, E, and RW lines for the 'lcd_write_4' function. */
	set_RS_LOW_Instr;	// Select the Instruction Register (RS low)
     502:	88 e2       	ldi	r24, 0x28	; 40
     504:	90 e0       	ldi	r25, 0x00	; 0
     506:	dc 01       	movw	r26, r24
     508:	2c 91       	ld	r18, X
     50a:	88 e2       	ldi	r24, 0x28	; 40
     50c:	90 e0       	ldi	r25, 0x00	; 0
     50e:	2d 7f       	andi	r18, 0xFD	; 253
     510:	fc 01       	movw	r30, r24
     512:	20 83       	st	Z, r18

00000514 <.Loc.44>:
	disable_E_Pin;		// Make sure E is initially low
     514:	88 e2       	ldi	r24, 0x28	; 40
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	dc 01       	movw	r26, r24
     51a:	2c 91       	ld	r18, X
     51c:	88 e2       	ldi	r24, 0x28	; 40
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	27 7f       	andi	r18, 0xF7	; 247
     522:	fc 01       	movw	r30, r24
     524:	20 83       	st	Z, r18

00000526 <.Loc.45>:
	set_RW_LOW_write;	// write to LCD module (RW low)
     526:	88 e2       	ldi	r24, 0x28	; 40
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	dc 01       	movw	r26, r24
     52c:	2c 91       	ld	r18, X
     52e:	88 e2       	ldi	r24, 0x28	; 40
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	2b 7f       	andi	r18, 0xFB	; 251
     534:	fc 01       	movw	r30, r24
     536:	20 83       	st	Z, r18

00000538 <.Loc.46>:

	/* Reset the LCD controller */
	lcd_write_4(lcd_FunctionReset);		// First part of reset sequence
     538:	80 e3       	ldi	r24, 0x30	; 48
     53a:	0e 94 30 09 	call	0x1260	; 0x1260 <lcd_write_4>
     53e:	9e 01       	movw	r18, r28
     540:	2f 5b       	subi	r18, 0xBF	; 191
     542:	3f 4f       	sbci	r19, 0xFF	; 255
     544:	80 e0       	ldi	r24, 0x00	; 0
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	a0 e2       	ldi	r26, 0x20	; 32
     54a:	b1 e4       	ldi	r27, 0x41	; 65
     54c:	f9 01       	movw	r30, r18
     54e:	80 83       	st	Z, r24
     550:	91 83       	std	Z+1, r25	; 0x01
     552:	a2 83       	std	Z+2, r26	; 0x02
     554:	b3 83       	std	Z+3, r27	; 0x03

00000556 <.LBB159>:
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
     556:	8e 01       	movw	r16, r28
     558:	0b 5b       	subi	r16, 0xBB	; 187
     55a:	1f 4f       	sbci	r17, 0xFF	; 255
     55c:	ce 01       	movw	r24, r28
     55e:	8f 5b       	subi	r24, 0xBF	; 191
     560:	9f 4f       	sbci	r25, 0xFF	; 255
     562:	2b ea       	ldi	r18, 0xAB	; 171
     564:	3a ea       	ldi	r19, 0xAA	; 170
     566:	4a ea       	ldi	r20, 0xAA	; 170
     568:	50 e4       	ldi	r21, 0x40	; 64
     56a:	dc 01       	movw	r26, r24
     56c:	6d 91       	ld	r22, X+
     56e:	7d 91       	ld	r23, X+
     570:	8d 91       	ld	r24, X+
     572:	9c 91       	ld	r25, X
     574:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
     578:	c1 57       	subi	r28, 0x71	; 113
     57a:	df 4f       	sbci	r29, 0xFF	; 255
     57c:	68 83       	st	Y, r22
     57e:	79 83       	std	Y+1, r23	; 0x01
     580:	8a 83       	std	Y+2, r24	; 0x02
     582:	9b 83       	std	Y+3, r25	; 0x03
     584:	cf 58       	subi	r28, 0x8F	; 143
     586:	d0 40       	sbci	r29, 0x00	; 0
     588:	c1 57       	subi	r28, 0x71	; 113
     58a:	df 4f       	sbci	r29, 0xFF	; 255
     58c:	88 81       	ld	r24, Y
     58e:	99 81       	ldd	r25, Y+1	; 0x01
     590:	aa 81       	ldd	r26, Y+2	; 0x02
     592:	bb 81       	ldd	r27, Y+3	; 0x03
     594:	cf 58       	subi	r28, 0x8F	; 143
     596:	d0 40       	sbci	r29, 0x00	; 0
     598:	f8 01       	movw	r30, r16
     59a:	80 83       	st	Z, r24
     59c:	91 83       	std	Z+1, r25	; 0x01
     59e:	a2 83       	std	Z+2, r26	; 0x02
     5a0:	b3 83       	std	Z+3, r27	; 0x03

000005a2 <.Loc.48>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
     5a2:	8e 01       	movw	r16, r28
     5a4:	07 5b       	subi	r16, 0xB7	; 183
     5a6:	1f 4f       	sbci	r17, 0xFF	; 255
     5a8:	ce 01       	movw	r24, r28
     5aa:	8f 5b       	subi	r24, 0xBF	; 191
     5ac:	9f 4f       	sbci	r25, 0xFF	; 255
     5ae:	20 e0       	ldi	r18, 0x00	; 0
     5b0:	30 e0       	ldi	r19, 0x00	; 0
     5b2:	40 e8       	ldi	r20, 0x80	; 128
     5b4:	50 e4       	ldi	r21, 0x40	; 64
     5b6:	dc 01       	movw	r26, r24
     5b8:	6d 91       	ld	r22, X+
     5ba:	7d 91       	ld	r23, X+
     5bc:	8d 91       	ld	r24, X+
     5be:	9c 91       	ld	r25, X
     5c0:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
     5c4:	cd 56       	subi	r28, 0x6D	; 109
     5c6:	df 4f       	sbci	r29, 0xFF	; 255
     5c8:	68 83       	st	Y, r22
     5ca:	79 83       	std	Y+1, r23	; 0x01
     5cc:	8a 83       	std	Y+2, r24	; 0x02
     5ce:	9b 83       	std	Y+3, r25	; 0x03
     5d0:	c3 59       	subi	r28, 0x93	; 147
     5d2:	d0 40       	sbci	r29, 0x00	; 0
     5d4:	cd 56       	subi	r28, 0x6D	; 109
     5d6:	df 4f       	sbci	r29, 0xFF	; 255
     5d8:	88 81       	ld	r24, Y
     5da:	99 81       	ldd	r25, Y+1	; 0x01
     5dc:	aa 81       	ldd	r26, Y+2	; 0x02
     5de:	bb 81       	ldd	r27, Y+3	; 0x03
     5e0:	c3 59       	subi	r28, 0x93	; 147
     5e2:	d0 40       	sbci	r29, 0x00	; 0
     5e4:	f8 01       	movw	r30, r16
     5e6:	80 83       	st	Z, r24
     5e8:	91 83       	std	Z+1, r25	; 0x01
     5ea:	a2 83       	std	Z+2, r26	; 0x02
     5ec:	b3 83       	std	Z+3, r27	; 0x03

000005ee <.Loc.49>:
	if (__tmp < 1.0)
     5ee:	ce 01       	movw	r24, r28
     5f0:	8b 5b       	subi	r24, 0xBB	; 187
     5f2:	9f 4f       	sbci	r25, 0xFF	; 255
     5f4:	20 e0       	ldi	r18, 0x00	; 0
     5f6:	30 e0       	ldi	r19, 0x00	; 0
     5f8:	40 e8       	ldi	r20, 0x80	; 128
     5fa:	5f e3       	ldi	r21, 0x3F	; 63
     5fc:	dc 01       	movw	r26, r24
     5fe:	6d 91       	ld	r22, X+
     600:	7d 91       	ld	r23, X+
     602:	8d 91       	ld	r24, X+
     604:	9c 91       	ld	r25, X
     606:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
     60a:	88 23       	and	r24, r24
     60c:	3c f4       	brge	.+14     	; 0x61c <.L91>

0000060e <.Loc.50>:
		__ticks = 1;
     60e:	ce 01       	movw	r24, r28
     610:	83 5b       	subi	r24, 0xB3	; 179
     612:	9f 4f       	sbci	r25, 0xFF	; 255
     614:	21 e0       	ldi	r18, 0x01	; 1
     616:	fc 01       	movw	r30, r24
     618:	20 83       	st	Z, r18
     61a:	9c c1       	rjmp	.+824    	; 0x954 <.L26>

0000061c <.L91>:
	else if (__tmp2 > 65535)
     61c:	ce 01       	movw	r24, r28
     61e:	87 5b       	subi	r24, 0xB7	; 183
     620:	9f 4f       	sbci	r25, 0xFF	; 255
     622:	20 e0       	ldi	r18, 0x00	; 0
     624:	3f ef       	ldi	r19, 0xFF	; 255
     626:	4f e7       	ldi	r20, 0x7F	; 127
     628:	57 e4       	ldi	r21, 0x47	; 71
     62a:	dc 01       	movw	r26, r24
     62c:	6d 91       	ld	r22, X+
     62e:	7d 91       	ld	r23, X+
     630:	8d 91       	ld	r24, X+
     632:	9c 91       	ld	r25, X
     634:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
     638:	88 23       	and	r24, r24
     63a:	09 f0       	breq	.+2      	; 0x63e <L0^A>

0000063c <L0^A>:
     63c:	0c f4       	brge	.+2      	; 0x640 <.Loc.52>

0000063e <L0^A>:
     63e:	22 c1       	rjmp	.+580    	; 0x884 <.L92>

00000640 <.Loc.52>:
	{
		_delay_ms(__us / 1000.0);
     640:	ce 01       	movw	r24, r28
     642:	8f 5b       	subi	r24, 0xBF	; 191
     644:	9f 4f       	sbci	r25, 0xFF	; 255
     646:	20 e0       	ldi	r18, 0x00	; 0
     648:	30 e0       	ldi	r19, 0x00	; 0
     64a:	4a e7       	ldi	r20, 0x7A	; 122
     64c:	54 e4       	ldi	r21, 0x44	; 68
     64e:	fc 01       	movw	r30, r24
     650:	60 81       	ld	r22, Z
     652:	71 81       	ldd	r23, Z+1	; 0x01
     654:	82 81       	ldd	r24, Z+2	; 0x02
     656:	93 81       	ldd	r25, Z+3	; 0x03
     658:	0e 94 23 1f 	call	0x3e46	; 0x3e46 <__divsf3>
     65c:	c9 56       	subi	r28, 0x69	; 105
     65e:	df 4f       	sbci	r29, 0xFF	; 255
     660:	68 83       	st	Y, r22
     662:	79 83       	std	Y+1, r23	; 0x01
     664:	8a 83       	std	Y+2, r24	; 0x02
     666:	9b 83       	std	Y+3, r25	; 0x03
     668:	c7 59       	subi	r28, 0x97	; 151
     66a:	d0 40       	sbci	r29, 0x00	; 0
     66c:	c9 56       	subi	r28, 0x69	; 105
     66e:	df 4f       	sbci	r29, 0xFF	; 255
     670:	88 81       	ld	r24, Y
     672:	99 81       	ldd	r25, Y+1	; 0x01
     674:	aa 81       	ldd	r26, Y+2	; 0x02
     676:	bb 81       	ldd	r27, Y+3	; 0x03
     678:	c7 59       	subi	r28, 0x97	; 151
     67a:	d0 40       	sbci	r29, 0x00	; 0
     67c:	9e 01       	movw	r18, r28
     67e:	22 5b       	subi	r18, 0xB2	; 178
     680:	3f 4f       	sbci	r19, 0xFF	; 255
     682:	f9 01       	movw	r30, r18
     684:	80 83       	st	Z, r24
     686:	91 83       	std	Z+1, r25	; 0x01
     688:	a2 83       	std	Z+2, r26	; 0x02
     68a:	b3 83       	std	Z+3, r27	; 0x03

0000068c <.LBB161>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     68c:	8e 01       	movw	r16, r28
     68e:	0e 5a       	subi	r16, 0xAE	; 174
     690:	1f 4f       	sbci	r17, 0xFF	; 255
     692:	ce 01       	movw	r24, r28
     694:	82 5b       	subi	r24, 0xB2	; 178
     696:	9f 4f       	sbci	r25, 0xFF	; 255
     698:	20 e0       	ldi	r18, 0x00	; 0
     69a:	30 e0       	ldi	r19, 0x00	; 0
     69c:	4a e7       	ldi	r20, 0x7A	; 122
     69e:	55 e4       	ldi	r21, 0x45	; 69
     6a0:	dc 01       	movw	r26, r24
     6a2:	6d 91       	ld	r22, X+
     6a4:	7d 91       	ld	r23, X+
     6a6:	8d 91       	ld	r24, X+
     6a8:	9c 91       	ld	r25, X
     6aa:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
     6ae:	c5 56       	subi	r28, 0x65	; 101
     6b0:	df 4f       	sbci	r29, 0xFF	; 255
     6b2:	68 83       	st	Y, r22
     6b4:	79 83       	std	Y+1, r23	; 0x01
     6b6:	8a 83       	std	Y+2, r24	; 0x02
     6b8:	9b 83       	std	Y+3, r25	; 0x03
     6ba:	cb 59       	subi	r28, 0x9B	; 155
     6bc:	d0 40       	sbci	r29, 0x00	; 0
     6be:	c5 56       	subi	r28, 0x65	; 101
     6c0:	df 4f       	sbci	r29, 0xFF	; 255
     6c2:	88 81       	ld	r24, Y
     6c4:	99 81       	ldd	r25, Y+1	; 0x01
     6c6:	aa 81       	ldd	r26, Y+2	; 0x02
     6c8:	bb 81       	ldd	r27, Y+3	; 0x03
     6ca:	cb 59       	subi	r28, 0x9B	; 155
     6cc:	d0 40       	sbci	r29, 0x00	; 0
     6ce:	f8 01       	movw	r30, r16
     6d0:	80 83       	st	Z, r24
     6d2:	91 83       	std	Z+1, r25	; 0x01
     6d4:	a2 83       	std	Z+2, r26	; 0x02
     6d6:	b3 83       	std	Z+3, r27	; 0x03

000006d8 <.Loc.54>:
	if (__tmp < 1.0)
     6d8:	ce 01       	movw	r24, r28
     6da:	8e 5a       	subi	r24, 0xAE	; 174
     6dc:	9f 4f       	sbci	r25, 0xFF	; 255
     6de:	20 e0       	ldi	r18, 0x00	; 0
     6e0:	30 e0       	ldi	r19, 0x00	; 0
     6e2:	40 e8       	ldi	r20, 0x80	; 128
     6e4:	5f e3       	ldi	r21, 0x3F	; 63
     6e6:	dc 01       	movw	r26, r24
     6e8:	6d 91       	ld	r22, X+
     6ea:	7d 91       	ld	r23, X+
     6ec:	8d 91       	ld	r24, X+
     6ee:	9c 91       	ld	r25, X
     6f0:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
     6f4:	88 23       	and	r24, r24
     6f6:	4c f4       	brge	.+18     	; 0x70a <.L93>

000006f8 <.Loc.55>:
		__ticks = 1;
     6f8:	ce 01       	movw	r24, r28
     6fa:	8a 5a       	subi	r24, 0xAA	; 170
     6fc:	9f 4f       	sbci	r25, 0xFF	; 255
     6fe:	21 e0       	ldi	r18, 0x01	; 1
     700:	30 e0       	ldi	r19, 0x00	; 0
     702:	fc 01       	movw	r30, r24
     704:	31 83       	std	Z+1, r19	; 0x01
     706:	20 83       	st	Z, r18
     708:	a1 c0       	rjmp	.+322    	; 0x84c <.L31>

0000070a <.L93>:
	else if (__tmp > 65535)
     70a:	ce 01       	movw	r24, r28
     70c:	8e 5a       	subi	r24, 0xAE	; 174
     70e:	9f 4f       	sbci	r25, 0xFF	; 255
     710:	20 e0       	ldi	r18, 0x00	; 0
     712:	3f ef       	ldi	r19, 0xFF	; 255
     714:	4f e7       	ldi	r20, 0x7F	; 127
     716:	57 e4       	ldi	r21, 0x47	; 71
     718:	dc 01       	movw	r26, r24
     71a:	6d 91       	ld	r22, X+
     71c:	7d 91       	ld	r23, X+
     71e:	8d 91       	ld	r24, X+
     720:	9c 91       	ld	r25, X
     722:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
     726:	88 23       	and	r24, r24
     728:	09 f0       	breq	.+2      	; 0x72c <L0^A>

0000072a <L0^A>:
     72a:	0c f4       	brge	.+2      	; 0x72e <.Loc.57>

0000072c <L0^A>:
     72c:	71 c0       	rjmp	.+226    	; 0x810 <.L94>

0000072e <.Loc.57>:
		__ticks = (uint16_t) (__ms * 10.0);
     72e:	ce 01       	movw	r24, r28
     730:	82 5b       	subi	r24, 0xB2	; 178
     732:	9f 4f       	sbci	r25, 0xFF	; 255
     734:	20 e0       	ldi	r18, 0x00	; 0
     736:	30 e0       	ldi	r19, 0x00	; 0
     738:	40 e2       	ldi	r20, 0x20	; 32
     73a:	51 e4       	ldi	r21, 0x41	; 65
     73c:	fc 01       	movw	r30, r24
     73e:	60 81       	ld	r22, Z
     740:	71 81       	ldd	r23, Z+1	; 0x01
     742:	82 81       	ldd	r24, Z+2	; 0x02
     744:	93 81       	ldd	r25, Z+3	; 0x03
     746:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
     74a:	c1 56       	subi	r28, 0x61	; 97
     74c:	df 4f       	sbci	r29, 0xFF	; 255
     74e:	68 83       	st	Y, r22
     750:	79 83       	std	Y+1, r23	; 0x01
     752:	8a 83       	std	Y+2, r24	; 0x02
     754:	9b 83       	std	Y+3, r25	; 0x03
     756:	cf 59       	subi	r28, 0x9F	; 159
     758:	d0 40       	sbci	r29, 0x00	; 0
     75a:	c1 56       	subi	r28, 0x61	; 97
     75c:	df 4f       	sbci	r29, 0xFF	; 255
     75e:	88 81       	ld	r24, Y
     760:	99 81       	ldd	r25, Y+1	; 0x01
     762:	aa 81       	ldd	r26, Y+2	; 0x02
     764:	bb 81       	ldd	r27, Y+3	; 0x03
     766:	cf 59       	subi	r28, 0x9F	; 159
     768:	d0 40       	sbci	r29, 0x00	; 0
     76a:	eb 96       	adiw	r28, 0x3b	; 59
     76c:	8c af       	std	Y+60, r24	; 0x3c
     76e:	9d af       	std	Y+61, r25	; 0x3d
     770:	ae af       	std	Y+62, r26	; 0x3e
     772:	bf af       	std	Y+63, r27	; 0x3f
     774:	eb 97       	sbiw	r28, 0x3b	; 59

00000776 <.Loc.58>:
     776:	8e 01       	movw	r16, r28
     778:	0a 5a       	subi	r16, 0xAA	; 170
     77a:	1f 4f       	sbci	r17, 0xFF	; 255
     77c:	eb 96       	adiw	r28, 0x3b	; 59
     77e:	6c ad       	ldd	r22, Y+60	; 0x3c
     780:	7d ad       	ldd	r23, Y+61	; 0x3d
     782:	8e ad       	ldd	r24, Y+62	; 0x3e
     784:	9f ad       	ldd	r25, Y+63	; 0x3f
     786:	eb 97       	sbiw	r28, 0x3b	; 59
     788:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
     78c:	cd 55       	subi	r28, 0x5D	; 93
     78e:	df 4f       	sbci	r29, 0xFF	; 255
     790:	68 83       	st	Y, r22
     792:	79 83       	std	Y+1, r23	; 0x01
     794:	8a 83       	std	Y+2, r24	; 0x02
     796:	9b 83       	std	Y+3, r25	; 0x03
     798:	c3 5a       	subi	r28, 0xA3	; 163
     79a:	d0 40       	sbci	r29, 0x00	; 0
     79c:	cd 55       	subi	r28, 0x5D	; 93
     79e:	df 4f       	sbci	r29, 0xFF	; 255
     7a0:	e8 81       	ld	r30, Y
     7a2:	f9 81       	ldd	r31, Y+1	; 0x01
     7a4:	c3 5a       	subi	r28, 0xA3	; 163
     7a6:	d0 40       	sbci	r29, 0x00	; 0
     7a8:	d8 01       	movw	r26, r16
     7aa:	11 96       	adiw	r26, 0x01	; 1
     7ac:	fc 93       	st	X, r31
     7ae:	ee 93       	st	-X, r30

000007b0 <.Loc.59>:
		while(__ticks)
     7b0:	26 c0       	rjmp	.+76     	; 0x7fe <.L34>

000007b2 <.L35>:
     7b2:	ce 01       	movw	r24, r28
     7b4:	88 5a       	subi	r24, 0xA8	; 168
     7b6:	9f 4f       	sbci	r25, 0xFF	; 255
     7b8:	20 e9       	ldi	r18, 0x90	; 144
     7ba:	31 e0       	ldi	r19, 0x01	; 1
     7bc:	dc 01       	movw	r26, r24
     7be:	2d 93       	st	X+, r18
     7c0:	3c 93       	st	X, r19

000007c2 <.LBB163>:
     7c2:	ce 01       	movw	r24, r28
     7c4:	88 5a       	subi	r24, 0xA8	; 168
     7c6:	9f 4f       	sbci	r25, 0xFF	; 255
     7c8:	fc 01       	movw	r30, r24
     7ca:	80 81       	ld	r24, Z
     7cc:	91 81       	ldd	r25, Z+1	; 0x01

000007ce <.L1^B5>:
     7ce:	01 97       	sbiw	r24, 0x01	; 1
     7d0:	f1 f7       	brne	.-4      	; 0x7ce <.L1^B5>
     7d2:	9e 01       	movw	r18, r28
     7d4:	28 5a       	subi	r18, 0xA8	; 168
     7d6:	3f 4f       	sbci	r19, 0xFF	; 255
     7d8:	d9 01       	movw	r26, r18
     7da:	8d 93       	st	X+, r24
     7dc:	9c 93       	st	X, r25

000007de <.Loc.61>:
	...

000007e0 <.LBE163>:
			__ticks --;
     7e0:	ce 01       	movw	r24, r28
     7e2:	8a 5a       	subi	r24, 0xAA	; 170
     7e4:	9f 4f       	sbci	r25, 0xFF	; 255
     7e6:	9e 01       	movw	r18, r28
     7e8:	2a 5a       	subi	r18, 0xAA	; 170
     7ea:	3f 4f       	sbci	r19, 0xFF	; 255
     7ec:	f9 01       	movw	r30, r18
     7ee:	20 81       	ld	r18, Z
     7f0:	31 81       	ldd	r19, Z+1	; 0x01
     7f2:	21 50       	subi	r18, 0x01	; 1
     7f4:	31 09       	sbc	r19, r1
     7f6:	dc 01       	movw	r26, r24
     7f8:	11 96       	adiw	r26, 0x01	; 1
     7fa:	3c 93       	st	X, r19
     7fc:	2e 93       	st	-X, r18

000007fe <.L34>:
		while(__ticks)
     7fe:	ce 01       	movw	r24, r28
     800:	8a 5a       	subi	r24, 0xAA	; 170
     802:	9f 4f       	sbci	r25, 0xFF	; 255
     804:	fc 01       	movw	r30, r24
     806:	80 81       	ld	r24, Z
     808:	91 81       	ldd	r25, Z+1	; 0x01
     80a:	00 97       	sbiw	r24, 0x00	; 0
     80c:	91 f6       	brne	.-92     	; 0x7b2 <.L35>

0000080e <.Loc.64>:
		return;
     80e:	a2 c0       	rjmp	.+324    	; 0x954 <.L26>

00000810 <.L94>:
		__ticks = (uint16_t)__tmp;
     810:	8e 01       	movw	r16, r28
     812:	0a 5a       	subi	r16, 0xAA	; 170
     814:	1f 4f       	sbci	r17, 0xFF	; 255
     816:	ce 01       	movw	r24, r28
     818:	8e 5a       	subi	r24, 0xAE	; 174
     81a:	9f 4f       	sbci	r25, 0xFF	; 255
     81c:	dc 01       	movw	r26, r24
     81e:	6d 91       	ld	r22, X+
     820:	7d 91       	ld	r23, X+
     822:	8d 91       	ld	r24, X+
     824:	9c 91       	ld	r25, X
     826:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
     82a:	c9 55       	subi	r28, 0x59	; 89
     82c:	df 4f       	sbci	r29, 0xFF	; 255
     82e:	68 83       	st	Y, r22
     830:	79 83       	std	Y+1, r23	; 0x01
     832:	8a 83       	std	Y+2, r24	; 0x02
     834:	9b 83       	std	Y+3, r25	; 0x03
     836:	c7 5a       	subi	r28, 0xA7	; 167
     838:	d0 40       	sbci	r29, 0x00	; 0
     83a:	c9 55       	subi	r28, 0x59	; 89
     83c:	df 4f       	sbci	r29, 0xFF	; 255
     83e:	88 81       	ld	r24, Y
     840:	99 81       	ldd	r25, Y+1	; 0x01
     842:	c7 5a       	subi	r28, 0xA7	; 167
     844:	d0 40       	sbci	r29, 0x00	; 0
     846:	f8 01       	movw	r30, r16
     848:	91 83       	std	Z+1, r25	; 0x01
     84a:	80 83       	st	Z, r24

0000084c <.L31>:
     84c:	ce 01       	movw	r24, r28
     84e:	86 5a       	subi	r24, 0xA6	; 166
     850:	9f 4f       	sbci	r25, 0xFF	; 255
     852:	9e 01       	movw	r18, r28
     854:	2a 5a       	subi	r18, 0xAA	; 170
     856:	3f 4f       	sbci	r19, 0xFF	; 255
     858:	d9 01       	movw	r26, r18
     85a:	2d 91       	ld	r18, X+
     85c:	3c 91       	ld	r19, X
     85e:	fc 01       	movw	r30, r24
     860:	31 83       	std	Z+1, r19	; 0x01
     862:	20 83       	st	Z, r18

00000864 <.LBB165>:
     864:	ce 01       	movw	r24, r28
     866:	86 5a       	subi	r24, 0xA6	; 166
     868:	9f 4f       	sbci	r25, 0xFF	; 255
     86a:	dc 01       	movw	r26, r24
     86c:	8d 91       	ld	r24, X+
     86e:	9c 91       	ld	r25, X
     870:	11 97       	sbiw	r26, 0x01	; 1

00000872 <.L1^B6>:
     872:	01 97       	sbiw	r24, 0x01	; 1
     874:	f1 f7       	brne	.-4      	; 0x872 <.L1^B6>
     876:	9e 01       	movw	r18, r28
     878:	26 5a       	subi	r18, 0xA6	; 166
     87a:	3f 4f       	sbci	r19, 0xFF	; 255
     87c:	f9 01       	movw	r30, r18
     87e:	91 83       	std	Z+1, r25	; 0x01
     880:	80 83       	st	Z, r24

00000882 <.Loc.67>:
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
     882:	68 c0       	rjmp	.+208    	; 0x954 <.L26>

00000884 <.L92>:
	}
	else if (__tmp > 255)
     884:	ce 01       	movw	r24, r28
     886:	8b 5b       	subi	r24, 0xBB	; 187
     888:	9f 4f       	sbci	r25, 0xFF	; 255
     88a:	20 e0       	ldi	r18, 0x00	; 0
     88c:	30 e0       	ldi	r19, 0x00	; 0
     88e:	4f e7       	ldi	r20, 0x7F	; 127
     890:	53 e4       	ldi	r21, 0x43	; 67
     892:	dc 01       	movw	r26, r24
     894:	6d 91       	ld	r22, X+
     896:	7d 91       	ld	r23, X+
     898:	8d 91       	ld	r24, X+
     89a:	9c 91       	ld	r25, X
     89c:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
     8a0:	88 23       	and	r24, r24
     8a2:	e1 f1       	breq	.+120    	; 0x91c <.L95>
     8a4:	dc f1       	brlt	.+118    	; 0x91c <.L95>

000008a6 <.LBB167>:
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     8a6:	8e 01       	movw	r16, r28
     8a8:	04 5a       	subi	r16, 0xA4	; 164
     8aa:	1f 4f       	sbci	r17, 0xFF	; 255
     8ac:	ce 01       	movw	r24, r28
     8ae:	87 5b       	subi	r24, 0xB7	; 183
     8b0:	9f 4f       	sbci	r25, 0xFF	; 255
     8b2:	fc 01       	movw	r30, r24
     8b4:	60 81       	ld	r22, Z
     8b6:	71 81       	ldd	r23, Z+1	; 0x01
     8b8:	82 81       	ldd	r24, Z+2	; 0x02
     8ba:	93 81       	ldd	r25, Z+3	; 0x03
     8bc:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
     8c0:	c5 55       	subi	r28, 0x55	; 85
     8c2:	df 4f       	sbci	r29, 0xFF	; 255
     8c4:	68 83       	st	Y, r22
     8c6:	79 83       	std	Y+1, r23	; 0x01
     8c8:	8a 83       	std	Y+2, r24	; 0x02
     8ca:	9b 83       	std	Y+3, r25	; 0x03
     8cc:	cb 5a       	subi	r28, 0xAB	; 171
     8ce:	d0 40       	sbci	r29, 0x00	; 0
     8d0:	c5 55       	subi	r28, 0x55	; 85
     8d2:	df 4f       	sbci	r29, 0xFF	; 255
     8d4:	e8 81       	ld	r30, Y
     8d6:	f9 81       	ldd	r31, Y+1	; 0x01
     8d8:	cb 5a       	subi	r28, 0xAB	; 171
     8da:	d0 40       	sbci	r29, 0x00	; 0
     8dc:	d8 01       	movw	r26, r16
     8de:	ed 93       	st	X+, r30
     8e0:	fc 93       	st	X, r31
     8e2:	ce 01       	movw	r24, r28
     8e4:	82 5a       	subi	r24, 0xA2	; 162
     8e6:	9f 4f       	sbci	r25, 0xFF	; 255
     8e8:	9e 01       	movw	r18, r28
     8ea:	24 5a       	subi	r18, 0xA4	; 164
     8ec:	3f 4f       	sbci	r19, 0xFF	; 255
     8ee:	d9 01       	movw	r26, r18
     8f0:	2d 91       	ld	r18, X+
     8f2:	3c 91       	ld	r19, X
     8f4:	fc 01       	movw	r30, r24
     8f6:	31 83       	std	Z+1, r19	; 0x01
     8f8:	20 83       	st	Z, r18

000008fa <.LBB168>:
	__asm__ volatile (
     8fa:	ce 01       	movw	r24, r28
     8fc:	82 5a       	subi	r24, 0xA2	; 162
     8fe:	9f 4f       	sbci	r25, 0xFF	; 255
     900:	dc 01       	movw	r26, r24
     902:	8d 91       	ld	r24, X+
     904:	9c 91       	ld	r25, X
     906:	11 97       	sbiw	r26, 0x01	; 1

00000908 <.L1^B7>:
     908:	01 97       	sbiw	r24, 0x01	; 1
     90a:	f1 f7       	brne	.-4      	; 0x908 <.L1^B7>
     90c:	9e 01       	movw	r18, r28
     90e:	22 5a       	subi	r18, 0xA2	; 162
     910:	3f 4f       	sbci	r19, 0xFF	; 255
     912:	f9 01       	movw	r30, r18
     914:	91 83       	std	Z+1, r25	; 0x01
     916:	80 83       	st	Z, r24

00000918 <.Loc.71>:
	...

0000091a <.LBE168>:
		_delay_loop_2(__ticks);
		return;
     91a:	34 c0       	rjmp	.+104    	; 0x984 <.L39>

0000091c <.L95>:
	}
	else
		__ticks = (uint8_t)__tmp;
     91c:	8e 01       	movw	r16, r28
     91e:	03 5b       	subi	r16, 0xB3	; 179
     920:	1f 4f       	sbci	r17, 0xFF	; 255
     922:	ce 01       	movw	r24, r28
     924:	8b 5b       	subi	r24, 0xBB	; 187
     926:	9f 4f       	sbci	r25, 0xFF	; 255
     928:	dc 01       	movw	r26, r24
     92a:	6d 91       	ld	r22, X+
     92c:	7d 91       	ld	r23, X+
     92e:	8d 91       	ld	r24, X+
     930:	9c 91       	ld	r25, X
     932:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
     936:	c1 55       	subi	r28, 0x51	; 81
     938:	df 4f       	sbci	r29, 0xFF	; 255
     93a:	68 83       	st	Y, r22
     93c:	79 83       	std	Y+1, r23	; 0x01
     93e:	8a 83       	std	Y+2, r24	; 0x02
     940:	9b 83       	std	Y+3, r25	; 0x03
     942:	cf 5a       	subi	r28, 0xAF	; 175
     944:	d0 40       	sbci	r29, 0x00	; 0
     946:	c1 55       	subi	r28, 0x51	; 81
     948:	df 4f       	sbci	r29, 0xFF	; 255
     94a:	88 81       	ld	r24, Y
     94c:	cf 5a       	subi	r28, 0xAF	; 175
     94e:	d0 40       	sbci	r29, 0x00	; 0
     950:	f8 01       	movw	r30, r16
     952:	80 83       	st	Z, r24

00000954 <.L26>:
     954:	ce 01       	movw	r24, r28
     956:	80 5a       	subi	r24, 0xA0	; 160
     958:	9f 4f       	sbci	r25, 0xFF	; 255
     95a:	9e 01       	movw	r18, r28
     95c:	23 5b       	subi	r18, 0xB3	; 179
     95e:	3f 4f       	sbci	r19, 0xFF	; 255
     960:	d9 01       	movw	r26, r18
     962:	2c 91       	ld	r18, X
     964:	fc 01       	movw	r30, r24
     966:	20 83       	st	Z, r18

00000968 <.LBB170>:
	__asm__ volatile (
     968:	ce 01       	movw	r24, r28
     96a:	80 5a       	subi	r24, 0xA0	; 160
     96c:	9f 4f       	sbci	r25, 0xFF	; 255
     96e:	dc 01       	movw	r26, r24
     970:	8c 91       	ld	r24, X
     972:	28 2f       	mov	r18, r24

00000974 <.L1^B8>:
     974:	2a 95       	dec	r18
     976:	f1 f7       	brne	.-4      	; 0x974 <.L1^B8>
     978:	ce 01       	movw	r24, r28
     97a:	80 5a       	subi	r24, 0xA0	; 160
     97c:	9f 4f       	sbci	r25, 0xFF	; 255
     97e:	fc 01       	movw	r30, r24
     980:	20 83       	st	Z, r18

00000982 <.Loc.75>:
	...

00000984 <.L39>:
	_delay_us(10);                      // Delay of 10 us

	lcd_write_4(lcd_FunctionReset);		// Second part of reset sequence
     984:	80 e3       	ldi	r24, 0x30	; 48
     986:	0e 94 30 09 	call	0x1260	; 0x1260 <lcd_write_4>
     98a:	80 e0       	ldi	r24, 0x00	; 0
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	a8 e4       	ldi	r26, 0x48	; 72
     990:	b3 e4       	ldi	r27, 0x43	; 67
     992:	89 a3       	std	Y+33, r24	; 0x21
     994:	9a a3       	std	Y+34, r25	; 0x22
     996:	ab a3       	std	Y+35, r26	; 0x23
     998:	bc a3       	std	Y+36, r27	; 0x24

0000099a <.LBB172>:
	__tmp = ((F_CPU) / 3e6) * __us;
     99a:	2b ea       	ldi	r18, 0xAB	; 171
     99c:	3a ea       	ldi	r19, 0xAA	; 170
     99e:	4a ea       	ldi	r20, 0xAA	; 170
     9a0:	50 e4       	ldi	r21, 0x40	; 64
     9a2:	69 a1       	ldd	r22, Y+33	; 0x21
     9a4:	7a a1       	ldd	r23, Y+34	; 0x22
     9a6:	8b a1       	ldd	r24, Y+35	; 0x23
     9a8:	9c a1       	ldd	r25, Y+36	; 0x24
     9aa:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
     9ae:	cd 54       	subi	r28, 0x4D	; 77
     9b0:	df 4f       	sbci	r29, 0xFF	; 255
     9b2:	68 83       	st	Y, r22
     9b4:	79 83       	std	Y+1, r23	; 0x01
     9b6:	8a 83       	std	Y+2, r24	; 0x02
     9b8:	9b 83       	std	Y+3, r25	; 0x03
     9ba:	c3 5b       	subi	r28, 0xB3	; 179
     9bc:	d0 40       	sbci	r29, 0x00	; 0
     9be:	cd 54       	subi	r28, 0x4D	; 77
     9c0:	df 4f       	sbci	r29, 0xFF	; 255
     9c2:	88 81       	ld	r24, Y
     9c4:	99 81       	ldd	r25, Y+1	; 0x01
     9c6:	aa 81       	ldd	r26, Y+2	; 0x02
     9c8:	bb 81       	ldd	r27, Y+3	; 0x03
     9ca:	c3 5b       	subi	r28, 0xB3	; 179
     9cc:	d0 40       	sbci	r29, 0x00	; 0
     9ce:	8d a3       	std	Y+37, r24	; 0x25
     9d0:	9e a3       	std	Y+38, r25	; 0x26
     9d2:	af a3       	std	Y+39, r26	; 0x27
     9d4:	b8 a7       	std	Y+40, r27	; 0x28

000009d6 <.Loc.78>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
     9d6:	20 e0       	ldi	r18, 0x00	; 0
     9d8:	30 e0       	ldi	r19, 0x00	; 0
     9da:	40 e8       	ldi	r20, 0x80	; 128
     9dc:	50 e4       	ldi	r21, 0x40	; 64
     9de:	69 a1       	ldd	r22, Y+33	; 0x21
     9e0:	7a a1       	ldd	r23, Y+34	; 0x22
     9e2:	8b a1       	ldd	r24, Y+35	; 0x23
     9e4:	9c a1       	ldd	r25, Y+36	; 0x24
     9e6:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
     9ea:	c9 54       	subi	r28, 0x49	; 73
     9ec:	df 4f       	sbci	r29, 0xFF	; 255
     9ee:	68 83       	st	Y, r22
     9f0:	79 83       	std	Y+1, r23	; 0x01
     9f2:	8a 83       	std	Y+2, r24	; 0x02
     9f4:	9b 83       	std	Y+3, r25	; 0x03
     9f6:	c7 5b       	subi	r28, 0xB7	; 183
     9f8:	d0 40       	sbci	r29, 0x00	; 0
     9fa:	c9 54       	subi	r28, 0x49	; 73
     9fc:	df 4f       	sbci	r29, 0xFF	; 255
     9fe:	88 81       	ld	r24, Y
     a00:	99 81       	ldd	r25, Y+1	; 0x01
     a02:	aa 81       	ldd	r26, Y+2	; 0x02
     a04:	bb 81       	ldd	r27, Y+3	; 0x03
     a06:	c7 5b       	subi	r28, 0xB7	; 183
     a08:	d0 40       	sbci	r29, 0x00	; 0
     a0a:	89 a7       	std	Y+41, r24	; 0x29
     a0c:	9a a7       	std	Y+42, r25	; 0x2a
     a0e:	ab a7       	std	Y+43, r26	; 0x2b
     a10:	bc a7       	std	Y+44, r27	; 0x2c

00000a12 <.Loc.79>:
	if (__tmp < 1.0)
     a12:	20 e0       	ldi	r18, 0x00	; 0
     a14:	30 e0       	ldi	r19, 0x00	; 0
     a16:	40 e8       	ldi	r20, 0x80	; 128
     a18:	5f e3       	ldi	r21, 0x3F	; 63
     a1a:	6d a1       	ldd	r22, Y+37	; 0x25
     a1c:	7e a1       	ldd	r23, Y+38	; 0x26
     a1e:	8f a1       	ldd	r24, Y+39	; 0x27
     a20:	98 a5       	ldd	r25, Y+40	; 0x28
     a22:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
     a26:	88 23       	and	r24, r24
     a28:	1c f4       	brge	.+6      	; 0xa30 <.L96>

00000a2a <.Loc.80>:
		__ticks = 1;
     a2a:	81 e0       	ldi	r24, 0x01	; 1
     a2c:	8d a7       	std	Y+45, r24	; 0x2d
     a2e:	1b c1       	rjmp	.+566    	; 0xc66 <.L42>

00000a30 <.L96>:
	else if (__tmp2 > 65535)
     a30:	20 e0       	ldi	r18, 0x00	; 0
     a32:	3f ef       	ldi	r19, 0xFF	; 255
     a34:	4f e7       	ldi	r20, 0x7F	; 127
     a36:	57 e4       	ldi	r21, 0x47	; 71
     a38:	69 a5       	ldd	r22, Y+41	; 0x29
     a3a:	7a a5       	ldd	r23, Y+42	; 0x2a
     a3c:	8b a5       	ldd	r24, Y+43	; 0x2b
     a3e:	9c a5       	ldd	r25, Y+44	; 0x2c
     a40:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
     a44:	88 23       	and	r24, r24
     a46:	09 f0       	breq	.+2      	; 0xa4a <L0^A>

00000a48 <L0^A>:
     a48:	0c f4       	brge	.+2      	; 0xa4c <.Loc.82>

00000a4a <L0^A>:
     a4a:	ca c0       	rjmp	.+404    	; 0xbe0 <.L97>

00000a4c <.Loc.82>:
		_delay_ms(__us / 1000.0);
     a4c:	20 e0       	ldi	r18, 0x00	; 0
     a4e:	30 e0       	ldi	r19, 0x00	; 0
     a50:	4a e7       	ldi	r20, 0x7A	; 122
     a52:	54 e4       	ldi	r21, 0x44	; 68
     a54:	69 a1       	ldd	r22, Y+33	; 0x21
     a56:	7a a1       	ldd	r23, Y+34	; 0x22
     a58:	8b a1       	ldd	r24, Y+35	; 0x23
     a5a:	9c a1       	ldd	r25, Y+36	; 0x24
     a5c:	0e 94 23 1f 	call	0x3e46	; 0x3e46 <__divsf3>
     a60:	c5 54       	subi	r28, 0x45	; 69
     a62:	df 4f       	sbci	r29, 0xFF	; 255
     a64:	68 83       	st	Y, r22
     a66:	79 83       	std	Y+1, r23	; 0x01
     a68:	8a 83       	std	Y+2, r24	; 0x02
     a6a:	9b 83       	std	Y+3, r25	; 0x03
     a6c:	cb 5b       	subi	r28, 0xBB	; 187
     a6e:	d0 40       	sbci	r29, 0x00	; 0
     a70:	c5 54       	subi	r28, 0x45	; 69
     a72:	df 4f       	sbci	r29, 0xFF	; 255
     a74:	88 81       	ld	r24, Y
     a76:	99 81       	ldd	r25, Y+1	; 0x01
     a78:	aa 81       	ldd	r26, Y+2	; 0x02
     a7a:	bb 81       	ldd	r27, Y+3	; 0x03
     a7c:	cb 5b       	subi	r28, 0xBB	; 187
     a7e:	d0 40       	sbci	r29, 0x00	; 0
     a80:	8e a7       	std	Y+46, r24	; 0x2e
     a82:	9f a7       	std	Y+47, r25	; 0x2f
     a84:	a8 ab       	std	Y+48, r26	; 0x30
     a86:	b9 ab       	std	Y+49, r27	; 0x31

00000a88 <.LBB174>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     a88:	20 e0       	ldi	r18, 0x00	; 0
     a8a:	30 e0       	ldi	r19, 0x00	; 0
     a8c:	4a e7       	ldi	r20, 0x7A	; 122
     a8e:	55 e4       	ldi	r21, 0x45	; 69
     a90:	6e a5       	ldd	r22, Y+46	; 0x2e
     a92:	7f a5       	ldd	r23, Y+47	; 0x2f
     a94:	88 a9       	ldd	r24, Y+48	; 0x30
     a96:	99 a9       	ldd	r25, Y+49	; 0x31
     a98:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
     a9c:	c1 54       	subi	r28, 0x41	; 65
     a9e:	df 4f       	sbci	r29, 0xFF	; 255
     aa0:	68 83       	st	Y, r22
     aa2:	79 83       	std	Y+1, r23	; 0x01
     aa4:	8a 83       	std	Y+2, r24	; 0x02
     aa6:	9b 83       	std	Y+3, r25	; 0x03
     aa8:	cf 5b       	subi	r28, 0xBF	; 191
     aaa:	d0 40       	sbci	r29, 0x00	; 0
     aac:	c1 54       	subi	r28, 0x41	; 65
     aae:	df 4f       	sbci	r29, 0xFF	; 255
     ab0:	88 81       	ld	r24, Y
     ab2:	99 81       	ldd	r25, Y+1	; 0x01
     ab4:	aa 81       	ldd	r26, Y+2	; 0x02
     ab6:	bb 81       	ldd	r27, Y+3	; 0x03
     ab8:	cf 5b       	subi	r28, 0xBF	; 191
     aba:	d0 40       	sbci	r29, 0x00	; 0
     abc:	8a ab       	std	Y+50, r24	; 0x32
     abe:	9b ab       	std	Y+51, r25	; 0x33
     ac0:	ac ab       	std	Y+52, r26	; 0x34
     ac2:	bd ab       	std	Y+53, r27	; 0x35

00000ac4 <.Loc.84>:
	if (__tmp < 1.0)
     ac4:	20 e0       	ldi	r18, 0x00	; 0
     ac6:	30 e0       	ldi	r19, 0x00	; 0
     ac8:	40 e8       	ldi	r20, 0x80	; 128
     aca:	5f e3       	ldi	r21, 0x3F	; 63
     acc:	6a a9       	ldd	r22, Y+50	; 0x32
     ace:	7b a9       	ldd	r23, Y+51	; 0x33
     ad0:	8c a9       	ldd	r24, Y+52	; 0x34
     ad2:	9d a9       	ldd	r25, Y+53	; 0x35
     ad4:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
     ad8:	88 23       	and	r24, r24
     ada:	2c f4       	brge	.+10     	; 0xae6 <.L98>

00000adc <.Loc.85>:
		__ticks = 1;
     adc:	81 e0       	ldi	r24, 0x01	; 1
     ade:	90 e0       	ldi	r25, 0x00	; 0
     ae0:	9f ab       	std	Y+55, r25	; 0x37
     ae2:	8e ab       	std	Y+54, r24	; 0x36
     ae4:	72 c0       	rjmp	.+228    	; 0xbca <.L47>

00000ae6 <.L98>:
	else if (__tmp > 65535)
     ae6:	20 e0       	ldi	r18, 0x00	; 0
     ae8:	3f ef       	ldi	r19, 0xFF	; 255
     aea:	4f e7       	ldi	r20, 0x7F	; 127
     aec:	57 e4       	ldi	r21, 0x47	; 71
     aee:	6a a9       	ldd	r22, Y+50	; 0x32
     af0:	7b a9       	ldd	r23, Y+51	; 0x33
     af2:	8c a9       	ldd	r24, Y+52	; 0x34
     af4:	9d a9       	ldd	r25, Y+53	; 0x35
     af6:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
     afa:	88 23       	and	r24, r24
     afc:	09 f0       	breq	.+2      	; 0xb00 <L0^A>

00000afe <L0^A>:
     afe:	0c f4       	brge	.+2      	; 0xb02 <.Loc.87>

00000b00 <L0^A>:
     b00:	4e c0       	rjmp	.+156    	; 0xb9e <.L99>

00000b02 <.Loc.87>:
		__ticks = (uint16_t) (__ms * 10.0);
     b02:	20 e0       	ldi	r18, 0x00	; 0
     b04:	30 e0       	ldi	r19, 0x00	; 0
     b06:	40 e2       	ldi	r20, 0x20	; 32
     b08:	51 e4       	ldi	r21, 0x41	; 65
     b0a:	6e a5       	ldd	r22, Y+46	; 0x2e
     b0c:	7f a5       	ldd	r23, Y+47	; 0x2f
     b0e:	88 a9       	ldd	r24, Y+48	; 0x30
     b10:	99 a9       	ldd	r25, Y+49	; 0x31
     b12:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
     b16:	cd 53       	subi	r28, 0x3D	; 61
     b18:	df 4f       	sbci	r29, 0xFF	; 255
     b1a:	68 83       	st	Y, r22
     b1c:	79 83       	std	Y+1, r23	; 0x01
     b1e:	8a 83       	std	Y+2, r24	; 0x02
     b20:	9b 83       	std	Y+3, r25	; 0x03
     b22:	c3 5c       	subi	r28, 0xC3	; 195
     b24:	d0 40       	sbci	r29, 0x00	; 0
     b26:	cd 53       	subi	r28, 0x3D	; 61
     b28:	df 4f       	sbci	r29, 0xFF	; 255
     b2a:	88 81       	ld	r24, Y
     b2c:	99 81       	ldd	r25, Y+1	; 0x01
     b2e:	aa 81       	ldd	r26, Y+2	; 0x02
     b30:	bb 81       	ldd	r27, Y+3	; 0x03
     b32:	c3 5c       	subi	r28, 0xC3	; 195
     b34:	d0 40       	sbci	r29, 0x00	; 0
     b36:	e7 96       	adiw	r28, 0x37	; 55
     b38:	8c af       	std	Y+60, r24	; 0x3c
     b3a:	9d af       	std	Y+61, r25	; 0x3d
     b3c:	ae af       	std	Y+62, r26	; 0x3e
     b3e:	bf af       	std	Y+63, r27	; 0x3f
     b40:	e7 97       	sbiw	r28, 0x37	; 55

00000b42 <.Loc.88>:
     b42:	e7 96       	adiw	r28, 0x37	; 55
     b44:	6c ad       	ldd	r22, Y+60	; 0x3c
     b46:	7d ad       	ldd	r23, Y+61	; 0x3d
     b48:	8e ad       	ldd	r24, Y+62	; 0x3e
     b4a:	9f ad       	ldd	r25, Y+63	; 0x3f
     b4c:	e7 97       	sbiw	r28, 0x37	; 55
     b4e:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
     b52:	c9 53       	subi	r28, 0x39	; 57
     b54:	df 4f       	sbci	r29, 0xFF	; 255
     b56:	68 83       	st	Y, r22
     b58:	79 83       	std	Y+1, r23	; 0x01
     b5a:	8a 83       	std	Y+2, r24	; 0x02
     b5c:	9b 83       	std	Y+3, r25	; 0x03
     b5e:	c7 5c       	subi	r28, 0xC7	; 199
     b60:	d0 40       	sbci	r29, 0x00	; 0
     b62:	c9 53       	subi	r28, 0x39	; 57
     b64:	df 4f       	sbci	r29, 0xFF	; 255
     b66:	a8 81       	ld	r26, Y
     b68:	b9 81       	ldd	r27, Y+1	; 0x01
     b6a:	c7 5c       	subi	r28, 0xC7	; 199
     b6c:	d0 40       	sbci	r29, 0x00	; 0
     b6e:	bf ab       	std	Y+55, r27	; 0x37
     b70:	ae ab       	std	Y+54, r26	; 0x36

00000b72 <.Loc.89>:
		while(__ticks)
     b72:	10 c0       	rjmp	.+32     	; 0xb94 <.L50>

00000b74 <.L51>:
     b74:	80 e9       	ldi	r24, 0x90	; 144
     b76:	91 e0       	ldi	r25, 0x01	; 1
     b78:	99 af       	std	Y+57, r25	; 0x39
     b7a:	88 af       	std	Y+56, r24	; 0x38

00000b7c <.LBB176>:
	__asm__ volatile (
     b7c:	88 ad       	ldd	r24, Y+56	; 0x38
     b7e:	99 ad       	ldd	r25, Y+57	; 0x39

00000b80 <.L1^B9>:
     b80:	01 97       	sbiw	r24, 0x01	; 1
     b82:	f1 f7       	brne	.-4      	; 0xb80 <.L1^B9>
     b84:	99 af       	std	Y+57, r25	; 0x39
     b86:	88 af       	std	Y+56, r24	; 0x38

00000b88 <.Loc.91>:
	...

00000b8a <.LBE176>:
			__ticks --;
     b8a:	8e a9       	ldd	r24, Y+54	; 0x36
     b8c:	9f a9       	ldd	r25, Y+55	; 0x37
     b8e:	01 97       	sbiw	r24, 0x01	; 1
     b90:	9f ab       	std	Y+55, r25	; 0x37
     b92:	8e ab       	std	Y+54, r24	; 0x36

00000b94 <.L50>:
		while(__ticks)
     b94:	8e a9       	ldd	r24, Y+54	; 0x36
     b96:	9f a9       	ldd	r25, Y+55	; 0x37
     b98:	00 97       	sbiw	r24, 0x00	; 0
     b9a:	61 f7       	brne	.-40     	; 0xb74 <.L51>

00000b9c <.Loc.94>:
		return;
     b9c:	64 c0       	rjmp	.+200    	; 0xc66 <.L42>

00000b9e <.L99>:
		__ticks = (uint16_t)__tmp;
     b9e:	6a a9       	ldd	r22, Y+50	; 0x32
     ba0:	7b a9       	ldd	r23, Y+51	; 0x33
     ba2:	8c a9       	ldd	r24, Y+52	; 0x34
     ba4:	9d a9       	ldd	r25, Y+53	; 0x35
     ba6:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
     baa:	c5 53       	subi	r28, 0x35	; 53
     bac:	df 4f       	sbci	r29, 0xFF	; 255
     bae:	68 83       	st	Y, r22
     bb0:	79 83       	std	Y+1, r23	; 0x01
     bb2:	8a 83       	std	Y+2, r24	; 0x02
     bb4:	9b 83       	std	Y+3, r25	; 0x03
     bb6:	cb 5c       	subi	r28, 0xCB	; 203
     bb8:	d0 40       	sbci	r29, 0x00	; 0
     bba:	c5 53       	subi	r28, 0x35	; 53
     bbc:	df 4f       	sbci	r29, 0xFF	; 255
     bbe:	e8 81       	ld	r30, Y
     bc0:	f9 81       	ldd	r31, Y+1	; 0x01
     bc2:	cb 5c       	subi	r28, 0xCB	; 203
     bc4:	d0 40       	sbci	r29, 0x00	; 0
     bc6:	ff ab       	std	Y+55, r31	; 0x37
     bc8:	ee ab       	std	Y+54, r30	; 0x36

00000bca <.L47>:
     bca:	8e a9       	ldd	r24, Y+54	; 0x36
     bcc:	9f a9       	ldd	r25, Y+55	; 0x37
     bce:	9b af       	std	Y+59, r25	; 0x3b
     bd0:	8a af       	std	Y+58, r24	; 0x3a

00000bd2 <.LBB178>:
     bd2:	8a ad       	ldd	r24, Y+58	; 0x3a
     bd4:	9b ad       	ldd	r25, Y+59	; 0x3b

00000bd6 <.L1^B10>:
     bd6:	01 97       	sbiw	r24, 0x01	; 1
     bd8:	f1 f7       	brne	.-4      	; 0xbd6 <.L1^B10>
     bda:	9b af       	std	Y+59, r25	; 0x3b
     bdc:	8a af       	std	Y+58, r24	; 0x3a

00000bde <.Loc.97>:
}
     bde:	43 c0       	rjmp	.+134    	; 0xc66 <.L42>

00000be0 <.L97>:
	else if (__tmp > 255)
     be0:	20 e0       	ldi	r18, 0x00	; 0
     be2:	30 e0       	ldi	r19, 0x00	; 0
     be4:	4f e7       	ldi	r20, 0x7F	; 127
     be6:	53 e4       	ldi	r21, 0x43	; 67
     be8:	6d a1       	ldd	r22, Y+37	; 0x25
     bea:	7e a1       	ldd	r23, Y+38	; 0x26
     bec:	8f a1       	ldd	r24, Y+39	; 0x27
     bee:	98 a5       	ldd	r25, Y+40	; 0x28
     bf0:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
     bf4:	88 23       	and	r24, r24
     bf6:	19 f1       	breq	.+70     	; 0xc3e <.L100>
     bf8:	14 f1       	brlt	.+68     	; 0xc3e <.L100>

00000bfa <.LBB180>:
		uint16_t __ticks=(uint16_t)__tmp2;
     bfa:	69 a5       	ldd	r22, Y+41	; 0x29
     bfc:	7a a5       	ldd	r23, Y+42	; 0x2a
     bfe:	8b a5       	ldd	r24, Y+43	; 0x2b
     c00:	9c a5       	ldd	r25, Y+44	; 0x2c
     c02:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
     c06:	c1 53       	subi	r28, 0x31	; 49
     c08:	df 4f       	sbci	r29, 0xFF	; 255
     c0a:	68 83       	st	Y, r22
     c0c:	79 83       	std	Y+1, r23	; 0x01
     c0e:	8a 83       	std	Y+2, r24	; 0x02
     c10:	9b 83       	std	Y+3, r25	; 0x03
     c12:	cf 5c       	subi	r28, 0xCF	; 207
     c14:	d0 40       	sbci	r29, 0x00	; 0
     c16:	c1 53       	subi	r28, 0x31	; 49
     c18:	df 4f       	sbci	r29, 0xFF	; 255
     c1a:	88 81       	ld	r24, Y
     c1c:	99 81       	ldd	r25, Y+1	; 0x01
     c1e:	cf 5c       	subi	r28, 0xCF	; 207
     c20:	d0 40       	sbci	r29, 0x00	; 0
     c22:	9d af       	std	Y+61, r25	; 0x3d
     c24:	8c af       	std	Y+60, r24	; 0x3c
     c26:	8c ad       	ldd	r24, Y+60	; 0x3c
     c28:	9d ad       	ldd	r25, Y+61	; 0x3d
     c2a:	9f af       	std	Y+63, r25	; 0x3f
     c2c:	8e af       	std	Y+62, r24	; 0x3e

00000c2e <.LBB181>:
	__asm__ volatile (
     c2e:	8e ad       	ldd	r24, Y+62	; 0x3e
     c30:	9f ad       	ldd	r25, Y+63	; 0x3f

00000c32 <.L1^B11>:
     c32:	01 97       	sbiw	r24, 0x01	; 1
     c34:	f1 f7       	brne	.-4      	; 0xc32 <.L1^B11>
     c36:	9f af       	std	Y+63, r25	; 0x3f
     c38:	8e af       	std	Y+62, r24	; 0x3e

00000c3a <.Loc.101>:
	...

00000c3c <.LBE181>:
		return;
     c3c:	28 c0       	rjmp	.+80     	; 0xc8e <.L55>

00000c3e <.L100>:
		__ticks = (uint8_t)__tmp;
     c3e:	6d a1       	ldd	r22, Y+37	; 0x25
     c40:	7e a1       	ldd	r23, Y+38	; 0x26
     c42:	8f a1       	ldd	r24, Y+39	; 0x27
     c44:	98 a5       	ldd	r25, Y+40	; 0x28
     c46:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
     c4a:	cd 52       	subi	r28, 0x2D	; 45
     c4c:	df 4f       	sbci	r29, 0xFF	; 255
     c4e:	68 83       	st	Y, r22
     c50:	79 83       	std	Y+1, r23	; 0x01
     c52:	8a 83       	std	Y+2, r24	; 0x02
     c54:	9b 83       	std	Y+3, r25	; 0x03
     c56:	c3 5d       	subi	r28, 0xD3	; 211
     c58:	d0 40       	sbci	r29, 0x00	; 0
     c5a:	cd 52       	subi	r28, 0x2D	; 45
     c5c:	df 4f       	sbci	r29, 0xFF	; 255
     c5e:	98 81       	ld	r25, Y
     c60:	c3 5d       	subi	r28, 0xD3	; 211
     c62:	d0 40       	sbci	r29, 0x00	; 0
     c64:	9d a7       	std	Y+45, r25	; 0x2d

00000c66 <.L42>:
     c66:	2d a5       	ldd	r18, Y+45	; 0x2d
     c68:	ce 01       	movw	r24, r28
     c6a:	80 5c       	subi	r24, 0xC0	; 192
     c6c:	9f 4f       	sbci	r25, 0xFF	; 255
     c6e:	dc 01       	movw	r26, r24
     c70:	2c 93       	st	X, r18

00000c72 <.LBB183>:
	__asm__ volatile (
     c72:	ce 01       	movw	r24, r28
     c74:	80 5c       	subi	r24, 0xC0	; 192
     c76:	9f 4f       	sbci	r25, 0xFF	; 255
     c78:	fc 01       	movw	r30, r24
     c7a:	80 81       	ld	r24, Z
     c7c:	28 2f       	mov	r18, r24

00000c7e <.L1^B12>:
     c7e:	2a 95       	dec	r18
     c80:	f1 f7       	brne	.-4      	; 0xc7e <.L1^B12>
     c82:	ce 01       	movw	r24, r28
     c84:	80 5c       	subi	r24, 0xC0	; 192
     c86:	9f 4f       	sbci	r25, 0xFF	; 255
     c88:	dc 01       	movw	r26, r24
     c8a:	2c 93       	st	X, r18

00000c8c <.Loc.105>:
	...

00000c8e <.L55>:
	_delay_us(200);						// Delay of 200 us

	lcd_write_4(lcd_FunctionReset);		// Third part of reset sequence
     c8e:	80 e3       	ldi	r24, 0x30	; 48
     c90:	0e 94 30 09 	call	0x1260	; 0x1260 <lcd_write_4>
     c94:	80 e0       	ldi	r24, 0x00	; 0
     c96:	90 e0       	ldi	r25, 0x00	; 0
     c98:	a0 ea       	ldi	r26, 0xA0	; 160
     c9a:	b2 e4       	ldi	r27, 0x42	; 66
     c9c:	89 83       	std	Y+1, r24	; 0x01
     c9e:	9a 83       	std	Y+2, r25	; 0x02
     ca0:	ab 83       	std	Y+3, r26	; 0x03
     ca2:	bc 83       	std	Y+4, r27	; 0x04

00000ca4 <.LBB185>:
	__tmp = ((F_CPU) / 3e6) * __us;
     ca4:	2b ea       	ldi	r18, 0xAB	; 171
     ca6:	3a ea       	ldi	r19, 0xAA	; 170
     ca8:	4a ea       	ldi	r20, 0xAA	; 170
     caa:	50 e4       	ldi	r21, 0x40	; 64
     cac:	69 81       	ldd	r22, Y+1	; 0x01
     cae:	7a 81       	ldd	r23, Y+2	; 0x02
     cb0:	8b 81       	ldd	r24, Y+3	; 0x03
     cb2:	9c 81       	ldd	r25, Y+4	; 0x04
     cb4:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
     cb8:	c9 52       	subi	r28, 0x29	; 41
     cba:	df 4f       	sbci	r29, 0xFF	; 255
     cbc:	68 83       	st	Y, r22
     cbe:	79 83       	std	Y+1, r23	; 0x01
     cc0:	8a 83       	std	Y+2, r24	; 0x02
     cc2:	9b 83       	std	Y+3, r25	; 0x03
     cc4:	c7 5d       	subi	r28, 0xD7	; 215
     cc6:	d0 40       	sbci	r29, 0x00	; 0
     cc8:	c9 52       	subi	r28, 0x29	; 41
     cca:	df 4f       	sbci	r29, 0xFF	; 255
     ccc:	88 81       	ld	r24, Y
     cce:	99 81       	ldd	r25, Y+1	; 0x01
     cd0:	aa 81       	ldd	r26, Y+2	; 0x02
     cd2:	bb 81       	ldd	r27, Y+3	; 0x03
     cd4:	c7 5d       	subi	r28, 0xD7	; 215
     cd6:	d0 40       	sbci	r29, 0x00	; 0
     cd8:	8d 83       	std	Y+5, r24	; 0x05
     cda:	9e 83       	std	Y+6, r25	; 0x06
     cdc:	af 83       	std	Y+7, r26	; 0x07
     cde:	b8 87       	std	Y+8, r27	; 0x08

00000ce0 <.Loc.108>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
     ce0:	20 e0       	ldi	r18, 0x00	; 0
     ce2:	30 e0       	ldi	r19, 0x00	; 0
     ce4:	40 e8       	ldi	r20, 0x80	; 128
     ce6:	50 e4       	ldi	r21, 0x40	; 64
     ce8:	69 81       	ldd	r22, Y+1	; 0x01
     cea:	7a 81       	ldd	r23, Y+2	; 0x02
     cec:	8b 81       	ldd	r24, Y+3	; 0x03
     cee:	9c 81       	ldd	r25, Y+4	; 0x04
     cf0:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
     cf4:	c5 52       	subi	r28, 0x25	; 37
     cf6:	df 4f       	sbci	r29, 0xFF	; 255
     cf8:	68 83       	st	Y, r22
     cfa:	79 83       	std	Y+1, r23	; 0x01
     cfc:	8a 83       	std	Y+2, r24	; 0x02
     cfe:	9b 83       	std	Y+3, r25	; 0x03
     d00:	cb 5d       	subi	r28, 0xDB	; 219
     d02:	d0 40       	sbci	r29, 0x00	; 0
     d04:	c5 52       	subi	r28, 0x25	; 37
     d06:	df 4f       	sbci	r29, 0xFF	; 255
     d08:	88 81       	ld	r24, Y
     d0a:	99 81       	ldd	r25, Y+1	; 0x01
     d0c:	aa 81       	ldd	r26, Y+2	; 0x02
     d0e:	bb 81       	ldd	r27, Y+3	; 0x03
     d10:	cb 5d       	subi	r28, 0xDB	; 219
     d12:	d0 40       	sbci	r29, 0x00	; 0
     d14:	89 87       	std	Y+9, r24	; 0x09
     d16:	9a 87       	std	Y+10, r25	; 0x0a
     d18:	ab 87       	std	Y+11, r26	; 0x0b
     d1a:	bc 87       	std	Y+12, r27	; 0x0c

00000d1c <.Loc.109>:
	if (__tmp < 1.0)
     d1c:	20 e0       	ldi	r18, 0x00	; 0
     d1e:	30 e0       	ldi	r19, 0x00	; 0
     d20:	40 e8       	ldi	r20, 0x80	; 128
     d22:	5f e3       	ldi	r21, 0x3F	; 63
     d24:	6d 81       	ldd	r22, Y+5	; 0x05
     d26:	7e 81       	ldd	r23, Y+6	; 0x06
     d28:	8f 81       	ldd	r24, Y+7	; 0x07
     d2a:	98 85       	ldd	r25, Y+8	; 0x08
     d2c:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
     d30:	88 23       	and	r24, r24
     d32:	1c f4       	brge	.+6      	; 0xd3a <.L101>

00000d34 <.Loc.110>:
		__ticks = 1;
     d34:	81 e0       	ldi	r24, 0x01	; 1
     d36:	8d 87       	std	Y+13, r24	; 0x0d
     d38:	1b c1       	rjmp	.+566    	; 0xf70 <.L58>

00000d3a <.L101>:
	else if (__tmp2 > 65535)
     d3a:	20 e0       	ldi	r18, 0x00	; 0
     d3c:	3f ef       	ldi	r19, 0xFF	; 255
     d3e:	4f e7       	ldi	r20, 0x7F	; 127
     d40:	57 e4       	ldi	r21, 0x47	; 71
     d42:	69 85       	ldd	r22, Y+9	; 0x09
     d44:	7a 85       	ldd	r23, Y+10	; 0x0a
     d46:	8b 85       	ldd	r24, Y+11	; 0x0b
     d48:	9c 85       	ldd	r25, Y+12	; 0x0c
     d4a:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
     d4e:	88 23       	and	r24, r24
     d50:	09 f0       	breq	.+2      	; 0xd54 <L0^A>

00000d52 <L0^A>:
     d52:	0c f4       	brge	.+2      	; 0xd56 <.Loc.112>

00000d54 <L0^A>:
     d54:	ca c0       	rjmp	.+404    	; 0xeea <.L102>

00000d56 <.Loc.112>:
		_delay_ms(__us / 1000.0);
     d56:	20 e0       	ldi	r18, 0x00	; 0
     d58:	30 e0       	ldi	r19, 0x00	; 0
     d5a:	4a e7       	ldi	r20, 0x7A	; 122
     d5c:	54 e4       	ldi	r21, 0x44	; 68
     d5e:	69 81       	ldd	r22, Y+1	; 0x01
     d60:	7a 81       	ldd	r23, Y+2	; 0x02
     d62:	8b 81       	ldd	r24, Y+3	; 0x03
     d64:	9c 81       	ldd	r25, Y+4	; 0x04
     d66:	0e 94 23 1f 	call	0x3e46	; 0x3e46 <__divsf3>
     d6a:	c1 52       	subi	r28, 0x21	; 33
     d6c:	df 4f       	sbci	r29, 0xFF	; 255
     d6e:	68 83       	st	Y, r22
     d70:	79 83       	std	Y+1, r23	; 0x01
     d72:	8a 83       	std	Y+2, r24	; 0x02
     d74:	9b 83       	std	Y+3, r25	; 0x03
     d76:	cf 5d       	subi	r28, 0xDF	; 223
     d78:	d0 40       	sbci	r29, 0x00	; 0
     d7a:	c1 52       	subi	r28, 0x21	; 33
     d7c:	df 4f       	sbci	r29, 0xFF	; 255
     d7e:	88 81       	ld	r24, Y
     d80:	99 81       	ldd	r25, Y+1	; 0x01
     d82:	aa 81       	ldd	r26, Y+2	; 0x02
     d84:	bb 81       	ldd	r27, Y+3	; 0x03
     d86:	cf 5d       	subi	r28, 0xDF	; 223
     d88:	d0 40       	sbci	r29, 0x00	; 0
     d8a:	8e 87       	std	Y+14, r24	; 0x0e
     d8c:	9f 87       	std	Y+15, r25	; 0x0f
     d8e:	a8 8b       	std	Y+16, r26	; 0x10
     d90:	b9 8b       	std	Y+17, r27	; 0x11

00000d92 <.LBB187>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     d92:	20 e0       	ldi	r18, 0x00	; 0
     d94:	30 e0       	ldi	r19, 0x00	; 0
     d96:	4a e7       	ldi	r20, 0x7A	; 122
     d98:	55 e4       	ldi	r21, 0x45	; 69
     d9a:	6e 85       	ldd	r22, Y+14	; 0x0e
     d9c:	7f 85       	ldd	r23, Y+15	; 0x0f
     d9e:	88 89       	ldd	r24, Y+16	; 0x10
     da0:	99 89       	ldd	r25, Y+17	; 0x11
     da2:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
     da6:	cd 51       	subi	r28, 0x1D	; 29
     da8:	df 4f       	sbci	r29, 0xFF	; 255
     daa:	68 83       	st	Y, r22
     dac:	79 83       	std	Y+1, r23	; 0x01
     dae:	8a 83       	std	Y+2, r24	; 0x02
     db0:	9b 83       	std	Y+3, r25	; 0x03
     db2:	c3 5e       	subi	r28, 0xE3	; 227
     db4:	d0 40       	sbci	r29, 0x00	; 0
     db6:	cd 51       	subi	r28, 0x1D	; 29
     db8:	df 4f       	sbci	r29, 0xFF	; 255
     dba:	88 81       	ld	r24, Y
     dbc:	99 81       	ldd	r25, Y+1	; 0x01
     dbe:	aa 81       	ldd	r26, Y+2	; 0x02
     dc0:	bb 81       	ldd	r27, Y+3	; 0x03
     dc2:	c3 5e       	subi	r28, 0xE3	; 227
     dc4:	d0 40       	sbci	r29, 0x00	; 0
     dc6:	8a 8b       	std	Y+18, r24	; 0x12
     dc8:	9b 8b       	std	Y+19, r25	; 0x13
     dca:	ac 8b       	std	Y+20, r26	; 0x14
     dcc:	bd 8b       	std	Y+21, r27	; 0x15

00000dce <.Loc.114>:
	if (__tmp < 1.0)
     dce:	20 e0       	ldi	r18, 0x00	; 0
     dd0:	30 e0       	ldi	r19, 0x00	; 0
     dd2:	40 e8       	ldi	r20, 0x80	; 128
     dd4:	5f e3       	ldi	r21, 0x3F	; 63
     dd6:	6a 89       	ldd	r22, Y+18	; 0x12
     dd8:	7b 89       	ldd	r23, Y+19	; 0x13
     dda:	8c 89       	ldd	r24, Y+20	; 0x14
     ddc:	9d 89       	ldd	r25, Y+21	; 0x15
     dde:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
     de2:	88 23       	and	r24, r24
     de4:	2c f4       	brge	.+10     	; 0xdf0 <.L103>

00000de6 <.Loc.115>:
		__ticks = 1;
     de6:	81 e0       	ldi	r24, 0x01	; 1
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	9f 8b       	std	Y+23, r25	; 0x17
     dec:	8e 8b       	std	Y+22, r24	; 0x16
     dee:	72 c0       	rjmp	.+228    	; 0xed4 <.L63>

00000df0 <.L103>:
	else if (__tmp > 65535)
     df0:	20 e0       	ldi	r18, 0x00	; 0
     df2:	3f ef       	ldi	r19, 0xFF	; 255
     df4:	4f e7       	ldi	r20, 0x7F	; 127
     df6:	57 e4       	ldi	r21, 0x47	; 71
     df8:	6a 89       	ldd	r22, Y+18	; 0x12
     dfa:	7b 89       	ldd	r23, Y+19	; 0x13
     dfc:	8c 89       	ldd	r24, Y+20	; 0x14
     dfe:	9d 89       	ldd	r25, Y+21	; 0x15
     e00:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
     e04:	88 23       	and	r24, r24
     e06:	09 f0       	breq	.+2      	; 0xe0a <L0^A>

00000e08 <L0^A>:
     e08:	0c f4       	brge	.+2      	; 0xe0c <.Loc.117>

00000e0a <L0^A>:
     e0a:	4e c0       	rjmp	.+156    	; 0xea8 <.L104>

00000e0c <.Loc.117>:
		__ticks = (uint16_t) (__ms * 10.0);
     e0c:	20 e0       	ldi	r18, 0x00	; 0
     e0e:	30 e0       	ldi	r19, 0x00	; 0
     e10:	40 e2       	ldi	r20, 0x20	; 32
     e12:	51 e4       	ldi	r21, 0x41	; 65
     e14:	6e 85       	ldd	r22, Y+14	; 0x0e
     e16:	7f 85       	ldd	r23, Y+15	; 0x0f
     e18:	88 89       	ldd	r24, Y+16	; 0x10
     e1a:	99 89       	ldd	r25, Y+17	; 0x11
     e1c:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
     e20:	c9 51       	subi	r28, 0x19	; 25
     e22:	df 4f       	sbci	r29, 0xFF	; 255
     e24:	68 83       	st	Y, r22
     e26:	79 83       	std	Y+1, r23	; 0x01
     e28:	8a 83       	std	Y+2, r24	; 0x02
     e2a:	9b 83       	std	Y+3, r25	; 0x03
     e2c:	c7 5e       	subi	r28, 0xE7	; 231
     e2e:	d0 40       	sbci	r29, 0x00	; 0
     e30:	c9 51       	subi	r28, 0x19	; 25
     e32:	df 4f       	sbci	r29, 0xFF	; 255
     e34:	88 81       	ld	r24, Y
     e36:	99 81       	ldd	r25, Y+1	; 0x01
     e38:	aa 81       	ldd	r26, Y+2	; 0x02
     e3a:	bb 81       	ldd	r27, Y+3	; 0x03
     e3c:	c7 5e       	subi	r28, 0xE7	; 231
     e3e:	d0 40       	sbci	r29, 0x00	; 0
     e40:	e3 96       	adiw	r28, 0x33	; 51
     e42:	8c af       	std	Y+60, r24	; 0x3c
     e44:	9d af       	std	Y+61, r25	; 0x3d
     e46:	ae af       	std	Y+62, r26	; 0x3e
     e48:	bf af       	std	Y+63, r27	; 0x3f
     e4a:	e3 97       	sbiw	r28, 0x33	; 51

00000e4c <.Loc.118>:
     e4c:	e3 96       	adiw	r28, 0x33	; 51
     e4e:	6c ad       	ldd	r22, Y+60	; 0x3c
     e50:	7d ad       	ldd	r23, Y+61	; 0x3d
     e52:	8e ad       	ldd	r24, Y+62	; 0x3e
     e54:	9f ad       	ldd	r25, Y+63	; 0x3f
     e56:	e3 97       	sbiw	r28, 0x33	; 51
     e58:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
     e5c:	c5 51       	subi	r28, 0x15	; 21
     e5e:	df 4f       	sbci	r29, 0xFF	; 255
     e60:	68 83       	st	Y, r22
     e62:	79 83       	std	Y+1, r23	; 0x01
     e64:	8a 83       	std	Y+2, r24	; 0x02
     e66:	9b 83       	std	Y+3, r25	; 0x03
     e68:	cb 5e       	subi	r28, 0xEB	; 235
     e6a:	d0 40       	sbci	r29, 0x00	; 0
     e6c:	c5 51       	subi	r28, 0x15	; 21
     e6e:	df 4f       	sbci	r29, 0xFF	; 255
     e70:	a8 81       	ld	r26, Y
     e72:	b9 81       	ldd	r27, Y+1	; 0x01
     e74:	cb 5e       	subi	r28, 0xEB	; 235
     e76:	d0 40       	sbci	r29, 0x00	; 0
     e78:	bf 8b       	std	Y+23, r27	; 0x17
     e7a:	ae 8b       	std	Y+22, r26	; 0x16

00000e7c <.Loc.119>:
		while(__ticks)
     e7c:	10 c0       	rjmp	.+32     	; 0xe9e <.L66>

00000e7e <.L67>:
     e7e:	80 e9       	ldi	r24, 0x90	; 144
     e80:	91 e0       	ldi	r25, 0x01	; 1
     e82:	99 8f       	std	Y+25, r25	; 0x19
     e84:	88 8f       	std	Y+24, r24	; 0x18

00000e86 <.LBB189>:
	__asm__ volatile (
     e86:	88 8d       	ldd	r24, Y+24	; 0x18
     e88:	99 8d       	ldd	r25, Y+25	; 0x19

00000e8a <.L1^B13>:
     e8a:	01 97       	sbiw	r24, 0x01	; 1
     e8c:	f1 f7       	brne	.-4      	; 0xe8a <.L1^B13>
     e8e:	99 8f       	std	Y+25, r25	; 0x19
     e90:	88 8f       	std	Y+24, r24	; 0x18

00000e92 <.Loc.121>:
	...

00000e94 <.LBE189>:
			__ticks --;
     e94:	8e 89       	ldd	r24, Y+22	; 0x16
     e96:	9f 89       	ldd	r25, Y+23	; 0x17
     e98:	01 97       	sbiw	r24, 0x01	; 1
     e9a:	9f 8b       	std	Y+23, r25	; 0x17
     e9c:	8e 8b       	std	Y+22, r24	; 0x16

00000e9e <.L66>:
		while(__ticks)
     e9e:	8e 89       	ldd	r24, Y+22	; 0x16
     ea0:	9f 89       	ldd	r25, Y+23	; 0x17
     ea2:	00 97       	sbiw	r24, 0x00	; 0
     ea4:	61 f7       	brne	.-40     	; 0xe7e <.L67>

00000ea6 <.Loc.124>:
		return;
     ea6:	64 c0       	rjmp	.+200    	; 0xf70 <.L58>

00000ea8 <.L104>:
		__ticks = (uint16_t)__tmp;
     ea8:	6a 89       	ldd	r22, Y+18	; 0x12
     eaa:	7b 89       	ldd	r23, Y+19	; 0x13
     eac:	8c 89       	ldd	r24, Y+20	; 0x14
     eae:	9d 89       	ldd	r25, Y+21	; 0x15
     eb0:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
     eb4:	c1 51       	subi	r28, 0x11	; 17
     eb6:	df 4f       	sbci	r29, 0xFF	; 255
     eb8:	68 83       	st	Y, r22
     eba:	79 83       	std	Y+1, r23	; 0x01
     ebc:	8a 83       	std	Y+2, r24	; 0x02
     ebe:	9b 83       	std	Y+3, r25	; 0x03
     ec0:	cf 5e       	subi	r28, 0xEF	; 239
     ec2:	d0 40       	sbci	r29, 0x00	; 0
     ec4:	c1 51       	subi	r28, 0x11	; 17
     ec6:	df 4f       	sbci	r29, 0xFF	; 255
     ec8:	e8 81       	ld	r30, Y
     eca:	f9 81       	ldd	r31, Y+1	; 0x01
     ecc:	cf 5e       	subi	r28, 0xEF	; 239
     ece:	d0 40       	sbci	r29, 0x00	; 0
     ed0:	ff 8b       	std	Y+23, r31	; 0x17
     ed2:	ee 8b       	std	Y+22, r30	; 0x16

00000ed4 <.L63>:
     ed4:	8e 89       	ldd	r24, Y+22	; 0x16
     ed6:	9f 89       	ldd	r25, Y+23	; 0x17
     ed8:	9b 8f       	std	Y+27, r25	; 0x1b
     eda:	8a 8f       	std	Y+26, r24	; 0x1a

00000edc <.LBB191>:
     edc:	8a 8d       	ldd	r24, Y+26	; 0x1a
     ede:	9b 8d       	ldd	r25, Y+27	; 0x1b

00000ee0 <.L1^B14>:
     ee0:	01 97       	sbiw	r24, 0x01	; 1
     ee2:	f1 f7       	brne	.-4      	; 0xee0 <.L1^B14>
     ee4:	9b 8f       	std	Y+27, r25	; 0x1b
     ee6:	8a 8f       	std	Y+26, r24	; 0x1a

00000ee8 <.Loc.127>:
}
     ee8:	43 c0       	rjmp	.+134    	; 0xf70 <.L58>

00000eea <.L102>:
	else if (__tmp > 255)
     eea:	20 e0       	ldi	r18, 0x00	; 0
     eec:	30 e0       	ldi	r19, 0x00	; 0
     eee:	4f e7       	ldi	r20, 0x7F	; 127
     ef0:	53 e4       	ldi	r21, 0x43	; 67
     ef2:	6d 81       	ldd	r22, Y+5	; 0x05
     ef4:	7e 81       	ldd	r23, Y+6	; 0x06
     ef6:	8f 81       	ldd	r24, Y+7	; 0x07
     ef8:	98 85       	ldd	r25, Y+8	; 0x08
     efa:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
     efe:	88 23       	and	r24, r24
     f00:	19 f1       	breq	.+70     	; 0xf48 <.L105>
     f02:	14 f1       	brlt	.+68     	; 0xf48 <.L105>

00000f04 <.LBB193>:
		uint16_t __ticks=(uint16_t)__tmp2;
     f04:	69 85       	ldd	r22, Y+9	; 0x09
     f06:	7a 85       	ldd	r23, Y+10	; 0x0a
     f08:	8b 85       	ldd	r24, Y+11	; 0x0b
     f0a:	9c 85       	ldd	r25, Y+12	; 0x0c
     f0c:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
     f10:	cd 50       	subi	r28, 0x0D	; 13
     f12:	df 4f       	sbci	r29, 0xFF	; 255
     f14:	68 83       	st	Y, r22
     f16:	79 83       	std	Y+1, r23	; 0x01
     f18:	8a 83       	std	Y+2, r24	; 0x02
     f1a:	9b 83       	std	Y+3, r25	; 0x03
     f1c:	c3 5f       	subi	r28, 0xF3	; 243
     f1e:	d0 40       	sbci	r29, 0x00	; 0
     f20:	cd 50       	subi	r28, 0x0D	; 13
     f22:	df 4f       	sbci	r29, 0xFF	; 255
     f24:	88 81       	ld	r24, Y
     f26:	99 81       	ldd	r25, Y+1	; 0x01
     f28:	c3 5f       	subi	r28, 0xF3	; 243
     f2a:	d0 40       	sbci	r29, 0x00	; 0
     f2c:	9d 8f       	std	Y+29, r25	; 0x1d
     f2e:	8c 8f       	std	Y+28, r24	; 0x1c
     f30:	8c 8d       	ldd	r24, Y+28	; 0x1c
     f32:	9d 8d       	ldd	r25, Y+29	; 0x1d
     f34:	9f 8f       	std	Y+31, r25	; 0x1f
     f36:	8e 8f       	std	Y+30, r24	; 0x1e

00000f38 <.LBB194>:
	__asm__ volatile (
     f38:	8e 8d       	ldd	r24, Y+30	; 0x1e
     f3a:	9f 8d       	ldd	r25, Y+31	; 0x1f

00000f3c <.L1^B15>:
     f3c:	01 97       	sbiw	r24, 0x01	; 1
     f3e:	f1 f7       	brne	.-4      	; 0xf3c <.L1^B15>
     f40:	9f 8f       	std	Y+31, r25	; 0x1f
     f42:	8e 8f       	std	Y+30, r24	; 0x1e

00000f44 <.Loc.131>:
	...

00000f46 <.LBE194>:
		return;
     f46:	1b c0       	rjmp	.+54     	; 0xf7e <.L71>

00000f48 <.L105>:
		__ticks = (uint8_t)__tmp;
     f48:	6d 81       	ldd	r22, Y+5	; 0x05
     f4a:	7e 81       	ldd	r23, Y+6	; 0x06
     f4c:	8f 81       	ldd	r24, Y+7	; 0x07
     f4e:	98 85       	ldd	r25, Y+8	; 0x08
     f50:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
     f54:	c9 50       	subi	r28, 0x09	; 9
     f56:	df 4f       	sbci	r29, 0xFF	; 255
     f58:	68 83       	st	Y, r22
     f5a:	79 83       	std	Y+1, r23	; 0x01
     f5c:	8a 83       	std	Y+2, r24	; 0x02
     f5e:	9b 83       	std	Y+3, r25	; 0x03
     f60:	c7 5f       	subi	r28, 0xF7	; 247
     f62:	d0 40       	sbci	r29, 0x00	; 0
     f64:	c9 50       	subi	r28, 0x09	; 9
     f66:	df 4f       	sbci	r29, 0xFF	; 255
     f68:	98 81       	ld	r25, Y
     f6a:	c7 5f       	subi	r28, 0xF7	; 247
     f6c:	d0 40       	sbci	r29, 0x00	; 0
     f6e:	9d 87       	std	Y+13, r25	; 0x0d

00000f70 <.L58>:
     f70:	8d 85       	ldd	r24, Y+13	; 0x0d
     f72:	88 a3       	std	Y+32, r24	; 0x20

00000f74 <.LBB196>:
	__asm__ volatile (
     f74:	88 a1       	ldd	r24, Y+32	; 0x20

00000f76 <.L1^B16>:
     f76:	8a 95       	dec	r24
     f78:	f1 f7       	brne	.-4      	; 0xf76 <.L1^B16>
     f7a:	88 a3       	std	Y+32, r24	; 0x20

00000f7c <.Loc.135>:
	...

00000f7e <.L71>:
	/* Preliminary Function Set instruction - used only to set the 4-bit mode.
	 The number of lines or the font cannot be set at this time since the controller is still in the
	 8-bit mode, but the data transfer mode can be changed since this parameter is determined by one
	 of the upper four bits of the instruction. */

	lcd_write_4(lcd_FunctionSet4bit);	// Set 4-bit mode
     f7e:	88 e2       	ldi	r24, 0x28	; 40
     f80:	0e 94 30 09 	call	0x1260	; 0x1260 <lcd_write_4>

00000f84 <.Loc.137>:
	// From this point on the busy flag is available

	// Function Set instruction
	lcd_check_BF_4();    // Makes sure LCD controller is ready
     f84:	0e 94 c8 0c 	call	0x1990	; 0x1990 <lcd_check_BF_4>

00000f88 <.Loc.138>:

	lcd_write_instruction_4f(lcd_FunctionSet4bit);  // Set mode, lines, and font
     f88:	88 e2       	ldi	r24, 0x28	; 40
     f8a:	0e 94 02 09 	call	0x1204	; 0x1204 <lcd_write_instruction_4f>

00000f8e <.Loc.139>:
	/*The next three instructions are specified in the data sheet as part of the initialization routine,
	  so it is a good idea (but probably not necessary) to do them just as specified and then redo them
	  later if the application requires a different configuration.*/

	/* Display On/Off Control instruction */
	lcd_check_BF_4();
     f8e:	0e 94 c8 0c 	call	0x1990	; 0x1990 <lcd_check_BF_4>

00000f92 <.Loc.140>:
	lcd_write_instruction_4f(lcd_DisplayOff);       // Turn display OFF
     f92:	88 e0       	ldi	r24, 0x08	; 8
     f94:	0e 94 02 09 	call	0x1204	; 0x1204 <lcd_write_instruction_4f>

00000f98 <.Loc.141>:

	/* Clear Display instruction */
	lcd_check_BF_4();
     f98:	0e 94 c8 0c 	call	0x1990	; 0x1990 <lcd_check_BF_4>

00000f9c <.Loc.142>:
	lcd_write_instruction_4f(lcd_Clear);            // Clear display RAM
     f9c:	81 e0       	ldi	r24, 0x01	; 1
     f9e:	0e 94 02 09 	call	0x1204	; 0x1204 <lcd_write_instruction_4f>

00000fa2 <.Loc.143>:

	/* Entry Mode Set instruction */
	lcd_check_BF_4();
     fa2:	0e 94 c8 0c 	call	0x1990	; 0x1990 <lcd_check_BF_4>

00000fa6 <.Loc.144>:
	lcd_write_instruction_4f(lcd_EntryMode);        // Set desired shift characteristics
     fa6:	86 e0       	ldi	r24, 0x06	; 6
     fa8:	0e 94 02 09 	call	0x1204	; 0x1204 <lcd_write_instruction_4f>

00000fac <.Loc.145>:
	/*This is the end of the LCD controller initialization as specified in the data sheet, but the display
	  has been left in the OFF condition.  This is a good time to turn the display back ON. */

	/* Display On/Off Control instruction */
	lcd_check_BF_4();
     fac:	0e 94 c8 0c 	call	0x1990	; 0x1990 <lcd_check_BF_4>

00000fb0 <.Loc.146>:
	lcd_write_instruction_4f(lcd_DisplayOn);        // turn the display ON
     fb0:	8c e0       	ldi	r24, 0x0C	; 12
     fb2:	0e 94 02 09 	call	0x1204	; 0x1204 <lcd_write_instruction_4f>

00000fb6 <.Loc.147>:
}
     fb6:	00 00       	nop
     fb8:	c6 50       	subi	r28, 0x06	; 6
     fba:	df 4f       	sbci	r29, 0xFF	; 255
     fbc:	0f b6       	in	r0, 0x3f	; 63
     fbe:	f8 94       	cli
     fc0:	de bf       	out	0x3e, r29	; 62
     fc2:	0f be       	out	0x3f, r0	; 63
     fc4:	cd bf       	out	0x3d, r28	; 61
     fc6:	df 91       	pop	r29
     fc8:	cf 91       	pop	r28
     fca:	1f 91       	pop	r17
     fcc:	0f 91       	pop	r16
     fce:	08 95       	ret

00000fd0 <updateLCDScreen>:
Inputs:		two pointers to a uint8 type data and 2 values, one for each row
Outputs:	none
Description:commands writing on LCD line by line
******************************************************************** */
void updateLCDScreen(uint8_t row, char * s1, int data, char * s2)
{
     fd0:	cf 93       	push	r28
     fd2:	df 93       	push	r29
     fd4:	cd b7       	in	r28, 0x3d	; 61
     fd6:	de b7       	in	r29, 0x3e	; 62
     fd8:	af 97       	sbiw	r28, 0x2f	; 47
     fda:	0f b6       	in	r0, 0x3f	; 63
     fdc:	f8 94       	cli
     fde:	de bf       	out	0x3e, r29	; 62
     fe0:	0f be       	out	0x3f, r0	; 63
     fe2:	cd bf       	out	0x3d, r28	; 61
     fe4:	89 a7       	std	Y+41, r24	; 0x29
     fe6:	7b a7       	std	Y+43, r23	; 0x2b
     fe8:	6a a7       	std	Y+42, r22	; 0x2a
     fea:	5d a7       	std	Y+45, r21	; 0x2d
     fec:	4c a7       	std	Y+44, r20	; 0x2c
     fee:	3f a7       	std	Y+47, r19	; 0x2f
     ff0:	2e a7       	std	Y+46, r18	; 0x2e

00000ff2 <.Loc.149>:
	/* convert data to string [buf] */
	char data2char[5] = "     ";
     ff2:	25 e0       	ldi	r18, 0x05	; 5
     ff4:	ea e1       	ldi	r30, 0x1A	; 26
     ff6:	f2 e0       	ldi	r31, 0x02	; 2
     ff8:	ce 01       	movw	r24, r28
     ffa:	01 96       	adiw	r24, 0x01	; 1
     ffc:	dc 01       	movw	r26, r24

00000ffe <.L^B1>:
     ffe:	01 90       	ld	r0, Z+
    1000:	0d 92       	st	X+, r0
    1002:	2a 95       	dec	r18
    1004:	e1 f7       	brne	.-8      	; 0xffe <.L^B1>

00001006 <.Loc.150>:
	char charRow[17];
	char emptyString[] = "                 ";	//17 empty spaces
    1006:	82 e1       	ldi	r24, 0x12	; 18
    1008:	ef e1       	ldi	r30, 0x1F	; 31
    100a:	f2 e0       	ldi	r31, 0x02	; 2
    100c:	de 01       	movw	r26, r28
    100e:	57 96       	adiw	r26, 0x17	; 23

00001010 <.L^B2>:
    1010:	01 90       	ld	r0, Z+
    1012:	0d 92       	st	X+, r0
    1014:	8a 95       	dec	r24
    1016:	e1 f7       	brne	.-8      	; 0x1010 <.L^B2>

00001018 <.Loc.151>:

	if (data != NONE)	{ itoa(data, data2char, 10);}
    1018:	8c a5       	ldd	r24, Y+44	; 0x2c
    101a:	9d a5       	ldd	r25, Y+45	; 0x2d
    101c:	8f 3f       	cpi	r24, 0xFF	; 255
    101e:	91 05       	cpc	r25, r1
    1020:	51 f0       	breq	.+20     	; 0x1036 <.L107>

00001022 <.Loc.152>:
    1022:	8c a5       	ldd	r24, Y+44	; 0x2c
    1024:	9d a5       	ldd	r25, Y+45	; 0x2d
    1026:	4a e0       	ldi	r20, 0x0A	; 10
    1028:	50 e0       	ldi	r21, 0x00	; 0
    102a:	9e 01       	movw	r18, r28
    102c:	2f 5f       	subi	r18, 0xFF	; 255
    102e:	3f 4f       	sbci	r19, 0xFF	; 255
    1030:	b9 01       	movw	r22, r18
    1032:	0e 94 f8 20 	call	0x41f0	; 0x41f0 <itoa>

00001036 <.L107>:
	if (strcmp(s1, "NONE") == 0 ) { s1 = ""; }
    1036:	8a a5       	ldd	r24, Y+42	; 0x2a
    1038:	9b a5       	ldd	r25, Y+43	; 0x2b
    103a:	62 e0       	ldi	r22, 0x02	; 2
    103c:	72 e0       	ldi	r23, 0x02	; 2
    103e:	0e 94 ef 20 	call	0x41de	; 0x41de <strcmp>

00001042 <.Loc.154>:
    1042:	00 97       	sbiw	r24, 0x00	; 0
    1044:	21 f4       	brne	.+8      	; 0x104e <.L108>

00001046 <.Loc.155>:
    1046:	87 e0       	ldi	r24, 0x07	; 7
    1048:	92 e0       	ldi	r25, 0x02	; 2
    104a:	9b a7       	std	Y+43, r25	; 0x2b
    104c:	8a a7       	std	Y+42, r24	; 0x2a

0000104e <.L108>:
	if (strcmp(s2, "NONE") == 0 ) { s2 = ""; }
    104e:	8e a5       	ldd	r24, Y+46	; 0x2e
    1050:	9f a5       	ldd	r25, Y+47	; 0x2f
    1052:	62 e0       	ldi	r22, 0x02	; 2
    1054:	72 e0       	ldi	r23, 0x02	; 2
    1056:	0e 94 ef 20 	call	0x41de	; 0x41de <strcmp>

0000105a <.Loc.157>:
    105a:	00 97       	sbiw	r24, 0x00	; 0
    105c:	21 f4       	brne	.+8      	; 0x1066 <.L109>

0000105e <.Loc.158>:
    105e:	87 e0       	ldi	r24, 0x07	; 7
    1060:	92 e0       	ldi	r25, 0x02	; 2
    1062:	9f a7       	std	Y+47, r25	; 0x2f
    1064:	8e a7       	std	Y+46, r24	; 0x2e

00001066 <.L109>:

	/* Create the strings to be displayed */
	snprintf( charRow, sizeof charRow, "%s%s%s%s", s1, data2char, s2, emptyString );
    1066:	ce 01       	movw	r24, r28
    1068:	47 96       	adiw	r24, 0x17	; 23
    106a:	29 2f       	mov	r18, r25
    106c:	2f 93       	push	r18
    106e:	8f 93       	push	r24
    1070:	8f a5       	ldd	r24, Y+47	; 0x2f
    1072:	8f 93       	push	r24
    1074:	8e a5       	ldd	r24, Y+46	; 0x2e
    1076:	8f 93       	push	r24
    1078:	ce 01       	movw	r24, r28
    107a:	01 96       	adiw	r24, 0x01	; 1
    107c:	9f 93       	push	r25
    107e:	8f 93       	push	r24
    1080:	8b a5       	ldd	r24, Y+43	; 0x2b
    1082:	8f 93       	push	r24
    1084:	8a a5       	ldd	r24, Y+42	; 0x2a
    1086:	8f 93       	push	r24
    1088:	88 e0       	ldi	r24, 0x08	; 8
    108a:	92 e0       	ldi	r25, 0x02	; 2
    108c:	89 2f       	mov	r24, r25
    108e:	8f 93       	push	r24
    1090:	88 e0       	ldi	r24, 0x08	; 8
    1092:	92 e0       	ldi	r25, 0x02	; 2
    1094:	8f 93       	push	r24
    1096:	1f 92       	push	r1
    1098:	81 e1       	ldi	r24, 0x11	; 17
    109a:	8f 93       	push	r24
    109c:	ce 01       	movw	r24, r28
    109e:	06 96       	adiw	r24, 0x06	; 6
    10a0:	29 2f       	mov	r18, r25
    10a2:	2f 93       	push	r18
    10a4:	8f 93       	push	r24
    10a6:	0e 94 28 21 	call	0x4250	; 0x4250 <snprintf>
    10aa:	8d b7       	in	r24, 0x3d	; 61
    10ac:	9e b7       	in	r25, 0x3e	; 62
    10ae:	0e 96       	adiw	r24, 0x0e	; 14
    10b0:	0f b6       	in	r0, 0x3f	; 63
    10b2:	f8 94       	cli
    10b4:	de bf       	out	0x3e, r29	; 62
    10b6:	0f be       	out	0x3f, r0	; 63
    10b8:	cd bf       	out	0x3d, r28	; 61

000010ba <.Loc.160>:
	if (strcmp(s1, "CLEAR") == 0 ) { snprintf( charRow, sizeof charRow, "%s", emptyString ); };
    10ba:	8a a5       	ldd	r24, Y+42	; 0x2a
    10bc:	9b a5       	ldd	r25, Y+43	; 0x2b
    10be:	61 e1       	ldi	r22, 0x11	; 17
    10c0:	72 e0       	ldi	r23, 0x02	; 2
    10c2:	0e 94 ef 20 	call	0x41de	; 0x41de <strcmp>

000010c6 <.Loc.161>:
    10c6:	00 97       	sbiw	r24, 0x00	; 0
    10c8:	f1 f4       	brne	.+60     	; 0x1106 <.L110>

000010ca <.Loc.162>:
    10ca:	ce 01       	movw	r24, r28
    10cc:	47 96       	adiw	r24, 0x17	; 23
    10ce:	29 2f       	mov	r18, r25
    10d0:	2f 93       	push	r18
    10d2:	8f 93       	push	r24
    10d4:	87 e1       	ldi	r24, 0x17	; 23
    10d6:	92 e0       	ldi	r25, 0x02	; 2
    10d8:	89 2f       	mov	r24, r25
    10da:	8f 93       	push	r24
    10dc:	87 e1       	ldi	r24, 0x17	; 23
    10de:	92 e0       	ldi	r25, 0x02	; 2
    10e0:	8f 93       	push	r24
    10e2:	1f 92       	push	r1
    10e4:	81 e1       	ldi	r24, 0x11	; 17
    10e6:	8f 93       	push	r24
    10e8:	ce 01       	movw	r24, r28
    10ea:	06 96       	adiw	r24, 0x06	; 6
    10ec:	29 2f       	mov	r18, r25
    10ee:	2f 93       	push	r18
    10f0:	8f 93       	push	r24
    10f2:	0e 94 28 21 	call	0x4250	; 0x4250 <snprintf>
    10f6:	8d b7       	in	r24, 0x3d	; 61
    10f8:	9e b7       	in	r25, 0x3e	; 62
    10fa:	08 96       	adiw	r24, 0x08	; 8
    10fc:	0f b6       	in	r0, 0x3f	; 63
    10fe:	f8 94       	cli
    1100:	de bf       	out	0x3e, r29	; 62
    1102:	0f be       	out	0x3f, r0	; 63
    1104:	cd bf       	out	0x3d, r28	; 61

00001106 <.L110>:

	switch(row) {
    1106:	89 a5       	ldd	r24, Y+41	; 0x29
    1108:	88 2f       	mov	r24, r24
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	81 30       	cpi	r24, 0x01	; 1
    110e:	91 05       	cpc	r25, r1
    1110:	21 f0       	breq	.+8      	; 0x111a <.L111>
    1112:	82 30       	cpi	r24, 0x02	; 2
    1114:	91 05       	cpc	r25, r1
    1116:	29 f0       	breq	.+10     	; 0x1122 <.L112>
    1118:	08 c0       	rjmp	.+16     	; 0x112a <.L113>

0000111a <.L111>:
		case 1: /* ======= Line 1 ======= */
			lcd_write_instruction_4f(lcd_SetCursor | lcd_LineOne);
    111a:	80 e8       	ldi	r24, 0x80	; 128
    111c:	0e 94 02 09 	call	0x1204	; 0x1204 <lcd_write_instruction_4f>

00001120 <.Loc.165>:
			break;
    1120:	04 c0       	rjmp	.+8      	; 0x112a <.L113>

00001122 <.L112>:
		case 2: /* ======= Line 2 ======= */
			lcd_write_instruction_4f(lcd_SetCursor | lcd_LineTwo);
    1122:	80 ec       	ldi	r24, 0xC0	; 192
    1124:	0e 94 02 09 	call	0x1204	; 0x1204 <lcd_write_instruction_4f>

00001128 <.Loc.167>:
	...

0000112a <.L113>:
			break;
	}
	lcd_write_string_4f((unsigned char*) charRow);
    112a:	ce 01       	movw	r24, r28
    112c:	06 96       	adiw	r24, 0x06	; 6
    112e:	0e 94 a3 08 	call	0x1146	; 0x1146 <lcd_write_string_4f>

00001132 <.Loc.169>:
}
    1132:	00 00       	nop
    1134:	af 96       	adiw	r28, 0x2f	; 47
    1136:	0f b6       	in	r0, 0x3f	; 63
    1138:	f8 94       	cli
    113a:	de bf       	out	0x3e, r29	; 62
    113c:	0f be       	out	0x3f, r0	; 63
    113e:	cd bf       	out	0x3d, r28	; 61
    1140:	df 91       	pop	r29
    1142:	cf 91       	pop	r28
    1144:	08 95       	ret

00001146 <lcd_write_string_4f>:
Inputs:		string to be displayed (stringData)
Outputs:	none
Description:writes a string of characters on LCD; uses the busy flag
******************************************************************** */
void lcd_write_string_4f(uint8_t stringData[])
{
    1146:	cf 93       	push	r28
    1148:	df 93       	push	r29
    114a:	00 d0       	rcall	.+0      	; 0x114c <L0^A>

0000114c <L0^A>:
    114c:	0f 92       	push	r0
    114e:	cd b7       	in	r28, 0x3d	; 61
    1150:	de b7       	in	r29, 0x3e	; 62
    1152:	9c 83       	std	Y+4, r25	; 0x04
    1154:	8b 83       	std	Y+3, r24	; 0x03

00001156 <.Loc.171>:
    volatile int i = 0;                             // Character counter
    1156:	1a 82       	std	Y+2, r1	; 0x02
    1158:	19 82       	std	Y+1, r1	; 0x01

0000115a <.Loc.172>:
    while (stringData[i] != 0)
    115a:	12 c0       	rjmp	.+36     	; 0x1180 <.L115>

0000115c <.L116>:
    {
        lcd_check_BF_4();                           // Make sure LCD controller is ready
    115c:	0e 94 c8 0c 	call	0x1990	; 0x1990 <lcd_check_BF_4>

00001160 <.Loc.174>:
        lcd_write_character_4f(stringData[i]);
    1160:	89 81       	ldd	r24, Y+1	; 0x01
    1162:	9a 81       	ldd	r25, Y+2	; 0x02
    1164:	9c 01       	movw	r18, r24
    1166:	8b 81       	ldd	r24, Y+3	; 0x03
    1168:	9c 81       	ldd	r25, Y+4	; 0x04
    116a:	82 0f       	add	r24, r18
    116c:	93 1f       	adc	r25, r19

0000116e <.Loc.175>:
    116e:	fc 01       	movw	r30, r24
    1170:	80 81       	ld	r24, Z
    1172:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <lcd_write_character_4f>

00001176 <.Loc.176>:
        i++;
    1176:	89 81       	ldd	r24, Y+1	; 0x01
    1178:	9a 81       	ldd	r25, Y+2	; 0x02
    117a:	01 96       	adiw	r24, 0x01	; 1
    117c:	9a 83       	std	Y+2, r25	; 0x02
    117e:	89 83       	std	Y+1, r24	; 0x01

00001180 <.L115>:
    while (stringData[i] != 0)
    1180:	89 81       	ldd	r24, Y+1	; 0x01
    1182:	9a 81       	ldd	r25, Y+2	; 0x02
    1184:	9c 01       	movw	r18, r24
    1186:	8b 81       	ldd	r24, Y+3	; 0x03
    1188:	9c 81       	ldd	r25, Y+4	; 0x04
    118a:	82 0f       	add	r24, r18
    118c:	93 1f       	adc	r25, r19
    118e:	fc 01       	movw	r30, r24
    1190:	80 81       	ld	r24, Z

00001192 <.Loc.178>:
    1192:	88 23       	and	r24, r24
    1194:	19 f7       	brne	.-58     	; 0x115c <.L116>

00001196 <.Loc.179>:
    }
}
    1196:	00 00       	nop
    1198:	00 00       	nop
    119a:	0f 90       	pop	r0
    119c:	0f 90       	pop	r0
    119e:	0f 90       	pop	r0
    11a0:	0f 90       	pop	r0
    11a2:	df 91       	pop	r29
    11a4:	cf 91       	pop	r28
    11a6:	08 95       	ret

000011a8 <lcd_write_character_4f>:
Outputs:	none
Description:sends a byte to the LCD data register, configures RW
			(busy flag is implemented)
******************************************************************** */
void lcd_write_character_4f(uint8_t theChar)
{
    11a8:	cf 93       	push	r28
    11aa:	df 93       	push	r29
    11ac:	0f 92       	push	r0
    11ae:	cd b7       	in	r28, 0x3d	; 61
    11b0:	de b7       	in	r29, 0x3e	; 62
    11b2:	89 83       	std	Y+1, r24	; 0x01

000011b4 <.Loc.181>:
    set_RW_LOW_write;					// Write to LCD module (RW low)
    11b4:	88 e2       	ldi	r24, 0x28	; 40
    11b6:	90 e0       	ldi	r25, 0x00	; 0
    11b8:	fc 01       	movw	r30, r24
    11ba:	20 81       	ld	r18, Z
    11bc:	88 e2       	ldi	r24, 0x28	; 40
    11be:	90 e0       	ldi	r25, 0x00	; 0
    11c0:	2b 7f       	andi	r18, 0xFB	; 251
    11c2:	fc 01       	movw	r30, r24
    11c4:	20 83       	st	Z, r18

000011c6 <.Loc.182>:
    set_RS_HIGH_Data;					// Select the Data Register (RS high)
    11c6:	88 e2       	ldi	r24, 0x28	; 40
    11c8:	90 e0       	ldi	r25, 0x00	; 0
    11ca:	fc 01       	movw	r30, r24
    11cc:	20 81       	ld	r18, Z
    11ce:	88 e2       	ldi	r24, 0x28	; 40
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	22 60       	ori	r18, 0x02	; 2
    11d4:	fc 01       	movw	r30, r24
    11d6:	20 83       	st	Z, r18

000011d8 <.Loc.183>:
    disable_E_Pin;						// Make sure E is initially low
    11d8:	88 e2       	ldi	r24, 0x28	; 40
    11da:	90 e0       	ldi	r25, 0x00	; 0
    11dc:	fc 01       	movw	r30, r24
    11de:	20 81       	ld	r18, Z
    11e0:	88 e2       	ldi	r24, 0x28	; 40
    11e2:	90 e0       	ldi	r25, 0x00	; 0
    11e4:	27 7f       	andi	r18, 0xF7	; 247
    11e6:	fc 01       	movw	r30, r24
    11e8:	20 83       	st	Z, r18

000011ea <.Loc.184>:
    lcd_write_4(theChar);				// Write the upper 4-bits of the data
    11ea:	89 81       	ldd	r24, Y+1	; 0x01
    11ec:	0e 94 30 09 	call	0x1260	; 0x1260 <lcd_write_4>

000011f0 <.Loc.185>:
    lcd_write_4(theChar << 4);			// Write the lower 4-bits of the data
    11f0:	89 81       	ldd	r24, Y+1	; 0x01
    11f2:	82 95       	swap	r24
    11f4:	80 7f       	andi	r24, 0xF0	; 240
    11f6:	0e 94 30 09 	call	0x1260	; 0x1260 <lcd_write_4>

000011fa <.Loc.186>:
}
    11fa:	00 00       	nop
    11fc:	0f 90       	pop	r0
    11fe:	df 91       	pop	r29
    1200:	cf 91       	pop	r28
    1202:	08 95       	ret

00001204 <lcd_write_instruction_4f>:
Outputs:	none
Description:sends a byte to the LCD instruction register, configures RW
			(busy flag is implemented)
******************************************************************** */
void lcd_write_instruction_4f(uint8_t theInstruction)
{
    1204:	cf 93       	push	r28
    1206:	df 93       	push	r29
    1208:	0f 92       	push	r0
    120a:	cd b7       	in	r28, 0x3d	; 61
    120c:	de b7       	in	r29, 0x3e	; 62
    120e:	89 83       	std	Y+1, r24	; 0x01

00001210 <.Loc.188>:
    set_RW_LOW_write;					// Write to LCD module (RW low)
    1210:	88 e2       	ldi	r24, 0x28	; 40
    1212:	90 e0       	ldi	r25, 0x00	; 0
    1214:	fc 01       	movw	r30, r24
    1216:	20 81       	ld	r18, Z
    1218:	88 e2       	ldi	r24, 0x28	; 40
    121a:	90 e0       	ldi	r25, 0x00	; 0
    121c:	2b 7f       	andi	r18, 0xFB	; 251
    121e:	fc 01       	movw	r30, r24
    1220:	20 83       	st	Z, r18

00001222 <.Loc.189>:
    set_RS_LOW_Instr;					// Select the Data Register (RS high)
    1222:	88 e2       	ldi	r24, 0x28	; 40
    1224:	90 e0       	ldi	r25, 0x00	; 0
    1226:	fc 01       	movw	r30, r24
    1228:	20 81       	ld	r18, Z
    122a:	88 e2       	ldi	r24, 0x28	; 40
    122c:	90 e0       	ldi	r25, 0x00	; 0
    122e:	2d 7f       	andi	r18, 0xFD	; 253
    1230:	fc 01       	movw	r30, r24
    1232:	20 83       	st	Z, r18

00001234 <.Loc.190>:
    disable_E_Pin;						// Make sure E is initially low
    1234:	88 e2       	ldi	r24, 0x28	; 40
    1236:	90 e0       	ldi	r25, 0x00	; 0
    1238:	fc 01       	movw	r30, r24
    123a:	20 81       	ld	r18, Z
    123c:	88 e2       	ldi	r24, 0x28	; 40
    123e:	90 e0       	ldi	r25, 0x00	; 0
    1240:	27 7f       	andi	r18, 0xF7	; 247
    1242:	fc 01       	movw	r30, r24
    1244:	20 83       	st	Z, r18

00001246 <.Loc.191>:
    lcd_write_4(theInstruction);		// Write the upper 4-bits of the data
    1246:	89 81       	ldd	r24, Y+1	; 0x01
    1248:	0e 94 30 09 	call	0x1260	; 0x1260 <lcd_write_4>

0000124c <.Loc.192>:
    lcd_write_4(theInstruction << 4);	// Write the lower 4-bits of the data
    124c:	89 81       	ldd	r24, Y+1	; 0x01
    124e:	82 95       	swap	r24
    1250:	80 7f       	andi	r24, 0xF0	; 240
    1252:	0e 94 30 09 	call	0x1260	; 0x1260 <lcd_write_4>

00001256 <.Loc.193>:
}
    1256:	00 00       	nop
    1258:	0f 90       	pop	r0
    125a:	df 91       	pop	r29
    125c:	cf 91       	pop	r28
    125e:	08 95       	ret

00001260 <lcd_write_4>:
			RS is configured for the expected register
			E is low, RW is low
			uses either time delays or the busy flag
******************************************************************** */
void lcd_write_4(uint8_t theNibble)
{
    1260:	cf 93       	push	r28
    1262:	df 93       	push	r29
    1264:	cd b7       	in	r28, 0x3d	; 61
    1266:	de b7       	in	r29, 0x3e	; 62
    1268:	c8 59       	subi	r28, 0x98	; 152
    126a:	d1 09       	sbc	r29, r1
    126c:	0f b6       	in	r0, 0x3f	; 63
    126e:	f8 94       	cli
    1270:	de bf       	out	0x3e, r29	; 62
    1272:	0f be       	out	0x3f, r0	; 63
    1274:	cd bf       	out	0x3d, r28	; 61
    1276:	9e 01       	movw	r18, r28
    1278:	2a 5b       	subi	r18, 0xBA	; 186
    127a:	3f 4f       	sbci	r19, 0xFF	; 255
    127c:	f9 01       	movw	r30, r18
    127e:	80 83       	st	Z, r24

00001280 <.Loc.195>:
	uint8_t mask[4] = {0};
    1280:	ce 01       	movw	r24, r28
    1282:	8e 5b       	subi	r24, 0xBE	; 190
    1284:	9f 4f       	sbci	r25, 0xFF	; 255
    1286:	fc 01       	movw	r30, r24
    1288:	11 82       	std	Z+1, r1	; 0x01
    128a:	10 82       	st	Z, r1
    128c:	fc 01       	movw	r30, r24
    128e:	13 82       	std	Z+3, r1	; 0x03
    1290:	12 82       	std	Z+2, r1	; 0x02

00001292 <.LBB198>:
	for (uint8_t i = 0; i < 4; i++)
    1292:	19 82       	std	Y+1, r1	; 0x01

00001294 <.Loc.197>:
    1294:	28 c0       	rjmp	.+80     	; 0x12e6 <.L120>

00001296 <.L122>:
	{
		if (theNibble & 1 << (7 - i))
    1296:	ce 01       	movw	r24, r28
    1298:	8a 5b       	subi	r24, 0xBA	; 186
    129a:	9f 4f       	sbci	r25, 0xFF	; 255
    129c:	fc 01       	movw	r30, r24
    129e:	80 81       	ld	r24, Z
    12a0:	88 2f       	mov	r24, r24
    12a2:	90 e0       	ldi	r25, 0x00	; 0

000012a4 <.Loc.199>:
    12a4:	29 81       	ldd	r18, Y+1	; 0x01
    12a6:	22 2f       	mov	r18, r18
    12a8:	30 e0       	ldi	r19, 0x00	; 0
    12aa:	47 e0       	ldi	r20, 0x07	; 7
    12ac:	50 e0       	ldi	r21, 0x00	; 0
    12ae:	fa 01       	movw	r30, r20
    12b0:	e2 1b       	sub	r30, r18
    12b2:	f3 0b       	sbc	r31, r19
    12b4:	9f 01       	movw	r18, r30

000012b6 <.Loc.200>:
    12b6:	02 2e       	mov	r0, r18
    12b8:	02 c0       	rjmp	.+4      	; 0x12be <.L2^B1>

000012ba <.L1^B17>:
    12ba:	95 95       	asr	r25
    12bc:	87 95       	ror	r24

000012be <.L2^B1>:
    12be:	0a 94       	dec	r0
    12c0:	e2 f7       	brpl	.-8      	; 0x12ba <.L1^B17>
    12c2:	81 70       	andi	r24, 0x01	; 1
    12c4:	99 27       	eor	r25, r25

000012c6 <.Loc.201>:
    12c6:	00 97       	sbiw	r24, 0x00	; 0
    12c8:	59 f0       	breq	.+22     	; 0x12e0 <.L121>

000012ca <.Loc.202>:
		{
			mask[i] = 1;
    12ca:	89 81       	ldd	r24, Y+1	; 0x01
    12cc:	88 2f       	mov	r24, r24
    12ce:	90 e0       	ldi	r25, 0x00	; 0

000012d0 <.Loc.203>:
    12d0:	9e 01       	movw	r18, r28
    12d2:	2e 5b       	subi	r18, 0xBE	; 190
    12d4:	3f 4f       	sbci	r19, 0xFF	; 255
    12d6:	82 0f       	add	r24, r18
    12d8:	93 1f       	adc	r25, r19
    12da:	21 e0       	ldi	r18, 0x01	; 1
    12dc:	fc 01       	movw	r30, r24
    12de:	20 83       	st	Z, r18

000012e0 <.L121>:
	for (uint8_t i = 0; i < 4; i++)
    12e0:	89 81       	ldd	r24, Y+1	; 0x01
    12e2:	8f 5f       	subi	r24, 0xFF	; 255
    12e4:	89 83       	std	Y+1, r24	; 0x01

000012e6 <.L120>:
    12e6:	89 81       	ldd	r24, Y+1	; 0x01
    12e8:	83 30       	cpi	r24, 0x03	; 3
    12ea:	a9 f2       	breq	.-86     	; 0x1296 <.L122>
    12ec:	a0 f2       	brcs	.-88     	; 0x1296 <.L122>

000012ee <.LBE198>:
		}
	}

	/* Clear bits in first step */
	lcd_Data_Port &= ~((1 << lcd_D7_bit) | (1 << lcd_D6_bit) | (1 << lcd_D5_bit) | (1 << lcd_D4_bit));
    12ee:	88 e2       	ldi	r24, 0x28	; 40
    12f0:	90 e0       	ldi	r25, 0x00	; 0
    12f2:	dc 01       	movw	r26, r24
    12f4:	2c 91       	ld	r18, X

000012f6 <.Loc.207>:
    12f6:	88 e2       	ldi	r24, 0x28	; 40
    12f8:	90 e0       	ldi	r25, 0x00	; 0

000012fa <.Loc.208>:
    12fa:	2f 70       	andi	r18, 0x0F	; 15
    12fc:	fc 01       	movw	r30, r24
    12fe:	20 83       	st	Z, r18

00001300 <.Loc.209>:

	/* Set bits where necessary */
	lcd_Data_Port |= ((mask[0]) << lcd_D7_bit | (mask[1]) << lcd_D6_bit | (mask[2]) << lcd_D5_bit | (mask[3]) << lcd_D4_bit);
    1300:	88 e2       	ldi	r24, 0x28	; 40
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	dc 01       	movw	r26, r24
    1306:	8c 91       	ld	r24, X
    1308:	38 2f       	mov	r19, r24

0000130a <.Loc.210>:
    130a:	ce 01       	movw	r24, r28
    130c:	8e 5b       	subi	r24, 0xBE	; 190
    130e:	9f 4f       	sbci	r25, 0xFF	; 255
    1310:	fc 01       	movw	r30, r24
    1312:	80 81       	ld	r24, Z
    1314:	88 2f       	mov	r24, r24
    1316:	90 e0       	ldi	r25, 0x00	; 0

00001318 <.Loc.211>:
    1318:	b8 2f       	mov	r27, r24
    131a:	b6 95       	lsr	r27
    131c:	a8 2f       	mov	r26, r24
    131e:	a7 95       	ror	r26
    1320:	aa 27       	eor	r26, r26
    1322:	a7 95       	ror	r26

00001324 <.Loc.212>:
    1324:	2a 2f       	mov	r18, r26

00001326 <.Loc.213>:
    1326:	ce 01       	movw	r24, r28
    1328:	8e 5b       	subi	r24, 0xBE	; 190
    132a:	9f 4f       	sbci	r25, 0xFF	; 255
    132c:	dc 01       	movw	r26, r24
    132e:	11 96       	adiw	r26, 0x01	; 1
    1330:	8c 91       	ld	r24, X
    1332:	88 2f       	mov	r24, r24
    1334:	90 e0       	ldi	r25, 0x00	; 0

00001336 <.Loc.214>:
    1336:	b8 2f       	mov	r27, r24
    1338:	b6 95       	lsr	r27
    133a:	b6 95       	lsr	r27
    133c:	c8 56       	subi	r28, 0x68	; 104
    133e:	df 4f       	sbci	r29, 0xFF	; 255
    1340:	b8 83       	st	Y, r27
    1342:	c8 59       	subi	r28, 0x98	; 152
    1344:	d0 40       	sbci	r29, 0x00	; 0
    1346:	e8 2f       	mov	r30, r24
    1348:	e2 95       	swap	r30
    134a:	ee 0f       	add	r30, r30
    134c:	ee 0f       	add	r30, r30
    134e:	e0 7c       	andi	r30, 0xC0	; 192
    1350:	c9 56       	subi	r28, 0x69	; 105
    1352:	df 4f       	sbci	r29, 0xFF	; 255
    1354:	e8 83       	st	Y, r30
    1356:	c7 59       	subi	r28, 0x97	; 151
    1358:	d0 40       	sbci	r29, 0x00	; 0

0000135a <.Loc.215>:
    135a:	c9 56       	subi	r28, 0x69	; 105
    135c:	df 4f       	sbci	r29, 0xFF	; 255
    135e:	88 81       	ld	r24, Y
    1360:	c7 59       	subi	r28, 0x97	; 151
    1362:	d0 40       	sbci	r29, 0x00	; 0
    1364:	28 2b       	or	r18, r24

00001366 <.Loc.216>:
    1366:	ce 01       	movw	r24, r28
    1368:	8e 5b       	subi	r24, 0xBE	; 190
    136a:	9f 4f       	sbci	r25, 0xFF	; 255
    136c:	dc 01       	movw	r26, r24
    136e:	12 96       	adiw	r26, 0x02	; 2
    1370:	8c 91       	ld	r24, X
    1372:	88 2f       	mov	r24, r24
    1374:	90 e0       	ldi	r25, 0x00	; 0

00001376 <.Loc.217>:
    1376:	78 2f       	mov	r23, r24
    1378:	76 95       	lsr	r23
    137a:	76 95       	lsr	r23
    137c:	76 95       	lsr	r23
    137e:	68 2f       	mov	r22, r24
    1380:	62 95       	swap	r22
    1382:	66 0f       	add	r22, r22
    1384:	60 7e       	andi	r22, 0xE0	; 224

00001386 <.Loc.218>:
    1386:	86 2f       	mov	r24, r22
    1388:	28 2b       	or	r18, r24

0000138a <.Loc.219>:
    138a:	ce 01       	movw	r24, r28
    138c:	8e 5b       	subi	r24, 0xBE	; 190
    138e:	9f 4f       	sbci	r25, 0xFF	; 255
    1390:	fc 01       	movw	r30, r24
    1392:	83 81       	ldd	r24, Z+3	; 0x03
    1394:	88 2f       	mov	r24, r24
    1396:	90 e0       	ldi	r25, 0x00	; 0

00001398 <.Loc.220>:
    1398:	82 95       	swap	r24
    139a:	92 95       	swap	r25
    139c:	90 7f       	andi	r25, 0xF0	; 240
    139e:	98 27       	eor	r25, r24
    13a0:	80 7f       	andi	r24, 0xF0	; 240
    13a2:	98 27       	eor	r25, r24

000013a4 <.Loc.221>:
    13a4:	82 2b       	or	r24, r18

000013a6 <.Loc.222>:
    13a6:	23 2f       	mov	r18, r19
    13a8:	28 2b       	or	r18, r24

000013aa <.Loc.223>:
    13aa:	88 e2       	ldi	r24, 0x28	; 40
    13ac:	90 e0       	ldi	r25, 0x00	; 0

000013ae <.Loc.224>:
    13ae:	dc 01       	movw	r26, r24
    13b0:	2c 93       	st	X, r18

000013b2 <.Loc.225>:

    /* Write the data */
    enable_E_Pin;                   // Enable pin high
    13b2:	88 e2       	ldi	r24, 0x28	; 40
    13b4:	90 e0       	ldi	r25, 0x00	; 0
    13b6:	fc 01       	movw	r30, r24
    13b8:	20 81       	ld	r18, Z
    13ba:	88 e2       	ldi	r24, 0x28	; 40
    13bc:	90 e0       	ldi	r25, 0x00	; 0
    13be:	28 60       	ori	r18, 0x08	; 8
    13c0:	dc 01       	movw	r26, r24
    13c2:	2c 93       	st	X, r18
    13c4:	80 e0       	ldi	r24, 0x00	; 0
    13c6:	90 e0       	ldi	r25, 0x00	; 0
    13c8:	a0 e8       	ldi	r26, 0x80	; 128
    13ca:	bf e3       	ldi	r27, 0x3F	; 63
    13cc:	8a a3       	std	Y+34, r24	; 0x22
    13ce:	9b a3       	std	Y+35, r25	; 0x23
    13d0:	ac a3       	std	Y+36, r26	; 0x24
    13d2:	bd a3       	std	Y+37, r27	; 0x25

000013d4 <.LBB199>:
	__tmp = ((F_CPU) / 3e6) * __us;
    13d4:	2b ea       	ldi	r18, 0xAB	; 171
    13d6:	3a ea       	ldi	r19, 0xAA	; 170
    13d8:	4a ea       	ldi	r20, 0xAA	; 170
    13da:	50 e4       	ldi	r21, 0x40	; 64
    13dc:	6a a1       	ldd	r22, Y+34	; 0x22
    13de:	7b a1       	ldd	r23, Y+35	; 0x23
    13e0:	8c a1       	ldd	r24, Y+36	; 0x24
    13e2:	9d a1       	ldd	r25, Y+37	; 0x25
    13e4:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    13e8:	63 96       	adiw	r28, 0x13	; 19
    13ea:	6c af       	std	Y+60, r22	; 0x3c
    13ec:	7d af       	std	Y+61, r23	; 0x3d
    13ee:	8e af       	std	Y+62, r24	; 0x3e
    13f0:	9f af       	std	Y+63, r25	; 0x3f
    13f2:	63 97       	sbiw	r28, 0x13	; 19
    13f4:	63 96       	adiw	r28, 0x13	; 19
    13f6:	8c ad       	ldd	r24, Y+60	; 0x3c
    13f8:	9d ad       	ldd	r25, Y+61	; 0x3d
    13fa:	ae ad       	ldd	r26, Y+62	; 0x3e
    13fc:	bf ad       	ldd	r27, Y+63	; 0x3f
    13fe:	63 97       	sbiw	r28, 0x13	; 19
    1400:	8e a3       	std	Y+38, r24	; 0x26
    1402:	9f a3       	std	Y+39, r25	; 0x27
    1404:	a8 a7       	std	Y+40, r26	; 0x28
    1406:	b9 a7       	std	Y+41, r27	; 0x29

00001408 <.Loc.227>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    1408:	20 e0       	ldi	r18, 0x00	; 0
    140a:	30 e0       	ldi	r19, 0x00	; 0
    140c:	40 e8       	ldi	r20, 0x80	; 128
    140e:	50 e4       	ldi	r21, 0x40	; 64
    1410:	6a a1       	ldd	r22, Y+34	; 0x22
    1412:	7b a1       	ldd	r23, Y+35	; 0x23
    1414:	8c a1       	ldd	r24, Y+36	; 0x24
    1416:	9d a1       	ldd	r25, Y+37	; 0x25
    1418:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    141c:	67 96       	adiw	r28, 0x17	; 23
    141e:	6c af       	std	Y+60, r22	; 0x3c
    1420:	7d af       	std	Y+61, r23	; 0x3d
    1422:	8e af       	std	Y+62, r24	; 0x3e
    1424:	9f af       	std	Y+63, r25	; 0x3f
    1426:	67 97       	sbiw	r28, 0x17	; 23
    1428:	67 96       	adiw	r28, 0x17	; 23
    142a:	8c ad       	ldd	r24, Y+60	; 0x3c
    142c:	9d ad       	ldd	r25, Y+61	; 0x3d
    142e:	ae ad       	ldd	r26, Y+62	; 0x3e
    1430:	bf ad       	ldd	r27, Y+63	; 0x3f
    1432:	67 97       	sbiw	r28, 0x17	; 23
    1434:	8a a7       	std	Y+42, r24	; 0x2a
    1436:	9b a7       	std	Y+43, r25	; 0x2b
    1438:	ac a7       	std	Y+44, r26	; 0x2c
    143a:	bd a7       	std	Y+45, r27	; 0x2d

0000143c <.Loc.228>:
	if (__tmp < 1.0)
    143c:	20 e0       	ldi	r18, 0x00	; 0
    143e:	30 e0       	ldi	r19, 0x00	; 0
    1440:	40 e8       	ldi	r20, 0x80	; 128
    1442:	5f e3       	ldi	r21, 0x3F	; 63
    1444:	6e a1       	ldd	r22, Y+38	; 0x26
    1446:	7f a1       	ldd	r23, Y+39	; 0x27
    1448:	88 a5       	ldd	r24, Y+40	; 0x28
    144a:	99 a5       	ldd	r25, Y+41	; 0x29
    144c:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
    1450:	88 23       	and	r24, r24
    1452:	1c f4       	brge	.+6      	; 0x145a <.L165>

00001454 <.Loc.229>:
		__ticks = 1;
    1454:	81 e0       	ldi	r24, 0x01	; 1
    1456:	8e a7       	std	Y+46, r24	; 0x2e
    1458:	0a c1       	rjmp	.+532    	; 0x166e <.L125>

0000145a <.L165>:
	else if (__tmp2 > 65535)
    145a:	20 e0       	ldi	r18, 0x00	; 0
    145c:	3f ef       	ldi	r19, 0xFF	; 255
    145e:	4f e7       	ldi	r20, 0x7F	; 127
    1460:	57 e4       	ldi	r21, 0x47	; 71
    1462:	6a a5       	ldd	r22, Y+42	; 0x2a
    1464:	7b a5       	ldd	r23, Y+43	; 0x2b
    1466:	8c a5       	ldd	r24, Y+44	; 0x2c
    1468:	9d a5       	ldd	r25, Y+45	; 0x2d
    146a:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    146e:	88 23       	and	r24, r24
    1470:	09 f0       	breq	.+2      	; 0x1474 <L0^A>

00001472 <L0^A>:
    1472:	0c f4       	brge	.+2      	; 0x1476 <.Loc.231>

00001474 <L0^A>:
    1474:	b6 c0       	rjmp	.+364    	; 0x15e2 <.L166>

00001476 <.Loc.231>:
		_delay_ms(__us / 1000.0);
    1476:	20 e0       	ldi	r18, 0x00	; 0
    1478:	30 e0       	ldi	r19, 0x00	; 0
    147a:	4a e7       	ldi	r20, 0x7A	; 122
    147c:	54 e4       	ldi	r21, 0x44	; 68
    147e:	6a a1       	ldd	r22, Y+34	; 0x22
    1480:	7b a1       	ldd	r23, Y+35	; 0x23
    1482:	8c a1       	ldd	r24, Y+36	; 0x24
    1484:	9d a1       	ldd	r25, Y+37	; 0x25
    1486:	0e 94 23 1f 	call	0x3e46	; 0x3e46 <__divsf3>
    148a:	6b 96       	adiw	r28, 0x1b	; 27
    148c:	6c af       	std	Y+60, r22	; 0x3c
    148e:	7d af       	std	Y+61, r23	; 0x3d
    1490:	8e af       	std	Y+62, r24	; 0x3e
    1492:	9f af       	std	Y+63, r25	; 0x3f
    1494:	6b 97       	sbiw	r28, 0x1b	; 27
    1496:	6b 96       	adiw	r28, 0x1b	; 27
    1498:	8c ad       	ldd	r24, Y+60	; 0x3c
    149a:	9d ad       	ldd	r25, Y+61	; 0x3d
    149c:	ae ad       	ldd	r26, Y+62	; 0x3e
    149e:	bf ad       	ldd	r27, Y+63	; 0x3f
    14a0:	6b 97       	sbiw	r28, 0x1b	; 27
    14a2:	8f a7       	std	Y+47, r24	; 0x2f
    14a4:	98 ab       	std	Y+48, r25	; 0x30
    14a6:	a9 ab       	std	Y+49, r26	; 0x31
    14a8:	ba ab       	std	Y+50, r27	; 0x32

000014aa <.LBB201>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    14aa:	20 e0       	ldi	r18, 0x00	; 0
    14ac:	30 e0       	ldi	r19, 0x00	; 0
    14ae:	4a e7       	ldi	r20, 0x7A	; 122
    14b0:	55 e4       	ldi	r21, 0x45	; 69
    14b2:	6f a5       	ldd	r22, Y+47	; 0x2f
    14b4:	78 a9       	ldd	r23, Y+48	; 0x30
    14b6:	89 a9       	ldd	r24, Y+49	; 0x31
    14b8:	9a a9       	ldd	r25, Y+50	; 0x32
    14ba:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    14be:	6f 96       	adiw	r28, 0x1f	; 31
    14c0:	6c af       	std	Y+60, r22	; 0x3c
    14c2:	7d af       	std	Y+61, r23	; 0x3d
    14c4:	8e af       	std	Y+62, r24	; 0x3e
    14c6:	9f af       	std	Y+63, r25	; 0x3f
    14c8:	6f 97       	sbiw	r28, 0x1f	; 31
    14ca:	6f 96       	adiw	r28, 0x1f	; 31
    14cc:	8c ad       	ldd	r24, Y+60	; 0x3c
    14ce:	9d ad       	ldd	r25, Y+61	; 0x3d
    14d0:	ae ad       	ldd	r26, Y+62	; 0x3e
    14d2:	bf ad       	ldd	r27, Y+63	; 0x3f
    14d4:	6f 97       	sbiw	r28, 0x1f	; 31
    14d6:	8b ab       	std	Y+51, r24	; 0x33
    14d8:	9c ab       	std	Y+52, r25	; 0x34
    14da:	ad ab       	std	Y+53, r26	; 0x35
    14dc:	be ab       	std	Y+54, r27	; 0x36

000014de <.Loc.233>:
	if (__tmp < 1.0)
    14de:	20 e0       	ldi	r18, 0x00	; 0
    14e0:	30 e0       	ldi	r19, 0x00	; 0
    14e2:	40 e8       	ldi	r20, 0x80	; 128
    14e4:	5f e3       	ldi	r21, 0x3F	; 63
    14e6:	6b a9       	ldd	r22, Y+51	; 0x33
    14e8:	7c a9       	ldd	r23, Y+52	; 0x34
    14ea:	8d a9       	ldd	r24, Y+53	; 0x35
    14ec:	9e a9       	ldd	r25, Y+54	; 0x36
    14ee:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
    14f2:	88 23       	and	r24, r24
    14f4:	2c f4       	brge	.+10     	; 0x1500 <.L167>

000014f6 <.Loc.234>:
		__ticks = 1;
    14f6:	81 e0       	ldi	r24, 0x01	; 1
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	98 af       	std	Y+56, r25	; 0x38
    14fc:	8f ab       	std	Y+55, r24	; 0x37
    14fe:	66 c0       	rjmp	.+204    	; 0x15cc <.L130>

00001500 <.L167>:
	else if (__tmp > 65535)
    1500:	20 e0       	ldi	r18, 0x00	; 0
    1502:	3f ef       	ldi	r19, 0xFF	; 255
    1504:	4f e7       	ldi	r20, 0x7F	; 127
    1506:	57 e4       	ldi	r21, 0x47	; 71
    1508:	6b a9       	ldd	r22, Y+51	; 0x33
    150a:	7c a9       	ldd	r23, Y+52	; 0x34
    150c:	8d a9       	ldd	r24, Y+53	; 0x35
    150e:	9e a9       	ldd	r25, Y+54	; 0x36
    1510:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    1514:	88 23       	and	r24, r24
    1516:	09 f0       	breq	.+2      	; 0x151a <L0^A>

00001518 <L0^A>:
    1518:	0c f4       	brge	.+2      	; 0x151c <.Loc.236>

0000151a <L0^A>:
    151a:	46 c0       	rjmp	.+140    	; 0x15a8 <.L168>

0000151c <.Loc.236>:
		__ticks = (uint16_t) (__ms * 10.0);
    151c:	20 e0       	ldi	r18, 0x00	; 0
    151e:	30 e0       	ldi	r19, 0x00	; 0
    1520:	40 e2       	ldi	r20, 0x20	; 32
    1522:	51 e4       	ldi	r21, 0x41	; 65
    1524:	6f a5       	ldd	r22, Y+47	; 0x2f
    1526:	78 a9       	ldd	r23, Y+48	; 0x30
    1528:	89 a9       	ldd	r24, Y+49	; 0x31
    152a:	9a a9       	ldd	r25, Y+50	; 0x32
    152c:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    1530:	a3 96       	adiw	r28, 0x23	; 35
    1532:	6c af       	std	Y+60, r22	; 0x3c
    1534:	7d af       	std	Y+61, r23	; 0x3d
    1536:	8e af       	std	Y+62, r24	; 0x3e
    1538:	9f af       	std	Y+63, r25	; 0x3f
    153a:	a3 97       	sbiw	r28, 0x23	; 35
    153c:	a3 96       	adiw	r28, 0x23	; 35
    153e:	8c ad       	ldd	r24, Y+60	; 0x3c
    1540:	9d ad       	ldd	r25, Y+61	; 0x3d
    1542:	ae ad       	ldd	r26, Y+62	; 0x3e
    1544:	bf ad       	ldd	r27, Y+63	; 0x3f
    1546:	a3 97       	sbiw	r28, 0x23	; 35
    1548:	2f 96       	adiw	r28, 0x0f	; 15
    154a:	8c af       	std	Y+60, r24	; 0x3c
    154c:	9d af       	std	Y+61, r25	; 0x3d
    154e:	ae af       	std	Y+62, r26	; 0x3e
    1550:	bf af       	std	Y+63, r27	; 0x3f
    1552:	2f 97       	sbiw	r28, 0x0f	; 15

00001554 <.Loc.237>:
    1554:	2f 96       	adiw	r28, 0x0f	; 15
    1556:	6c ad       	ldd	r22, Y+60	; 0x3c
    1558:	7d ad       	ldd	r23, Y+61	; 0x3d
    155a:	8e ad       	ldd	r24, Y+62	; 0x3e
    155c:	9f ad       	ldd	r25, Y+63	; 0x3f
    155e:	2f 97       	sbiw	r28, 0x0f	; 15
    1560:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    1564:	a7 96       	adiw	r28, 0x27	; 39
    1566:	6c af       	std	Y+60, r22	; 0x3c
    1568:	7d af       	std	Y+61, r23	; 0x3d
    156a:	8e af       	std	Y+62, r24	; 0x3e
    156c:	9f af       	std	Y+63, r25	; 0x3f
    156e:	a7 97       	sbiw	r28, 0x27	; 39
    1570:	a5 96       	adiw	r28, 0x25	; 37
    1572:	ae ad       	ldd	r26, Y+62	; 0x3e
    1574:	bf ad       	ldd	r27, Y+63	; 0x3f
    1576:	a5 97       	sbiw	r28, 0x25	; 37
    1578:	b8 af       	std	Y+56, r27	; 0x38
    157a:	af ab       	std	Y+55, r26	; 0x37

0000157c <.Loc.238>:
		while(__ticks)
    157c:	10 c0       	rjmp	.+32     	; 0x159e <.L133>

0000157e <.L134>:
    157e:	80 e9       	ldi	r24, 0x90	; 144
    1580:	91 e0       	ldi	r25, 0x01	; 1
    1582:	9a af       	std	Y+58, r25	; 0x3a
    1584:	89 af       	std	Y+57, r24	; 0x39

00001586 <.LBB203>:
	__asm__ volatile (
    1586:	89 ad       	ldd	r24, Y+57	; 0x39
    1588:	9a ad       	ldd	r25, Y+58	; 0x3a

0000158a <.L1^B18>:
    158a:	01 97       	sbiw	r24, 0x01	; 1
    158c:	f1 f7       	brne	.-4      	; 0x158a <.L1^B18>
    158e:	9a af       	std	Y+58, r25	; 0x3a
    1590:	89 af       	std	Y+57, r24	; 0x39

00001592 <.Loc.240>:
	...

00001594 <.LBE203>:
			__ticks --;
    1594:	8f a9       	ldd	r24, Y+55	; 0x37
    1596:	98 ad       	ldd	r25, Y+56	; 0x38
    1598:	01 97       	sbiw	r24, 0x01	; 1
    159a:	98 af       	std	Y+56, r25	; 0x38
    159c:	8f ab       	std	Y+55, r24	; 0x37

0000159e <.L133>:
		while(__ticks)
    159e:	8f a9       	ldd	r24, Y+55	; 0x37
    15a0:	98 ad       	ldd	r25, Y+56	; 0x38
    15a2:	00 97       	sbiw	r24, 0x00	; 0
    15a4:	61 f7       	brne	.-40     	; 0x157e <.L134>

000015a6 <.Loc.243>:
		return;
    15a6:	63 c0       	rjmp	.+198    	; 0x166e <.L125>

000015a8 <.L168>:
		__ticks = (uint16_t)__tmp;
    15a8:	6b a9       	ldd	r22, Y+51	; 0x33
    15aa:	7c a9       	ldd	r23, Y+52	; 0x34
    15ac:	8d a9       	ldd	r24, Y+53	; 0x35
    15ae:	9e a9       	ldd	r25, Y+54	; 0x36
    15b0:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    15b4:	ab 96       	adiw	r28, 0x2b	; 43
    15b6:	6c af       	std	Y+60, r22	; 0x3c
    15b8:	7d af       	std	Y+61, r23	; 0x3d
    15ba:	8e af       	std	Y+62, r24	; 0x3e
    15bc:	9f af       	std	Y+63, r25	; 0x3f
    15be:	ab 97       	sbiw	r28, 0x2b	; 43
    15c0:	a9 96       	adiw	r28, 0x29	; 41
    15c2:	ee ad       	ldd	r30, Y+62	; 0x3e
    15c4:	ff ad       	ldd	r31, Y+63	; 0x3f
    15c6:	a9 97       	sbiw	r28, 0x29	; 41
    15c8:	f8 af       	std	Y+56, r31	; 0x38
    15ca:	ef ab       	std	Y+55, r30	; 0x37

000015cc <.L130>:
    15cc:	8f a9       	ldd	r24, Y+55	; 0x37
    15ce:	98 ad       	ldd	r25, Y+56	; 0x38
    15d0:	9c af       	std	Y+60, r25	; 0x3c
    15d2:	8b af       	std	Y+59, r24	; 0x3b

000015d4 <.LBB205>:
    15d4:	8b ad       	ldd	r24, Y+59	; 0x3b
    15d6:	9c ad       	ldd	r25, Y+60	; 0x3c

000015d8 <.L1^B19>:
    15d8:	01 97       	sbiw	r24, 0x01	; 1
    15da:	f1 f7       	brne	.-4      	; 0x15d8 <.L1^B19>
    15dc:	9c af       	std	Y+60, r25	; 0x3c
    15de:	8b af       	std	Y+59, r24	; 0x3b

000015e0 <.Loc.246>:
}
    15e0:	46 c0       	rjmp	.+140    	; 0x166e <.L125>

000015e2 <.L166>:
	else if (__tmp > 255)
    15e2:	20 e0       	ldi	r18, 0x00	; 0
    15e4:	30 e0       	ldi	r19, 0x00	; 0
    15e6:	4f e7       	ldi	r20, 0x7F	; 127
    15e8:	53 e4       	ldi	r21, 0x43	; 67
    15ea:	6e a1       	ldd	r22, Y+38	; 0x26
    15ec:	7f a1       	ldd	r23, Y+39	; 0x27
    15ee:	88 a5       	ldd	r24, Y+40	; 0x28
    15f0:	99 a5       	ldd	r25, Y+41	; 0x29
    15f2:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    15f6:	88 23       	and	r24, r24
    15f8:	51 f1       	breq	.+84     	; 0x164e <.L169>
    15fa:	4c f1       	brlt	.+82     	; 0x164e <.L169>

000015fc <.LBB207>:
		uint16_t __ticks=(uint16_t)__tmp2;
    15fc:	6a a5       	ldd	r22, Y+42	; 0x2a
    15fe:	7b a5       	ldd	r23, Y+43	; 0x2b
    1600:	8c a5       	ldd	r24, Y+44	; 0x2c
    1602:	9d a5       	ldd	r25, Y+45	; 0x2d
    1604:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    1608:	af 96       	adiw	r28, 0x2f	; 47
    160a:	6c af       	std	Y+60, r22	; 0x3c
    160c:	7d af       	std	Y+61, r23	; 0x3d
    160e:	8e af       	std	Y+62, r24	; 0x3e
    1610:	9f af       	std	Y+63, r25	; 0x3f
    1612:	af 97       	sbiw	r28, 0x2f	; 47
    1614:	ad 96       	adiw	r28, 0x2d	; 45
    1616:	8e ad       	ldd	r24, Y+62	; 0x3e
    1618:	9f ad       	ldd	r25, Y+63	; 0x3f
    161a:	ad 97       	sbiw	r28, 0x2d	; 45
    161c:	9e af       	std	Y+62, r25	; 0x3e
    161e:	8d af       	std	Y+61, r24	; 0x3d
    1620:	2d ad       	ldd	r18, Y+61	; 0x3d
    1622:	3e ad       	ldd	r19, Y+62	; 0x3e
    1624:	ce 01       	movw	r24, r28
    1626:	cf 96       	adiw	r24, 0x3f	; 63
    1628:	dc 01       	movw	r26, r24
    162a:	2d 93       	st	X+, r18
    162c:	3c 93       	st	X, r19

0000162e <.LBB208>:
	__asm__ volatile (
    162e:	ce 01       	movw	r24, r28
    1630:	cf 96       	adiw	r24, 0x3f	; 63
    1632:	fc 01       	movw	r30, r24
    1634:	80 81       	ld	r24, Z
    1636:	91 81       	ldd	r25, Z+1	; 0x01

00001638 <.L1^B20>:
    1638:	01 97       	sbiw	r24, 0x01	; 1
    163a:	f1 f7       	brne	.-4      	; 0x1638 <.L1^B20>
    163c:	9e 01       	movw	r18, r28
    163e:	21 5c       	subi	r18, 0xC1	; 193
    1640:	3f 4f       	sbci	r19, 0xFF	; 255
    1642:	d9 01       	movw	r26, r18
    1644:	11 96       	adiw	r26, 0x01	; 1
    1646:	9c 93       	st	X, r25
    1648:	8e 93       	st	-X, r24

0000164a <.Loc.250>:
	...

0000164c <.LBE208>:
		return;
    164c:	24 c0       	rjmp	.+72     	; 0x1696 <.L138>

0000164e <.L169>:
		__ticks = (uint8_t)__tmp;
    164e:	6e a1       	ldd	r22, Y+38	; 0x26
    1650:	7f a1       	ldd	r23, Y+39	; 0x27
    1652:	88 a5       	ldd	r24, Y+40	; 0x28
    1654:	99 a5       	ldd	r25, Y+41	; 0x29
    1656:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    165a:	e3 96       	adiw	r28, 0x33	; 51
    165c:	6c af       	std	Y+60, r22	; 0x3c
    165e:	7d af       	std	Y+61, r23	; 0x3d
    1660:	8e af       	std	Y+62, r24	; 0x3e
    1662:	9f af       	std	Y+63, r25	; 0x3f
    1664:	e3 97       	sbiw	r28, 0x33	; 51
    1666:	e0 96       	adiw	r28, 0x30	; 48
    1668:	bf ad       	ldd	r27, Y+63	; 0x3f
    166a:	e0 97       	sbiw	r28, 0x30	; 48
    166c:	be a7       	std	Y+46, r27	; 0x2e

0000166e <.L125>:
    166e:	ce 01       	movw	r24, r28
    1670:	8f 5b       	subi	r24, 0xBF	; 191
    1672:	9f 4f       	sbci	r25, 0xFF	; 255
    1674:	2e a5       	ldd	r18, Y+46	; 0x2e
    1676:	fc 01       	movw	r30, r24
    1678:	20 83       	st	Z, r18

0000167a <.LBB210>:
	__asm__ volatile (
    167a:	ce 01       	movw	r24, r28
    167c:	8f 5b       	subi	r24, 0xBF	; 191
    167e:	9f 4f       	sbci	r25, 0xFF	; 255
    1680:	dc 01       	movw	r26, r24
    1682:	8c 91       	ld	r24, X
    1684:	28 2f       	mov	r18, r24

00001686 <.L1^B21>:
    1686:	2a 95       	dec	r18
    1688:	f1 f7       	brne	.-4      	; 0x1686 <.L1^B21>
    168a:	ce 01       	movw	r24, r28
    168c:	8f 5b       	subi	r24, 0xBF	; 191
    168e:	9f 4f       	sbci	r25, 0xFF	; 255
    1690:	fc 01       	movw	r30, r24
    1692:	20 83       	st	Z, r18

00001694 <.Loc.254>:
	...

00001696 <.L138>:
    _delay_us(1);                   // implement 'Data set-up time' (80 nS) and 'Enable pulse width' (230 nS)
    disable_E_Pin;                  // Enable pin low
    1696:	88 e2       	ldi	r24, 0x28	; 40
    1698:	90 e0       	ldi	r25, 0x00	; 0
    169a:	dc 01       	movw	r26, r24
    169c:	2c 91       	ld	r18, X
    169e:	88 e2       	ldi	r24, 0x28	; 40
    16a0:	90 e0       	ldi	r25, 0x00	; 0
    16a2:	27 7f       	andi	r18, 0xF7	; 247
    16a4:	fc 01       	movw	r30, r24
    16a6:	20 83       	st	Z, r18
    16a8:	80 e0       	ldi	r24, 0x00	; 0
    16aa:	90 e0       	ldi	r25, 0x00	; 0
    16ac:	a0 e8       	ldi	r26, 0x80	; 128
    16ae:	bf e3       	ldi	r27, 0x3F	; 63
    16b0:	8a 83       	std	Y+2, r24	; 0x02
    16b2:	9b 83       	std	Y+3, r25	; 0x03
    16b4:	ac 83       	std	Y+4, r26	; 0x04
    16b6:	bd 83       	std	Y+5, r27	; 0x05

000016b8 <.LBB212>:
	__tmp = ((F_CPU) / 3e6) * __us;
    16b8:	2b ea       	ldi	r18, 0xAB	; 171
    16ba:	3a ea       	ldi	r19, 0xAA	; 170
    16bc:	4a ea       	ldi	r20, 0xAA	; 170
    16be:	50 e4       	ldi	r21, 0x40	; 64
    16c0:	6a 81       	ldd	r22, Y+2	; 0x02
    16c2:	7b 81       	ldd	r23, Y+3	; 0x03
    16c4:	8c 81       	ldd	r24, Y+4	; 0x04
    16c6:	9d 81       	ldd	r25, Y+5	; 0x05
    16c8:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    16cc:	e7 96       	adiw	r28, 0x37	; 55
    16ce:	6c af       	std	Y+60, r22	; 0x3c
    16d0:	7d af       	std	Y+61, r23	; 0x3d
    16d2:	8e af       	std	Y+62, r24	; 0x3e
    16d4:	9f af       	std	Y+63, r25	; 0x3f
    16d6:	e7 97       	sbiw	r28, 0x37	; 55
    16d8:	e7 96       	adiw	r28, 0x37	; 55
    16da:	8c ad       	ldd	r24, Y+60	; 0x3c
    16dc:	9d ad       	ldd	r25, Y+61	; 0x3d
    16de:	ae ad       	ldd	r26, Y+62	; 0x3e
    16e0:	bf ad       	ldd	r27, Y+63	; 0x3f
    16e2:	e7 97       	sbiw	r28, 0x37	; 55
    16e4:	8e 83       	std	Y+6, r24	; 0x06
    16e6:	9f 83       	std	Y+7, r25	; 0x07
    16e8:	a8 87       	std	Y+8, r26	; 0x08
    16ea:	b9 87       	std	Y+9, r27	; 0x09

000016ec <.Loc.257>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    16ec:	20 e0       	ldi	r18, 0x00	; 0
    16ee:	30 e0       	ldi	r19, 0x00	; 0
    16f0:	40 e8       	ldi	r20, 0x80	; 128
    16f2:	50 e4       	ldi	r21, 0x40	; 64
    16f4:	6a 81       	ldd	r22, Y+2	; 0x02
    16f6:	7b 81       	ldd	r23, Y+3	; 0x03
    16f8:	8c 81       	ldd	r24, Y+4	; 0x04
    16fa:	9d 81       	ldd	r25, Y+5	; 0x05
    16fc:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    1700:	eb 96       	adiw	r28, 0x3b	; 59
    1702:	6c af       	std	Y+60, r22	; 0x3c
    1704:	7d af       	std	Y+61, r23	; 0x3d
    1706:	8e af       	std	Y+62, r24	; 0x3e
    1708:	9f af       	std	Y+63, r25	; 0x3f
    170a:	eb 97       	sbiw	r28, 0x3b	; 59
    170c:	eb 96       	adiw	r28, 0x3b	; 59
    170e:	8c ad       	ldd	r24, Y+60	; 0x3c
    1710:	9d ad       	ldd	r25, Y+61	; 0x3d
    1712:	ae ad       	ldd	r26, Y+62	; 0x3e
    1714:	bf ad       	ldd	r27, Y+63	; 0x3f
    1716:	eb 97       	sbiw	r28, 0x3b	; 59
    1718:	8a 87       	std	Y+10, r24	; 0x0a
    171a:	9b 87       	std	Y+11, r25	; 0x0b
    171c:	ac 87       	std	Y+12, r26	; 0x0c
    171e:	bd 87       	std	Y+13, r27	; 0x0d

00001720 <.Loc.258>:
	if (__tmp < 1.0)
    1720:	20 e0       	ldi	r18, 0x00	; 0
    1722:	30 e0       	ldi	r19, 0x00	; 0
    1724:	40 e8       	ldi	r20, 0x80	; 128
    1726:	5f e3       	ldi	r21, 0x3F	; 63
    1728:	6e 81       	ldd	r22, Y+6	; 0x06
    172a:	7f 81       	ldd	r23, Y+7	; 0x07
    172c:	88 85       	ldd	r24, Y+8	; 0x08
    172e:	99 85       	ldd	r25, Y+9	; 0x09
    1730:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
    1734:	88 23       	and	r24, r24
    1736:	1c f4       	brge	.+6      	; 0x173e <.L170>

00001738 <.Loc.259>:
		__ticks = 1;
    1738:	81 e0       	ldi	r24, 0x01	; 1
    173a:	8e 87       	std	Y+14, r24	; 0x0e
    173c:	17 c1       	rjmp	.+558    	; 0x196c <.L141>

0000173e <.L170>:
	else if (__tmp2 > 65535)
    173e:	20 e0       	ldi	r18, 0x00	; 0
    1740:	3f ef       	ldi	r19, 0xFF	; 255
    1742:	4f e7       	ldi	r20, 0x7F	; 127
    1744:	57 e4       	ldi	r21, 0x47	; 71
    1746:	6a 85       	ldd	r22, Y+10	; 0x0a
    1748:	7b 85       	ldd	r23, Y+11	; 0x0b
    174a:	8c 85       	ldd	r24, Y+12	; 0x0c
    174c:	9d 85       	ldd	r25, Y+13	; 0x0d
    174e:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    1752:	88 23       	and	r24, r24
    1754:	09 f0       	breq	.+2      	; 0x1758 <L0^A>

00001756 <L0^A>:
    1756:	0c f4       	brge	.+2      	; 0x175a <.Loc.261>

00001758 <L0^A>:
    1758:	c6 c0       	rjmp	.+396    	; 0x18e6 <.L171>

0000175a <.Loc.261>:
		_delay_ms(__us / 1000.0);
    175a:	20 e0       	ldi	r18, 0x00	; 0
    175c:	30 e0       	ldi	r19, 0x00	; 0
    175e:	4a e7       	ldi	r20, 0x7A	; 122
    1760:	54 e4       	ldi	r21, 0x44	; 68
    1762:	6a 81       	ldd	r22, Y+2	; 0x02
    1764:	7b 81       	ldd	r23, Y+3	; 0x03
    1766:	8c 81       	ldd	r24, Y+4	; 0x04
    1768:	9d 81       	ldd	r25, Y+5	; 0x05
    176a:	0e 94 23 1f 	call	0x3e46	; 0x3e46 <__divsf3>
    176e:	ef 96       	adiw	r28, 0x3f	; 63
    1770:	6c af       	std	Y+60, r22	; 0x3c
    1772:	7d af       	std	Y+61, r23	; 0x3d
    1774:	8e af       	std	Y+62, r24	; 0x3e
    1776:	9f af       	std	Y+63, r25	; 0x3f
    1778:	ef 97       	sbiw	r28, 0x3f	; 63
    177a:	ef 96       	adiw	r28, 0x3f	; 63
    177c:	8c ad       	ldd	r24, Y+60	; 0x3c
    177e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1780:	ae ad       	ldd	r26, Y+62	; 0x3e
    1782:	bf ad       	ldd	r27, Y+63	; 0x3f
    1784:	ef 97       	sbiw	r28, 0x3f	; 63
    1786:	8f 87       	std	Y+15, r24	; 0x0f
    1788:	98 8b       	std	Y+16, r25	; 0x10
    178a:	a9 8b       	std	Y+17, r26	; 0x11
    178c:	ba 8b       	std	Y+18, r27	; 0x12

0000178e <.LBB214>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    178e:	20 e0       	ldi	r18, 0x00	; 0
    1790:	30 e0       	ldi	r19, 0x00	; 0
    1792:	4a e7       	ldi	r20, 0x7A	; 122
    1794:	55 e4       	ldi	r21, 0x45	; 69
    1796:	6f 85       	ldd	r22, Y+15	; 0x0f
    1798:	78 89       	ldd	r23, Y+16	; 0x10
    179a:	89 89       	ldd	r24, Y+17	; 0x11
    179c:	9a 89       	ldd	r25, Y+18	; 0x12
    179e:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    17a2:	c1 58       	subi	r28, 0x81	; 129
    17a4:	df 4f       	sbci	r29, 0xFF	; 255
    17a6:	68 83       	st	Y, r22
    17a8:	79 83       	std	Y+1, r23	; 0x01
    17aa:	8a 83       	std	Y+2, r24	; 0x02
    17ac:	9b 83       	std	Y+3, r25	; 0x03
    17ae:	cf 57       	subi	r28, 0x7F	; 127
    17b0:	d0 40       	sbci	r29, 0x00	; 0
    17b2:	c1 58       	subi	r28, 0x81	; 129
    17b4:	df 4f       	sbci	r29, 0xFF	; 255
    17b6:	88 81       	ld	r24, Y
    17b8:	99 81       	ldd	r25, Y+1	; 0x01
    17ba:	aa 81       	ldd	r26, Y+2	; 0x02
    17bc:	bb 81       	ldd	r27, Y+3	; 0x03
    17be:	cf 57       	subi	r28, 0x7F	; 127
    17c0:	d0 40       	sbci	r29, 0x00	; 0
    17c2:	8b 8b       	std	Y+19, r24	; 0x13
    17c4:	9c 8b       	std	Y+20, r25	; 0x14
    17c6:	ad 8b       	std	Y+21, r26	; 0x15
    17c8:	be 8b       	std	Y+22, r27	; 0x16

000017ca <.Loc.263>:
	if (__tmp < 1.0)
    17ca:	20 e0       	ldi	r18, 0x00	; 0
    17cc:	30 e0       	ldi	r19, 0x00	; 0
    17ce:	40 e8       	ldi	r20, 0x80	; 128
    17d0:	5f e3       	ldi	r21, 0x3F	; 63
    17d2:	6b 89       	ldd	r22, Y+19	; 0x13
    17d4:	7c 89       	ldd	r23, Y+20	; 0x14
    17d6:	8d 89       	ldd	r24, Y+21	; 0x15
    17d8:	9e 89       	ldd	r25, Y+22	; 0x16
    17da:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
    17de:	88 23       	and	r24, r24
    17e0:	2c f4       	brge	.+10     	; 0x17ec <.L172>

000017e2 <.Loc.264>:
		__ticks = 1;
    17e2:	81 e0       	ldi	r24, 0x01	; 1
    17e4:	90 e0       	ldi	r25, 0x00	; 0
    17e6:	98 8f       	std	Y+24, r25	; 0x18
    17e8:	8f 8b       	std	Y+23, r24	; 0x17
    17ea:	72 c0       	rjmp	.+228    	; 0x18d0 <.L146>

000017ec <.L172>:
	else if (__tmp > 65535)
    17ec:	20 e0       	ldi	r18, 0x00	; 0
    17ee:	3f ef       	ldi	r19, 0xFF	; 255
    17f0:	4f e7       	ldi	r20, 0x7F	; 127
    17f2:	57 e4       	ldi	r21, 0x47	; 71
    17f4:	6b 89       	ldd	r22, Y+19	; 0x13
    17f6:	7c 89       	ldd	r23, Y+20	; 0x14
    17f8:	8d 89       	ldd	r24, Y+21	; 0x15
    17fa:	9e 89       	ldd	r25, Y+22	; 0x16
    17fc:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    1800:	88 23       	and	r24, r24
    1802:	09 f0       	breq	.+2      	; 0x1806 <L0^A>

00001804 <L0^A>:
    1804:	0c f4       	brge	.+2      	; 0x1808 <.Loc.266>

00001806 <L0^A>:
    1806:	4e c0       	rjmp	.+156    	; 0x18a4 <.L173>

00001808 <.Loc.266>:
		__ticks = (uint16_t) (__ms * 10.0);
    1808:	20 e0       	ldi	r18, 0x00	; 0
    180a:	30 e0       	ldi	r19, 0x00	; 0
    180c:	40 e2       	ldi	r20, 0x20	; 32
    180e:	51 e4       	ldi	r21, 0x41	; 65
    1810:	6f 85       	ldd	r22, Y+15	; 0x0f
    1812:	78 89       	ldd	r23, Y+16	; 0x10
    1814:	89 89       	ldd	r24, Y+17	; 0x11
    1816:	9a 89       	ldd	r25, Y+18	; 0x12
    1818:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    181c:	cd 57       	subi	r28, 0x7D	; 125
    181e:	df 4f       	sbci	r29, 0xFF	; 255
    1820:	68 83       	st	Y, r22
    1822:	79 83       	std	Y+1, r23	; 0x01
    1824:	8a 83       	std	Y+2, r24	; 0x02
    1826:	9b 83       	std	Y+3, r25	; 0x03
    1828:	c3 58       	subi	r28, 0x83	; 131
    182a:	d0 40       	sbci	r29, 0x00	; 0
    182c:	cd 57       	subi	r28, 0x7D	; 125
    182e:	df 4f       	sbci	r29, 0xFF	; 255
    1830:	88 81       	ld	r24, Y
    1832:	99 81       	ldd	r25, Y+1	; 0x01
    1834:	aa 81       	ldd	r26, Y+2	; 0x02
    1836:	bb 81       	ldd	r27, Y+3	; 0x03
    1838:	c3 58       	subi	r28, 0x83	; 131
    183a:	d0 40       	sbci	r29, 0x00	; 0
    183c:	2b 96       	adiw	r28, 0x0b	; 11
    183e:	8c af       	std	Y+60, r24	; 0x3c
    1840:	9d af       	std	Y+61, r25	; 0x3d
    1842:	ae af       	std	Y+62, r26	; 0x3e
    1844:	bf af       	std	Y+63, r27	; 0x3f
    1846:	2b 97       	sbiw	r28, 0x0b	; 11

00001848 <.Loc.267>:
    1848:	2b 96       	adiw	r28, 0x0b	; 11
    184a:	6c ad       	ldd	r22, Y+60	; 0x3c
    184c:	7d ad       	ldd	r23, Y+61	; 0x3d
    184e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1850:	9f ad       	ldd	r25, Y+63	; 0x3f
    1852:	2b 97       	sbiw	r28, 0x0b	; 11
    1854:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    1858:	c9 57       	subi	r28, 0x79	; 121
    185a:	df 4f       	sbci	r29, 0xFF	; 255
    185c:	68 83       	st	Y, r22
    185e:	79 83       	std	Y+1, r23	; 0x01
    1860:	8a 83       	std	Y+2, r24	; 0x02
    1862:	9b 83       	std	Y+3, r25	; 0x03
    1864:	c7 58       	subi	r28, 0x87	; 135
    1866:	d0 40       	sbci	r29, 0x00	; 0
    1868:	c9 57       	subi	r28, 0x79	; 121
    186a:	df 4f       	sbci	r29, 0xFF	; 255
    186c:	a8 81       	ld	r26, Y
    186e:	b9 81       	ldd	r27, Y+1	; 0x01
    1870:	c7 58       	subi	r28, 0x87	; 135
    1872:	d0 40       	sbci	r29, 0x00	; 0
    1874:	b8 8f       	std	Y+24, r27	; 0x18
    1876:	af 8b       	std	Y+23, r26	; 0x17

00001878 <.Loc.268>:
		while(__ticks)
    1878:	10 c0       	rjmp	.+32     	; 0x189a <.L149>

0000187a <.L150>:
    187a:	80 e9       	ldi	r24, 0x90	; 144
    187c:	91 e0       	ldi	r25, 0x01	; 1
    187e:	9a 8f       	std	Y+26, r25	; 0x1a
    1880:	89 8f       	std	Y+25, r24	; 0x19

00001882 <.LBB216>:
	__asm__ volatile (
    1882:	89 8d       	ldd	r24, Y+25	; 0x19
    1884:	9a 8d       	ldd	r25, Y+26	; 0x1a

00001886 <.L1^B22>:
    1886:	01 97       	sbiw	r24, 0x01	; 1
    1888:	f1 f7       	brne	.-4      	; 0x1886 <.L1^B22>
    188a:	9a 8f       	std	Y+26, r25	; 0x1a
    188c:	89 8f       	std	Y+25, r24	; 0x19

0000188e <.Loc.270>:
	...

00001890 <.LBE216>:
			__ticks --;
    1890:	8f 89       	ldd	r24, Y+23	; 0x17
    1892:	98 8d       	ldd	r25, Y+24	; 0x18
    1894:	01 97       	sbiw	r24, 0x01	; 1
    1896:	98 8f       	std	Y+24, r25	; 0x18
    1898:	8f 8b       	std	Y+23, r24	; 0x17

0000189a <.L149>:
		while(__ticks)
    189a:	8f 89       	ldd	r24, Y+23	; 0x17
    189c:	98 8d       	ldd	r25, Y+24	; 0x18
    189e:	00 97       	sbiw	r24, 0x00	; 0
    18a0:	61 f7       	brne	.-40     	; 0x187a <.L150>

000018a2 <.Loc.273>:
		return;
    18a2:	64 c0       	rjmp	.+200    	; 0x196c <.L141>

000018a4 <.L173>:
		__ticks = (uint16_t)__tmp;
    18a4:	6b 89       	ldd	r22, Y+19	; 0x13
    18a6:	7c 89       	ldd	r23, Y+20	; 0x14
    18a8:	8d 89       	ldd	r24, Y+21	; 0x15
    18aa:	9e 89       	ldd	r25, Y+22	; 0x16
    18ac:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    18b0:	c5 57       	subi	r28, 0x75	; 117
    18b2:	df 4f       	sbci	r29, 0xFF	; 255
    18b4:	68 83       	st	Y, r22
    18b6:	79 83       	std	Y+1, r23	; 0x01
    18b8:	8a 83       	std	Y+2, r24	; 0x02
    18ba:	9b 83       	std	Y+3, r25	; 0x03
    18bc:	cb 58       	subi	r28, 0x8B	; 139
    18be:	d0 40       	sbci	r29, 0x00	; 0
    18c0:	c5 57       	subi	r28, 0x75	; 117
    18c2:	df 4f       	sbci	r29, 0xFF	; 255
    18c4:	e8 81       	ld	r30, Y
    18c6:	f9 81       	ldd	r31, Y+1	; 0x01
    18c8:	cb 58       	subi	r28, 0x8B	; 139
    18ca:	d0 40       	sbci	r29, 0x00	; 0
    18cc:	f8 8f       	std	Y+24, r31	; 0x18
    18ce:	ef 8b       	std	Y+23, r30	; 0x17

000018d0 <.L146>:
    18d0:	8f 89       	ldd	r24, Y+23	; 0x17
    18d2:	98 8d       	ldd	r25, Y+24	; 0x18
    18d4:	9c 8f       	std	Y+28, r25	; 0x1c
    18d6:	8b 8f       	std	Y+27, r24	; 0x1b

000018d8 <.LBB218>:
    18d8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    18da:	9c 8d       	ldd	r25, Y+28	; 0x1c

000018dc <.L1^B23>:
    18dc:	01 97       	sbiw	r24, 0x01	; 1
    18de:	f1 f7       	brne	.-4      	; 0x18dc <.L1^B23>
    18e0:	9c 8f       	std	Y+28, r25	; 0x1c
    18e2:	8b 8f       	std	Y+27, r24	; 0x1b

000018e4 <.Loc.276>:
}
    18e4:	43 c0       	rjmp	.+134    	; 0x196c <.L141>

000018e6 <.L171>:
	else if (__tmp > 255)
    18e6:	20 e0       	ldi	r18, 0x00	; 0
    18e8:	30 e0       	ldi	r19, 0x00	; 0
    18ea:	4f e7       	ldi	r20, 0x7F	; 127
    18ec:	53 e4       	ldi	r21, 0x43	; 67
    18ee:	6e 81       	ldd	r22, Y+6	; 0x06
    18f0:	7f 81       	ldd	r23, Y+7	; 0x07
    18f2:	88 85       	ldd	r24, Y+8	; 0x08
    18f4:	99 85       	ldd	r25, Y+9	; 0x09
    18f6:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    18fa:	88 23       	and	r24, r24
    18fc:	19 f1       	breq	.+70     	; 0x1944 <.L174>
    18fe:	14 f1       	brlt	.+68     	; 0x1944 <.L174>

00001900 <.LBB220>:
		uint16_t __ticks=(uint16_t)__tmp2;
    1900:	6a 85       	ldd	r22, Y+10	; 0x0a
    1902:	7b 85       	ldd	r23, Y+11	; 0x0b
    1904:	8c 85       	ldd	r24, Y+12	; 0x0c
    1906:	9d 85       	ldd	r25, Y+13	; 0x0d
    1908:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    190c:	c1 57       	subi	r28, 0x71	; 113
    190e:	df 4f       	sbci	r29, 0xFF	; 255
    1910:	68 83       	st	Y, r22
    1912:	79 83       	std	Y+1, r23	; 0x01
    1914:	8a 83       	std	Y+2, r24	; 0x02
    1916:	9b 83       	std	Y+3, r25	; 0x03
    1918:	cf 58       	subi	r28, 0x8F	; 143
    191a:	d0 40       	sbci	r29, 0x00	; 0
    191c:	c1 57       	subi	r28, 0x71	; 113
    191e:	df 4f       	sbci	r29, 0xFF	; 255
    1920:	88 81       	ld	r24, Y
    1922:	99 81       	ldd	r25, Y+1	; 0x01
    1924:	cf 58       	subi	r28, 0x8F	; 143
    1926:	d0 40       	sbci	r29, 0x00	; 0
    1928:	9e 8f       	std	Y+30, r25	; 0x1e
    192a:	8d 8f       	std	Y+29, r24	; 0x1d
    192c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    192e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1930:	98 a3       	std	Y+32, r25	; 0x20
    1932:	8f 8f       	std	Y+31, r24	; 0x1f

00001934 <.LBB221>:
	__asm__ volatile (
    1934:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1936:	98 a1       	ldd	r25, Y+32	; 0x20

00001938 <.L1^B24>:
    1938:	01 97       	sbiw	r24, 0x01	; 1
    193a:	f1 f7       	brne	.-4      	; 0x1938 <.L1^B24>
    193c:	98 a3       	std	Y+32, r25	; 0x20
    193e:	8f 8f       	std	Y+31, r24	; 0x1f

00001940 <.Loc.280>:
	...

00001942 <.LBE221>:
		return;
    1942:	1b c0       	rjmp	.+54     	; 0x197a <.L154>

00001944 <.L174>:
		__ticks = (uint8_t)__tmp;
    1944:	6e 81       	ldd	r22, Y+6	; 0x06
    1946:	7f 81       	ldd	r23, Y+7	; 0x07
    1948:	88 85       	ldd	r24, Y+8	; 0x08
    194a:	99 85       	ldd	r25, Y+9	; 0x09
    194c:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    1950:	cd 56       	subi	r28, 0x6D	; 109
    1952:	df 4f       	sbci	r29, 0xFF	; 255
    1954:	68 83       	st	Y, r22
    1956:	79 83       	std	Y+1, r23	; 0x01
    1958:	8a 83       	std	Y+2, r24	; 0x02
    195a:	9b 83       	std	Y+3, r25	; 0x03
    195c:	c3 59       	subi	r28, 0x93	; 147
    195e:	d0 40       	sbci	r29, 0x00	; 0
    1960:	cd 56       	subi	r28, 0x6D	; 109
    1962:	df 4f       	sbci	r29, 0xFF	; 255
    1964:	98 81       	ld	r25, Y
    1966:	c3 59       	subi	r28, 0x93	; 147
    1968:	d0 40       	sbci	r29, 0x00	; 0
    196a:	9e 87       	std	Y+14, r25	; 0x0e

0000196c <.L141>:
    196c:	8e 85       	ldd	r24, Y+14	; 0x0e
    196e:	89 a3       	std	Y+33, r24	; 0x21

00001970 <.LBB223>:
	__asm__ volatile (
    1970:	89 a1       	ldd	r24, Y+33	; 0x21

00001972 <.L1^B25>:
    1972:	8a 95       	dec	r24
    1974:	f1 f7       	brne	.-4      	; 0x1972 <.L1^B25>
    1976:	89 a3       	std	Y+33, r24	; 0x21

00001978 <.Loc.284>:
	...

0000197a <.L154>:
    _delay_us(1);                   // implement 'Data hold time' (10 nS) and 'Enable cycle time' (500 nS)
}
    197a:	00 00       	nop
    197c:	c8 56       	subi	r28, 0x68	; 104
    197e:	df 4f       	sbci	r29, 0xFF	; 255
    1980:	0f b6       	in	r0, 0x3f	; 63
    1982:	f8 94       	cli
    1984:	de bf       	out	0x3e, r29	; 62
    1986:	0f be       	out	0x3f, r0	; 63
    1988:	cd bf       	out	0x3d, r28	; 61
    198a:	df 91       	pop	r29
    198c:	cf 91       	pop	r28
    198e:	08 95       	ret

00001990 <lcd_check_BF_4>:
Description:checks busy flag and wait until LCD is ready
			Desired information is the higher nibble, however both are read
			data is read while 'E' is high
******************************************************************** */
void lcd_check_BF_4(void)
{
    1990:	0f 93       	push	r16
    1992:	1f 93       	push	r17
    1994:	cf 93       	push	r28
    1996:	df 93       	push	r29
    1998:	cd b7       	in	r28, 0x3d	; 61
    199a:	de b7       	in	r29, 0x3e	; 62
    199c:	c1 52       	subi	r28, 0x21	; 33
    199e:	d1 40       	sbci	r29, 0x01	; 1
    19a0:	0f b6       	in	r0, 0x3f	; 63
    19a2:	f8 94       	cli
    19a4:	de bf       	out	0x3e, r29	; 62
    19a6:	0f be       	out	0x3f, r0	; 63
    19a8:	cd bf       	out	0x3d, r28	; 61

000019aa <.Loc.287>:

    uint8_t busy_flag_copy;             // busy flag 'mirror'

    set_D7_input;						// set D7 data direction to input
    19aa:	87 e2       	ldi	r24, 0x27	; 39
    19ac:	90 e0       	ldi	r25, 0x00	; 0
    19ae:	dc 01       	movw	r26, r24
    19b0:	2c 91       	ld	r18, X
    19b2:	87 e2       	ldi	r24, 0x27	; 39
    19b4:	90 e0       	ldi	r25, 0x00	; 0
    19b6:	2f 77       	andi	r18, 0x7F	; 127
    19b8:	fc 01       	movw	r30, r24
    19ba:	20 83       	st	Z, r18

000019bc <.Loc.288>:
    set_RS_LOW_Instr;					// select the Instruction Register (RS low)
    19bc:	88 e2       	ldi	r24, 0x28	; 40
    19be:	90 e0       	ldi	r25, 0x00	; 0
    19c0:	dc 01       	movw	r26, r24
    19c2:	2c 91       	ld	r18, X
    19c4:	88 e2       	ldi	r24, 0x28	; 40
    19c6:	90 e0       	ldi	r25, 0x00	; 0
    19c8:	2d 7f       	andi	r18, 0xFD	; 253
    19ca:	fc 01       	movw	r30, r24
    19cc:	20 83       	st	Z, r18

000019ce <.Loc.289>:
    set_RW_HIGH_read;					// read from LCD module (RW high)
    19ce:	88 e2       	ldi	r24, 0x28	; 40
    19d0:	90 e0       	ldi	r25, 0x00	; 0
    19d2:	dc 01       	movw	r26, r24
    19d4:	2c 91       	ld	r18, X
    19d6:	88 e2       	ldi	r24, 0x28	; 40
    19d8:	90 e0       	ldi	r25, 0x00	; 0
    19da:	24 60       	ori	r18, 0x04	; 4
    19dc:	fc 01       	movw	r30, r24
    19de:	20 83       	st	Z, r18

000019e0 <.L240>:

    do
    {
        busy_flag_copy = 0;                         // initialize busy flag 'mirror'
    19e0:	19 82       	std	Y+1, r1	; 0x01

000019e2 <.Loc.291>:
        lcd_Ctlr_Port |= (1<<lcd_E_bit);            // Enable pin high
    19e2:	88 e2       	ldi	r24, 0x28	; 40
    19e4:	90 e0       	ldi	r25, 0x00	; 0
    19e6:	dc 01       	movw	r26, r24
    19e8:	2c 91       	ld	r18, X
    19ea:	88 e2       	ldi	r24, 0x28	; 40
    19ec:	90 e0       	ldi	r25, 0x00	; 0

000019ee <.Loc.292>:
    19ee:	28 60       	ori	r18, 0x08	; 8
    19f0:	fc 01       	movw	r30, r24
    19f2:	20 83       	st	Z, r18
    19f4:	9e 01       	movw	r18, r28
    19f6:	2e 59       	subi	r18, 0x9E	; 158
    19f8:	3f 4f       	sbci	r19, 0xFF	; 255
    19fa:	80 e0       	ldi	r24, 0x00	; 0
    19fc:	90 e0       	ldi	r25, 0x00	; 0
    19fe:	a0 e8       	ldi	r26, 0x80	; 128
    1a00:	bf e3       	ldi	r27, 0x3F	; 63
    1a02:	f9 01       	movw	r30, r18
    1a04:	80 83       	st	Z, r24
    1a06:	91 83       	std	Z+1, r25	; 0x01
    1a08:	a2 83       	std	Z+2, r26	; 0x02
    1a0a:	b3 83       	std	Z+3, r27	; 0x03

00001a0c <.LBB225>:
	__tmp = ((F_CPU) / 3e6) * __us;
    1a0c:	8e 01       	movw	r16, r28
    1a0e:	0a 59       	subi	r16, 0x9A	; 154
    1a10:	1f 4f       	sbci	r17, 0xFF	; 255
    1a12:	ce 01       	movw	r24, r28
    1a14:	8e 59       	subi	r24, 0x9E	; 158
    1a16:	9f 4f       	sbci	r25, 0xFF	; 255
    1a18:	2b ea       	ldi	r18, 0xAB	; 171
    1a1a:	3a ea       	ldi	r19, 0xAA	; 170
    1a1c:	4a ea       	ldi	r20, 0xAA	; 170
    1a1e:	50 e4       	ldi	r21, 0x40	; 64
    1a20:	dc 01       	movw	r26, r24
    1a22:	6d 91       	ld	r22, X+
    1a24:	7d 91       	ld	r23, X+
    1a26:	8d 91       	ld	r24, X+
    1a28:	9c 91       	ld	r25, X
    1a2a:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    1a2e:	ce 56       	subi	r28, 0x6E	; 110
    1a30:	df 4f       	sbci	r29, 0xFF	; 255
    1a32:	68 83       	st	Y, r22
    1a34:	79 83       	std	Y+1, r23	; 0x01
    1a36:	8a 83       	std	Y+2, r24	; 0x02
    1a38:	9b 83       	std	Y+3, r25	; 0x03
    1a3a:	c2 59       	subi	r28, 0x92	; 146
    1a3c:	d0 40       	sbci	r29, 0x00	; 0
    1a3e:	ce 56       	subi	r28, 0x6E	; 110
    1a40:	df 4f       	sbci	r29, 0xFF	; 255
    1a42:	88 81       	ld	r24, Y
    1a44:	99 81       	ldd	r25, Y+1	; 0x01
    1a46:	aa 81       	ldd	r26, Y+2	; 0x02
    1a48:	bb 81       	ldd	r27, Y+3	; 0x03
    1a4a:	c2 59       	subi	r28, 0x92	; 146
    1a4c:	d0 40       	sbci	r29, 0x00	; 0
    1a4e:	f8 01       	movw	r30, r16
    1a50:	80 83       	st	Z, r24
    1a52:	91 83       	std	Z+1, r25	; 0x01
    1a54:	a2 83       	std	Z+2, r26	; 0x02
    1a56:	b3 83       	std	Z+3, r27	; 0x03

00001a58 <.Loc.294>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    1a58:	8e 01       	movw	r16, r28
    1a5a:	06 59       	subi	r16, 0x96	; 150
    1a5c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a5e:	ce 01       	movw	r24, r28
    1a60:	8e 59       	subi	r24, 0x9E	; 158
    1a62:	9f 4f       	sbci	r25, 0xFF	; 255
    1a64:	20 e0       	ldi	r18, 0x00	; 0
    1a66:	30 e0       	ldi	r19, 0x00	; 0
    1a68:	40 e8       	ldi	r20, 0x80	; 128
    1a6a:	50 e4       	ldi	r21, 0x40	; 64
    1a6c:	dc 01       	movw	r26, r24
    1a6e:	6d 91       	ld	r22, X+
    1a70:	7d 91       	ld	r23, X+
    1a72:	8d 91       	ld	r24, X+
    1a74:	9c 91       	ld	r25, X
    1a76:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    1a7a:	ca 56       	subi	r28, 0x6A	; 106
    1a7c:	df 4f       	sbci	r29, 0xFF	; 255
    1a7e:	68 83       	st	Y, r22
    1a80:	79 83       	std	Y+1, r23	; 0x01
    1a82:	8a 83       	std	Y+2, r24	; 0x02
    1a84:	9b 83       	std	Y+3, r25	; 0x03
    1a86:	c6 59       	subi	r28, 0x96	; 150
    1a88:	d0 40       	sbci	r29, 0x00	; 0
    1a8a:	ca 56       	subi	r28, 0x6A	; 106
    1a8c:	df 4f       	sbci	r29, 0xFF	; 255
    1a8e:	88 81       	ld	r24, Y
    1a90:	99 81       	ldd	r25, Y+1	; 0x01
    1a92:	aa 81       	ldd	r26, Y+2	; 0x02
    1a94:	bb 81       	ldd	r27, Y+3	; 0x03
    1a96:	c6 59       	subi	r28, 0x96	; 150
    1a98:	d0 40       	sbci	r29, 0x00	; 0
    1a9a:	f8 01       	movw	r30, r16
    1a9c:	80 83       	st	Z, r24
    1a9e:	91 83       	std	Z+1, r25	; 0x01
    1aa0:	a2 83       	std	Z+2, r26	; 0x02
    1aa2:	b3 83       	std	Z+3, r27	; 0x03

00001aa4 <.Loc.295>:
	if (__tmp < 1.0)
    1aa4:	ce 01       	movw	r24, r28
    1aa6:	8a 59       	subi	r24, 0x9A	; 154
    1aa8:	9f 4f       	sbci	r25, 0xFF	; 255
    1aaa:	20 e0       	ldi	r18, 0x00	; 0
    1aac:	30 e0       	ldi	r19, 0x00	; 0
    1aae:	40 e8       	ldi	r20, 0x80	; 128
    1ab0:	5f e3       	ldi	r21, 0x3F	; 63
    1ab2:	dc 01       	movw	r26, r24
    1ab4:	6d 91       	ld	r22, X+
    1ab6:	7d 91       	ld	r23, X+
    1ab8:	8d 91       	ld	r24, X+
    1aba:	9c 91       	ld	r25, X
    1abc:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
    1ac0:	88 23       	and	r24, r24
    1ac2:	3c f4       	brge	.+14     	; 0x1ad2 <.L261>

00001ac4 <.Loc.296>:
		__ticks = 1;
    1ac4:	ce 01       	movw	r24, r28
    1ac6:	82 59       	subi	r24, 0x92	; 146
    1ac8:	9f 4f       	sbci	r25, 0xFF	; 255
    1aca:	21 e0       	ldi	r18, 0x01	; 1
    1acc:	fc 01       	movw	r30, r24
    1ace:	20 83       	st	Z, r18
    1ad0:	a0 c1       	rjmp	.+832    	; 0x1e12 <.L178>

00001ad2 <.L261>:
	else if (__tmp2 > 65535)
    1ad2:	ce 01       	movw	r24, r28
    1ad4:	86 59       	subi	r24, 0x96	; 150
    1ad6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ad8:	20 e0       	ldi	r18, 0x00	; 0
    1ada:	3f ef       	ldi	r19, 0xFF	; 255
    1adc:	4f e7       	ldi	r20, 0x7F	; 127
    1ade:	57 e4       	ldi	r21, 0x47	; 71
    1ae0:	dc 01       	movw	r26, r24
    1ae2:	6d 91       	ld	r22, X+
    1ae4:	7d 91       	ld	r23, X+
    1ae6:	8d 91       	ld	r24, X+
    1ae8:	9c 91       	ld	r25, X
    1aea:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    1aee:	88 23       	and	r24, r24
    1af0:	09 f0       	breq	.+2      	; 0x1af4 <L0^A>

00001af2 <L0^A>:
    1af2:	0c f4       	brge	.+2      	; 0x1af6 <.Loc.298>

00001af4 <L0^A>:
    1af4:	26 c1       	rjmp	.+588    	; 0x1d42 <.L262>

00001af6 <.Loc.298>:
		_delay_ms(__us / 1000.0);
    1af6:	ce 01       	movw	r24, r28
    1af8:	8e 59       	subi	r24, 0x9E	; 158
    1afa:	9f 4f       	sbci	r25, 0xFF	; 255
    1afc:	20 e0       	ldi	r18, 0x00	; 0
    1afe:	30 e0       	ldi	r19, 0x00	; 0
    1b00:	4a e7       	ldi	r20, 0x7A	; 122
    1b02:	54 e4       	ldi	r21, 0x44	; 68
    1b04:	fc 01       	movw	r30, r24
    1b06:	60 81       	ld	r22, Z
    1b08:	71 81       	ldd	r23, Z+1	; 0x01
    1b0a:	82 81       	ldd	r24, Z+2	; 0x02
    1b0c:	93 81       	ldd	r25, Z+3	; 0x03
    1b0e:	0e 94 23 1f 	call	0x3e46	; 0x3e46 <__divsf3>
    1b12:	c6 56       	subi	r28, 0x66	; 102
    1b14:	df 4f       	sbci	r29, 0xFF	; 255
    1b16:	68 83       	st	Y, r22
    1b18:	79 83       	std	Y+1, r23	; 0x01
    1b1a:	8a 83       	std	Y+2, r24	; 0x02
    1b1c:	9b 83       	std	Y+3, r25	; 0x03
    1b1e:	ca 59       	subi	r28, 0x9A	; 154
    1b20:	d0 40       	sbci	r29, 0x00	; 0
    1b22:	c6 56       	subi	r28, 0x66	; 102
    1b24:	df 4f       	sbci	r29, 0xFF	; 255
    1b26:	88 81       	ld	r24, Y
    1b28:	99 81       	ldd	r25, Y+1	; 0x01
    1b2a:	aa 81       	ldd	r26, Y+2	; 0x02
    1b2c:	bb 81       	ldd	r27, Y+3	; 0x03
    1b2e:	ca 59       	subi	r28, 0x9A	; 154
    1b30:	d0 40       	sbci	r29, 0x00	; 0
    1b32:	9e 01       	movw	r18, r28
    1b34:	21 59       	subi	r18, 0x91	; 145
    1b36:	3f 4f       	sbci	r19, 0xFF	; 255
    1b38:	f9 01       	movw	r30, r18
    1b3a:	80 83       	st	Z, r24
    1b3c:	91 83       	std	Z+1, r25	; 0x01
    1b3e:	a2 83       	std	Z+2, r26	; 0x02
    1b40:	b3 83       	std	Z+3, r27	; 0x03

00001b42 <.LBB227>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1b42:	8e 01       	movw	r16, r28
    1b44:	0d 58       	subi	r16, 0x8D	; 141
    1b46:	1f 4f       	sbci	r17, 0xFF	; 255
    1b48:	ce 01       	movw	r24, r28
    1b4a:	81 59       	subi	r24, 0x91	; 145
    1b4c:	9f 4f       	sbci	r25, 0xFF	; 255
    1b4e:	20 e0       	ldi	r18, 0x00	; 0
    1b50:	30 e0       	ldi	r19, 0x00	; 0
    1b52:	4a e7       	ldi	r20, 0x7A	; 122
    1b54:	55 e4       	ldi	r21, 0x45	; 69
    1b56:	dc 01       	movw	r26, r24
    1b58:	6d 91       	ld	r22, X+
    1b5a:	7d 91       	ld	r23, X+
    1b5c:	8d 91       	ld	r24, X+
    1b5e:	9c 91       	ld	r25, X
    1b60:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    1b64:	c2 56       	subi	r28, 0x62	; 98
    1b66:	df 4f       	sbci	r29, 0xFF	; 255
    1b68:	68 83       	st	Y, r22
    1b6a:	79 83       	std	Y+1, r23	; 0x01
    1b6c:	8a 83       	std	Y+2, r24	; 0x02
    1b6e:	9b 83       	std	Y+3, r25	; 0x03
    1b70:	ce 59       	subi	r28, 0x9E	; 158
    1b72:	d0 40       	sbci	r29, 0x00	; 0
    1b74:	c2 56       	subi	r28, 0x62	; 98
    1b76:	df 4f       	sbci	r29, 0xFF	; 255
    1b78:	88 81       	ld	r24, Y
    1b7a:	99 81       	ldd	r25, Y+1	; 0x01
    1b7c:	aa 81       	ldd	r26, Y+2	; 0x02
    1b7e:	bb 81       	ldd	r27, Y+3	; 0x03
    1b80:	ce 59       	subi	r28, 0x9E	; 158
    1b82:	d0 40       	sbci	r29, 0x00	; 0
    1b84:	f8 01       	movw	r30, r16
    1b86:	80 83       	st	Z, r24
    1b88:	91 83       	std	Z+1, r25	; 0x01
    1b8a:	a2 83       	std	Z+2, r26	; 0x02
    1b8c:	b3 83       	std	Z+3, r27	; 0x03

00001b8e <.Loc.300>:
	if (__tmp < 1.0)
    1b8e:	ce 01       	movw	r24, r28
    1b90:	8d 58       	subi	r24, 0x8D	; 141
    1b92:	9f 4f       	sbci	r25, 0xFF	; 255
    1b94:	20 e0       	ldi	r18, 0x00	; 0
    1b96:	30 e0       	ldi	r19, 0x00	; 0
    1b98:	40 e8       	ldi	r20, 0x80	; 128
    1b9a:	5f e3       	ldi	r21, 0x3F	; 63
    1b9c:	dc 01       	movw	r26, r24
    1b9e:	6d 91       	ld	r22, X+
    1ba0:	7d 91       	ld	r23, X+
    1ba2:	8d 91       	ld	r24, X+
    1ba4:	9c 91       	ld	r25, X
    1ba6:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
    1baa:	88 23       	and	r24, r24
    1bac:	4c f4       	brge	.+18     	; 0x1bc0 <.L263>

00001bae <.Loc.301>:
		__ticks = 1;
    1bae:	ce 01       	movw	r24, r28
    1bb0:	89 58       	subi	r24, 0x89	; 137
    1bb2:	9f 4f       	sbci	r25, 0xFF	; 255
    1bb4:	21 e0       	ldi	r18, 0x01	; 1
    1bb6:	30 e0       	ldi	r19, 0x00	; 0
    1bb8:	fc 01       	movw	r30, r24
    1bba:	31 83       	std	Z+1, r19	; 0x01
    1bbc:	20 83       	st	Z, r18
    1bbe:	a5 c0       	rjmp	.+330    	; 0x1d0a <.L183>

00001bc0 <.L263>:
	else if (__tmp > 65535)
    1bc0:	ce 01       	movw	r24, r28
    1bc2:	8d 58       	subi	r24, 0x8D	; 141
    1bc4:	9f 4f       	sbci	r25, 0xFF	; 255
    1bc6:	20 e0       	ldi	r18, 0x00	; 0
    1bc8:	3f ef       	ldi	r19, 0xFF	; 255
    1bca:	4f e7       	ldi	r20, 0x7F	; 127
    1bcc:	57 e4       	ldi	r21, 0x47	; 71
    1bce:	dc 01       	movw	r26, r24
    1bd0:	6d 91       	ld	r22, X+
    1bd2:	7d 91       	ld	r23, X+
    1bd4:	8d 91       	ld	r24, X+
    1bd6:	9c 91       	ld	r25, X
    1bd8:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    1bdc:	88 23       	and	r24, r24
    1bde:	09 f0       	breq	.+2      	; 0x1be2 <L0^A>

00001be0 <L0^A>:
    1be0:	0c f4       	brge	.+2      	; 0x1be4 <.Loc.303>

00001be2 <L0^A>:
    1be2:	75 c0       	rjmp	.+234    	; 0x1cce <.L264>

00001be4 <.Loc.303>:
		__ticks = (uint16_t) (__ms * 10.0);
    1be4:	ce 01       	movw	r24, r28
    1be6:	81 59       	subi	r24, 0x91	; 145
    1be8:	9f 4f       	sbci	r25, 0xFF	; 255
    1bea:	20 e0       	ldi	r18, 0x00	; 0
    1bec:	30 e0       	ldi	r19, 0x00	; 0
    1bee:	40 e2       	ldi	r20, 0x20	; 32
    1bf0:	51 e4       	ldi	r21, 0x41	; 65
    1bf2:	fc 01       	movw	r30, r24
    1bf4:	60 81       	ld	r22, Z
    1bf6:	71 81       	ldd	r23, Z+1	; 0x01
    1bf8:	82 81       	ldd	r24, Z+2	; 0x02
    1bfa:	93 81       	ldd	r25, Z+3	; 0x03
    1bfc:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    1c00:	ce 55       	subi	r28, 0x5E	; 94
    1c02:	df 4f       	sbci	r29, 0xFF	; 255
    1c04:	68 83       	st	Y, r22
    1c06:	79 83       	std	Y+1, r23	; 0x01
    1c08:	8a 83       	std	Y+2, r24	; 0x02
    1c0a:	9b 83       	std	Y+3, r25	; 0x03
    1c0c:	c2 5a       	subi	r28, 0xA2	; 162
    1c0e:	d0 40       	sbci	r29, 0x00	; 0
    1c10:	ce 55       	subi	r28, 0x5E	; 94
    1c12:	df 4f       	sbci	r29, 0xFF	; 255
    1c14:	88 81       	ld	r24, Y
    1c16:	99 81       	ldd	r25, Y+1	; 0x01
    1c18:	aa 81       	ldd	r26, Y+2	; 0x02
    1c1a:	bb 81       	ldd	r27, Y+3	; 0x03
    1c1c:	c2 5a       	subi	r28, 0xA2	; 162
    1c1e:	d0 40       	sbci	r29, 0x00	; 0
    1c20:	c2 57       	subi	r28, 0x72	; 114
    1c22:	df 4f       	sbci	r29, 0xFF	; 255
    1c24:	88 83       	st	Y, r24
    1c26:	99 83       	std	Y+1, r25	; 0x01
    1c28:	aa 83       	std	Y+2, r26	; 0x02
    1c2a:	bb 83       	std	Y+3, r27	; 0x03
    1c2c:	ce 58       	subi	r28, 0x8E	; 142
    1c2e:	d0 40       	sbci	r29, 0x00	; 0

00001c30 <.Loc.304>:
    1c30:	8e 01       	movw	r16, r28
    1c32:	09 58       	subi	r16, 0x89	; 137
    1c34:	1f 4f       	sbci	r17, 0xFF	; 255
    1c36:	c2 57       	subi	r28, 0x72	; 114
    1c38:	df 4f       	sbci	r29, 0xFF	; 255
    1c3a:	68 81       	ld	r22, Y
    1c3c:	79 81       	ldd	r23, Y+1	; 0x01
    1c3e:	8a 81       	ldd	r24, Y+2	; 0x02
    1c40:	9b 81       	ldd	r25, Y+3	; 0x03
    1c42:	ce 58       	subi	r28, 0x8E	; 142
    1c44:	d0 40       	sbci	r29, 0x00	; 0
    1c46:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    1c4a:	ca 55       	subi	r28, 0x5A	; 90
    1c4c:	df 4f       	sbci	r29, 0xFF	; 255
    1c4e:	68 83       	st	Y, r22
    1c50:	79 83       	std	Y+1, r23	; 0x01
    1c52:	8a 83       	std	Y+2, r24	; 0x02
    1c54:	9b 83       	std	Y+3, r25	; 0x03
    1c56:	c6 5a       	subi	r28, 0xA6	; 166
    1c58:	d0 40       	sbci	r29, 0x00	; 0
    1c5a:	ca 55       	subi	r28, 0x5A	; 90
    1c5c:	df 4f       	sbci	r29, 0xFF	; 255
    1c5e:	e8 81       	ld	r30, Y
    1c60:	f9 81       	ldd	r31, Y+1	; 0x01
    1c62:	c6 5a       	subi	r28, 0xA6	; 166
    1c64:	d0 40       	sbci	r29, 0x00	; 0
    1c66:	d8 01       	movw	r26, r16
    1c68:	11 96       	adiw	r26, 0x01	; 1
    1c6a:	fc 93       	st	X, r31
    1c6c:	ee 93       	st	-X, r30

00001c6e <.Loc.305>:
		while(__ticks)
    1c6e:	26 c0       	rjmp	.+76     	; 0x1cbc <.L186>

00001c70 <.L187>:
    1c70:	ce 01       	movw	r24, r28
    1c72:	87 58       	subi	r24, 0x87	; 135
    1c74:	9f 4f       	sbci	r25, 0xFF	; 255
    1c76:	20 e9       	ldi	r18, 0x90	; 144
    1c78:	31 e0       	ldi	r19, 0x01	; 1
    1c7a:	dc 01       	movw	r26, r24
    1c7c:	2d 93       	st	X+, r18
    1c7e:	3c 93       	st	X, r19

00001c80 <.LBB229>:
	__asm__ volatile (
    1c80:	ce 01       	movw	r24, r28
    1c82:	87 58       	subi	r24, 0x87	; 135
    1c84:	9f 4f       	sbci	r25, 0xFF	; 255
    1c86:	fc 01       	movw	r30, r24
    1c88:	80 81       	ld	r24, Z
    1c8a:	91 81       	ldd	r25, Z+1	; 0x01

00001c8c <.L1^B26>:
    1c8c:	01 97       	sbiw	r24, 0x01	; 1
    1c8e:	f1 f7       	brne	.-4      	; 0x1c8c <.L1^B26>
    1c90:	9e 01       	movw	r18, r28
    1c92:	27 58       	subi	r18, 0x87	; 135
    1c94:	3f 4f       	sbci	r19, 0xFF	; 255
    1c96:	d9 01       	movw	r26, r18
    1c98:	8d 93       	st	X+, r24
    1c9a:	9c 93       	st	X, r25

00001c9c <.Loc.307>:
	...

00001c9e <.LBE229>:
			__ticks --;
    1c9e:	ce 01       	movw	r24, r28
    1ca0:	89 58       	subi	r24, 0x89	; 137
    1ca2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ca4:	9e 01       	movw	r18, r28
    1ca6:	29 58       	subi	r18, 0x89	; 137
    1ca8:	3f 4f       	sbci	r19, 0xFF	; 255
    1caa:	f9 01       	movw	r30, r18
    1cac:	20 81       	ld	r18, Z
    1cae:	31 81       	ldd	r19, Z+1	; 0x01
    1cb0:	21 50       	subi	r18, 0x01	; 1
    1cb2:	31 09       	sbc	r19, r1
    1cb4:	dc 01       	movw	r26, r24
    1cb6:	11 96       	adiw	r26, 0x01	; 1
    1cb8:	3c 93       	st	X, r19
    1cba:	2e 93       	st	-X, r18

00001cbc <.L186>:
		while(__ticks)
    1cbc:	ce 01       	movw	r24, r28
    1cbe:	89 58       	subi	r24, 0x89	; 137
    1cc0:	9f 4f       	sbci	r25, 0xFF	; 255
    1cc2:	fc 01       	movw	r30, r24
    1cc4:	80 81       	ld	r24, Z
    1cc6:	91 81       	ldd	r25, Z+1	; 0x01
    1cc8:	00 97       	sbiw	r24, 0x00	; 0
    1cca:	91 f6       	brne	.-92     	; 0x1c70 <.L187>

00001ccc <.Loc.310>:
		return;
    1ccc:	a2 c0       	rjmp	.+324    	; 0x1e12 <.L178>

00001cce <.L264>:
		__ticks = (uint16_t)__tmp;
    1cce:	8e 01       	movw	r16, r28
    1cd0:	09 58       	subi	r16, 0x89	; 137
    1cd2:	1f 4f       	sbci	r17, 0xFF	; 255
    1cd4:	ce 01       	movw	r24, r28
    1cd6:	8d 58       	subi	r24, 0x8D	; 141
    1cd8:	9f 4f       	sbci	r25, 0xFF	; 255
    1cda:	dc 01       	movw	r26, r24
    1cdc:	6d 91       	ld	r22, X+
    1cde:	7d 91       	ld	r23, X+
    1ce0:	8d 91       	ld	r24, X+
    1ce2:	9c 91       	ld	r25, X
    1ce4:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    1ce8:	c6 55       	subi	r28, 0x56	; 86
    1cea:	df 4f       	sbci	r29, 0xFF	; 255
    1cec:	68 83       	st	Y, r22
    1cee:	79 83       	std	Y+1, r23	; 0x01
    1cf0:	8a 83       	std	Y+2, r24	; 0x02
    1cf2:	9b 83       	std	Y+3, r25	; 0x03
    1cf4:	ca 5a       	subi	r28, 0xAA	; 170
    1cf6:	d0 40       	sbci	r29, 0x00	; 0
    1cf8:	c6 55       	subi	r28, 0x56	; 86
    1cfa:	df 4f       	sbci	r29, 0xFF	; 255
    1cfc:	88 81       	ld	r24, Y
    1cfe:	99 81       	ldd	r25, Y+1	; 0x01
    1d00:	ca 5a       	subi	r28, 0xAA	; 170
    1d02:	d0 40       	sbci	r29, 0x00	; 0
    1d04:	f8 01       	movw	r30, r16
    1d06:	91 83       	std	Z+1, r25	; 0x01
    1d08:	80 83       	st	Z, r24

00001d0a <.L183>:
    1d0a:	ce 01       	movw	r24, r28
    1d0c:	85 58       	subi	r24, 0x85	; 133
    1d0e:	9f 4f       	sbci	r25, 0xFF	; 255
    1d10:	9e 01       	movw	r18, r28
    1d12:	29 58       	subi	r18, 0x89	; 137
    1d14:	3f 4f       	sbci	r19, 0xFF	; 255
    1d16:	d9 01       	movw	r26, r18
    1d18:	2d 91       	ld	r18, X+
    1d1a:	3c 91       	ld	r19, X
    1d1c:	fc 01       	movw	r30, r24
    1d1e:	31 83       	std	Z+1, r19	; 0x01
    1d20:	20 83       	st	Z, r18

00001d22 <.LBB231>:
    1d22:	ce 01       	movw	r24, r28
    1d24:	85 58       	subi	r24, 0x85	; 133
    1d26:	9f 4f       	sbci	r25, 0xFF	; 255
    1d28:	dc 01       	movw	r26, r24
    1d2a:	8d 91       	ld	r24, X+
    1d2c:	9c 91       	ld	r25, X
    1d2e:	11 97       	sbiw	r26, 0x01	; 1

00001d30 <.L1^B27>:
    1d30:	01 97       	sbiw	r24, 0x01	; 1
    1d32:	f1 f7       	brne	.-4      	; 0x1d30 <.L1^B27>
    1d34:	9e 01       	movw	r18, r28
    1d36:	25 58       	subi	r18, 0x85	; 133
    1d38:	3f 4f       	sbci	r19, 0xFF	; 255
    1d3a:	f9 01       	movw	r30, r18
    1d3c:	91 83       	std	Z+1, r25	; 0x01
    1d3e:	80 83       	st	Z, r24

00001d40 <.Loc.313>:
}
    1d40:	68 c0       	rjmp	.+208    	; 0x1e12 <.L178>

00001d42 <.L262>:
	else if (__tmp > 255)
    1d42:	ce 01       	movw	r24, r28
    1d44:	8a 59       	subi	r24, 0x9A	; 154
    1d46:	9f 4f       	sbci	r25, 0xFF	; 255
    1d48:	20 e0       	ldi	r18, 0x00	; 0
    1d4a:	30 e0       	ldi	r19, 0x00	; 0
    1d4c:	4f e7       	ldi	r20, 0x7F	; 127
    1d4e:	53 e4       	ldi	r21, 0x43	; 67
    1d50:	dc 01       	movw	r26, r24
    1d52:	6d 91       	ld	r22, X+
    1d54:	7d 91       	ld	r23, X+
    1d56:	8d 91       	ld	r24, X+
    1d58:	9c 91       	ld	r25, X
    1d5a:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    1d5e:	88 23       	and	r24, r24
    1d60:	e1 f1       	breq	.+120    	; 0x1dda <.L265>
    1d62:	dc f1       	brlt	.+118    	; 0x1dda <.L265>

00001d64 <.LBB233>:
		uint16_t __ticks=(uint16_t)__tmp2;
    1d64:	8e 01       	movw	r16, r28
    1d66:	03 58       	subi	r16, 0x83	; 131
    1d68:	1f 4f       	sbci	r17, 0xFF	; 255
    1d6a:	ce 01       	movw	r24, r28
    1d6c:	86 59       	subi	r24, 0x96	; 150
    1d6e:	9f 4f       	sbci	r25, 0xFF	; 255
    1d70:	fc 01       	movw	r30, r24
    1d72:	60 81       	ld	r22, Z
    1d74:	71 81       	ldd	r23, Z+1	; 0x01
    1d76:	82 81       	ldd	r24, Z+2	; 0x02
    1d78:	93 81       	ldd	r25, Z+3	; 0x03
    1d7a:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    1d7e:	c2 55       	subi	r28, 0x52	; 82
    1d80:	df 4f       	sbci	r29, 0xFF	; 255
    1d82:	68 83       	st	Y, r22
    1d84:	79 83       	std	Y+1, r23	; 0x01
    1d86:	8a 83       	std	Y+2, r24	; 0x02
    1d88:	9b 83       	std	Y+3, r25	; 0x03
    1d8a:	ce 5a       	subi	r28, 0xAE	; 174
    1d8c:	d0 40       	sbci	r29, 0x00	; 0
    1d8e:	c2 55       	subi	r28, 0x52	; 82
    1d90:	df 4f       	sbci	r29, 0xFF	; 255
    1d92:	e8 81       	ld	r30, Y
    1d94:	f9 81       	ldd	r31, Y+1	; 0x01
    1d96:	ce 5a       	subi	r28, 0xAE	; 174
    1d98:	d0 40       	sbci	r29, 0x00	; 0
    1d9a:	d8 01       	movw	r26, r16
    1d9c:	ed 93       	st	X+, r30
    1d9e:	fc 93       	st	X, r31
    1da0:	ce 01       	movw	r24, r28
    1da2:	81 58       	subi	r24, 0x81	; 129
    1da4:	9f 4f       	sbci	r25, 0xFF	; 255
    1da6:	9e 01       	movw	r18, r28
    1da8:	23 58       	subi	r18, 0x83	; 131
    1daa:	3f 4f       	sbci	r19, 0xFF	; 255
    1dac:	d9 01       	movw	r26, r18
    1dae:	2d 91       	ld	r18, X+
    1db0:	3c 91       	ld	r19, X
    1db2:	fc 01       	movw	r30, r24
    1db4:	31 83       	std	Z+1, r19	; 0x01
    1db6:	20 83       	st	Z, r18

00001db8 <.LBB234>:
	__asm__ volatile (
    1db8:	ce 01       	movw	r24, r28
    1dba:	81 58       	subi	r24, 0x81	; 129
    1dbc:	9f 4f       	sbci	r25, 0xFF	; 255
    1dbe:	dc 01       	movw	r26, r24
    1dc0:	8d 91       	ld	r24, X+
    1dc2:	9c 91       	ld	r25, X
    1dc4:	11 97       	sbiw	r26, 0x01	; 1

00001dc6 <.L1^B28>:
    1dc6:	01 97       	sbiw	r24, 0x01	; 1
    1dc8:	f1 f7       	brne	.-4      	; 0x1dc6 <.L1^B28>
    1dca:	9e 01       	movw	r18, r28
    1dcc:	21 58       	subi	r18, 0x81	; 129
    1dce:	3f 4f       	sbci	r19, 0xFF	; 255
    1dd0:	f9 01       	movw	r30, r18
    1dd2:	91 83       	std	Z+1, r25	; 0x01
    1dd4:	80 83       	st	Z, r24

00001dd6 <.Loc.317>:
	...

00001dd8 <.LBE234>:
		return;
    1dd8:	34 c0       	rjmp	.+104    	; 0x1e42 <.L191>

00001dda <.L265>:
		__ticks = (uint8_t)__tmp;
    1dda:	8e 01       	movw	r16, r28
    1ddc:	02 59       	subi	r16, 0x92	; 146
    1dde:	1f 4f       	sbci	r17, 0xFF	; 255
    1de0:	ce 01       	movw	r24, r28
    1de2:	8a 59       	subi	r24, 0x9A	; 154
    1de4:	9f 4f       	sbci	r25, 0xFF	; 255
    1de6:	dc 01       	movw	r26, r24
    1de8:	6d 91       	ld	r22, X+
    1dea:	7d 91       	ld	r23, X+
    1dec:	8d 91       	ld	r24, X+
    1dee:	9c 91       	ld	r25, X
    1df0:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    1df4:	ce 54       	subi	r28, 0x4E	; 78
    1df6:	df 4f       	sbci	r29, 0xFF	; 255
    1df8:	68 83       	st	Y, r22
    1dfa:	79 83       	std	Y+1, r23	; 0x01
    1dfc:	8a 83       	std	Y+2, r24	; 0x02
    1dfe:	9b 83       	std	Y+3, r25	; 0x03
    1e00:	c2 5b       	subi	r28, 0xB2	; 178
    1e02:	d0 40       	sbci	r29, 0x00	; 0
    1e04:	ce 54       	subi	r28, 0x4E	; 78
    1e06:	df 4f       	sbci	r29, 0xFF	; 255
    1e08:	88 81       	ld	r24, Y
    1e0a:	c2 5b       	subi	r28, 0xB2	; 178
    1e0c:	d0 40       	sbci	r29, 0x00	; 0
    1e0e:	f8 01       	movw	r30, r16
    1e10:	80 83       	st	Z, r24

00001e12 <.L178>:
    1e12:	ce 01       	movw	r24, r28
    1e14:	8f 57       	subi	r24, 0x7F	; 127
    1e16:	9f 4f       	sbci	r25, 0xFF	; 255
    1e18:	9e 01       	movw	r18, r28
    1e1a:	22 59       	subi	r18, 0x92	; 146
    1e1c:	3f 4f       	sbci	r19, 0xFF	; 255
    1e1e:	d9 01       	movw	r26, r18
    1e20:	2c 91       	ld	r18, X
    1e22:	fc 01       	movw	r30, r24
    1e24:	20 83       	st	Z, r18

00001e26 <.LBB236>:
	__asm__ volatile (
    1e26:	ce 01       	movw	r24, r28
    1e28:	8f 57       	subi	r24, 0x7F	; 127
    1e2a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e2c:	dc 01       	movw	r26, r24
    1e2e:	8c 91       	ld	r24, X
    1e30:	28 2f       	mov	r18, r24

00001e32 <.L1^B29>:
    1e32:	2a 95       	dec	r18
    1e34:	f1 f7       	brne	.-4      	; 0x1e32 <.L1^B29>
    1e36:	ce 01       	movw	r24, r28
    1e38:	8f 57       	subi	r24, 0x7F	; 127
    1e3a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e3c:	fc 01       	movw	r30, r24
    1e3e:	20 83       	st	Z, r18

00001e40 <.Loc.321>:
	...

00001e42 <.L191>:
        _delay_us(1);                               // implement 'Delay data time' (160 nS) and 'Enable pulse width' (230 nS)

        busy_flag_copy |= (lcd_D7_pin & (1<<lcd_D7_bit));  // get actual busy flag status
    1e42:	86 e2       	ldi	r24, 0x26	; 38
    1e44:	90 e0       	ldi	r25, 0x00	; 0
    1e46:	dc 01       	movw	r26, r24
    1e48:	8c 91       	ld	r24, X

00001e4a <.Loc.323>:
    1e4a:	88 2f       	mov	r24, r24
    1e4c:	90 e0       	ldi	r25, 0x00	; 0
    1e4e:	80 78       	andi	r24, 0x80	; 128
    1e50:	99 27       	eor	r25, r25

00001e52 <.Loc.324>:
    1e52:	98 2f       	mov	r25, r24
    1e54:	89 81       	ldd	r24, Y+1	; 0x01
    1e56:	89 2b       	or	r24, r25
    1e58:	89 83       	std	Y+1, r24	; 0x01

00001e5a <.Loc.325>:

        lcd_Ctlr_Port &= ~(1<<lcd_E_bit);           // Enable pin low
    1e5a:	88 e2       	ldi	r24, 0x28	; 40
    1e5c:	90 e0       	ldi	r25, 0x00	; 0
    1e5e:	fc 01       	movw	r30, r24
    1e60:	20 81       	ld	r18, Z

00001e62 <.Loc.326>:
    1e62:	88 e2       	ldi	r24, 0x28	; 40
    1e64:	90 e0       	ldi	r25, 0x00	; 0

00001e66 <.Loc.327>:
    1e66:	27 7f       	andi	r18, 0xF7	; 247
    1e68:	dc 01       	movw	r26, r24
    1e6a:	2c 93       	st	X, r18
    1e6c:	9e 01       	movw	r18, r28
    1e6e:	2e 5b       	subi	r18, 0xBE	; 190
    1e70:	3f 4f       	sbci	r19, 0xFF	; 255
    1e72:	80 e0       	ldi	r24, 0x00	; 0
    1e74:	90 e0       	ldi	r25, 0x00	; 0
    1e76:	a0 e8       	ldi	r26, 0x80	; 128
    1e78:	bf e3       	ldi	r27, 0x3F	; 63
    1e7a:	f9 01       	movw	r30, r18
    1e7c:	80 83       	st	Z, r24
    1e7e:	91 83       	std	Z+1, r25	; 0x01
    1e80:	a2 83       	std	Z+2, r26	; 0x02
    1e82:	b3 83       	std	Z+3, r27	; 0x03

00001e84 <.LBB238>:
	__tmp = ((F_CPU) / 3e6) * __us;
    1e84:	8e 01       	movw	r16, r28
    1e86:	0a 5b       	subi	r16, 0xBA	; 186
    1e88:	1f 4f       	sbci	r17, 0xFF	; 255
    1e8a:	ce 01       	movw	r24, r28
    1e8c:	8e 5b       	subi	r24, 0xBE	; 190
    1e8e:	9f 4f       	sbci	r25, 0xFF	; 255
    1e90:	2b ea       	ldi	r18, 0xAB	; 171
    1e92:	3a ea       	ldi	r19, 0xAA	; 170
    1e94:	4a ea       	ldi	r20, 0xAA	; 170
    1e96:	50 e4       	ldi	r21, 0x40	; 64
    1e98:	dc 01       	movw	r26, r24
    1e9a:	6d 91       	ld	r22, X+
    1e9c:	7d 91       	ld	r23, X+
    1e9e:	8d 91       	ld	r24, X+
    1ea0:	9c 91       	ld	r25, X
    1ea2:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    1ea6:	ca 54       	subi	r28, 0x4A	; 74
    1ea8:	df 4f       	sbci	r29, 0xFF	; 255
    1eaa:	68 83       	st	Y, r22
    1eac:	79 83       	std	Y+1, r23	; 0x01
    1eae:	8a 83       	std	Y+2, r24	; 0x02
    1eb0:	9b 83       	std	Y+3, r25	; 0x03
    1eb2:	c6 5b       	subi	r28, 0xB6	; 182
    1eb4:	d0 40       	sbci	r29, 0x00	; 0
    1eb6:	ca 54       	subi	r28, 0x4A	; 74
    1eb8:	df 4f       	sbci	r29, 0xFF	; 255
    1eba:	88 81       	ld	r24, Y
    1ebc:	99 81       	ldd	r25, Y+1	; 0x01
    1ebe:	aa 81       	ldd	r26, Y+2	; 0x02
    1ec0:	bb 81       	ldd	r27, Y+3	; 0x03
    1ec2:	c6 5b       	subi	r28, 0xB6	; 182
    1ec4:	d0 40       	sbci	r29, 0x00	; 0
    1ec6:	f8 01       	movw	r30, r16
    1ec8:	80 83       	st	Z, r24
    1eca:	91 83       	std	Z+1, r25	; 0x01
    1ecc:	a2 83       	std	Z+2, r26	; 0x02
    1ece:	b3 83       	std	Z+3, r27	; 0x03

00001ed0 <.Loc.329>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    1ed0:	8e 01       	movw	r16, r28
    1ed2:	06 5b       	subi	r16, 0xB6	; 182
    1ed4:	1f 4f       	sbci	r17, 0xFF	; 255
    1ed6:	ce 01       	movw	r24, r28
    1ed8:	8e 5b       	subi	r24, 0xBE	; 190
    1eda:	9f 4f       	sbci	r25, 0xFF	; 255
    1edc:	20 e0       	ldi	r18, 0x00	; 0
    1ede:	30 e0       	ldi	r19, 0x00	; 0
    1ee0:	40 e8       	ldi	r20, 0x80	; 128
    1ee2:	50 e4       	ldi	r21, 0x40	; 64
    1ee4:	dc 01       	movw	r26, r24
    1ee6:	6d 91       	ld	r22, X+
    1ee8:	7d 91       	ld	r23, X+
    1eea:	8d 91       	ld	r24, X+
    1eec:	9c 91       	ld	r25, X
    1eee:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    1ef2:	c6 54       	subi	r28, 0x46	; 70
    1ef4:	df 4f       	sbci	r29, 0xFF	; 255
    1ef6:	68 83       	st	Y, r22
    1ef8:	79 83       	std	Y+1, r23	; 0x01
    1efa:	8a 83       	std	Y+2, r24	; 0x02
    1efc:	9b 83       	std	Y+3, r25	; 0x03
    1efe:	ca 5b       	subi	r28, 0xBA	; 186
    1f00:	d0 40       	sbci	r29, 0x00	; 0
    1f02:	c6 54       	subi	r28, 0x46	; 70
    1f04:	df 4f       	sbci	r29, 0xFF	; 255
    1f06:	88 81       	ld	r24, Y
    1f08:	99 81       	ldd	r25, Y+1	; 0x01
    1f0a:	aa 81       	ldd	r26, Y+2	; 0x02
    1f0c:	bb 81       	ldd	r27, Y+3	; 0x03
    1f0e:	ca 5b       	subi	r28, 0xBA	; 186
    1f10:	d0 40       	sbci	r29, 0x00	; 0
    1f12:	f8 01       	movw	r30, r16
    1f14:	80 83       	st	Z, r24
    1f16:	91 83       	std	Z+1, r25	; 0x01
    1f18:	a2 83       	std	Z+2, r26	; 0x02
    1f1a:	b3 83       	std	Z+3, r27	; 0x03

00001f1c <.Loc.330>:
	if (__tmp < 1.0)
    1f1c:	ce 01       	movw	r24, r28
    1f1e:	8a 5b       	subi	r24, 0xBA	; 186
    1f20:	9f 4f       	sbci	r25, 0xFF	; 255
    1f22:	20 e0       	ldi	r18, 0x00	; 0
    1f24:	30 e0       	ldi	r19, 0x00	; 0
    1f26:	40 e8       	ldi	r20, 0x80	; 128
    1f28:	5f e3       	ldi	r21, 0x3F	; 63
    1f2a:	dc 01       	movw	r26, r24
    1f2c:	6d 91       	ld	r22, X+
    1f2e:	7d 91       	ld	r23, X+
    1f30:	8d 91       	ld	r24, X+
    1f32:	9c 91       	ld	r25, X
    1f34:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
    1f38:	88 23       	and	r24, r24
    1f3a:	3c f4       	brge	.+14     	; 0x1f4a <.L266>

00001f3c <.Loc.331>:
		__ticks = 1;
    1f3c:	ce 01       	movw	r24, r28
    1f3e:	82 5b       	subi	r24, 0xB2	; 178
    1f40:	9f 4f       	sbci	r25, 0xFF	; 255
    1f42:	21 e0       	ldi	r18, 0x01	; 1
    1f44:	fc 01       	movw	r30, r24
    1f46:	20 83       	st	Z, r18
    1f48:	a0 c1       	rjmp	.+832    	; 0x228a <.L194>

00001f4a <.L266>:
	else if (__tmp2 > 65535)
    1f4a:	ce 01       	movw	r24, r28
    1f4c:	86 5b       	subi	r24, 0xB6	; 182
    1f4e:	9f 4f       	sbci	r25, 0xFF	; 255
    1f50:	20 e0       	ldi	r18, 0x00	; 0
    1f52:	3f ef       	ldi	r19, 0xFF	; 255
    1f54:	4f e7       	ldi	r20, 0x7F	; 127
    1f56:	57 e4       	ldi	r21, 0x47	; 71
    1f58:	dc 01       	movw	r26, r24
    1f5a:	6d 91       	ld	r22, X+
    1f5c:	7d 91       	ld	r23, X+
    1f5e:	8d 91       	ld	r24, X+
    1f60:	9c 91       	ld	r25, X
    1f62:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    1f66:	88 23       	and	r24, r24
    1f68:	09 f0       	breq	.+2      	; 0x1f6c <L0^A>

00001f6a <L0^A>:
    1f6a:	0c f4       	brge	.+2      	; 0x1f6e <.Loc.333>

00001f6c <L0^A>:
    1f6c:	26 c1       	rjmp	.+588    	; 0x21ba <.L267>

00001f6e <.Loc.333>:
		_delay_ms(__us / 1000.0);
    1f6e:	ce 01       	movw	r24, r28
    1f70:	8e 5b       	subi	r24, 0xBE	; 190
    1f72:	9f 4f       	sbci	r25, 0xFF	; 255
    1f74:	20 e0       	ldi	r18, 0x00	; 0
    1f76:	30 e0       	ldi	r19, 0x00	; 0
    1f78:	4a e7       	ldi	r20, 0x7A	; 122
    1f7a:	54 e4       	ldi	r21, 0x44	; 68
    1f7c:	fc 01       	movw	r30, r24
    1f7e:	60 81       	ld	r22, Z
    1f80:	71 81       	ldd	r23, Z+1	; 0x01
    1f82:	82 81       	ldd	r24, Z+2	; 0x02
    1f84:	93 81       	ldd	r25, Z+3	; 0x03
    1f86:	0e 94 23 1f 	call	0x3e46	; 0x3e46 <__divsf3>
    1f8a:	c2 54       	subi	r28, 0x42	; 66
    1f8c:	df 4f       	sbci	r29, 0xFF	; 255
    1f8e:	68 83       	st	Y, r22
    1f90:	79 83       	std	Y+1, r23	; 0x01
    1f92:	8a 83       	std	Y+2, r24	; 0x02
    1f94:	9b 83       	std	Y+3, r25	; 0x03
    1f96:	ce 5b       	subi	r28, 0xBE	; 190
    1f98:	d0 40       	sbci	r29, 0x00	; 0
    1f9a:	c2 54       	subi	r28, 0x42	; 66
    1f9c:	df 4f       	sbci	r29, 0xFF	; 255
    1f9e:	88 81       	ld	r24, Y
    1fa0:	99 81       	ldd	r25, Y+1	; 0x01
    1fa2:	aa 81       	ldd	r26, Y+2	; 0x02
    1fa4:	bb 81       	ldd	r27, Y+3	; 0x03
    1fa6:	ce 5b       	subi	r28, 0xBE	; 190
    1fa8:	d0 40       	sbci	r29, 0x00	; 0
    1faa:	9e 01       	movw	r18, r28
    1fac:	21 5b       	subi	r18, 0xB1	; 177
    1fae:	3f 4f       	sbci	r19, 0xFF	; 255
    1fb0:	f9 01       	movw	r30, r18
    1fb2:	80 83       	st	Z, r24
    1fb4:	91 83       	std	Z+1, r25	; 0x01
    1fb6:	a2 83       	std	Z+2, r26	; 0x02
    1fb8:	b3 83       	std	Z+3, r27	; 0x03

00001fba <.LBB240>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1fba:	8e 01       	movw	r16, r28
    1fbc:	0d 5a       	subi	r16, 0xAD	; 173
    1fbe:	1f 4f       	sbci	r17, 0xFF	; 255
    1fc0:	ce 01       	movw	r24, r28
    1fc2:	81 5b       	subi	r24, 0xB1	; 177
    1fc4:	9f 4f       	sbci	r25, 0xFF	; 255
    1fc6:	20 e0       	ldi	r18, 0x00	; 0
    1fc8:	30 e0       	ldi	r19, 0x00	; 0
    1fca:	4a e7       	ldi	r20, 0x7A	; 122
    1fcc:	55 e4       	ldi	r21, 0x45	; 69
    1fce:	dc 01       	movw	r26, r24
    1fd0:	6d 91       	ld	r22, X+
    1fd2:	7d 91       	ld	r23, X+
    1fd4:	8d 91       	ld	r24, X+
    1fd6:	9c 91       	ld	r25, X
    1fd8:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    1fdc:	ce 53       	subi	r28, 0x3E	; 62
    1fde:	df 4f       	sbci	r29, 0xFF	; 255
    1fe0:	68 83       	st	Y, r22
    1fe2:	79 83       	std	Y+1, r23	; 0x01
    1fe4:	8a 83       	std	Y+2, r24	; 0x02
    1fe6:	9b 83       	std	Y+3, r25	; 0x03
    1fe8:	c2 5c       	subi	r28, 0xC2	; 194
    1fea:	d0 40       	sbci	r29, 0x00	; 0
    1fec:	ce 53       	subi	r28, 0x3E	; 62
    1fee:	df 4f       	sbci	r29, 0xFF	; 255
    1ff0:	88 81       	ld	r24, Y
    1ff2:	99 81       	ldd	r25, Y+1	; 0x01
    1ff4:	aa 81       	ldd	r26, Y+2	; 0x02
    1ff6:	bb 81       	ldd	r27, Y+3	; 0x03
    1ff8:	c2 5c       	subi	r28, 0xC2	; 194
    1ffa:	d0 40       	sbci	r29, 0x00	; 0
    1ffc:	f8 01       	movw	r30, r16
    1ffe:	80 83       	st	Z, r24
    2000:	91 83       	std	Z+1, r25	; 0x01
    2002:	a2 83       	std	Z+2, r26	; 0x02
    2004:	b3 83       	std	Z+3, r27	; 0x03

00002006 <.Loc.335>:
	if (__tmp < 1.0)
    2006:	ce 01       	movw	r24, r28
    2008:	8d 5a       	subi	r24, 0xAD	; 173
    200a:	9f 4f       	sbci	r25, 0xFF	; 255
    200c:	20 e0       	ldi	r18, 0x00	; 0
    200e:	30 e0       	ldi	r19, 0x00	; 0
    2010:	40 e8       	ldi	r20, 0x80	; 128
    2012:	5f e3       	ldi	r21, 0x3F	; 63
    2014:	dc 01       	movw	r26, r24
    2016:	6d 91       	ld	r22, X+
    2018:	7d 91       	ld	r23, X+
    201a:	8d 91       	ld	r24, X+
    201c:	9c 91       	ld	r25, X
    201e:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
    2022:	88 23       	and	r24, r24
    2024:	4c f4       	brge	.+18     	; 0x2038 <.L268>

00002026 <.Loc.336>:
		__ticks = 1;
    2026:	ce 01       	movw	r24, r28
    2028:	89 5a       	subi	r24, 0xA9	; 169
    202a:	9f 4f       	sbci	r25, 0xFF	; 255
    202c:	21 e0       	ldi	r18, 0x01	; 1
    202e:	30 e0       	ldi	r19, 0x00	; 0
    2030:	fc 01       	movw	r30, r24
    2032:	31 83       	std	Z+1, r19	; 0x01
    2034:	20 83       	st	Z, r18
    2036:	a5 c0       	rjmp	.+330    	; 0x2182 <.L199>

00002038 <.L268>:
	else if (__tmp > 65535)
    2038:	ce 01       	movw	r24, r28
    203a:	8d 5a       	subi	r24, 0xAD	; 173
    203c:	9f 4f       	sbci	r25, 0xFF	; 255
    203e:	20 e0       	ldi	r18, 0x00	; 0
    2040:	3f ef       	ldi	r19, 0xFF	; 255
    2042:	4f e7       	ldi	r20, 0x7F	; 127
    2044:	57 e4       	ldi	r21, 0x47	; 71
    2046:	dc 01       	movw	r26, r24
    2048:	6d 91       	ld	r22, X+
    204a:	7d 91       	ld	r23, X+
    204c:	8d 91       	ld	r24, X+
    204e:	9c 91       	ld	r25, X
    2050:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    2054:	88 23       	and	r24, r24
    2056:	09 f0       	breq	.+2      	; 0x205a <L0^A>

00002058 <L0^A>:
    2058:	0c f4       	brge	.+2      	; 0x205c <.Loc.338>

0000205a <L0^A>:
    205a:	75 c0       	rjmp	.+234    	; 0x2146 <.L269>

0000205c <.Loc.338>:
		__ticks = (uint16_t) (__ms * 10.0);
    205c:	ce 01       	movw	r24, r28
    205e:	81 5b       	subi	r24, 0xB1	; 177
    2060:	9f 4f       	sbci	r25, 0xFF	; 255
    2062:	20 e0       	ldi	r18, 0x00	; 0
    2064:	30 e0       	ldi	r19, 0x00	; 0
    2066:	40 e2       	ldi	r20, 0x20	; 32
    2068:	51 e4       	ldi	r21, 0x41	; 65
    206a:	fc 01       	movw	r30, r24
    206c:	60 81       	ld	r22, Z
    206e:	71 81       	ldd	r23, Z+1	; 0x01
    2070:	82 81       	ldd	r24, Z+2	; 0x02
    2072:	93 81       	ldd	r25, Z+3	; 0x03
    2074:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    2078:	ca 53       	subi	r28, 0x3A	; 58
    207a:	df 4f       	sbci	r29, 0xFF	; 255
    207c:	68 83       	st	Y, r22
    207e:	79 83       	std	Y+1, r23	; 0x01
    2080:	8a 83       	std	Y+2, r24	; 0x02
    2082:	9b 83       	std	Y+3, r25	; 0x03
    2084:	c6 5c       	subi	r28, 0xC6	; 198
    2086:	d0 40       	sbci	r29, 0x00	; 0
    2088:	ca 53       	subi	r28, 0x3A	; 58
    208a:	df 4f       	sbci	r29, 0xFF	; 255
    208c:	88 81       	ld	r24, Y
    208e:	99 81       	ldd	r25, Y+1	; 0x01
    2090:	aa 81       	ldd	r26, Y+2	; 0x02
    2092:	bb 81       	ldd	r27, Y+3	; 0x03
    2094:	c6 5c       	subi	r28, 0xC6	; 198
    2096:	d0 40       	sbci	r29, 0x00	; 0
    2098:	c6 57       	subi	r28, 0x76	; 118
    209a:	df 4f       	sbci	r29, 0xFF	; 255
    209c:	88 83       	st	Y, r24
    209e:	99 83       	std	Y+1, r25	; 0x01
    20a0:	aa 83       	std	Y+2, r26	; 0x02
    20a2:	bb 83       	std	Y+3, r27	; 0x03
    20a4:	ca 58       	subi	r28, 0x8A	; 138
    20a6:	d0 40       	sbci	r29, 0x00	; 0

000020a8 <.Loc.339>:
    20a8:	8e 01       	movw	r16, r28
    20aa:	09 5a       	subi	r16, 0xA9	; 169
    20ac:	1f 4f       	sbci	r17, 0xFF	; 255
    20ae:	c6 57       	subi	r28, 0x76	; 118
    20b0:	df 4f       	sbci	r29, 0xFF	; 255
    20b2:	68 81       	ld	r22, Y
    20b4:	79 81       	ldd	r23, Y+1	; 0x01
    20b6:	8a 81       	ldd	r24, Y+2	; 0x02
    20b8:	9b 81       	ldd	r25, Y+3	; 0x03
    20ba:	ca 58       	subi	r28, 0x8A	; 138
    20bc:	d0 40       	sbci	r29, 0x00	; 0
    20be:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    20c2:	c6 53       	subi	r28, 0x36	; 54
    20c4:	df 4f       	sbci	r29, 0xFF	; 255
    20c6:	68 83       	st	Y, r22
    20c8:	79 83       	std	Y+1, r23	; 0x01
    20ca:	8a 83       	std	Y+2, r24	; 0x02
    20cc:	9b 83       	std	Y+3, r25	; 0x03
    20ce:	ca 5c       	subi	r28, 0xCA	; 202
    20d0:	d0 40       	sbci	r29, 0x00	; 0
    20d2:	c6 53       	subi	r28, 0x36	; 54
    20d4:	df 4f       	sbci	r29, 0xFF	; 255
    20d6:	e8 81       	ld	r30, Y
    20d8:	f9 81       	ldd	r31, Y+1	; 0x01
    20da:	ca 5c       	subi	r28, 0xCA	; 202
    20dc:	d0 40       	sbci	r29, 0x00	; 0
    20de:	d8 01       	movw	r26, r16
    20e0:	11 96       	adiw	r26, 0x01	; 1
    20e2:	fc 93       	st	X, r31
    20e4:	ee 93       	st	-X, r30

000020e6 <.Loc.340>:
		while(__ticks)
    20e6:	26 c0       	rjmp	.+76     	; 0x2134 <.L202>

000020e8 <.L203>:
    20e8:	ce 01       	movw	r24, r28
    20ea:	87 5a       	subi	r24, 0xA7	; 167
    20ec:	9f 4f       	sbci	r25, 0xFF	; 255
    20ee:	20 e9       	ldi	r18, 0x90	; 144
    20f0:	31 e0       	ldi	r19, 0x01	; 1
    20f2:	dc 01       	movw	r26, r24
    20f4:	2d 93       	st	X+, r18
    20f6:	3c 93       	st	X, r19

000020f8 <.LBB242>:
	__asm__ volatile (
    20f8:	ce 01       	movw	r24, r28
    20fa:	87 5a       	subi	r24, 0xA7	; 167
    20fc:	9f 4f       	sbci	r25, 0xFF	; 255
    20fe:	fc 01       	movw	r30, r24
    2100:	80 81       	ld	r24, Z
    2102:	91 81       	ldd	r25, Z+1	; 0x01

00002104 <.L1^B30>:
    2104:	01 97       	sbiw	r24, 0x01	; 1
    2106:	f1 f7       	brne	.-4      	; 0x2104 <.L1^B30>
    2108:	9e 01       	movw	r18, r28
    210a:	27 5a       	subi	r18, 0xA7	; 167
    210c:	3f 4f       	sbci	r19, 0xFF	; 255
    210e:	d9 01       	movw	r26, r18
    2110:	8d 93       	st	X+, r24
    2112:	9c 93       	st	X, r25

00002114 <.Loc.342>:
	...

00002116 <.LBE242>:
			__ticks --;
    2116:	ce 01       	movw	r24, r28
    2118:	89 5a       	subi	r24, 0xA9	; 169
    211a:	9f 4f       	sbci	r25, 0xFF	; 255
    211c:	9e 01       	movw	r18, r28
    211e:	29 5a       	subi	r18, 0xA9	; 169
    2120:	3f 4f       	sbci	r19, 0xFF	; 255
    2122:	f9 01       	movw	r30, r18
    2124:	20 81       	ld	r18, Z
    2126:	31 81       	ldd	r19, Z+1	; 0x01
    2128:	21 50       	subi	r18, 0x01	; 1
    212a:	31 09       	sbc	r19, r1
    212c:	dc 01       	movw	r26, r24
    212e:	11 96       	adiw	r26, 0x01	; 1
    2130:	3c 93       	st	X, r19
    2132:	2e 93       	st	-X, r18

00002134 <.L202>:
		while(__ticks)
    2134:	ce 01       	movw	r24, r28
    2136:	89 5a       	subi	r24, 0xA9	; 169
    2138:	9f 4f       	sbci	r25, 0xFF	; 255
    213a:	fc 01       	movw	r30, r24
    213c:	80 81       	ld	r24, Z
    213e:	91 81       	ldd	r25, Z+1	; 0x01
    2140:	00 97       	sbiw	r24, 0x00	; 0
    2142:	91 f6       	brne	.-92     	; 0x20e8 <.L203>

00002144 <.Loc.345>:
		return;
    2144:	a2 c0       	rjmp	.+324    	; 0x228a <.L194>

00002146 <.L269>:
		__ticks = (uint16_t)__tmp;
    2146:	8e 01       	movw	r16, r28
    2148:	09 5a       	subi	r16, 0xA9	; 169
    214a:	1f 4f       	sbci	r17, 0xFF	; 255
    214c:	ce 01       	movw	r24, r28
    214e:	8d 5a       	subi	r24, 0xAD	; 173
    2150:	9f 4f       	sbci	r25, 0xFF	; 255
    2152:	dc 01       	movw	r26, r24
    2154:	6d 91       	ld	r22, X+
    2156:	7d 91       	ld	r23, X+
    2158:	8d 91       	ld	r24, X+
    215a:	9c 91       	ld	r25, X
    215c:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    2160:	c2 53       	subi	r28, 0x32	; 50
    2162:	df 4f       	sbci	r29, 0xFF	; 255
    2164:	68 83       	st	Y, r22
    2166:	79 83       	std	Y+1, r23	; 0x01
    2168:	8a 83       	std	Y+2, r24	; 0x02
    216a:	9b 83       	std	Y+3, r25	; 0x03
    216c:	ce 5c       	subi	r28, 0xCE	; 206
    216e:	d0 40       	sbci	r29, 0x00	; 0
    2170:	c2 53       	subi	r28, 0x32	; 50
    2172:	df 4f       	sbci	r29, 0xFF	; 255
    2174:	88 81       	ld	r24, Y
    2176:	99 81       	ldd	r25, Y+1	; 0x01
    2178:	ce 5c       	subi	r28, 0xCE	; 206
    217a:	d0 40       	sbci	r29, 0x00	; 0
    217c:	f8 01       	movw	r30, r16
    217e:	91 83       	std	Z+1, r25	; 0x01
    2180:	80 83       	st	Z, r24

00002182 <.L199>:
    2182:	ce 01       	movw	r24, r28
    2184:	85 5a       	subi	r24, 0xA5	; 165
    2186:	9f 4f       	sbci	r25, 0xFF	; 255
    2188:	9e 01       	movw	r18, r28
    218a:	29 5a       	subi	r18, 0xA9	; 169
    218c:	3f 4f       	sbci	r19, 0xFF	; 255
    218e:	d9 01       	movw	r26, r18
    2190:	2d 91       	ld	r18, X+
    2192:	3c 91       	ld	r19, X
    2194:	fc 01       	movw	r30, r24
    2196:	31 83       	std	Z+1, r19	; 0x01
    2198:	20 83       	st	Z, r18

0000219a <.LBB244>:
    219a:	ce 01       	movw	r24, r28
    219c:	85 5a       	subi	r24, 0xA5	; 165
    219e:	9f 4f       	sbci	r25, 0xFF	; 255
    21a0:	dc 01       	movw	r26, r24
    21a2:	8d 91       	ld	r24, X+
    21a4:	9c 91       	ld	r25, X
    21a6:	11 97       	sbiw	r26, 0x01	; 1

000021a8 <.L1^B31>:
    21a8:	01 97       	sbiw	r24, 0x01	; 1
    21aa:	f1 f7       	brne	.-4      	; 0x21a8 <.L1^B31>
    21ac:	9e 01       	movw	r18, r28
    21ae:	25 5a       	subi	r18, 0xA5	; 165
    21b0:	3f 4f       	sbci	r19, 0xFF	; 255
    21b2:	f9 01       	movw	r30, r18
    21b4:	91 83       	std	Z+1, r25	; 0x01
    21b6:	80 83       	st	Z, r24

000021b8 <.Loc.348>:
}
    21b8:	68 c0       	rjmp	.+208    	; 0x228a <.L194>

000021ba <.L267>:
	else if (__tmp > 255)
    21ba:	ce 01       	movw	r24, r28
    21bc:	8a 5b       	subi	r24, 0xBA	; 186
    21be:	9f 4f       	sbci	r25, 0xFF	; 255
    21c0:	20 e0       	ldi	r18, 0x00	; 0
    21c2:	30 e0       	ldi	r19, 0x00	; 0
    21c4:	4f e7       	ldi	r20, 0x7F	; 127
    21c6:	53 e4       	ldi	r21, 0x43	; 67
    21c8:	dc 01       	movw	r26, r24
    21ca:	6d 91       	ld	r22, X+
    21cc:	7d 91       	ld	r23, X+
    21ce:	8d 91       	ld	r24, X+
    21d0:	9c 91       	ld	r25, X
    21d2:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    21d6:	88 23       	and	r24, r24
    21d8:	e1 f1       	breq	.+120    	; 0x2252 <.L270>
    21da:	dc f1       	brlt	.+118    	; 0x2252 <.L270>

000021dc <.LBB246>:
		uint16_t __ticks=(uint16_t)__tmp2;
    21dc:	8e 01       	movw	r16, r28
    21de:	03 5a       	subi	r16, 0xA3	; 163
    21e0:	1f 4f       	sbci	r17, 0xFF	; 255
    21e2:	ce 01       	movw	r24, r28
    21e4:	86 5b       	subi	r24, 0xB6	; 182
    21e6:	9f 4f       	sbci	r25, 0xFF	; 255
    21e8:	fc 01       	movw	r30, r24
    21ea:	60 81       	ld	r22, Z
    21ec:	71 81       	ldd	r23, Z+1	; 0x01
    21ee:	82 81       	ldd	r24, Z+2	; 0x02
    21f0:	93 81       	ldd	r25, Z+3	; 0x03
    21f2:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    21f6:	ce 52       	subi	r28, 0x2E	; 46
    21f8:	df 4f       	sbci	r29, 0xFF	; 255
    21fa:	68 83       	st	Y, r22
    21fc:	79 83       	std	Y+1, r23	; 0x01
    21fe:	8a 83       	std	Y+2, r24	; 0x02
    2200:	9b 83       	std	Y+3, r25	; 0x03
    2202:	c2 5d       	subi	r28, 0xD2	; 210
    2204:	d0 40       	sbci	r29, 0x00	; 0
    2206:	ce 52       	subi	r28, 0x2E	; 46
    2208:	df 4f       	sbci	r29, 0xFF	; 255
    220a:	e8 81       	ld	r30, Y
    220c:	f9 81       	ldd	r31, Y+1	; 0x01
    220e:	c2 5d       	subi	r28, 0xD2	; 210
    2210:	d0 40       	sbci	r29, 0x00	; 0
    2212:	d8 01       	movw	r26, r16
    2214:	ed 93       	st	X+, r30
    2216:	fc 93       	st	X, r31
    2218:	ce 01       	movw	r24, r28
    221a:	81 5a       	subi	r24, 0xA1	; 161
    221c:	9f 4f       	sbci	r25, 0xFF	; 255
    221e:	9e 01       	movw	r18, r28
    2220:	23 5a       	subi	r18, 0xA3	; 163
    2222:	3f 4f       	sbci	r19, 0xFF	; 255
    2224:	d9 01       	movw	r26, r18
    2226:	2d 91       	ld	r18, X+
    2228:	3c 91       	ld	r19, X
    222a:	fc 01       	movw	r30, r24
    222c:	31 83       	std	Z+1, r19	; 0x01
    222e:	20 83       	st	Z, r18

00002230 <.LBB247>:
	__asm__ volatile (
    2230:	ce 01       	movw	r24, r28
    2232:	81 5a       	subi	r24, 0xA1	; 161
    2234:	9f 4f       	sbci	r25, 0xFF	; 255
    2236:	dc 01       	movw	r26, r24
    2238:	8d 91       	ld	r24, X+
    223a:	9c 91       	ld	r25, X
    223c:	11 97       	sbiw	r26, 0x01	; 1

0000223e <.L1^B32>:
    223e:	01 97       	sbiw	r24, 0x01	; 1
    2240:	f1 f7       	brne	.-4      	; 0x223e <.L1^B32>
    2242:	9e 01       	movw	r18, r28
    2244:	21 5a       	subi	r18, 0xA1	; 161
    2246:	3f 4f       	sbci	r19, 0xFF	; 255
    2248:	f9 01       	movw	r30, r18
    224a:	91 83       	std	Z+1, r25	; 0x01
    224c:	80 83       	st	Z, r24

0000224e <.Loc.352>:
	...

00002250 <.LBE247>:
		return;
    2250:	34 c0       	rjmp	.+104    	; 0x22ba <.L207>

00002252 <.L270>:
		__ticks = (uint8_t)__tmp;
    2252:	8e 01       	movw	r16, r28
    2254:	02 5b       	subi	r16, 0xB2	; 178
    2256:	1f 4f       	sbci	r17, 0xFF	; 255
    2258:	ce 01       	movw	r24, r28
    225a:	8a 5b       	subi	r24, 0xBA	; 186
    225c:	9f 4f       	sbci	r25, 0xFF	; 255
    225e:	dc 01       	movw	r26, r24
    2260:	6d 91       	ld	r22, X+
    2262:	7d 91       	ld	r23, X+
    2264:	8d 91       	ld	r24, X+
    2266:	9c 91       	ld	r25, X
    2268:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    226c:	ca 52       	subi	r28, 0x2A	; 42
    226e:	df 4f       	sbci	r29, 0xFF	; 255
    2270:	68 83       	st	Y, r22
    2272:	79 83       	std	Y+1, r23	; 0x01
    2274:	8a 83       	std	Y+2, r24	; 0x02
    2276:	9b 83       	std	Y+3, r25	; 0x03
    2278:	c6 5d       	subi	r28, 0xD6	; 214
    227a:	d0 40       	sbci	r29, 0x00	; 0
    227c:	ca 52       	subi	r28, 0x2A	; 42
    227e:	df 4f       	sbci	r29, 0xFF	; 255
    2280:	88 81       	ld	r24, Y
    2282:	c6 5d       	subi	r28, 0xD6	; 214
    2284:	d0 40       	sbci	r29, 0x00	; 0
    2286:	f8 01       	movw	r30, r16
    2288:	80 83       	st	Z, r24

0000228a <.L194>:
    228a:	ce 01       	movw	r24, r28
    228c:	8f 59       	subi	r24, 0x9F	; 159
    228e:	9f 4f       	sbci	r25, 0xFF	; 255
    2290:	9e 01       	movw	r18, r28
    2292:	22 5b       	subi	r18, 0xB2	; 178
    2294:	3f 4f       	sbci	r19, 0xFF	; 255
    2296:	d9 01       	movw	r26, r18
    2298:	2c 91       	ld	r18, X
    229a:	fc 01       	movw	r30, r24
    229c:	20 83       	st	Z, r18

0000229e <.LBB249>:
	__asm__ volatile (
    229e:	ce 01       	movw	r24, r28
    22a0:	8f 59       	subi	r24, 0x9F	; 159
    22a2:	9f 4f       	sbci	r25, 0xFF	; 255
    22a4:	dc 01       	movw	r26, r24
    22a6:	8c 91       	ld	r24, X
    22a8:	28 2f       	mov	r18, r24

000022aa <.L1^B33>:
    22aa:	2a 95       	dec	r18
    22ac:	f1 f7       	brne	.-4      	; 0x22aa <.L1^B33>
    22ae:	ce 01       	movw	r24, r28
    22b0:	8f 59       	subi	r24, 0x9F	; 159
    22b2:	9f 4f       	sbci	r25, 0xFF	; 255
    22b4:	fc 01       	movw	r30, r24
    22b6:	20 83       	st	Z, r18

000022b8 <.Loc.356>:
	...

000022ba <.L207>:
        _delay_us(1);                               // implement 'Address hold time' (10 nS), 'Data hold time' (10 nS), and 'Enable cycle time' (500 nS )

// read and discard alternate nibbles (D3 information)
        lcd_Ctlr_Port |= (1<<lcd_E_bit);            // Enable pin high
    22ba:	88 e2       	ldi	r24, 0x28	; 40
    22bc:	90 e0       	ldi	r25, 0x00	; 0
    22be:	dc 01       	movw	r26, r24
    22c0:	2c 91       	ld	r18, X
    22c2:	88 e2       	ldi	r24, 0x28	; 40
    22c4:	90 e0       	ldi	r25, 0x00	; 0

000022c6 <.Loc.358>:
    22c6:	28 60       	ori	r18, 0x08	; 8
    22c8:	fc 01       	movw	r30, r24
    22ca:	20 83       	st	Z, r18
    22cc:	80 e0       	ldi	r24, 0x00	; 0
    22ce:	90 e0       	ldi	r25, 0x00	; 0
    22d0:	a0 e8       	ldi	r26, 0x80	; 128
    22d2:	bf e3       	ldi	r27, 0x3F	; 63
    22d4:	8a a3       	std	Y+34, r24	; 0x22
    22d6:	9b a3       	std	Y+35, r25	; 0x23
    22d8:	ac a3       	std	Y+36, r26	; 0x24
    22da:	bd a3       	std	Y+37, r27	; 0x25

000022dc <.LBB251>:
	__tmp = ((F_CPU) / 3e6) * __us;
    22dc:	2b ea       	ldi	r18, 0xAB	; 171
    22de:	3a ea       	ldi	r19, 0xAA	; 170
    22e0:	4a ea       	ldi	r20, 0xAA	; 170
    22e2:	50 e4       	ldi	r21, 0x40	; 64
    22e4:	6a a1       	ldd	r22, Y+34	; 0x22
    22e6:	7b a1       	ldd	r23, Y+35	; 0x23
    22e8:	8c a1       	ldd	r24, Y+36	; 0x24
    22ea:	9d a1       	ldd	r25, Y+37	; 0x25
    22ec:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    22f0:	c6 52       	subi	r28, 0x26	; 38
    22f2:	df 4f       	sbci	r29, 0xFF	; 255
    22f4:	68 83       	st	Y, r22
    22f6:	79 83       	std	Y+1, r23	; 0x01
    22f8:	8a 83       	std	Y+2, r24	; 0x02
    22fa:	9b 83       	std	Y+3, r25	; 0x03
    22fc:	ca 5d       	subi	r28, 0xDA	; 218
    22fe:	d0 40       	sbci	r29, 0x00	; 0
    2300:	c6 52       	subi	r28, 0x26	; 38
    2302:	df 4f       	sbci	r29, 0xFF	; 255
    2304:	88 81       	ld	r24, Y
    2306:	99 81       	ldd	r25, Y+1	; 0x01
    2308:	aa 81       	ldd	r26, Y+2	; 0x02
    230a:	bb 81       	ldd	r27, Y+3	; 0x03
    230c:	ca 5d       	subi	r28, 0xDA	; 218
    230e:	d0 40       	sbci	r29, 0x00	; 0
    2310:	8e a3       	std	Y+38, r24	; 0x26
    2312:	9f a3       	std	Y+39, r25	; 0x27
    2314:	a8 a7       	std	Y+40, r26	; 0x28
    2316:	b9 a7       	std	Y+41, r27	; 0x29

00002318 <.Loc.360>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    2318:	20 e0       	ldi	r18, 0x00	; 0
    231a:	30 e0       	ldi	r19, 0x00	; 0
    231c:	40 e8       	ldi	r20, 0x80	; 128
    231e:	50 e4       	ldi	r21, 0x40	; 64
    2320:	6a a1       	ldd	r22, Y+34	; 0x22
    2322:	7b a1       	ldd	r23, Y+35	; 0x23
    2324:	8c a1       	ldd	r24, Y+36	; 0x24
    2326:	9d a1       	ldd	r25, Y+37	; 0x25
    2328:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    232c:	c2 52       	subi	r28, 0x22	; 34
    232e:	df 4f       	sbci	r29, 0xFF	; 255
    2330:	68 83       	st	Y, r22
    2332:	79 83       	std	Y+1, r23	; 0x01
    2334:	8a 83       	std	Y+2, r24	; 0x02
    2336:	9b 83       	std	Y+3, r25	; 0x03
    2338:	ce 5d       	subi	r28, 0xDE	; 222
    233a:	d0 40       	sbci	r29, 0x00	; 0
    233c:	c2 52       	subi	r28, 0x22	; 34
    233e:	df 4f       	sbci	r29, 0xFF	; 255
    2340:	88 81       	ld	r24, Y
    2342:	99 81       	ldd	r25, Y+1	; 0x01
    2344:	aa 81       	ldd	r26, Y+2	; 0x02
    2346:	bb 81       	ldd	r27, Y+3	; 0x03
    2348:	ce 5d       	subi	r28, 0xDE	; 222
    234a:	d0 40       	sbci	r29, 0x00	; 0
    234c:	8a a7       	std	Y+42, r24	; 0x2a
    234e:	9b a7       	std	Y+43, r25	; 0x2b
    2350:	ac a7       	std	Y+44, r26	; 0x2c
    2352:	bd a7       	std	Y+45, r27	; 0x2d

00002354 <.Loc.361>:
	if (__tmp < 1.0)
    2354:	20 e0       	ldi	r18, 0x00	; 0
    2356:	30 e0       	ldi	r19, 0x00	; 0
    2358:	40 e8       	ldi	r20, 0x80	; 128
    235a:	5f e3       	ldi	r21, 0x3F	; 63
    235c:	6e a1       	ldd	r22, Y+38	; 0x26
    235e:	7f a1       	ldd	r23, Y+39	; 0x27
    2360:	88 a5       	ldd	r24, Y+40	; 0x28
    2362:	99 a5       	ldd	r25, Y+41	; 0x29
    2364:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
    2368:	88 23       	and	r24, r24
    236a:	1c f4       	brge	.+6      	; 0x2372 <.L271>

0000236c <.Loc.362>:
		__ticks = 1;
    236c:	81 e0       	ldi	r24, 0x01	; 1
    236e:	8e a7       	std	Y+46, r24	; 0x2e
    2370:	2a c1       	rjmp	.+596    	; 0x25c6 <.L210>

00002372 <.L271>:
	else if (__tmp2 > 65535)
    2372:	20 e0       	ldi	r18, 0x00	; 0
    2374:	3f ef       	ldi	r19, 0xFF	; 255
    2376:	4f e7       	ldi	r20, 0x7F	; 127
    2378:	57 e4       	ldi	r21, 0x47	; 71
    237a:	6a a5       	ldd	r22, Y+42	; 0x2a
    237c:	7b a5       	ldd	r23, Y+43	; 0x2b
    237e:	8c a5       	ldd	r24, Y+44	; 0x2c
    2380:	9d a5       	ldd	r25, Y+45	; 0x2d
    2382:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    2386:	88 23       	and	r24, r24
    2388:	09 f0       	breq	.+2      	; 0x238c <L0^A>

0000238a <L0^A>:
    238a:	0c f4       	brge	.+2      	; 0x238e <.Loc.364>

0000238c <L0^A>:
    238c:	ce c0       	rjmp	.+412    	; 0x252a <.L272>

0000238e <.Loc.364>:
		_delay_ms(__us / 1000.0);
    238e:	20 e0       	ldi	r18, 0x00	; 0
    2390:	30 e0       	ldi	r19, 0x00	; 0
    2392:	4a e7       	ldi	r20, 0x7A	; 122
    2394:	54 e4       	ldi	r21, 0x44	; 68
    2396:	6a a1       	ldd	r22, Y+34	; 0x22
    2398:	7b a1       	ldd	r23, Y+35	; 0x23
    239a:	8c a1       	ldd	r24, Y+36	; 0x24
    239c:	9d a1       	ldd	r25, Y+37	; 0x25
    239e:	0e 94 23 1f 	call	0x3e46	; 0x3e46 <__divsf3>
    23a2:	ce 51       	subi	r28, 0x1E	; 30
    23a4:	df 4f       	sbci	r29, 0xFF	; 255
    23a6:	68 83       	st	Y, r22
    23a8:	79 83       	std	Y+1, r23	; 0x01
    23aa:	8a 83       	std	Y+2, r24	; 0x02
    23ac:	9b 83       	std	Y+3, r25	; 0x03
    23ae:	c2 5e       	subi	r28, 0xE2	; 226
    23b0:	d0 40       	sbci	r29, 0x00	; 0
    23b2:	ce 51       	subi	r28, 0x1E	; 30
    23b4:	df 4f       	sbci	r29, 0xFF	; 255
    23b6:	88 81       	ld	r24, Y
    23b8:	99 81       	ldd	r25, Y+1	; 0x01
    23ba:	aa 81       	ldd	r26, Y+2	; 0x02
    23bc:	bb 81       	ldd	r27, Y+3	; 0x03
    23be:	c2 5e       	subi	r28, 0xE2	; 226
    23c0:	d0 40       	sbci	r29, 0x00	; 0
    23c2:	8f a7       	std	Y+47, r24	; 0x2f
    23c4:	98 ab       	std	Y+48, r25	; 0x30
    23c6:	a9 ab       	std	Y+49, r26	; 0x31
    23c8:	ba ab       	std	Y+50, r27	; 0x32

000023ca <.LBB253>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    23ca:	20 e0       	ldi	r18, 0x00	; 0
    23cc:	30 e0       	ldi	r19, 0x00	; 0
    23ce:	4a e7       	ldi	r20, 0x7A	; 122
    23d0:	55 e4       	ldi	r21, 0x45	; 69
    23d2:	6f a5       	ldd	r22, Y+47	; 0x2f
    23d4:	78 a9       	ldd	r23, Y+48	; 0x30
    23d6:	89 a9       	ldd	r24, Y+49	; 0x31
    23d8:	9a a9       	ldd	r25, Y+50	; 0x32
    23da:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    23de:	ca 51       	subi	r28, 0x1A	; 26
    23e0:	df 4f       	sbci	r29, 0xFF	; 255
    23e2:	68 83       	st	Y, r22
    23e4:	79 83       	std	Y+1, r23	; 0x01
    23e6:	8a 83       	std	Y+2, r24	; 0x02
    23e8:	9b 83       	std	Y+3, r25	; 0x03
    23ea:	c6 5e       	subi	r28, 0xE6	; 230
    23ec:	d0 40       	sbci	r29, 0x00	; 0
    23ee:	ca 51       	subi	r28, 0x1A	; 26
    23f0:	df 4f       	sbci	r29, 0xFF	; 255
    23f2:	88 81       	ld	r24, Y
    23f4:	99 81       	ldd	r25, Y+1	; 0x01
    23f6:	aa 81       	ldd	r26, Y+2	; 0x02
    23f8:	bb 81       	ldd	r27, Y+3	; 0x03
    23fa:	c6 5e       	subi	r28, 0xE6	; 230
    23fc:	d0 40       	sbci	r29, 0x00	; 0
    23fe:	8b ab       	std	Y+51, r24	; 0x33
    2400:	9c ab       	std	Y+52, r25	; 0x34
    2402:	ad ab       	std	Y+53, r26	; 0x35
    2404:	be ab       	std	Y+54, r27	; 0x36

00002406 <.Loc.366>:
	if (__tmp < 1.0)
    2406:	20 e0       	ldi	r18, 0x00	; 0
    2408:	30 e0       	ldi	r19, 0x00	; 0
    240a:	40 e8       	ldi	r20, 0x80	; 128
    240c:	5f e3       	ldi	r21, 0x3F	; 63
    240e:	6b a9       	ldd	r22, Y+51	; 0x33
    2410:	7c a9       	ldd	r23, Y+52	; 0x34
    2412:	8d a9       	ldd	r24, Y+53	; 0x35
    2414:	9e a9       	ldd	r25, Y+54	; 0x36
    2416:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
    241a:	88 23       	and	r24, r24
    241c:	2c f4       	brge	.+10     	; 0x2428 <.L273>

0000241e <.Loc.367>:
		__ticks = 1;
    241e:	81 e0       	ldi	r24, 0x01	; 1
    2420:	90 e0       	ldi	r25, 0x00	; 0
    2422:	98 af       	std	Y+56, r25	; 0x38
    2424:	8f ab       	std	Y+55, r24	; 0x37
    2426:	76 c0       	rjmp	.+236    	; 0x2514 <.L215>

00002428 <.L273>:
	else if (__tmp > 65535)
    2428:	20 e0       	ldi	r18, 0x00	; 0
    242a:	3f ef       	ldi	r19, 0xFF	; 255
    242c:	4f e7       	ldi	r20, 0x7F	; 127
    242e:	57 e4       	ldi	r21, 0x47	; 71
    2430:	6b a9       	ldd	r22, Y+51	; 0x33
    2432:	7c a9       	ldd	r23, Y+52	; 0x34
    2434:	8d a9       	ldd	r24, Y+53	; 0x35
    2436:	9e a9       	ldd	r25, Y+54	; 0x36
    2438:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    243c:	88 23       	and	r24, r24
    243e:	09 f0       	breq	.+2      	; 0x2442 <L0^A>

00002440 <L0^A>:
    2440:	0c f4       	brge	.+2      	; 0x2444 <.Loc.369>

00002442 <L0^A>:
    2442:	52 c0       	rjmp	.+164    	; 0x24e8 <.L274>

00002444 <.Loc.369>:
		__ticks = (uint16_t) (__ms * 10.0);
    2444:	20 e0       	ldi	r18, 0x00	; 0
    2446:	30 e0       	ldi	r19, 0x00	; 0
    2448:	40 e2       	ldi	r20, 0x20	; 32
    244a:	51 e4       	ldi	r21, 0x41	; 65
    244c:	6f a5       	ldd	r22, Y+47	; 0x2f
    244e:	78 a9       	ldd	r23, Y+48	; 0x30
    2450:	89 a9       	ldd	r24, Y+49	; 0x31
    2452:	9a a9       	ldd	r25, Y+50	; 0x32
    2454:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    2458:	c6 51       	subi	r28, 0x16	; 22
    245a:	df 4f       	sbci	r29, 0xFF	; 255
    245c:	68 83       	st	Y, r22
    245e:	79 83       	std	Y+1, r23	; 0x01
    2460:	8a 83       	std	Y+2, r24	; 0x02
    2462:	9b 83       	std	Y+3, r25	; 0x03
    2464:	ca 5e       	subi	r28, 0xEA	; 234
    2466:	d0 40       	sbci	r29, 0x00	; 0
    2468:	c6 51       	subi	r28, 0x16	; 22
    246a:	df 4f       	sbci	r29, 0xFF	; 255
    246c:	88 81       	ld	r24, Y
    246e:	99 81       	ldd	r25, Y+1	; 0x01
    2470:	aa 81       	ldd	r26, Y+2	; 0x02
    2472:	bb 81       	ldd	r27, Y+3	; 0x03
    2474:	ca 5e       	subi	r28, 0xEA	; 234
    2476:	d0 40       	sbci	r29, 0x00	; 0
    2478:	ca 57       	subi	r28, 0x7A	; 122
    247a:	df 4f       	sbci	r29, 0xFF	; 255
    247c:	88 83       	st	Y, r24
    247e:	99 83       	std	Y+1, r25	; 0x01
    2480:	aa 83       	std	Y+2, r26	; 0x02
    2482:	bb 83       	std	Y+3, r27	; 0x03
    2484:	c6 58       	subi	r28, 0x86	; 134
    2486:	d0 40       	sbci	r29, 0x00	; 0

00002488 <.Loc.370>:
    2488:	ca 57       	subi	r28, 0x7A	; 122
    248a:	df 4f       	sbci	r29, 0xFF	; 255
    248c:	68 81       	ld	r22, Y
    248e:	79 81       	ldd	r23, Y+1	; 0x01
    2490:	8a 81       	ldd	r24, Y+2	; 0x02
    2492:	9b 81       	ldd	r25, Y+3	; 0x03
    2494:	c6 58       	subi	r28, 0x86	; 134
    2496:	d0 40       	sbci	r29, 0x00	; 0
    2498:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    249c:	c2 51       	subi	r28, 0x12	; 18
    249e:	df 4f       	sbci	r29, 0xFF	; 255
    24a0:	68 83       	st	Y, r22
    24a2:	79 83       	std	Y+1, r23	; 0x01
    24a4:	8a 83       	std	Y+2, r24	; 0x02
    24a6:	9b 83       	std	Y+3, r25	; 0x03
    24a8:	ce 5e       	subi	r28, 0xEE	; 238
    24aa:	d0 40       	sbci	r29, 0x00	; 0
    24ac:	c2 51       	subi	r28, 0x12	; 18
    24ae:	df 4f       	sbci	r29, 0xFF	; 255
    24b0:	a8 81       	ld	r26, Y
    24b2:	b9 81       	ldd	r27, Y+1	; 0x01
    24b4:	ce 5e       	subi	r28, 0xEE	; 238
    24b6:	d0 40       	sbci	r29, 0x00	; 0
    24b8:	b8 af       	std	Y+56, r27	; 0x38
    24ba:	af ab       	std	Y+55, r26	; 0x37

000024bc <.Loc.371>:
		while(__ticks)
    24bc:	10 c0       	rjmp	.+32     	; 0x24de <.L218>

000024be <.L219>:
    24be:	80 e9       	ldi	r24, 0x90	; 144
    24c0:	91 e0       	ldi	r25, 0x01	; 1
    24c2:	9a af       	std	Y+58, r25	; 0x3a
    24c4:	89 af       	std	Y+57, r24	; 0x39

000024c6 <.LBB255>:
	__asm__ volatile (
    24c6:	89 ad       	ldd	r24, Y+57	; 0x39
    24c8:	9a ad       	ldd	r25, Y+58	; 0x3a

000024ca <.L1^B34>:
    24ca:	01 97       	sbiw	r24, 0x01	; 1
    24cc:	f1 f7       	brne	.-4      	; 0x24ca <.L1^B34>
    24ce:	9a af       	std	Y+58, r25	; 0x3a
    24d0:	89 af       	std	Y+57, r24	; 0x39

000024d2 <.Loc.373>:
	...

000024d4 <.LBE255>:
			__ticks --;
    24d4:	8f a9       	ldd	r24, Y+55	; 0x37
    24d6:	98 ad       	ldd	r25, Y+56	; 0x38
    24d8:	01 97       	sbiw	r24, 0x01	; 1
    24da:	98 af       	std	Y+56, r25	; 0x38
    24dc:	8f ab       	std	Y+55, r24	; 0x37

000024de <.L218>:
		while(__ticks)
    24de:	8f a9       	ldd	r24, Y+55	; 0x37
    24e0:	98 ad       	ldd	r25, Y+56	; 0x38
    24e2:	00 97       	sbiw	r24, 0x00	; 0
    24e4:	61 f7       	brne	.-40     	; 0x24be <.L219>

000024e6 <.Loc.376>:
		return;
    24e6:	6f c0       	rjmp	.+222    	; 0x25c6 <.L210>

000024e8 <.L274>:
		__ticks = (uint16_t)__tmp;
    24e8:	6b a9       	ldd	r22, Y+51	; 0x33
    24ea:	7c a9       	ldd	r23, Y+52	; 0x34
    24ec:	8d a9       	ldd	r24, Y+53	; 0x35
    24ee:	9e a9       	ldd	r25, Y+54	; 0x36
    24f0:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    24f4:	ce 50       	subi	r28, 0x0E	; 14
    24f6:	df 4f       	sbci	r29, 0xFF	; 255
    24f8:	68 83       	st	Y, r22
    24fa:	79 83       	std	Y+1, r23	; 0x01
    24fc:	8a 83       	std	Y+2, r24	; 0x02
    24fe:	9b 83       	std	Y+3, r25	; 0x03
    2500:	c2 5f       	subi	r28, 0xF2	; 242
    2502:	d0 40       	sbci	r29, 0x00	; 0
    2504:	ce 50       	subi	r28, 0x0E	; 14
    2506:	df 4f       	sbci	r29, 0xFF	; 255
    2508:	e8 81       	ld	r30, Y
    250a:	f9 81       	ldd	r31, Y+1	; 0x01
    250c:	c2 5f       	subi	r28, 0xF2	; 242
    250e:	d0 40       	sbci	r29, 0x00	; 0
    2510:	f8 af       	std	Y+56, r31	; 0x38
    2512:	ef ab       	std	Y+55, r30	; 0x37

00002514 <.L215>:
    2514:	8f a9       	ldd	r24, Y+55	; 0x37
    2516:	98 ad       	ldd	r25, Y+56	; 0x38
    2518:	9c af       	std	Y+60, r25	; 0x3c
    251a:	8b af       	std	Y+59, r24	; 0x3b

0000251c <.LBB257>:
    251c:	8b ad       	ldd	r24, Y+59	; 0x3b
    251e:	9c ad       	ldd	r25, Y+60	; 0x3c

00002520 <.L1^B35>:
    2520:	01 97       	sbiw	r24, 0x01	; 1
    2522:	f1 f7       	brne	.-4      	; 0x2520 <.L1^B35>
    2524:	9c af       	std	Y+60, r25	; 0x3c
    2526:	8b af       	std	Y+59, r24	; 0x3b

00002528 <.Loc.379>:
}
    2528:	4e c0       	rjmp	.+156    	; 0x25c6 <.L210>

0000252a <.L272>:
	else if (__tmp > 255)
    252a:	20 e0       	ldi	r18, 0x00	; 0
    252c:	30 e0       	ldi	r19, 0x00	; 0
    252e:	4f e7       	ldi	r20, 0x7F	; 127
    2530:	53 e4       	ldi	r21, 0x43	; 67
    2532:	6e a1       	ldd	r22, Y+38	; 0x26
    2534:	7f a1       	ldd	r23, Y+39	; 0x27
    2536:	88 a5       	ldd	r24, Y+40	; 0x28
    2538:	99 a5       	ldd	r25, Y+41	; 0x29
    253a:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    253e:	88 23       	and	r24, r24
    2540:	71 f1       	breq	.+92     	; 0x259e <.L275>
    2542:	6c f1       	brlt	.+90     	; 0x259e <.L275>

00002544 <.LBB259>:
		uint16_t __ticks=(uint16_t)__tmp2;
    2544:	6a a5       	ldd	r22, Y+42	; 0x2a
    2546:	7b a5       	ldd	r23, Y+43	; 0x2b
    2548:	8c a5       	ldd	r24, Y+44	; 0x2c
    254a:	9d a5       	ldd	r25, Y+45	; 0x2d
    254c:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    2550:	ca 50       	subi	r28, 0x0A	; 10
    2552:	df 4f       	sbci	r29, 0xFF	; 255
    2554:	68 83       	st	Y, r22
    2556:	79 83       	std	Y+1, r23	; 0x01
    2558:	8a 83       	std	Y+2, r24	; 0x02
    255a:	9b 83       	std	Y+3, r25	; 0x03
    255c:	c6 5f       	subi	r28, 0xF6	; 246
    255e:	d0 40       	sbci	r29, 0x00	; 0
    2560:	ca 50       	subi	r28, 0x0A	; 10
    2562:	df 4f       	sbci	r29, 0xFF	; 255
    2564:	88 81       	ld	r24, Y
    2566:	99 81       	ldd	r25, Y+1	; 0x01
    2568:	c6 5f       	subi	r28, 0xF6	; 246
    256a:	d0 40       	sbci	r29, 0x00	; 0
    256c:	9e af       	std	Y+62, r25	; 0x3e
    256e:	8d af       	std	Y+61, r24	; 0x3d
    2570:	2d ad       	ldd	r18, Y+61	; 0x3d
    2572:	3e ad       	ldd	r19, Y+62	; 0x3e
    2574:	ce 01       	movw	r24, r28
    2576:	cf 96       	adiw	r24, 0x3f	; 63
    2578:	dc 01       	movw	r26, r24
    257a:	2d 93       	st	X+, r18
    257c:	3c 93       	st	X, r19

0000257e <.LBB260>:
	__asm__ volatile (
    257e:	ce 01       	movw	r24, r28
    2580:	cf 96       	adiw	r24, 0x3f	; 63
    2582:	fc 01       	movw	r30, r24
    2584:	80 81       	ld	r24, Z
    2586:	91 81       	ldd	r25, Z+1	; 0x01

00002588 <.L1^B36>:
    2588:	01 97       	sbiw	r24, 0x01	; 1
    258a:	f1 f7       	brne	.-4      	; 0x2588 <.L1^B36>
    258c:	9e 01       	movw	r18, r28
    258e:	21 5c       	subi	r18, 0xC1	; 193
    2590:	3f 4f       	sbci	r19, 0xFF	; 255
    2592:	d9 01       	movw	r26, r18
    2594:	11 96       	adiw	r26, 0x01	; 1
    2596:	9c 93       	st	X, r25
    2598:	8e 93       	st	-X, r24

0000259a <.Loc.383>:
	...

0000259c <.LBE260>:
		return;
    259c:	28 c0       	rjmp	.+80     	; 0x25ee <.L223>

0000259e <.L275>:
		__ticks = (uint8_t)__tmp;
    259e:	6e a1       	ldd	r22, Y+38	; 0x26
    25a0:	7f a1       	ldd	r23, Y+39	; 0x27
    25a2:	88 a5       	ldd	r24, Y+40	; 0x28
    25a4:	99 a5       	ldd	r25, Y+41	; 0x29
    25a6:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    25aa:	c6 50       	subi	r28, 0x06	; 6
    25ac:	df 4f       	sbci	r29, 0xFF	; 255
    25ae:	68 83       	st	Y, r22
    25b0:	79 83       	std	Y+1, r23	; 0x01
    25b2:	8a 83       	std	Y+2, r24	; 0x02
    25b4:	9b 83       	std	Y+3, r25	; 0x03
    25b6:	ca 5f       	subi	r28, 0xFA	; 250
    25b8:	d0 40       	sbci	r29, 0x00	; 0
    25ba:	c6 50       	subi	r28, 0x06	; 6
    25bc:	df 4f       	sbci	r29, 0xFF	; 255
    25be:	b8 81       	ld	r27, Y
    25c0:	ca 5f       	subi	r28, 0xFA	; 250
    25c2:	d0 40       	sbci	r29, 0x00	; 0
    25c4:	be a7       	std	Y+46, r27	; 0x2e

000025c6 <.L210>:
    25c6:	ce 01       	movw	r24, r28
    25c8:	8f 5b       	subi	r24, 0xBF	; 191
    25ca:	9f 4f       	sbci	r25, 0xFF	; 255
    25cc:	2e a5       	ldd	r18, Y+46	; 0x2e
    25ce:	fc 01       	movw	r30, r24
    25d0:	20 83       	st	Z, r18

000025d2 <.LBB262>:
	__asm__ volatile (
    25d2:	ce 01       	movw	r24, r28
    25d4:	8f 5b       	subi	r24, 0xBF	; 191
    25d6:	9f 4f       	sbci	r25, 0xFF	; 255
    25d8:	dc 01       	movw	r26, r24
    25da:	8c 91       	ld	r24, X
    25dc:	28 2f       	mov	r18, r24

000025de <.L1^B37>:
    25de:	2a 95       	dec	r18
    25e0:	f1 f7       	brne	.-4      	; 0x25de <.L1^B37>
    25e2:	ce 01       	movw	r24, r28
    25e4:	8f 5b       	subi	r24, 0xBF	; 191
    25e6:	9f 4f       	sbci	r25, 0xFF	; 255
    25e8:	fc 01       	movw	r30, r24
    25ea:	20 83       	st	Z, r18

000025ec <.Loc.387>:
	...

000025ee <.L223>:
        _delay_us(1);                               // implement 'Delay data time' (160 nS) and 'Enable pulse width' (230 nS)
        lcd_Ctlr_Port &= ~(1<<lcd_E_bit);           // Enable pin low
    25ee:	88 e2       	ldi	r24, 0x28	; 40
    25f0:	90 e0       	ldi	r25, 0x00	; 0
    25f2:	dc 01       	movw	r26, r24
    25f4:	2c 91       	ld	r18, X

000025f6 <.Loc.389>:
    25f6:	88 e2       	ldi	r24, 0x28	; 40
    25f8:	90 e0       	ldi	r25, 0x00	; 0

000025fa <.Loc.390>:
    25fa:	27 7f       	andi	r18, 0xF7	; 247
    25fc:	fc 01       	movw	r30, r24
    25fe:	20 83       	st	Z, r18
    2600:	80 e0       	ldi	r24, 0x00	; 0
    2602:	90 e0       	ldi	r25, 0x00	; 0
    2604:	a0 e8       	ldi	r26, 0x80	; 128
    2606:	bf e3       	ldi	r27, 0x3F	; 63
    2608:	8a 83       	std	Y+2, r24	; 0x02
    260a:	9b 83       	std	Y+3, r25	; 0x03
    260c:	ac 83       	std	Y+4, r26	; 0x04
    260e:	bd 83       	std	Y+5, r27	; 0x05

00002610 <.LBB264>:
	__tmp = ((F_CPU) / 3e6) * __us;
    2610:	2b ea       	ldi	r18, 0xAB	; 171
    2612:	3a ea       	ldi	r19, 0xAA	; 170
    2614:	4a ea       	ldi	r20, 0xAA	; 170
    2616:	50 e4       	ldi	r21, 0x40	; 64
    2618:	6a 81       	ldd	r22, Y+2	; 0x02
    261a:	7b 81       	ldd	r23, Y+3	; 0x03
    261c:	8c 81       	ldd	r24, Y+4	; 0x04
    261e:	9d 81       	ldd	r25, Y+5	; 0x05
    2620:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    2624:	c2 50       	subi	r28, 0x02	; 2
    2626:	df 4f       	sbci	r29, 0xFF	; 255
    2628:	68 83       	st	Y, r22
    262a:	79 83       	std	Y+1, r23	; 0x01
    262c:	8a 83       	std	Y+2, r24	; 0x02
    262e:	9b 83       	std	Y+3, r25	; 0x03
    2630:	ce 5f       	subi	r28, 0xFE	; 254
    2632:	d0 40       	sbci	r29, 0x00	; 0
    2634:	c2 50       	subi	r28, 0x02	; 2
    2636:	df 4f       	sbci	r29, 0xFF	; 255
    2638:	88 81       	ld	r24, Y
    263a:	99 81       	ldd	r25, Y+1	; 0x01
    263c:	aa 81       	ldd	r26, Y+2	; 0x02
    263e:	bb 81       	ldd	r27, Y+3	; 0x03
    2640:	ce 5f       	subi	r28, 0xFE	; 254
    2642:	d0 40       	sbci	r29, 0x00	; 0
    2644:	8e 83       	std	Y+6, r24	; 0x06
    2646:	9f 83       	std	Y+7, r25	; 0x07
    2648:	a8 87       	std	Y+8, r26	; 0x08
    264a:	b9 87       	std	Y+9, r27	; 0x09

0000264c <.Loc.392>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    264c:	20 e0       	ldi	r18, 0x00	; 0
    264e:	30 e0       	ldi	r19, 0x00	; 0
    2650:	40 e8       	ldi	r20, 0x80	; 128
    2652:	50 e4       	ldi	r21, 0x40	; 64
    2654:	6a 81       	ldd	r22, Y+2	; 0x02
    2656:	7b 81       	ldd	r23, Y+3	; 0x03
    2658:	8c 81       	ldd	r24, Y+4	; 0x04
    265a:	9d 81       	ldd	r25, Y+5	; 0x05
    265c:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    2660:	ce 5f       	subi	r28, 0xFE	; 254
    2662:	de 4f       	sbci	r29, 0xFE	; 254
    2664:	68 83       	st	Y, r22
    2666:	79 83       	std	Y+1, r23	; 0x01
    2668:	8a 83       	std	Y+2, r24	; 0x02
    266a:	9b 83       	std	Y+3, r25	; 0x03
    266c:	c2 50       	subi	r28, 0x02	; 2
    266e:	d1 40       	sbci	r29, 0x01	; 1
    2670:	ce 5f       	subi	r28, 0xFE	; 254
    2672:	de 4f       	sbci	r29, 0xFE	; 254
    2674:	88 81       	ld	r24, Y
    2676:	99 81       	ldd	r25, Y+1	; 0x01
    2678:	aa 81       	ldd	r26, Y+2	; 0x02
    267a:	bb 81       	ldd	r27, Y+3	; 0x03
    267c:	c2 50       	subi	r28, 0x02	; 2
    267e:	d1 40       	sbci	r29, 0x01	; 1
    2680:	8a 87       	std	Y+10, r24	; 0x0a
    2682:	9b 87       	std	Y+11, r25	; 0x0b
    2684:	ac 87       	std	Y+12, r26	; 0x0c
    2686:	bd 87       	std	Y+13, r27	; 0x0d

00002688 <.Loc.393>:
	if (__tmp < 1.0)
    2688:	20 e0       	ldi	r18, 0x00	; 0
    268a:	30 e0       	ldi	r19, 0x00	; 0
    268c:	40 e8       	ldi	r20, 0x80	; 128
    268e:	5f e3       	ldi	r21, 0x3F	; 63
    2690:	6e 81       	ldd	r22, Y+6	; 0x06
    2692:	7f 81       	ldd	r23, Y+7	; 0x07
    2694:	88 85       	ldd	r24, Y+8	; 0x08
    2696:	99 85       	ldd	r25, Y+9	; 0x09
    2698:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
    269c:	88 23       	and	r24, r24
    269e:	1c f4       	brge	.+6      	; 0x26a6 <.L276>

000026a0 <.Loc.394>:
		__ticks = 1;
    26a0:	81 e0       	ldi	r24, 0x01	; 1
    26a2:	8e 87       	std	Y+14, r24	; 0x0e
    26a4:	1f c1       	rjmp	.+574    	; 0x28e4 <.L226>

000026a6 <.L276>:
	else if (__tmp2 > 65535)
    26a6:	20 e0       	ldi	r18, 0x00	; 0
    26a8:	3f ef       	ldi	r19, 0xFF	; 255
    26aa:	4f e7       	ldi	r20, 0x7F	; 127
    26ac:	57 e4       	ldi	r21, 0x47	; 71
    26ae:	6a 85       	ldd	r22, Y+10	; 0x0a
    26b0:	7b 85       	ldd	r23, Y+11	; 0x0b
    26b2:	8c 85       	ldd	r24, Y+12	; 0x0c
    26b4:	9d 85       	ldd	r25, Y+13	; 0x0d
    26b6:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    26ba:	88 23       	and	r24, r24
    26bc:	09 f0       	breq	.+2      	; 0x26c0 <L0^A>

000026be <L0^A>:
    26be:	0c f4       	brge	.+2      	; 0x26c2 <.Loc.396>

000026c0 <L0^A>:
    26c0:	ce c0       	rjmp	.+412    	; 0x285e <.L277>

000026c2 <.Loc.396>:
		_delay_ms(__us / 1000.0);
    26c2:	20 e0       	ldi	r18, 0x00	; 0
    26c4:	30 e0       	ldi	r19, 0x00	; 0
    26c6:	4a e7       	ldi	r20, 0x7A	; 122
    26c8:	54 e4       	ldi	r21, 0x44	; 68
    26ca:	6a 81       	ldd	r22, Y+2	; 0x02
    26cc:	7b 81       	ldd	r23, Y+3	; 0x03
    26ce:	8c 81       	ldd	r24, Y+4	; 0x04
    26d0:	9d 81       	ldd	r25, Y+5	; 0x05
    26d2:	0e 94 23 1f 	call	0x3e46	; 0x3e46 <__divsf3>
    26d6:	ca 5f       	subi	r28, 0xFA	; 250
    26d8:	de 4f       	sbci	r29, 0xFE	; 254
    26da:	68 83       	st	Y, r22
    26dc:	79 83       	std	Y+1, r23	; 0x01
    26de:	8a 83       	std	Y+2, r24	; 0x02
    26e0:	9b 83       	std	Y+3, r25	; 0x03
    26e2:	c6 50       	subi	r28, 0x06	; 6
    26e4:	d1 40       	sbci	r29, 0x01	; 1
    26e6:	ca 5f       	subi	r28, 0xFA	; 250
    26e8:	de 4f       	sbci	r29, 0xFE	; 254
    26ea:	88 81       	ld	r24, Y
    26ec:	99 81       	ldd	r25, Y+1	; 0x01
    26ee:	aa 81       	ldd	r26, Y+2	; 0x02
    26f0:	bb 81       	ldd	r27, Y+3	; 0x03
    26f2:	c6 50       	subi	r28, 0x06	; 6
    26f4:	d1 40       	sbci	r29, 0x01	; 1
    26f6:	8f 87       	std	Y+15, r24	; 0x0f
    26f8:	98 8b       	std	Y+16, r25	; 0x10
    26fa:	a9 8b       	std	Y+17, r26	; 0x11
    26fc:	ba 8b       	std	Y+18, r27	; 0x12

000026fe <.LBB266>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    26fe:	20 e0       	ldi	r18, 0x00	; 0
    2700:	30 e0       	ldi	r19, 0x00	; 0
    2702:	4a e7       	ldi	r20, 0x7A	; 122
    2704:	55 e4       	ldi	r21, 0x45	; 69
    2706:	6f 85       	ldd	r22, Y+15	; 0x0f
    2708:	78 89       	ldd	r23, Y+16	; 0x10
    270a:	89 89       	ldd	r24, Y+17	; 0x11
    270c:	9a 89       	ldd	r25, Y+18	; 0x12
    270e:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    2712:	c6 5f       	subi	r28, 0xF6	; 246
    2714:	de 4f       	sbci	r29, 0xFE	; 254
    2716:	68 83       	st	Y, r22
    2718:	79 83       	std	Y+1, r23	; 0x01
    271a:	8a 83       	std	Y+2, r24	; 0x02
    271c:	9b 83       	std	Y+3, r25	; 0x03
    271e:	ca 50       	subi	r28, 0x0A	; 10
    2720:	d1 40       	sbci	r29, 0x01	; 1
    2722:	c6 5f       	subi	r28, 0xF6	; 246
    2724:	de 4f       	sbci	r29, 0xFE	; 254
    2726:	88 81       	ld	r24, Y
    2728:	99 81       	ldd	r25, Y+1	; 0x01
    272a:	aa 81       	ldd	r26, Y+2	; 0x02
    272c:	bb 81       	ldd	r27, Y+3	; 0x03
    272e:	ca 50       	subi	r28, 0x0A	; 10
    2730:	d1 40       	sbci	r29, 0x01	; 1
    2732:	8b 8b       	std	Y+19, r24	; 0x13
    2734:	9c 8b       	std	Y+20, r25	; 0x14
    2736:	ad 8b       	std	Y+21, r26	; 0x15
    2738:	be 8b       	std	Y+22, r27	; 0x16

0000273a <.Loc.398>:
	if (__tmp < 1.0)
    273a:	20 e0       	ldi	r18, 0x00	; 0
    273c:	30 e0       	ldi	r19, 0x00	; 0
    273e:	40 e8       	ldi	r20, 0x80	; 128
    2740:	5f e3       	ldi	r21, 0x3F	; 63
    2742:	6b 89       	ldd	r22, Y+19	; 0x13
    2744:	7c 89       	ldd	r23, Y+20	; 0x14
    2746:	8d 89       	ldd	r24, Y+21	; 0x15
    2748:	9e 89       	ldd	r25, Y+22	; 0x16
    274a:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
    274e:	88 23       	and	r24, r24
    2750:	2c f4       	brge	.+10     	; 0x275c <.L278>

00002752 <.Loc.399>:
		__ticks = 1;
    2752:	81 e0       	ldi	r24, 0x01	; 1
    2754:	90 e0       	ldi	r25, 0x00	; 0
    2756:	98 8f       	std	Y+24, r25	; 0x18
    2758:	8f 8b       	std	Y+23, r24	; 0x17
    275a:	76 c0       	rjmp	.+236    	; 0x2848 <.L231>

0000275c <.L278>:
	else if (__tmp > 65535)
    275c:	20 e0       	ldi	r18, 0x00	; 0
    275e:	3f ef       	ldi	r19, 0xFF	; 255
    2760:	4f e7       	ldi	r20, 0x7F	; 127
    2762:	57 e4       	ldi	r21, 0x47	; 71
    2764:	6b 89       	ldd	r22, Y+19	; 0x13
    2766:	7c 89       	ldd	r23, Y+20	; 0x14
    2768:	8d 89       	ldd	r24, Y+21	; 0x15
    276a:	9e 89       	ldd	r25, Y+22	; 0x16
    276c:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    2770:	88 23       	and	r24, r24
    2772:	09 f0       	breq	.+2      	; 0x2776 <L0^A>

00002774 <L0^A>:
    2774:	0c f4       	brge	.+2      	; 0x2778 <.Loc.401>

00002776 <L0^A>:
    2776:	52 c0       	rjmp	.+164    	; 0x281c <.L279>

00002778 <.Loc.401>:
		__ticks = (uint16_t) (__ms * 10.0);
    2778:	20 e0       	ldi	r18, 0x00	; 0
    277a:	30 e0       	ldi	r19, 0x00	; 0
    277c:	40 e2       	ldi	r20, 0x20	; 32
    277e:	51 e4       	ldi	r21, 0x41	; 65
    2780:	6f 85       	ldd	r22, Y+15	; 0x0f
    2782:	78 89       	ldd	r23, Y+16	; 0x10
    2784:	89 89       	ldd	r24, Y+17	; 0x11
    2786:	9a 89       	ldd	r25, Y+18	; 0x12
    2788:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    278c:	c2 5f       	subi	r28, 0xF2	; 242
    278e:	de 4f       	sbci	r29, 0xFE	; 254
    2790:	68 83       	st	Y, r22
    2792:	79 83       	std	Y+1, r23	; 0x01
    2794:	8a 83       	std	Y+2, r24	; 0x02
    2796:	9b 83       	std	Y+3, r25	; 0x03
    2798:	ce 50       	subi	r28, 0x0E	; 14
    279a:	d1 40       	sbci	r29, 0x01	; 1
    279c:	c2 5f       	subi	r28, 0xF2	; 242
    279e:	de 4f       	sbci	r29, 0xFE	; 254
    27a0:	88 81       	ld	r24, Y
    27a2:	99 81       	ldd	r25, Y+1	; 0x01
    27a4:	aa 81       	ldd	r26, Y+2	; 0x02
    27a6:	bb 81       	ldd	r27, Y+3	; 0x03
    27a8:	ce 50       	subi	r28, 0x0E	; 14
    27aa:	d1 40       	sbci	r29, 0x01	; 1
    27ac:	ce 57       	subi	r28, 0x7E	; 126
    27ae:	df 4f       	sbci	r29, 0xFF	; 255
    27b0:	88 83       	st	Y, r24
    27b2:	99 83       	std	Y+1, r25	; 0x01
    27b4:	aa 83       	std	Y+2, r26	; 0x02
    27b6:	bb 83       	std	Y+3, r27	; 0x03
    27b8:	c2 58       	subi	r28, 0x82	; 130
    27ba:	d0 40       	sbci	r29, 0x00	; 0

000027bc <.Loc.402>:
    27bc:	ce 57       	subi	r28, 0x7E	; 126
    27be:	df 4f       	sbci	r29, 0xFF	; 255
    27c0:	68 81       	ld	r22, Y
    27c2:	79 81       	ldd	r23, Y+1	; 0x01
    27c4:	8a 81       	ldd	r24, Y+2	; 0x02
    27c6:	9b 81       	ldd	r25, Y+3	; 0x03
    27c8:	c2 58       	subi	r28, 0x82	; 130
    27ca:	d0 40       	sbci	r29, 0x00	; 0
    27cc:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    27d0:	ce 5e       	subi	r28, 0xEE	; 238
    27d2:	de 4f       	sbci	r29, 0xFE	; 254
    27d4:	68 83       	st	Y, r22
    27d6:	79 83       	std	Y+1, r23	; 0x01
    27d8:	8a 83       	std	Y+2, r24	; 0x02
    27da:	9b 83       	std	Y+3, r25	; 0x03
    27dc:	c2 51       	subi	r28, 0x12	; 18
    27de:	d1 40       	sbci	r29, 0x01	; 1
    27e0:	ce 5e       	subi	r28, 0xEE	; 238
    27e2:	de 4f       	sbci	r29, 0xFE	; 254
    27e4:	a8 81       	ld	r26, Y
    27e6:	b9 81       	ldd	r27, Y+1	; 0x01
    27e8:	c2 51       	subi	r28, 0x12	; 18
    27ea:	d1 40       	sbci	r29, 0x01	; 1
    27ec:	b8 8f       	std	Y+24, r27	; 0x18
    27ee:	af 8b       	std	Y+23, r26	; 0x17

000027f0 <.Loc.403>:
		while(__ticks)
    27f0:	10 c0       	rjmp	.+32     	; 0x2812 <.L234>

000027f2 <.L235>:
    27f2:	80 e9       	ldi	r24, 0x90	; 144
    27f4:	91 e0       	ldi	r25, 0x01	; 1
    27f6:	9a 8f       	std	Y+26, r25	; 0x1a
    27f8:	89 8f       	std	Y+25, r24	; 0x19

000027fa <.LBB268>:
	__asm__ volatile (
    27fa:	89 8d       	ldd	r24, Y+25	; 0x19
    27fc:	9a 8d       	ldd	r25, Y+26	; 0x1a

000027fe <.L1^B38>:
    27fe:	01 97       	sbiw	r24, 0x01	; 1
    2800:	f1 f7       	brne	.-4      	; 0x27fe <.L1^B38>
    2802:	9a 8f       	std	Y+26, r25	; 0x1a
    2804:	89 8f       	std	Y+25, r24	; 0x19

00002806 <.Loc.405>:
	...

00002808 <.LBE268>:
			__ticks --;
    2808:	8f 89       	ldd	r24, Y+23	; 0x17
    280a:	98 8d       	ldd	r25, Y+24	; 0x18
    280c:	01 97       	sbiw	r24, 0x01	; 1
    280e:	98 8f       	std	Y+24, r25	; 0x18
    2810:	8f 8b       	std	Y+23, r24	; 0x17

00002812 <.L234>:
		while(__ticks)
    2812:	8f 89       	ldd	r24, Y+23	; 0x17
    2814:	98 8d       	ldd	r25, Y+24	; 0x18
    2816:	00 97       	sbiw	r24, 0x00	; 0
    2818:	61 f7       	brne	.-40     	; 0x27f2 <.L235>

0000281a <.Loc.408>:
		return;
    281a:	64 c0       	rjmp	.+200    	; 0x28e4 <.L226>

0000281c <.L279>:
		__ticks = (uint16_t)__tmp;
    281c:	6b 89       	ldd	r22, Y+19	; 0x13
    281e:	7c 89       	ldd	r23, Y+20	; 0x14
    2820:	8d 89       	ldd	r24, Y+21	; 0x15
    2822:	9e 89       	ldd	r25, Y+22	; 0x16
    2824:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    2828:	ca 5e       	subi	r28, 0xEA	; 234
    282a:	de 4f       	sbci	r29, 0xFE	; 254
    282c:	68 83       	st	Y, r22
    282e:	79 83       	std	Y+1, r23	; 0x01
    2830:	8a 83       	std	Y+2, r24	; 0x02
    2832:	9b 83       	std	Y+3, r25	; 0x03
    2834:	c6 51       	subi	r28, 0x16	; 22
    2836:	d1 40       	sbci	r29, 0x01	; 1
    2838:	ca 5e       	subi	r28, 0xEA	; 234
    283a:	de 4f       	sbci	r29, 0xFE	; 254
    283c:	e8 81       	ld	r30, Y
    283e:	f9 81       	ldd	r31, Y+1	; 0x01
    2840:	c6 51       	subi	r28, 0x16	; 22
    2842:	d1 40       	sbci	r29, 0x01	; 1
    2844:	f8 8f       	std	Y+24, r31	; 0x18
    2846:	ef 8b       	std	Y+23, r30	; 0x17

00002848 <.L231>:
    2848:	8f 89       	ldd	r24, Y+23	; 0x17
    284a:	98 8d       	ldd	r25, Y+24	; 0x18
    284c:	9c 8f       	std	Y+28, r25	; 0x1c
    284e:	8b 8f       	std	Y+27, r24	; 0x1b

00002850 <.LBB270>:
    2850:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2852:	9c 8d       	ldd	r25, Y+28	; 0x1c

00002854 <.L1^B39>:
    2854:	01 97       	sbiw	r24, 0x01	; 1
    2856:	f1 f7       	brne	.-4      	; 0x2854 <.L1^B39>
    2858:	9c 8f       	std	Y+28, r25	; 0x1c
    285a:	8b 8f       	std	Y+27, r24	; 0x1b

0000285c <.Loc.411>:
}
    285c:	43 c0       	rjmp	.+134    	; 0x28e4 <.L226>

0000285e <.L277>:
	else if (__tmp > 255)
    285e:	20 e0       	ldi	r18, 0x00	; 0
    2860:	30 e0       	ldi	r19, 0x00	; 0
    2862:	4f e7       	ldi	r20, 0x7F	; 127
    2864:	53 e4       	ldi	r21, 0x43	; 67
    2866:	6e 81       	ldd	r22, Y+6	; 0x06
    2868:	7f 81       	ldd	r23, Y+7	; 0x07
    286a:	88 85       	ldd	r24, Y+8	; 0x08
    286c:	99 85       	ldd	r25, Y+9	; 0x09
    286e:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    2872:	88 23       	and	r24, r24
    2874:	19 f1       	breq	.+70     	; 0x28bc <.L280>
    2876:	14 f1       	brlt	.+68     	; 0x28bc <.L280>

00002878 <.LBB272>:
		uint16_t __ticks=(uint16_t)__tmp2;
    2878:	6a 85       	ldd	r22, Y+10	; 0x0a
    287a:	7b 85       	ldd	r23, Y+11	; 0x0b
    287c:	8c 85       	ldd	r24, Y+12	; 0x0c
    287e:	9d 85       	ldd	r25, Y+13	; 0x0d
    2880:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    2884:	c6 5e       	subi	r28, 0xE6	; 230
    2886:	de 4f       	sbci	r29, 0xFE	; 254
    2888:	68 83       	st	Y, r22
    288a:	79 83       	std	Y+1, r23	; 0x01
    288c:	8a 83       	std	Y+2, r24	; 0x02
    288e:	9b 83       	std	Y+3, r25	; 0x03
    2890:	ca 51       	subi	r28, 0x1A	; 26
    2892:	d1 40       	sbci	r29, 0x01	; 1
    2894:	c6 5e       	subi	r28, 0xE6	; 230
    2896:	de 4f       	sbci	r29, 0xFE	; 254
    2898:	88 81       	ld	r24, Y
    289a:	99 81       	ldd	r25, Y+1	; 0x01
    289c:	ca 51       	subi	r28, 0x1A	; 26
    289e:	d1 40       	sbci	r29, 0x01	; 1
    28a0:	9e 8f       	std	Y+30, r25	; 0x1e
    28a2:	8d 8f       	std	Y+29, r24	; 0x1d
    28a4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    28a6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    28a8:	98 a3       	std	Y+32, r25	; 0x20
    28aa:	8f 8f       	std	Y+31, r24	; 0x1f

000028ac <.LBB273>:
	__asm__ volatile (
    28ac:	8f 8d       	ldd	r24, Y+31	; 0x1f
    28ae:	98 a1       	ldd	r25, Y+32	; 0x20

000028b0 <.L1^B40>:
    28b0:	01 97       	sbiw	r24, 0x01	; 1
    28b2:	f1 f7       	brne	.-4      	; 0x28b0 <.L1^B40>
    28b4:	98 a3       	std	Y+32, r25	; 0x20
    28b6:	8f 8f       	std	Y+31, r24	; 0x1f

000028b8 <.Loc.415>:
	...

000028ba <.LBE273>:
		return;
    28ba:	1b c0       	rjmp	.+54     	; 0x28f2 <.L239>

000028bc <.L280>:
		__ticks = (uint8_t)__tmp;
    28bc:	6e 81       	ldd	r22, Y+6	; 0x06
    28be:	7f 81       	ldd	r23, Y+7	; 0x07
    28c0:	88 85       	ldd	r24, Y+8	; 0x08
    28c2:	99 85       	ldd	r25, Y+9	; 0x09
    28c4:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    28c8:	c2 5e       	subi	r28, 0xE2	; 226
    28ca:	de 4f       	sbci	r29, 0xFE	; 254
    28cc:	68 83       	st	Y, r22
    28ce:	79 83       	std	Y+1, r23	; 0x01
    28d0:	8a 83       	std	Y+2, r24	; 0x02
    28d2:	9b 83       	std	Y+3, r25	; 0x03
    28d4:	ce 51       	subi	r28, 0x1E	; 30
    28d6:	d1 40       	sbci	r29, 0x01	; 1
    28d8:	c2 5e       	subi	r28, 0xE2	; 226
    28da:	de 4f       	sbci	r29, 0xFE	; 254
    28dc:	98 81       	ld	r25, Y
    28de:	ce 51       	subi	r28, 0x1E	; 30
    28e0:	d1 40       	sbci	r29, 0x01	; 1
    28e2:	9e 87       	std	Y+14, r25	; 0x0e

000028e4 <.L226>:
    28e4:	8e 85       	ldd	r24, Y+14	; 0x0e
    28e6:	89 a3       	std	Y+33, r24	; 0x21

000028e8 <.LBB275>:
	__asm__ volatile (
    28e8:	89 a1       	ldd	r24, Y+33	; 0x21

000028ea <.L1^B41>:
    28ea:	8a 95       	dec	r24
    28ec:	f1 f7       	brne	.-4      	; 0x28ea <.L1^B41>
    28ee:	89 a3       	std	Y+33, r24	; 0x21

000028f0 <.Loc.419>:
	...

000028f2 <.L239>:
        _delay_us(1);                               // implement 'Address hold time (10 nS), 'Data hold time' (10 nS), and 'Enable cycle time' (500 nS )

    } while (busy_flag_copy);                       // check again if busy flag was high
    28f2:	89 81       	ldd	r24, Y+1	; 0x01
    28f4:	88 23       	and	r24, r24
    28f6:	09 f0       	breq	.+2      	; 0x28fa <.Loc.421>

000028f8 <L0^A>:
    28f8:	73 c8       	rjmp	.-3866   	; 0x19e0 <.L240>

000028fa <.Loc.421>:

// arrive here if busy flag is clear -  clean up and return
    set_RW_LOW_write;               // write to LCD module (RW low)
    28fa:	88 e2       	ldi	r24, 0x28	; 40
    28fc:	90 e0       	ldi	r25, 0x00	; 0
    28fe:	dc 01       	movw	r26, r24
    2900:	2c 91       	ld	r18, X
    2902:	88 e2       	ldi	r24, 0x28	; 40
    2904:	90 e0       	ldi	r25, 0x00	; 0
    2906:	2b 7f       	andi	r18, 0xFB	; 251
    2908:	fc 01       	movw	r30, r24
    290a:	20 83       	st	Z, r18

0000290c <.Loc.422>:
    set_D7_output;                  // reset D7 data direction to output
    290c:	87 e2       	ldi	r24, 0x27	; 39
    290e:	90 e0       	ldi	r25, 0x00	; 0
    2910:	dc 01       	movw	r26, r24
    2912:	2c 91       	ld	r18, X
    2914:	87 e2       	ldi	r24, 0x27	; 39
    2916:	90 e0       	ldi	r25, 0x00	; 0
    2918:	20 68       	ori	r18, 0x80	; 128
    291a:	fc 01       	movw	r30, r24
    291c:	20 83       	st	Z, r18

0000291e <.Loc.423>:
}
    291e:	00 00       	nop
    2920:	cf 5d       	subi	r28, 0xDF	; 223
    2922:	de 4f       	sbci	r29, 0xFE	; 254
    2924:	0f b6       	in	r0, 0x3f	; 63
    2926:	f8 94       	cli
    2928:	de bf       	out	0x3e, r29	; 62
    292a:	0f be       	out	0x3f, r0	; 63
    292c:	cd bf       	out	0x3d, r28	; 61
    292e:	df 91       	pop	r29
    2930:	cf 91       	pop	r28
    2932:	1f 91       	pop	r17
    2934:	0f 91       	pop	r16
    2936:	08 95       	ret

00002938 <lcd_mywrite>:
Name:		lcd_mywrite(0
Inputs:		row, stringdata
Outputs:	none
Description:prints a string on the desired row
******************************************************************** */
void lcd_mywrite(uint8_t row, char * s1){
    2938:	cf 93       	push	r28
    293a:	df 93       	push	r29
    293c:	00 d0       	rcall	.+0      	; 0x293e <L0^A>

0000293e <L0^A>:
    293e:	cd b7       	in	r28, 0x3d	; 61
    2940:	de b7       	in	r29, 0x3e	; 62
    2942:	89 83       	std	Y+1, r24	; 0x01
    2944:	7b 83       	std	Y+3, r23	; 0x03
    2946:	6a 83       	std	Y+2, r22	; 0x02

00002948 <.Loc.425>:
                   switch(row) {
    2948:	89 81       	ldd	r24, Y+1	; 0x01
    294a:	88 2f       	mov	r24, r24
    294c:	90 e0       	ldi	r25, 0x00	; 0
    294e:	81 30       	cpi	r24, 0x01	; 1
    2950:	91 05       	cpc	r25, r1
    2952:	21 f0       	breq	.+8      	; 0x295c <.L282>
    2954:	82 30       	cpi	r24, 0x02	; 2
    2956:	91 05       	cpc	r25, r1
    2958:	29 f0       	breq	.+10     	; 0x2964 <.L283>

0000295a <.Loc.426>:
			lcd_write_instruction_4f(lcd_SetCursor | lcd_LineTwo);
			break;
	}
	//lcd_write_string_4f((unsigned char*) charRow);

}
    295a:	08 c0       	rjmp	.+16     	; 0x296c <.L284>

0000295c <.L282>:
			lcd_write_instruction_4f(lcd_SetCursor | lcd_LineOne);
    295c:	80 e8       	ldi	r24, 0x80	; 128
    295e:	0e 94 02 09 	call	0x1204	; 0x1204 <lcd_write_instruction_4f>

00002962 <.Loc.428>:
			break;
    2962:	04 c0       	rjmp	.+8      	; 0x296c <.L284>

00002964 <.L283>:
			lcd_write_instruction_4f(lcd_SetCursor | lcd_LineTwo);
    2964:	80 ec       	ldi	r24, 0xC0	; 192
    2966:	0e 94 02 09 	call	0x1204	; 0x1204 <lcd_write_instruction_4f>

0000296a <.Loc.430>:
	...

0000296c <.L284>:
}
    296c:	00 00       	nop
    296e:	0f 90       	pop	r0
    2970:	0f 90       	pop	r0
    2972:	0f 90       	pop	r0
    2974:	df 91       	pop	r29
    2976:	cf 91       	pop	r28
    2978:	08 95       	ret

0000297a <init>:
volatile int re = 0;



// Init Functies:
void init(void){
    297a:	cf 93       	push	r28
    297c:	df 93       	push	r29
    297e:	cd b7       	in	r28, 0x3d	; 61
    2980:	de b7       	in	r29, 0x3e	; 62

00002982 <.Loc.1>:
    initleds();
    2982:	0e 94 d1 14 	call	0x29a2	; 0x29a2 <initleds>

00002986 <.Loc.2>:
    initbuzzer();
    2986:	0e 94 e2 14 	call	0x29c4	; 0x29c4 <initbuzzer>

0000298a <.Loc.3>:
    initknoppen();
    298a:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <initknoppen>

0000298e <.Loc.4>:
    initmotoren();
    298e:	0e 94 1d 15 	call	0x2a3a	; 0x2a3a <initmotoren>

00002992 <.Loc.5>:
    initsensoren();
    2992:	0e 94 04 15 	call	0x2a08	; 0x2a08 <initsensoren>

00002996 <.Loc.6>:

    //initLCD();
    initsonars();
    2996:	0e 94 7f 15 	call	0x2afe	; 0x2afe <initsonars>

0000299a <.Loc.7>:
    /*updateLCDScreen(1, "clicks:", clicks, "");
    updateLCDScreen(2, "afstand:", afstand, "mm" ); */
}
    299a:	00 00       	nop
    299c:	df 91       	pop	r29
    299e:	cf 91       	pop	r28
    29a0:	08 95       	ret

000029a2 <initleds>:

void initleds(void){
    29a2:	cf 93       	push	r28
    29a4:	df 93       	push	r29
    29a6:	cd b7       	in	r28, 0x3d	; 61
    29a8:	de b7       	in	r29, 0x3e	; 62

000029aa <.Loc.9>:
    DDRA |= (1<<PA3)| (1<<PA4) | (1<<PA5)| (1<<PA6)| (1<<PA7);
    29aa:	81 e2       	ldi	r24, 0x21	; 33
    29ac:	90 e0       	ldi	r25, 0x00	; 0
    29ae:	fc 01       	movw	r30, r24
    29b0:	20 81       	ld	r18, Z
    29b2:	81 e2       	ldi	r24, 0x21	; 33
    29b4:	90 e0       	ldi	r25, 0x00	; 0

000029b6 <.Loc.10>:
    29b6:	28 6f       	ori	r18, 0xF8	; 248
    29b8:	fc 01       	movw	r30, r24
    29ba:	20 83       	st	Z, r18

000029bc <.Loc.11>:
    // BoomRechts; BoomLinks; Follow; AanLed; NoodstopAan
}
    29bc:	00 00       	nop
    29be:	df 91       	pop	r29
    29c0:	cf 91       	pop	r28
    29c2:	08 95       	ret

000029c4 <initbuzzer>:

void initbuzzer(void){
    29c4:	cf 93       	push	r28
    29c6:	df 93       	push	r29
    29c8:	cd b7       	in	r28, 0x3d	; 61
    29ca:	de b7       	in	r29, 0x3e	; 62

000029cc <.Loc.13>:
    DDRL |= (1<<PL2); //pin 37
    29cc:	8a e0       	ldi	r24, 0x0A	; 10
    29ce:	91 e0       	ldi	r25, 0x01	; 1
    29d0:	fc 01       	movw	r30, r24
    29d2:	20 81       	ld	r18, Z
    29d4:	8a e0       	ldi	r24, 0x0A	; 10
    29d6:	91 e0       	ldi	r25, 0x01	; 1

000029d8 <.Loc.14>:
    29d8:	24 60       	ori	r18, 0x04	; 4
    29da:	fc 01       	movw	r30, r24
    29dc:	20 83       	st	Z, r18

000029de <.Loc.15>:
}
    29de:	00 00       	nop
    29e0:	df 91       	pop	r29
    29e2:	cf 91       	pop	r28
    29e4:	08 95       	ret

000029e6 <initknoppen>:

void initknoppen(void){
    29e6:	cf 93       	push	r28
    29e8:	df 93       	push	r29
    29ea:	cd b7       	in	r28, 0x3d	; 61
    29ec:	de b7       	in	r29, 0x3e	; 62

000029ee <.Loc.17>:
    DDRA &= ~(1<<PA0) & ~(1<<PA1) & ~(1<<PA2);
    29ee:	81 e2       	ldi	r24, 0x21	; 33
    29f0:	90 e0       	ldi	r25, 0x00	; 0
    29f2:	fc 01       	movw	r30, r24
    29f4:	20 81       	ld	r18, Z

000029f6 <.Loc.18>:
    29f6:	81 e2       	ldi	r24, 0x21	; 33
    29f8:	90 e0       	ldi	r25, 0x00	; 0

000029fa <.Loc.19>:
    29fa:	28 7f       	andi	r18, 0xF8	; 248
    29fc:	fc 01       	movw	r30, r24
    29fe:	20 83       	st	Z, r18

00002a00 <.Loc.20>:
    // Follow; Aan/Uit; Noodstop 1 en 2 + Bumper
}
    2a00:	00 00       	nop
    2a02:	df 91       	pop	r29
    2a04:	cf 91       	pop	r28
    2a06:	08 95       	ret

00002a08 <initsensoren>:

void initsensoren(void){
    2a08:	cf 93       	push	r28
    2a0a:	df 93       	push	r29
    2a0c:	cd b7       	in	r28, 0x3d	; 61
    2a0e:	de b7       	in	r29, 0x3e	; 62

00002a10 <.Loc.22>:
    DDRE &= (1<<PE3) & (1<<PE4) & (1<<PE5);
    2a10:	8d e2       	ldi	r24, 0x2D	; 45
    2a12:	90 e0       	ldi	r25, 0x00	; 0
    2a14:	fc 01       	movw	r30, r24
    2a16:	80 81       	ld	r24, Z
    2a18:	8d e2       	ldi	r24, 0x2D	; 45
    2a1a:	90 e0       	ldi	r25, 0x00	; 0

00002a1c <.Loc.23>:
    2a1c:	fc 01       	movw	r30, r24
    2a1e:	10 82       	st	Z, r1

00002a20 <.Loc.24>:
    DDRG &= (1<<PG5);
    2a20:	83 e3       	ldi	r24, 0x33	; 51
    2a22:	90 e0       	ldi	r25, 0x00	; 0
    2a24:	fc 01       	movw	r30, r24
    2a26:	20 81       	ld	r18, Z

00002a28 <.Loc.25>:
    2a28:	83 e3       	ldi	r24, 0x33	; 51
    2a2a:	90 e0       	ldi	r25, 0x00	; 0

00002a2c <.Loc.26>:
    2a2c:	20 72       	andi	r18, 0x20	; 32
    2a2e:	fc 01       	movw	r30, r24
    2a30:	20 83       	st	Z, r18

00002a32 <.Loc.27>:
}
    2a32:	00 00       	nop
    2a34:	df 91       	pop	r29
    2a36:	cf 91       	pop	r28
    2a38:	08 95       	ret

00002a3a <initmotoren>:

void initmotoren(void){
    2a3a:	cf 93       	push	r28
    2a3c:	df 93       	push	r29
    2a3e:	cd b7       	in	r28, 0x3d	; 61
    2a40:	de b7       	in	r29, 0x3e	; 62

00002a42 <.Loc.29>:
    //timer 1 is de L richting:
    DDRB |= (1<<PB5) | (1<<PB6);
    2a42:	84 e2       	ldi	r24, 0x24	; 36
    2a44:	90 e0       	ldi	r25, 0x00	; 0
    2a46:	fc 01       	movw	r30, r24
    2a48:	20 81       	ld	r18, Z
    2a4a:	84 e2       	ldi	r24, 0x24	; 36
    2a4c:	90 e0       	ldi	r25, 0x00	; 0

00002a4e <.Loc.30>:
    2a4e:	20 66       	ori	r18, 0x60	; 96
    2a50:	fc 01       	movw	r30, r24
    2a52:	20 83       	st	Z, r18

00002a54 <.Loc.31>:
    TCCR1B |= (1<<CS12)|(1<<CS10); //CLOCK / 1024
    2a54:	81 e8       	ldi	r24, 0x81	; 129
    2a56:	90 e0       	ldi	r25, 0x00	; 0
    2a58:	fc 01       	movw	r30, r24
    2a5a:	20 81       	ld	r18, Z
    2a5c:	81 e8       	ldi	r24, 0x81	; 129
    2a5e:	90 e0       	ldi	r25, 0x00	; 0

00002a60 <.Loc.32>:
    2a60:	25 60       	ori	r18, 0x05	; 5
    2a62:	fc 01       	movw	r30, r24
    2a64:	20 83       	st	Z, r18

00002a66 <.Loc.33>:
    TCCR1A |= (1<<WGM12) |(1<<WGM10); //8 BIT FAST PWM MODE
    2a66:	80 e8       	ldi	r24, 0x80	; 128
    2a68:	90 e0       	ldi	r25, 0x00	; 0
    2a6a:	fc 01       	movw	r30, r24
    2a6c:	20 81       	ld	r18, Z
    2a6e:	80 e8       	ldi	r24, 0x80	; 128
    2a70:	90 e0       	ldi	r25, 0x00	; 0

00002a72 <.Loc.34>:
    2a72:	29 60       	ori	r18, 0x09	; 9
    2a74:	fc 01       	movw	r30, r24
    2a76:	20 83       	st	Z, r18

00002a78 <.Loc.35>:
    OCR1A = 127; //pin 11
    2a78:	88 e8       	ldi	r24, 0x88	; 136
    2a7a:	90 e0       	ldi	r25, 0x00	; 0

00002a7c <.Loc.36>:
    2a7c:	2f e7       	ldi	r18, 0x7F	; 127
    2a7e:	30 e0       	ldi	r19, 0x00	; 0
    2a80:	fc 01       	movw	r30, r24
    2a82:	31 83       	std	Z+1, r19	; 0x01
    2a84:	20 83       	st	Z, r18

00002a86 <.Loc.37>:
    OCR1B = 127; //pin 12
    2a86:	8a e8       	ldi	r24, 0x8A	; 138
    2a88:	90 e0       	ldi	r25, 0x00	; 0

00002a8a <.Loc.38>:
    2a8a:	2f e7       	ldi	r18, 0x7F	; 127
    2a8c:	30 e0       	ldi	r19, 0x00	; 0
    2a8e:	fc 01       	movw	r30, r24
    2a90:	31 83       	std	Z+1, r19	; 0x01
    2a92:	20 83       	st	Z, r18

00002a94 <.Loc.39>:

    //timer 4 is de R richting:
    DDRH |= (1<<PH3) | (1<<PH4);
    2a94:	81 e0       	ldi	r24, 0x01	; 1
    2a96:	91 e0       	ldi	r25, 0x01	; 1
    2a98:	fc 01       	movw	r30, r24
    2a9a:	20 81       	ld	r18, Z
    2a9c:	81 e0       	ldi	r24, 0x01	; 1
    2a9e:	91 e0       	ldi	r25, 0x01	; 1

00002aa0 <.Loc.40>:
    2aa0:	28 61       	ori	r18, 0x18	; 24
    2aa2:	fc 01       	movw	r30, r24
    2aa4:	20 83       	st	Z, r18

00002aa6 <.Loc.41>:
    TCCR4B |= (1<<CS42)|(1<<CS40); //CLOCK / 1024
    2aa6:	81 ea       	ldi	r24, 0xA1	; 161
    2aa8:	90 e0       	ldi	r25, 0x00	; 0
    2aaa:	fc 01       	movw	r30, r24
    2aac:	20 81       	ld	r18, Z
    2aae:	81 ea       	ldi	r24, 0xA1	; 161
    2ab0:	90 e0       	ldi	r25, 0x00	; 0

00002ab2 <.Loc.42>:
    2ab2:	25 60       	ori	r18, 0x05	; 5
    2ab4:	fc 01       	movw	r30, r24
    2ab6:	20 83       	st	Z, r18

00002ab8 <.Loc.43>:
    TCCR4A |= (1<<WGM42) |(1<<WGM40); //8 BIT FAST PWM MODE
    2ab8:	80 ea       	ldi	r24, 0xA0	; 160
    2aba:	90 e0       	ldi	r25, 0x00	; 0
    2abc:	fc 01       	movw	r30, r24
    2abe:	20 81       	ld	r18, Z
    2ac0:	80 ea       	ldi	r24, 0xA0	; 160
    2ac2:	90 e0       	ldi	r25, 0x00	; 0

00002ac4 <.Loc.44>:
    2ac4:	29 60       	ori	r18, 0x09	; 9
    2ac6:	fc 01       	movw	r30, r24
    2ac8:	20 83       	st	Z, r18

00002aca <.Loc.45>:
    OCR4A = 127; //pin6
    2aca:	88 ea       	ldi	r24, 0xA8	; 168
    2acc:	90 e0       	ldi	r25, 0x00	; 0

00002ace <.Loc.46>:
    2ace:	2f e7       	ldi	r18, 0x7F	; 127
    2ad0:	30 e0       	ldi	r19, 0x00	; 0
    2ad2:	fc 01       	movw	r30, r24
    2ad4:	31 83       	std	Z+1, r19	; 0x01
    2ad6:	20 83       	st	Z, r18

00002ad8 <.Loc.47>:
    OCR4B = 127; //pin 7
    2ad8:	8a ea       	ldi	r24, 0xAA	; 170
    2ada:	90 e0       	ldi	r25, 0x00	; 0

00002adc <.Loc.48>:
    2adc:	2f e7       	ldi	r18, 0x7F	; 127
    2ade:	30 e0       	ldi	r19, 0x00	; 0
    2ae0:	fc 01       	movw	r30, r24
    2ae2:	31 83       	std	Z+1, r19	; 0x01
    2ae4:	20 83       	st	Z, r18

00002ae6 <.Loc.49>:

    rrichting(0);
    2ae6:	80 e0       	ldi	r24, 0x00	; 0
    2ae8:	90 e0       	ldi	r25, 0x00	; 0
    2aea:	0e 94 3a 1a 	call	0x3474	; 0x3474 <rrichting>

00002aee <.Loc.50>:
    lrichting(0);
    2aee:	80 e0       	ldi	r24, 0x00	; 0
    2af0:	90 e0       	ldi	r25, 0x00	; 0
    2af2:	0e 94 71 1a 	call	0x34e2	; 0x34e2 <lrichting>

00002af6 <.Loc.51>:
}
    2af6:	00 00       	nop
    2af8:	df 91       	pop	r29
    2afa:	cf 91       	pop	r28
    2afc:	08 95       	ret

00002afe <initsonars>:

void initsonars(void){
    2afe:	cf 93       	push	r28
    2b00:	df 93       	push	r29
    2b02:	cd b7       	in	r28, 0x3d	; 61
    2b04:	de b7       	in	r29, 0x3e	; 62

00002b06 <.Loc.53>:
       MULTIPLEXER B PB1, PIN52 -> pin 2 op de chip
    */



    DDRL &= ~(1<<PL0); //ICP4 als input
    2b06:	8a e0       	ldi	r24, 0x0A	; 10
    2b08:	91 e0       	ldi	r25, 0x01	; 1
    2b0a:	fc 01       	movw	r30, r24
    2b0c:	20 81       	ld	r18, Z

00002b0e <.Loc.54>:
    2b0e:	8a e0       	ldi	r24, 0x0A	; 10
    2b10:	91 e0       	ldi	r25, 0x01	; 1

00002b12 <.Loc.55>:
    2b12:	2e 7f       	andi	r18, 0xFE	; 254
    2b14:	fc 01       	movw	r30, r24
    2b16:	20 83       	st	Z, r18

00002b18 <.Loc.56>:
    DDRB |= (1<<PB1); //MUXA als output
    2b18:	84 e2       	ldi	r24, 0x24	; 36
    2b1a:	90 e0       	ldi	r25, 0x00	; 0
    2b1c:	fc 01       	movw	r30, r24
    2b1e:	20 81       	ld	r18, Z
    2b20:	84 e2       	ldi	r24, 0x24	; 36
    2b22:	90 e0       	ldi	r25, 0x00	; 0

00002b24 <.Loc.57>:
    2b24:	22 60       	ori	r18, 0x02	; 2
    2b26:	fc 01       	movw	r30, r24
    2b28:	20 83       	st	Z, r18

00002b2a <.Loc.58>:
    DDRB |= (1<<PB0); //MUXB als output
    2b2a:	84 e2       	ldi	r24, 0x24	; 36
    2b2c:	90 e0       	ldi	r25, 0x00	; 0
    2b2e:	fc 01       	movw	r30, r24
    2b30:	20 81       	ld	r18, Z
    2b32:	84 e2       	ldi	r24, 0x24	; 36
    2b34:	90 e0       	ldi	r25, 0x00	; 0

00002b36 <.Loc.59>:
    2b36:	21 60       	ori	r18, 0x01	; 1
    2b38:	fc 01       	movw	r30, r24
    2b3a:	20 83       	st	Z, r18

00002b3c <.Loc.60>:
    DDRB |= (1<<PB2); //TRIGER als output
    2b3c:	84 e2       	ldi	r24, 0x24	; 36
    2b3e:	90 e0       	ldi	r25, 0x00	; 0
    2b40:	fc 01       	movw	r30, r24
    2b42:	20 81       	ld	r18, Z
    2b44:	84 e2       	ldi	r24, 0x24	; 36
    2b46:	90 e0       	ldi	r25, 0x00	; 0

00002b48 <.Loc.61>:
    2b48:	24 60       	ori	r18, 0x04	; 4
    2b4a:	fc 01       	movw	r30, r24
    2b4c:	20 83       	st	Z, r18

00002b4e <.Loc.62>:
    //DDRH |= (1<<PH3); //S0 enable als output
    //DDRH |= (1<<PH4); //S1 enable als output

    PORTH &= ~(1<<PH3); PORTH &= ~(1<<PH4); //alle sensoren uit
    2b4e:	82 e0       	ldi	r24, 0x02	; 2
    2b50:	91 e0       	ldi	r25, 0x01	; 1
    2b52:	fc 01       	movw	r30, r24
    2b54:	20 81       	ld	r18, Z

00002b56 <.Loc.63>:
    2b56:	82 e0       	ldi	r24, 0x02	; 2
    2b58:	91 e0       	ldi	r25, 0x01	; 1

00002b5a <.Loc.64>:
    2b5a:	27 7f       	andi	r18, 0xF7	; 247
    2b5c:	fc 01       	movw	r30, r24
    2b5e:	20 83       	st	Z, r18

00002b60 <.Loc.65>:
    2b60:	82 e0       	ldi	r24, 0x02	; 2
    2b62:	91 e0       	ldi	r25, 0x01	; 1
    2b64:	fc 01       	movw	r30, r24
    2b66:	20 81       	ld	r18, Z

00002b68 <.Loc.66>:
    2b68:	82 e0       	ldi	r24, 0x02	; 2
    2b6a:	91 e0       	ldi	r25, 0x01	; 1

00002b6c <.Loc.67>:
    2b6c:	2f 7e       	andi	r18, 0xEF	; 239
    2b6e:	fc 01       	movw	r30, r24
    2b70:	20 83       	st	Z, r18

00002b72 <.Loc.68>:

    TCCR4B = (1<<CS11); // /8 klokdeler
    2b72:	81 ea       	ldi	r24, 0xA1	; 161
    2b74:	90 e0       	ldi	r25, 0x00	; 0

00002b76 <.Loc.69>:
    2b76:	22 e0       	ldi	r18, 0x02	; 2
    2b78:	fc 01       	movw	r30, r24
    2b7a:	20 83       	st	Z, r18

00002b7c <.Loc.70>:
	TCCR4B |= (1<<ICNC4); //enable input capture noise canceler
    2b7c:	81 ea       	ldi	r24, 0xA1	; 161
    2b7e:	90 e0       	ldi	r25, 0x00	; 0
    2b80:	fc 01       	movw	r30, r24
    2b82:	20 81       	ld	r18, Z
    2b84:	81 ea       	ldi	r24, 0xA1	; 161
    2b86:	90 e0       	ldi	r25, 0x00	; 0

00002b88 <.Loc.71>:
    2b88:	20 68       	ori	r18, 0x80	; 128
    2b8a:	fc 01       	movw	r30, r24
    2b8c:	20 83       	st	Z, r18

00002b8e <.Loc.72>:
	TCCR4B |= (1<<ICES4); //change input capture edge select on rising edge
    2b8e:	81 ea       	ldi	r24, 0xA1	; 161
    2b90:	90 e0       	ldi	r25, 0x00	; 0
    2b92:	fc 01       	movw	r30, r24
    2b94:	20 81       	ld	r18, Z
    2b96:	81 ea       	ldi	r24, 0xA1	; 161
    2b98:	90 e0       	ldi	r25, 0x00	; 0

00002b9a <.Loc.73>:
    2b9a:	20 64       	ori	r18, 0x40	; 64
    2b9c:	fc 01       	movw	r30, r24
    2b9e:	20 83       	st	Z, r18

00002ba0 <.Loc.74>:
	TIMSK4 |= (1<<ICIE4) | (1<<TOIE4); //enable input capture interrupt & timer overflow
    2ba0:	82 e7       	ldi	r24, 0x72	; 114
    2ba2:	90 e0       	ldi	r25, 0x00	; 0
    2ba4:	fc 01       	movw	r30, r24
    2ba6:	20 81       	ld	r18, Z
    2ba8:	82 e7       	ldi	r24, 0x72	; 114
    2baa:	90 e0       	ldi	r25, 0x00	; 0

00002bac <.Loc.75>:
    2bac:	21 62       	ori	r18, 0x21	; 33
    2bae:	fc 01       	movw	r30, r24
    2bb0:	20 83       	st	Z, r18

00002bb2 <.Loc.76>:
	TIFR4 = (1<<ICF4) | (1<<TOV4); //clear input capture flag & timer overflow flag
    2bb2:	89 e3       	ldi	r24, 0x39	; 57
    2bb4:	90 e0       	ldi	r25, 0x00	; 0

00002bb6 <.Loc.77>:
    2bb6:	21 e2       	ldi	r18, 0x21	; 33
    2bb8:	fc 01       	movw	r30, r24
    2bba:	20 83       	st	Z, r18

00002bbc <.Loc.78>:
    TCNT4 = 0;
    2bbc:	84 ea       	ldi	r24, 0xA4	; 164
    2bbe:	90 e0       	ldi	r25, 0x00	; 0

00002bc0 <.Loc.79>:
    2bc0:	fc 01       	movw	r30, r24
    2bc2:	11 82       	std	Z+1, r1	; 0x01
    2bc4:	10 82       	st	Z, r1

00002bc6 <.Loc.80>:
	flag = 0;
    2bc6:	10 92 3f 02 	sts	0x023F, r1	; 0x80023f <flag+0x1>
    2bca:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <flag>

00002bce <.Loc.81>:
    sei();
    2bce:	78 94       	sei

00002bd0 <.Loc.82>:
}
    2bd0:	00 00       	nop
    2bd2:	df 91       	pop	r29
    2bd4:	cf 91       	pop	r28
    2bd6:	08 95       	ret

00002bd8 <draaiing>:


// Reken Functies:
int draaiing(void){
    2bd8:	cf 93       	push	r28
    2bda:	df 93       	push	r29
    2bdc:	0f 92       	push	r0
    2bde:	0f 92       	push	r0
    2be0:	cd b7       	in	r28, 0x3d	; 61
    2be2:	de b7       	in	r29, 0x3e	; 62

00002be4 <.Loc.84>:
    // Berekening om te kijken of rijstrook getal even of oneven is, zodat de AGV weet welke kant die op moet draaien.

    int uitwerking;

    uitwerking = rijstrook%2;
    2be4:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <rijstrook>
    2be8:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <rijstrook+0x1>

00002bec <.Loc.85>:
    2bec:	81 70       	andi	r24, 0x01	; 1
    2bee:	90 78       	andi	r25, 0x80	; 128
    2bf0:	99 23       	and	r25, r25
    2bf2:	24 f4       	brge	.+8      	; 0x2bfc <.L9>
    2bf4:	01 97       	sbiw	r24, 0x01	; 1
    2bf6:	8e 6f       	ori	r24, 0xFE	; 254
    2bf8:	9f 6f       	ori	r25, 0xFF	; 255
    2bfa:	01 96       	adiw	r24, 0x01	; 1

00002bfc <.L9>:
    2bfc:	9a 83       	std	Y+2, r25	; 0x02
    2bfe:	89 83       	std	Y+1, r24	; 0x01

00002c00 <.Loc.86>:

    return uitwerking;
    2c00:	89 81       	ldd	r24, Y+1	; 0x01
    2c02:	9a 81       	ldd	r25, Y+2	; 0x02

00002c04 <.Loc.87>:
}
    2c04:	0f 90       	pop	r0
    2c06:	0f 90       	pop	r0
    2c08:	df 91       	pop	r29
    2c0a:	cf 91       	pop	r28
    2c0c:	08 95       	ret

00002c0e <rechtsboomled>:



// Led Functies:
void rechtsboomled(int aan){
    2c0e:	cf 93       	push	r28
    2c10:	df 93       	push	r29
    2c12:	0f 92       	push	r0
    2c14:	0f 92       	push	r0
    2c16:	cd b7       	in	r28, 0x3d	; 61
    2c18:	de b7       	in	r29, 0x3e	; 62
    2c1a:	9a 83       	std	Y+2, r25	; 0x02
    2c1c:	89 83       	std	Y+1, r24	; 0x01

00002c1e <.Loc.89>:
    if (aan) PORTA |= (1<<PA3);
    2c1e:	89 81       	ldd	r24, Y+1	; 0x01
    2c20:	9a 81       	ldd	r25, Y+2	; 0x02
    2c22:	00 97       	sbiw	r24, 0x00	; 0
    2c24:	51 f0       	breq	.+20     	; 0x2c3a <.L12>

00002c26 <.Loc.90>:
    2c26:	82 e2       	ldi	r24, 0x22	; 34
    2c28:	90 e0       	ldi	r25, 0x00	; 0
    2c2a:	fc 01       	movw	r30, r24
    2c2c:	20 81       	ld	r18, Z
    2c2e:	82 e2       	ldi	r24, 0x22	; 34
    2c30:	90 e0       	ldi	r25, 0x00	; 0

00002c32 <.Loc.91>:
    2c32:	28 60       	ori	r18, 0x08	; 8
    2c34:	fc 01       	movw	r30, r24
    2c36:	20 83       	st	Z, r18

00002c38 <.Loc.92>:
    else {
           PORTA &= ~(1<<PA3);
    }
}
    2c38:	09 c0       	rjmp	.+18     	; 0x2c4c <.L14>

00002c3a <.L12>:
           PORTA &= ~(1<<PA3);
    2c3a:	82 e2       	ldi	r24, 0x22	; 34
    2c3c:	90 e0       	ldi	r25, 0x00	; 0
    2c3e:	fc 01       	movw	r30, r24
    2c40:	20 81       	ld	r18, Z

00002c42 <.Loc.94>:
    2c42:	82 e2       	ldi	r24, 0x22	; 34
    2c44:	90 e0       	ldi	r25, 0x00	; 0

00002c46 <.Loc.95>:
    2c46:	27 7f       	andi	r18, 0xF7	; 247
    2c48:	fc 01       	movw	r30, r24
    2c4a:	20 83       	st	Z, r18

00002c4c <.L14>:
}
    2c4c:	00 00       	nop
    2c4e:	0f 90       	pop	r0
    2c50:	0f 90       	pop	r0
    2c52:	df 91       	pop	r29
    2c54:	cf 91       	pop	r28
    2c56:	08 95       	ret

00002c58 <linksboomled>:

void linksboomled(int aan){
    2c58:	cf 93       	push	r28
    2c5a:	df 93       	push	r29
    2c5c:	0f 92       	push	r0
    2c5e:	0f 92       	push	r0
    2c60:	cd b7       	in	r28, 0x3d	; 61
    2c62:	de b7       	in	r29, 0x3e	; 62
    2c64:	9a 83       	std	Y+2, r25	; 0x02
    2c66:	89 83       	std	Y+1, r24	; 0x01

00002c68 <.Loc.98>:
    if (aan) PORTA |= (1<<PA4);
    2c68:	89 81       	ldd	r24, Y+1	; 0x01
    2c6a:	9a 81       	ldd	r25, Y+2	; 0x02
    2c6c:	00 97       	sbiw	r24, 0x00	; 0
    2c6e:	51 f0       	breq	.+20     	; 0x2c84 <.L16>

00002c70 <.Loc.99>:
    2c70:	82 e2       	ldi	r24, 0x22	; 34
    2c72:	90 e0       	ldi	r25, 0x00	; 0
    2c74:	fc 01       	movw	r30, r24
    2c76:	20 81       	ld	r18, Z
    2c78:	82 e2       	ldi	r24, 0x22	; 34
    2c7a:	90 e0       	ldi	r25, 0x00	; 0

00002c7c <.Loc.100>:
    2c7c:	20 61       	ori	r18, 0x10	; 16
    2c7e:	fc 01       	movw	r30, r24
    2c80:	20 83       	st	Z, r18

00002c82 <.Loc.101>:
    else {
           PORTA &= ~(1<<PA4);
    }
}
    2c82:	09 c0       	rjmp	.+18     	; 0x2c96 <.L18>

00002c84 <.L16>:
           PORTA &= ~(1<<PA4);
    2c84:	82 e2       	ldi	r24, 0x22	; 34
    2c86:	90 e0       	ldi	r25, 0x00	; 0
    2c88:	fc 01       	movw	r30, r24
    2c8a:	20 81       	ld	r18, Z

00002c8c <.Loc.103>:
    2c8c:	82 e2       	ldi	r24, 0x22	; 34
    2c8e:	90 e0       	ldi	r25, 0x00	; 0

00002c90 <.Loc.104>:
    2c90:	2f 7e       	andi	r18, 0xEF	; 239
    2c92:	fc 01       	movw	r30, r24
    2c94:	20 83       	st	Z, r18

00002c96 <.L18>:
}
    2c96:	00 00       	nop
    2c98:	0f 90       	pop	r0
    2c9a:	0f 90       	pop	r0
    2c9c:	df 91       	pop	r29
    2c9e:	cf 91       	pop	r28
    2ca0:	08 95       	ret

00002ca2 <followled>:

void followled(int aan){
    2ca2:	cf 93       	push	r28
    2ca4:	df 93       	push	r29
    2ca6:	0f 92       	push	r0
    2ca8:	0f 92       	push	r0
    2caa:	cd b7       	in	r28, 0x3d	; 61
    2cac:	de b7       	in	r29, 0x3e	; 62
    2cae:	9a 83       	std	Y+2, r25	; 0x02
    2cb0:	89 83       	std	Y+1, r24	; 0x01

00002cb2 <.Loc.107>:
    if (aan) PORTA |= (1<<PA5);
    2cb2:	89 81       	ldd	r24, Y+1	; 0x01
    2cb4:	9a 81       	ldd	r25, Y+2	; 0x02
    2cb6:	00 97       	sbiw	r24, 0x00	; 0
    2cb8:	51 f0       	breq	.+20     	; 0x2cce <.L20>

00002cba <.Loc.108>:
    2cba:	82 e2       	ldi	r24, 0x22	; 34
    2cbc:	90 e0       	ldi	r25, 0x00	; 0
    2cbe:	fc 01       	movw	r30, r24
    2cc0:	20 81       	ld	r18, Z
    2cc2:	82 e2       	ldi	r24, 0x22	; 34
    2cc4:	90 e0       	ldi	r25, 0x00	; 0

00002cc6 <.Loc.109>:
    2cc6:	20 62       	ori	r18, 0x20	; 32
    2cc8:	fc 01       	movw	r30, r24
    2cca:	20 83       	st	Z, r18

00002ccc <.Loc.110>:
    else {
           PORTA &= ~(1<<PA5);
    }
}
    2ccc:	09 c0       	rjmp	.+18     	; 0x2ce0 <.L22>

00002cce <.L20>:
           PORTA &= ~(1<<PA5);
    2cce:	82 e2       	ldi	r24, 0x22	; 34
    2cd0:	90 e0       	ldi	r25, 0x00	; 0
    2cd2:	fc 01       	movw	r30, r24
    2cd4:	20 81       	ld	r18, Z

00002cd6 <.Loc.112>:
    2cd6:	82 e2       	ldi	r24, 0x22	; 34
    2cd8:	90 e0       	ldi	r25, 0x00	; 0

00002cda <.Loc.113>:
    2cda:	2f 7d       	andi	r18, 0xDF	; 223
    2cdc:	fc 01       	movw	r30, r24
    2cde:	20 83       	st	Z, r18

00002ce0 <.L22>:
}
    2ce0:	00 00       	nop
    2ce2:	0f 90       	pop	r0
    2ce4:	0f 90       	pop	r0
    2ce6:	df 91       	pop	r29
    2ce8:	cf 91       	pop	r28
    2cea:	08 95       	ret

00002cec <onled>:

void onled(int aan){
    2cec:	cf 93       	push	r28
    2cee:	df 93       	push	r29
    2cf0:	0f 92       	push	r0
    2cf2:	0f 92       	push	r0
    2cf4:	cd b7       	in	r28, 0x3d	; 61
    2cf6:	de b7       	in	r29, 0x3e	; 62
    2cf8:	9a 83       	std	Y+2, r25	; 0x02
    2cfa:	89 83       	std	Y+1, r24	; 0x01

00002cfc <.Loc.116>:
    if (aan) PORTA |= (1<<PA6);
    2cfc:	89 81       	ldd	r24, Y+1	; 0x01
    2cfe:	9a 81       	ldd	r25, Y+2	; 0x02
    2d00:	00 97       	sbiw	r24, 0x00	; 0
    2d02:	51 f0       	breq	.+20     	; 0x2d18 <.L24>

00002d04 <.Loc.117>:
    2d04:	82 e2       	ldi	r24, 0x22	; 34
    2d06:	90 e0       	ldi	r25, 0x00	; 0
    2d08:	fc 01       	movw	r30, r24
    2d0a:	20 81       	ld	r18, Z
    2d0c:	82 e2       	ldi	r24, 0x22	; 34
    2d0e:	90 e0       	ldi	r25, 0x00	; 0

00002d10 <.Loc.118>:
    2d10:	20 64       	ori	r18, 0x40	; 64
    2d12:	fc 01       	movw	r30, r24
    2d14:	20 83       	st	Z, r18

00002d16 <.Loc.119>:
    else {
           PORTA &= ~(1<<PA6);
    }
}
    2d16:	09 c0       	rjmp	.+18     	; 0x2d2a <.L26>

00002d18 <.L24>:
           PORTA &= ~(1<<PA6);
    2d18:	82 e2       	ldi	r24, 0x22	; 34
    2d1a:	90 e0       	ldi	r25, 0x00	; 0
    2d1c:	fc 01       	movw	r30, r24
    2d1e:	20 81       	ld	r18, Z

00002d20 <.Loc.121>:
    2d20:	82 e2       	ldi	r24, 0x22	; 34
    2d22:	90 e0       	ldi	r25, 0x00	; 0

00002d24 <.Loc.122>:
    2d24:	2f 7b       	andi	r18, 0xBF	; 191
    2d26:	fc 01       	movw	r30, r24
    2d28:	20 83       	st	Z, r18

00002d2a <.L26>:
}
    2d2a:	00 00       	nop
    2d2c:	0f 90       	pop	r0
    2d2e:	0f 90       	pop	r0
    2d30:	df 91       	pop	r29
    2d32:	cf 91       	pop	r28
    2d34:	08 95       	ret

00002d36 <noodstopled>:

void noodstopled(int aan){
    2d36:	cf 93       	push	r28
    2d38:	df 93       	push	r29
    2d3a:	0f 92       	push	r0
    2d3c:	0f 92       	push	r0
    2d3e:	cd b7       	in	r28, 0x3d	; 61
    2d40:	de b7       	in	r29, 0x3e	; 62
    2d42:	9a 83       	std	Y+2, r25	; 0x02
    2d44:	89 83       	std	Y+1, r24	; 0x01

00002d46 <.Loc.125>:
    if (aan) PORTA |= (1<<PA7);
    2d46:	89 81       	ldd	r24, Y+1	; 0x01
    2d48:	9a 81       	ldd	r25, Y+2	; 0x02
    2d4a:	00 97       	sbiw	r24, 0x00	; 0
    2d4c:	51 f0       	breq	.+20     	; 0x2d62 <.L28>

00002d4e <.Loc.126>:
    2d4e:	82 e2       	ldi	r24, 0x22	; 34
    2d50:	90 e0       	ldi	r25, 0x00	; 0
    2d52:	fc 01       	movw	r30, r24
    2d54:	20 81       	ld	r18, Z
    2d56:	82 e2       	ldi	r24, 0x22	; 34
    2d58:	90 e0       	ldi	r25, 0x00	; 0

00002d5a <.Loc.127>:
    2d5a:	20 68       	ori	r18, 0x80	; 128
    2d5c:	fc 01       	movw	r30, r24
    2d5e:	20 83       	st	Z, r18

00002d60 <.Loc.128>:
    else {
           PORTA &= ~(1<<PA7);
    }
}
    2d60:	09 c0       	rjmp	.+18     	; 0x2d74 <.L30>

00002d62 <.L28>:
           PORTA &= ~(1<<PA7);
    2d62:	82 e2       	ldi	r24, 0x22	; 34
    2d64:	90 e0       	ldi	r25, 0x00	; 0
    2d66:	fc 01       	movw	r30, r24
    2d68:	20 81       	ld	r18, Z

00002d6a <.Loc.130>:
    2d6a:	82 e2       	ldi	r24, 0x22	; 34
    2d6c:	90 e0       	ldi	r25, 0x00	; 0

00002d6e <.Loc.131>:
    2d6e:	2f 77       	andi	r18, 0x7F	; 127
    2d70:	fc 01       	movw	r30, r24
    2d72:	20 83       	st	Z, r18

00002d74 <.L30>:
}
    2d74:	00 00       	nop
    2d76:	0f 90       	pop	r0
    2d78:	0f 90       	pop	r0
    2d7a:	df 91       	pop	r29
    2d7c:	cf 91       	pop	r28
    2d7e:	08 95       	ret

00002d80 <buzzer>:


// Buzzer Functie:
void buzzer(int aan){
    2d80:	cf 93       	push	r28
    2d82:	df 93       	push	r29
    2d84:	0f 92       	push	r0
    2d86:	0f 92       	push	r0
    2d88:	cd b7       	in	r28, 0x3d	; 61
    2d8a:	de b7       	in	r29, 0x3e	; 62
    2d8c:	9a 83       	std	Y+2, r25	; 0x02
    2d8e:	89 83       	std	Y+1, r24	; 0x01

00002d90 <.Loc.134>:
    if (aan) PORTL |= (1<<PL2);
    2d90:	89 81       	ldd	r24, Y+1	; 0x01
    2d92:	9a 81       	ldd	r25, Y+2	; 0x02
    2d94:	00 97       	sbiw	r24, 0x00	; 0
    2d96:	51 f0       	breq	.+20     	; 0x2dac <.L32>

00002d98 <.Loc.135>:
    2d98:	8b e0       	ldi	r24, 0x0B	; 11
    2d9a:	91 e0       	ldi	r25, 0x01	; 1
    2d9c:	fc 01       	movw	r30, r24
    2d9e:	20 81       	ld	r18, Z
    2da0:	8b e0       	ldi	r24, 0x0B	; 11
    2da2:	91 e0       	ldi	r25, 0x01	; 1

00002da4 <.Loc.136>:
    2da4:	24 60       	ori	r18, 0x04	; 4
    2da6:	fc 01       	movw	r30, r24
    2da8:	20 83       	st	Z, r18

00002daa <.Loc.137>:
    else {
            PORTL &= ~(1<<PL2);}
}
    2daa:	09 c0       	rjmp	.+18     	; 0x2dbe <.L34>

00002dac <.L32>:
            PORTL &= ~(1<<PL2);}
    2dac:	8b e0       	ldi	r24, 0x0B	; 11
    2dae:	91 e0       	ldi	r25, 0x01	; 1
    2db0:	fc 01       	movw	r30, r24
    2db2:	20 81       	ld	r18, Z

00002db4 <.Loc.139>:
    2db4:	8b e0       	ldi	r24, 0x0B	; 11
    2db6:	91 e0       	ldi	r25, 0x01	; 1

00002db8 <.Loc.140>:
    2db8:	2b 7f       	andi	r18, 0xFB	; 251
    2dba:	fc 01       	movw	r30, r24
    2dbc:	20 83       	st	Z, r18

00002dbe <.L34>:
}
    2dbe:	00 00       	nop
    2dc0:	0f 90       	pop	r0
    2dc2:	0f 90       	pop	r0
    2dc4:	df 91       	pop	r29
    2dc6:	cf 91       	pop	r28
    2dc8:	08 95       	ret

00002dca <leestnoodstopuit>:


// Knop Functies:
int leestnoodstopuit(void){
    2dca:	cf 93       	push	r28
    2dcc:	df 93       	push	r29
    2dce:	cd b7       	in	r28, 0x3d	; 61
    2dd0:	de b7       	in	r29, 0x3e	; 62

00002dd2 <.Loc.143>:
        if ((PINA & (1<<PA2)) == 0) return(0);
    2dd2:	80 e2       	ldi	r24, 0x20	; 32
    2dd4:	90 e0       	ldi	r25, 0x00	; 0
    2dd6:	fc 01       	movw	r30, r24
    2dd8:	80 81       	ld	r24, Z

00002dda <.Loc.144>:
    2dda:	88 2f       	mov	r24, r24
    2ddc:	90 e0       	ldi	r25, 0x00	; 0
    2dde:	84 70       	andi	r24, 0x04	; 4
    2de0:	99 27       	eor	r25, r25

00002de2 <.Loc.145>:
    2de2:	00 97       	sbiw	r24, 0x00	; 0
    2de4:	19 f4       	brne	.+6      	; 0x2dec <.L36>

00002de6 <.Loc.146>:
    2de6:	80 e0       	ldi	r24, 0x00	; 0
    2de8:	90 e0       	ldi	r25, 0x00	; 0
    2dea:	0d c0       	rjmp	.+26     	; 0x2e06 <.L35>

00002dec <.L36>:
        if ((PINA & (1<<PA2)) != 0) return(1);
    2dec:	80 e2       	ldi	r24, 0x20	; 32
    2dee:	90 e0       	ldi	r25, 0x00	; 0
    2df0:	fc 01       	movw	r30, r24
    2df2:	80 81       	ld	r24, Z

00002df4 <.Loc.148>:
    2df4:	88 2f       	mov	r24, r24
    2df6:	90 e0       	ldi	r25, 0x00	; 0
    2df8:	84 70       	andi	r24, 0x04	; 4
    2dfa:	99 27       	eor	r25, r25

00002dfc <.Loc.149>:
    2dfc:	00 97       	sbiw	r24, 0x00	; 0
    2dfe:	19 f0       	breq	.+6      	; 0x2e06 <.L35>

00002e00 <.Loc.150>:
    2e00:	81 e0       	ldi	r24, 0x01	; 1
    2e02:	90 e0       	ldi	r25, 0x00	; 0
    2e04:	00 c0       	rjmp	.+0      	; 0x2e06 <.L35>

00002e06 <.L35>:
}
    2e06:	df 91       	pop	r29
    2e08:	cf 91       	pop	r28
    2e0a:	08 95       	ret

00002e0c <leestaanknopuit>:

int leestaanknopuit(void){
    2e0c:	cf 93       	push	r28
    2e0e:	df 93       	push	r29
    2e10:	cd b7       	in	r28, 0x3d	; 61
    2e12:	de b7       	in	r29, 0x3e	; 62

00002e14 <.Loc.153>:
        if ((PINA & (1<<PA0)) == 0) return(0);
    2e14:	80 e2       	ldi	r24, 0x20	; 32
    2e16:	90 e0       	ldi	r25, 0x00	; 0
    2e18:	fc 01       	movw	r30, r24
    2e1a:	80 81       	ld	r24, Z

00002e1c <.Loc.154>:
    2e1c:	88 2f       	mov	r24, r24
    2e1e:	90 e0       	ldi	r25, 0x00	; 0
    2e20:	81 70       	andi	r24, 0x01	; 1
    2e22:	99 27       	eor	r25, r25

00002e24 <.Loc.155>:
    2e24:	00 97       	sbiw	r24, 0x00	; 0
    2e26:	19 f4       	brne	.+6      	; 0x2e2e <.L40>

00002e28 <.Loc.156>:
    2e28:	80 e0       	ldi	r24, 0x00	; 0
    2e2a:	90 e0       	ldi	r25, 0x00	; 0
    2e2c:	0d c0       	rjmp	.+26     	; 0x2e48 <.L39>

00002e2e <.L40>:
        if ((PINA & (1<<PA0)) != 0) return(1);
    2e2e:	80 e2       	ldi	r24, 0x20	; 32
    2e30:	90 e0       	ldi	r25, 0x00	; 0
    2e32:	fc 01       	movw	r30, r24
    2e34:	80 81       	ld	r24, Z

00002e36 <.Loc.158>:
    2e36:	88 2f       	mov	r24, r24
    2e38:	90 e0       	ldi	r25, 0x00	; 0
    2e3a:	81 70       	andi	r24, 0x01	; 1
    2e3c:	99 27       	eor	r25, r25

00002e3e <.Loc.159>:
    2e3e:	00 97       	sbiw	r24, 0x00	; 0
    2e40:	19 f0       	breq	.+6      	; 0x2e48 <.L39>

00002e42 <.Loc.160>:
    2e42:	81 e0       	ldi	r24, 0x01	; 1
    2e44:	90 e0       	ldi	r25, 0x00	; 0
    2e46:	00 c0       	rjmp	.+0      	; 0x2e48 <.L39>

00002e48 <.L39>:
}
    2e48:	df 91       	pop	r29
    2e4a:	cf 91       	pop	r28
    2e4c:	08 95       	ret

00002e4e <leestfollowknopuit>:

int leestfollowknopuit(void){
    2e4e:	cf 93       	push	r28
    2e50:	df 93       	push	r29
    2e52:	cd b7       	in	r28, 0x3d	; 61
    2e54:	de b7       	in	r29, 0x3e	; 62

00002e56 <.Loc.163>:
        if ((PINA & (1<<PA1)) == 0) return(0);
    2e56:	80 e2       	ldi	r24, 0x20	; 32
    2e58:	90 e0       	ldi	r25, 0x00	; 0
    2e5a:	fc 01       	movw	r30, r24
    2e5c:	80 81       	ld	r24, Z

00002e5e <.Loc.164>:
    2e5e:	88 2f       	mov	r24, r24
    2e60:	90 e0       	ldi	r25, 0x00	; 0
    2e62:	82 70       	andi	r24, 0x02	; 2
    2e64:	99 27       	eor	r25, r25

00002e66 <.Loc.165>:
    2e66:	00 97       	sbiw	r24, 0x00	; 0
    2e68:	19 f4       	brne	.+6      	; 0x2e70 <.L44>

00002e6a <.Loc.166>:
    2e6a:	80 e0       	ldi	r24, 0x00	; 0
    2e6c:	90 e0       	ldi	r25, 0x00	; 0
    2e6e:	0d c0       	rjmp	.+26     	; 0x2e8a <.L43>

00002e70 <.L44>:
        if ((PINA & (1<<PA1)) != 0) return(1);
    2e70:	80 e2       	ldi	r24, 0x20	; 32
    2e72:	90 e0       	ldi	r25, 0x00	; 0
    2e74:	fc 01       	movw	r30, r24
    2e76:	80 81       	ld	r24, Z

00002e78 <.Loc.168>:
    2e78:	88 2f       	mov	r24, r24
    2e7a:	90 e0       	ldi	r25, 0x00	; 0
    2e7c:	82 70       	andi	r24, 0x02	; 2
    2e7e:	99 27       	eor	r25, r25

00002e80 <.Loc.169>:
    2e80:	00 97       	sbiw	r24, 0x00	; 0
    2e82:	19 f0       	breq	.+6      	; 0x2e8a <.L43>

00002e84 <.Loc.170>:
    2e84:	81 e0       	ldi	r24, 0x01	; 1
    2e86:	90 e0       	ldi	r25, 0x00	; 0
    2e88:	00 c0       	rjmp	.+0      	; 0x2e8a <.L43>

00002e8a <.L43>:
}
    2e8a:	df 91       	pop	r29
    2e8c:	cf 91       	pop	r28
    2e8e:	08 95       	ret

00002e90 <detecteerboomlinks>:



// Sensoren Functies:
int detecteerboomlinks(void){
    2e90:	cf 93       	push	r28
    2e92:	df 93       	push	r29
    2e94:	cd b7       	in	r28, 0x3d	; 61
    2e96:	de b7       	in	r29, 0x3e	; 62

00002e98 <.Loc.173>:
    //PIN 2 = PE4
    if ((PINE & (1<<PE4)) == 0) return(0);
    2e98:	8c e2       	ldi	r24, 0x2C	; 44
    2e9a:	90 e0       	ldi	r25, 0x00	; 0
    2e9c:	fc 01       	movw	r30, r24
    2e9e:	80 81       	ld	r24, Z

00002ea0 <.Loc.174>:
    2ea0:	88 2f       	mov	r24, r24
    2ea2:	90 e0       	ldi	r25, 0x00	; 0
    2ea4:	80 71       	andi	r24, 0x10	; 16
    2ea6:	99 27       	eor	r25, r25

00002ea8 <.Loc.175>:
    2ea8:	00 97       	sbiw	r24, 0x00	; 0
    2eaa:	19 f4       	brne	.+6      	; 0x2eb2 <.L48>

00002eac <.Loc.176>:
    2eac:	80 e0       	ldi	r24, 0x00	; 0
    2eae:	90 e0       	ldi	r25, 0x00	; 0
    2eb0:	0d c0       	rjmp	.+26     	; 0x2ecc <.L47>

00002eb2 <.L48>:
    if ((PINE & (1<<PE4)) != 0) return(1);
    2eb2:	8c e2       	ldi	r24, 0x2C	; 44
    2eb4:	90 e0       	ldi	r25, 0x00	; 0
    2eb6:	fc 01       	movw	r30, r24
    2eb8:	80 81       	ld	r24, Z

00002eba <.Loc.178>:
    2eba:	88 2f       	mov	r24, r24
    2ebc:	90 e0       	ldi	r25, 0x00	; 0
    2ebe:	80 71       	andi	r24, 0x10	; 16
    2ec0:	99 27       	eor	r25, r25

00002ec2 <.Loc.179>:
    2ec2:	00 97       	sbiw	r24, 0x00	; 0
    2ec4:	19 f0       	breq	.+6      	; 0x2ecc <.L47>

00002ec6 <.Loc.180>:
    2ec6:	81 e0       	ldi	r24, 0x01	; 1
    2ec8:	90 e0       	ldi	r25, 0x00	; 0
    2eca:	00 c0       	rjmp	.+0      	; 0x2ecc <.L47>

00002ecc <.L47>:
}
    2ecc:	df 91       	pop	r29
    2ece:	cf 91       	pop	r28
    2ed0:	08 95       	ret

00002ed2 <detecteerboomrechts>:

int detecteerboomrechts(void){
    2ed2:	cf 93       	push	r28
    2ed4:	df 93       	push	r29
    2ed6:	cd b7       	in	r28, 0x3d	; 61
    2ed8:	de b7       	in	r29, 0x3e	; 62

00002eda <.Loc.183>:
    //PIN 3 = PE5
    if ((PINE & (1<<PE5)) == 0) return(0);
    2eda:	8c e2       	ldi	r24, 0x2C	; 44
    2edc:	90 e0       	ldi	r25, 0x00	; 0
    2ede:	fc 01       	movw	r30, r24
    2ee0:	80 81       	ld	r24, Z

00002ee2 <.Loc.184>:
    2ee2:	88 2f       	mov	r24, r24
    2ee4:	90 e0       	ldi	r25, 0x00	; 0
    2ee6:	80 72       	andi	r24, 0x20	; 32
    2ee8:	99 27       	eor	r25, r25

00002eea <.Loc.185>:
    2eea:	00 97       	sbiw	r24, 0x00	; 0
    2eec:	19 f4       	brne	.+6      	; 0x2ef4 <.L52>

00002eee <.Loc.186>:
    2eee:	80 e0       	ldi	r24, 0x00	; 0
    2ef0:	90 e0       	ldi	r25, 0x00	; 0
    2ef2:	0d c0       	rjmp	.+26     	; 0x2f0e <.L51>

00002ef4 <.L52>:
    if ((PINE & (1<<PE5)) != 0) return(1);
    2ef4:	8c e2       	ldi	r24, 0x2C	; 44
    2ef6:	90 e0       	ldi	r25, 0x00	; 0
    2ef8:	fc 01       	movw	r30, r24
    2efa:	80 81       	ld	r24, Z

00002efc <.Loc.188>:
    2efc:	88 2f       	mov	r24, r24
    2efe:	90 e0       	ldi	r25, 0x00	; 0
    2f00:	80 72       	andi	r24, 0x20	; 32
    2f02:	99 27       	eor	r25, r25

00002f04 <.Loc.189>:
    2f04:	00 97       	sbiw	r24, 0x00	; 0
    2f06:	19 f0       	breq	.+6      	; 0x2f0e <.L51>

00002f08 <.Loc.190>:
    2f08:	81 e0       	ldi	r24, 0x01	; 1
    2f0a:	90 e0       	ldi	r25, 0x00	; 0
    2f0c:	00 c0       	rjmp	.+0      	; 0x2f0e <.L51>

00002f0e <.L51>:
}
    2f0e:	df 91       	pop	r29
    2f10:	cf 91       	pop	r28
    2f12:	08 95       	ret

00002f14 <detecteerlatlinks>:

int detecteerlatlinks(void){
    2f14:	cf 93       	push	r28
    2f16:	df 93       	push	r29
    2f18:	cd b7       	in	r28, 0x3d	; 61
    2f1a:	de b7       	in	r29, 0x3e	; 62

00002f1c <.Loc.193>:
    //PIN 4 = PG5
    if ((PING & (1<<PG5)) == 0) return(0);
    2f1c:	82 e3       	ldi	r24, 0x32	; 50
    2f1e:	90 e0       	ldi	r25, 0x00	; 0
    2f20:	fc 01       	movw	r30, r24
    2f22:	80 81       	ld	r24, Z

00002f24 <.Loc.194>:
    2f24:	88 2f       	mov	r24, r24
    2f26:	90 e0       	ldi	r25, 0x00	; 0
    2f28:	80 72       	andi	r24, 0x20	; 32
    2f2a:	99 27       	eor	r25, r25

00002f2c <.Loc.195>:
    2f2c:	00 97       	sbiw	r24, 0x00	; 0
    2f2e:	19 f4       	brne	.+6      	; 0x2f36 <.L56>

00002f30 <.Loc.196>:
    2f30:	80 e0       	ldi	r24, 0x00	; 0
    2f32:	90 e0       	ldi	r25, 0x00	; 0
    2f34:	0d c0       	rjmp	.+26     	; 0x2f50 <.L55>

00002f36 <.L56>:
    if ((PING & (1<<PG5)) != 0) return(1);
    2f36:	82 e3       	ldi	r24, 0x32	; 50
    2f38:	90 e0       	ldi	r25, 0x00	; 0
    2f3a:	fc 01       	movw	r30, r24
    2f3c:	80 81       	ld	r24, Z

00002f3e <.Loc.198>:
    2f3e:	88 2f       	mov	r24, r24
    2f40:	90 e0       	ldi	r25, 0x00	; 0
    2f42:	80 72       	andi	r24, 0x20	; 32
    2f44:	99 27       	eor	r25, r25

00002f46 <.Loc.199>:
    2f46:	00 97       	sbiw	r24, 0x00	; 0
    2f48:	19 f0       	breq	.+6      	; 0x2f50 <.L55>

00002f4a <.Loc.200>:
    2f4a:	81 e0       	ldi	r24, 0x01	; 1
    2f4c:	90 e0       	ldi	r25, 0x00	; 0
    2f4e:	00 c0       	rjmp	.+0      	; 0x2f50 <.L55>

00002f50 <.L55>:
}
    2f50:	df 91       	pop	r29
    2f52:	cf 91       	pop	r28
    2f54:	08 95       	ret

00002f56 <detecteerlatrechts>:

int detecteerlatrechts(void){
    2f56:	cf 93       	push	r28
    2f58:	df 93       	push	r29
    2f5a:	cd b7       	in	r28, 0x3d	; 61
    2f5c:	de b7       	in	r29, 0x3e	; 62

00002f5e <.Loc.203>:
    //PIN 5 = PE3
    if ((PINE & (1<<PE3)) == 0) return(0);
    2f5e:	8c e2       	ldi	r24, 0x2C	; 44
    2f60:	90 e0       	ldi	r25, 0x00	; 0
    2f62:	fc 01       	movw	r30, r24
    2f64:	80 81       	ld	r24, Z

00002f66 <.Loc.204>:
    2f66:	88 2f       	mov	r24, r24
    2f68:	90 e0       	ldi	r25, 0x00	; 0
    2f6a:	88 70       	andi	r24, 0x08	; 8
    2f6c:	99 27       	eor	r25, r25

00002f6e <.Loc.205>:
    2f6e:	00 97       	sbiw	r24, 0x00	; 0
    2f70:	19 f4       	brne	.+6      	; 0x2f78 <.L60>

00002f72 <.Loc.206>:
    2f72:	80 e0       	ldi	r24, 0x00	; 0
    2f74:	90 e0       	ldi	r25, 0x00	; 0
    2f76:	0d c0       	rjmp	.+26     	; 0x2f92 <.L59>

00002f78 <.L60>:
    if ((PINE & (1<<PE3)) != 0) return(1);
    2f78:	8c e2       	ldi	r24, 0x2C	; 44
    2f7a:	90 e0       	ldi	r25, 0x00	; 0
    2f7c:	fc 01       	movw	r30, r24
    2f7e:	80 81       	ld	r24, Z

00002f80 <.Loc.208>:
    2f80:	88 2f       	mov	r24, r24
    2f82:	90 e0       	ldi	r25, 0x00	; 0
    2f84:	88 70       	andi	r24, 0x08	; 8
    2f86:	99 27       	eor	r25, r25

00002f88 <.Loc.209>:
    2f88:	00 97       	sbiw	r24, 0x00	; 0
    2f8a:	19 f0       	breq	.+6      	; 0x2f92 <.L59>

00002f8c <.Loc.210>:
    2f8c:	81 e0       	ldi	r24, 0x01	; 1
    2f8e:	90 e0       	ldi	r25, 0x00	; 0
    2f90:	00 c0       	rjmp	.+0      	; 0x2f92 <.L59>

00002f92 <.L59>:
}
    2f92:	df 91       	pop	r29
    2f94:	cf 91       	pop	r28
    2f96:	08 95       	ret

00002f98 <leessonaruit>:


// Sonars Uitlezen:
int leessonaruit(int sensor){
    2f98:	cf 93       	push	r28
    2f9a:	df 93       	push	r29
    2f9c:	cd b7       	in	r28, 0x3d	; 61
    2f9e:	de b7       	in	r29, 0x3e	; 62
    2fa0:	c6 56       	subi	r28, 0x66	; 102
    2fa2:	d1 09       	sbc	r29, r1
    2fa4:	0f b6       	in	r0, 0x3f	; 63
    2fa6:	f8 94       	cli
    2fa8:	de bf       	out	0x3e, r29	; 62
    2faa:	0f be       	out	0x3f, r0	; 63
    2fac:	cd bf       	out	0x3d, r28	; 61
    2fae:	9a a3       	std	Y+34, r25	; 0x22
    2fb0:	89 a3       	std	Y+33, r24	; 0x21

00002fb2 <.Loc.213>:
    switch(sensor){
    2fb2:	89 a1       	ldd	r24, Y+33	; 0x21
    2fb4:	9a a1       	ldd	r25, Y+34	; 0x22
    2fb6:	83 30       	cpi	r24, 0x03	; 3
    2fb8:	91 05       	cpc	r25, r1
    2fba:	09 f4       	brne	.+2      	; 0x2fbe <L0^A+0x2>

00002fbc <L0^A>:
    2fbc:	56 c0       	rjmp	.+172    	; 0x306a <.L64>
    2fbe:	89 a1       	ldd	r24, Y+33	; 0x21
    2fc0:	9a a1       	ldd	r25, Y+34	; 0x22
    2fc2:	83 30       	cpi	r24, 0x03	; 3
    2fc4:	91 05       	cpc	r25, r1
    2fc6:	09 f0       	breq	.+2      	; 0x2fca <L0^A+0x2>

00002fc8 <L0^A>:
    2fc8:	a4 f4       	brge	.+40     	; 0x2ff2 <.L65>
    2fca:	89 a1       	ldd	r24, Y+33	; 0x21
    2fcc:	9a a1       	ldd	r25, Y+34	; 0x22
    2fce:	82 30       	cpi	r24, 0x02	; 2
    2fd0:	91 05       	cpc	r25, r1
    2fd2:	c1 f1       	breq	.+112    	; 0x3044 <.L66>
    2fd4:	89 a1       	ldd	r24, Y+33	; 0x21
    2fd6:	9a a1       	ldd	r25, Y+34	; 0x22
    2fd8:	82 30       	cpi	r24, 0x02	; 2
    2fda:	91 05       	cpc	r25, r1
    2fdc:	09 f0       	breq	.+2      	; 0x2fe0 <L0^A+0x2>

00002fde <L0^A>:
    2fde:	4c f4       	brge	.+18     	; 0x2ff2 <.L65>
    2fe0:	89 a1       	ldd	r24, Y+33	; 0x21
    2fe2:	9a a1       	ldd	r25, Y+34	; 0x22
    2fe4:	00 97       	sbiw	r24, 0x00	; 0
    2fe6:	41 f0       	breq	.+16     	; 0x2ff8 <.L67>
    2fe8:	89 a1       	ldd	r24, Y+33	; 0x21
    2fea:	9a a1       	ldd	r25, Y+34	; 0x22
    2fec:	81 30       	cpi	r24, 0x01	; 1
    2fee:	91 05       	cpc	r25, r1
    2ff0:	b1 f0       	breq	.+44     	; 0x301e <.L68>

00002ff2 <.L65>:
default:
    return 0;
    2ff2:	80 e0       	ldi	r24, 0x00	; 0
    2ff4:	90 e0       	ldi	r25, 0x00	; 0
    2ff6:	34 c2       	rjmp	.+1128   	; 0x3460 <.L69>

00002ff8 <.L67>:
    break;
    //als je een getal opgeeft wat niet gelinkt is aan een sensor geeft de functie 0 terug.
case 0: // Voorkant
    //AB = 00
    PORTB &= ~(1<<PB0);
    2ff8:	85 e2       	ldi	r24, 0x25	; 37
    2ffa:	90 e0       	ldi	r25, 0x00	; 0
    2ffc:	dc 01       	movw	r26, r24
    2ffe:	2c 91       	ld	r18, X

00003000 <.Loc.216>:
    3000:	85 e2       	ldi	r24, 0x25	; 37
    3002:	90 e0       	ldi	r25, 0x00	; 0

00003004 <.Loc.217>:
    3004:	2e 7f       	andi	r18, 0xFE	; 254
    3006:	fc 01       	movw	r30, r24
    3008:	20 83       	st	Z, r18

0000300a <.Loc.218>:
    PORTB &= ~(1<<PB1);
    300a:	85 e2       	ldi	r24, 0x25	; 37
    300c:	90 e0       	ldi	r25, 0x00	; 0
    300e:	dc 01       	movw	r26, r24
    3010:	2c 91       	ld	r18, X

00003012 <.Loc.219>:
    3012:	85 e2       	ldi	r24, 0x25	; 37
    3014:	90 e0       	ldi	r25, 0x00	; 0

00003016 <.Loc.220>:
    3016:	2d 7f       	andi	r18, 0xFD	; 253
    3018:	fc 01       	movw	r30, r24
    301a:	20 83       	st	Z, r18

0000301c <.Loc.221>:
    break;
    301c:	39 c0       	rjmp	.+114    	; 0x3090 <.L70>

0000301e <.L68>:
case 1: // Links
    //AB = 10
     PORTB |= (1<<PB0);
    301e:	85 e2       	ldi	r24, 0x25	; 37
    3020:	90 e0       	ldi	r25, 0x00	; 0
    3022:	dc 01       	movw	r26, r24
    3024:	2c 91       	ld	r18, X
    3026:	85 e2       	ldi	r24, 0x25	; 37
    3028:	90 e0       	ldi	r25, 0x00	; 0

0000302a <.Loc.223>:
    302a:	21 60       	ori	r18, 0x01	; 1
    302c:	fc 01       	movw	r30, r24
    302e:	20 83       	st	Z, r18

00003030 <.Loc.224>:
    PORTB &= ~(1<<PB1);
    3030:	85 e2       	ldi	r24, 0x25	; 37
    3032:	90 e0       	ldi	r25, 0x00	; 0
    3034:	dc 01       	movw	r26, r24
    3036:	2c 91       	ld	r18, X

00003038 <.Loc.225>:
    3038:	85 e2       	ldi	r24, 0x25	; 37
    303a:	90 e0       	ldi	r25, 0x00	; 0

0000303c <.Loc.226>:
    303c:	2d 7f       	andi	r18, 0xFD	; 253
    303e:	fc 01       	movw	r30, r24
    3040:	20 83       	st	Z, r18

00003042 <.Loc.227>:
    break;
    3042:	26 c0       	rjmp	.+76     	; 0x3090 <.L70>

00003044 <.L66>:
case 2: // Rechts
    //AB =01
     PORTB &= ~(1<<PB0);
    3044:	85 e2       	ldi	r24, 0x25	; 37
    3046:	90 e0       	ldi	r25, 0x00	; 0
    3048:	dc 01       	movw	r26, r24
    304a:	2c 91       	ld	r18, X

0000304c <.Loc.229>:
    304c:	85 e2       	ldi	r24, 0x25	; 37
    304e:	90 e0       	ldi	r25, 0x00	; 0

00003050 <.Loc.230>:
    3050:	2e 7f       	andi	r18, 0xFE	; 254
    3052:	fc 01       	movw	r30, r24
    3054:	20 83       	st	Z, r18

00003056 <.Loc.231>:
    PORTB |= (1<<PB1);
    3056:	85 e2       	ldi	r24, 0x25	; 37
    3058:	90 e0       	ldi	r25, 0x00	; 0
    305a:	dc 01       	movw	r26, r24
    305c:	2c 91       	ld	r18, X
    305e:	85 e2       	ldi	r24, 0x25	; 37
    3060:	90 e0       	ldi	r25, 0x00	; 0

00003062 <.Loc.232>:
    3062:	22 60       	ori	r18, 0x02	; 2
    3064:	fc 01       	movw	r30, r24
    3066:	20 83       	st	Z, r18

00003068 <.Loc.233>:
    break;
    3068:	13 c0       	rjmp	.+38     	; 0x3090 <.L70>

0000306a <.L64>:
case 3:
    //AB = 11
    PORTB |= (1<<PB0);
    306a:	85 e2       	ldi	r24, 0x25	; 37
    306c:	90 e0       	ldi	r25, 0x00	; 0
    306e:	dc 01       	movw	r26, r24
    3070:	2c 91       	ld	r18, X
    3072:	85 e2       	ldi	r24, 0x25	; 37
    3074:	90 e0       	ldi	r25, 0x00	; 0

00003076 <.Loc.235>:
    3076:	21 60       	ori	r18, 0x01	; 1
    3078:	fc 01       	movw	r30, r24
    307a:	20 83       	st	Z, r18

0000307c <.Loc.236>:
    PORTB |= (1<<PB1);
    307c:	85 e2       	ldi	r24, 0x25	; 37
    307e:	90 e0       	ldi	r25, 0x00	; 0
    3080:	dc 01       	movw	r26, r24
    3082:	2c 91       	ld	r18, X
    3084:	85 e2       	ldi	r24, 0x25	; 37
    3086:	90 e0       	ldi	r25, 0x00	; 0

00003088 <.Loc.237>:
    3088:	22 60       	ori	r18, 0x02	; 2
    308a:	fc 01       	movw	r30, r24
    308c:	20 83       	st	Z, r18

0000308e <.Loc.238>:
	...

00003090 <.L70>:
    break;
    }
    PORTB |= (1<<PB2);
    3090:	85 e2       	ldi	r24, 0x25	; 37
    3092:	90 e0       	ldi	r25, 0x00	; 0
    3094:	dc 01       	movw	r26, r24
    3096:	2c 91       	ld	r18, X
    3098:	85 e2       	ldi	r24, 0x25	; 37
    309a:	90 e0       	ldi	r25, 0x00	; 0

0000309c <.Loc.240>:
    309c:	24 60       	ori	r18, 0x04	; 4
    309e:	fc 01       	movw	r30, r24
    30a0:	20 83       	st	Z, r18
    30a2:	80 e0       	ldi	r24, 0x00	; 0
    30a4:	90 e0       	ldi	r25, 0x00	; 0
    30a6:	a0 e0       	ldi	r26, 0x00	; 0
    30a8:	b0 e4       	ldi	r27, 0x40	; 64
    30aa:	89 83       	std	Y+1, r24	; 0x01
    30ac:	9a 83       	std	Y+2, r25	; 0x02
    30ae:	ab 83       	std	Y+3, r26	; 0x03
    30b0:	bc 83       	std	Y+4, r27	; 0x04

000030b2 <.LBB44>:
	__tmp = ((F_CPU) / 3e6) * __us;
    30b2:	2b ea       	ldi	r18, 0xAB	; 171
    30b4:	3a ea       	ldi	r19, 0xAA	; 170
    30b6:	4a ea       	ldi	r20, 0xAA	; 170
    30b8:	50 e4       	ldi	r21, 0x40	; 64
    30ba:	69 81       	ldd	r22, Y+1	; 0x01
    30bc:	7a 81       	ldd	r23, Y+2	; 0x02
    30be:	8b 81       	ldd	r24, Y+3	; 0x03
    30c0:	9c 81       	ldd	r25, Y+4	; 0x04
    30c2:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    30c6:	6b ab       	std	Y+51, r22	; 0x33
    30c8:	7c ab       	std	Y+52, r23	; 0x34
    30ca:	8d ab       	std	Y+53, r24	; 0x35
    30cc:	9e ab       	std	Y+54, r25	; 0x36
    30ce:	2b a9       	ldd	r18, Y+51	; 0x33
    30d0:	3c a9       	ldd	r19, Y+52	; 0x34
    30d2:	4d a9       	ldd	r20, Y+53	; 0x35
    30d4:	5e a9       	ldd	r21, Y+54	; 0x36
    30d6:	2d 83       	std	Y+5, r18	; 0x05
    30d8:	3e 83       	std	Y+6, r19	; 0x06
    30da:	4f 83       	std	Y+7, r20	; 0x07
    30dc:	58 87       	std	Y+8, r21	; 0x08

000030de <.Loc.242>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    30de:	20 e0       	ldi	r18, 0x00	; 0
    30e0:	30 e0       	ldi	r19, 0x00	; 0
    30e2:	40 e8       	ldi	r20, 0x80	; 128
    30e4:	50 e4       	ldi	r21, 0x40	; 64
    30e6:	69 81       	ldd	r22, Y+1	; 0x01
    30e8:	7a 81       	ldd	r23, Y+2	; 0x02
    30ea:	8b 81       	ldd	r24, Y+3	; 0x03
    30ec:	9c 81       	ldd	r25, Y+4	; 0x04
    30ee:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    30f2:	6f ab       	std	Y+55, r22	; 0x37
    30f4:	78 af       	std	Y+56, r23	; 0x38
    30f6:	89 af       	std	Y+57, r24	; 0x39
    30f8:	9a af       	std	Y+58, r25	; 0x3a
    30fa:	8f a9       	ldd	r24, Y+55	; 0x37
    30fc:	98 ad       	ldd	r25, Y+56	; 0x38
    30fe:	a9 ad       	ldd	r26, Y+57	; 0x39
    3100:	ba ad       	ldd	r27, Y+58	; 0x3a
    3102:	89 87       	std	Y+9, r24	; 0x09
    3104:	9a 87       	std	Y+10, r25	; 0x0a
    3106:	ab 87       	std	Y+11, r26	; 0x0b
    3108:	bc 87       	std	Y+12, r27	; 0x0c

0000310a <.Loc.243>:
	if (__tmp < 1.0)
    310a:	20 e0       	ldi	r18, 0x00	; 0
    310c:	30 e0       	ldi	r19, 0x00	; 0
    310e:	40 e8       	ldi	r20, 0x80	; 128
    3110:	5f e3       	ldi	r21, 0x3F	; 63
    3112:	6d 81       	ldd	r22, Y+5	; 0x05
    3114:	7e 81       	ldd	r23, Y+6	; 0x06
    3116:	8f 81       	ldd	r24, Y+7	; 0x07
    3118:	98 85       	ldd	r25, Y+8	; 0x08
    311a:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
    311e:	88 23       	and	r24, r24
    3120:	1c f4       	brge	.+6      	; 0x3128 <.L94>

00003122 <.Loc.244>:
		__ticks = 1;
    3122:	81 e0       	ldi	r24, 0x01	; 1
    3124:	8d 87       	std	Y+13, r24	; 0x0d
    3126:	f7 c0       	rjmp	.+494    	; 0x3316 <.L73>

00003128 <.L94>:
	else if (__tmp2 > 65535)
    3128:	20 e0       	ldi	r18, 0x00	; 0
    312a:	3f ef       	ldi	r19, 0xFF	; 255
    312c:	4f e7       	ldi	r20, 0x7F	; 127
    312e:	57 e4       	ldi	r21, 0x47	; 71
    3130:	69 85       	ldd	r22, Y+9	; 0x09
    3132:	7a 85       	ldd	r23, Y+10	; 0x0a
    3134:	8b 85       	ldd	r24, Y+11	; 0x0b
    3136:	9c 85       	ldd	r25, Y+12	; 0x0c
    3138:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    313c:	88 23       	and	r24, r24
    313e:	09 f0       	breq	.+2      	; 0x3142 <L0^A>

00003140 <L0^A>:
    3140:	0c f4       	brge	.+2      	; 0x3144 <.Loc.246>

00003142 <L0^A>:
    3142:	ae c0       	rjmp	.+348    	; 0x32a0 <.L95>

00003144 <.Loc.246>:
		_delay_ms(__us / 1000.0);
    3144:	20 e0       	ldi	r18, 0x00	; 0
    3146:	30 e0       	ldi	r19, 0x00	; 0
    3148:	4a e7       	ldi	r20, 0x7A	; 122
    314a:	54 e4       	ldi	r21, 0x44	; 68
    314c:	69 81       	ldd	r22, Y+1	; 0x01
    314e:	7a 81       	ldd	r23, Y+2	; 0x02
    3150:	8b 81       	ldd	r24, Y+3	; 0x03
    3152:	9c 81       	ldd	r25, Y+4	; 0x04
    3154:	0e 94 23 1f 	call	0x3e46	; 0x3e46 <__divsf3>
    3158:	6b af       	std	Y+59, r22	; 0x3b
    315a:	7c af       	std	Y+60, r23	; 0x3c
    315c:	8d af       	std	Y+61, r24	; 0x3d
    315e:	9e af       	std	Y+62, r25	; 0x3e
    3160:	8b ad       	ldd	r24, Y+59	; 0x3b
    3162:	9c ad       	ldd	r25, Y+60	; 0x3c
    3164:	ad ad       	ldd	r26, Y+61	; 0x3d
    3166:	be ad       	ldd	r27, Y+62	; 0x3e
    3168:	8e 87       	std	Y+14, r24	; 0x0e
    316a:	9f 87       	std	Y+15, r25	; 0x0f
    316c:	a8 8b       	std	Y+16, r26	; 0x10
    316e:	b9 8b       	std	Y+17, r27	; 0x11

00003170 <.LBB46>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    3170:	20 e0       	ldi	r18, 0x00	; 0
    3172:	30 e0       	ldi	r19, 0x00	; 0
    3174:	4a e7       	ldi	r20, 0x7A	; 122
    3176:	55 e4       	ldi	r21, 0x45	; 69
    3178:	6e 85       	ldd	r22, Y+14	; 0x0e
    317a:	7f 85       	ldd	r23, Y+15	; 0x0f
    317c:	88 89       	ldd	r24, Y+16	; 0x10
    317e:	99 89       	ldd	r25, Y+17	; 0x11
    3180:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    3184:	23 96       	adiw	r28, 0x03	; 3
    3186:	6c af       	std	Y+60, r22	; 0x3c
    3188:	7d af       	std	Y+61, r23	; 0x3d
    318a:	8e af       	std	Y+62, r24	; 0x3e
    318c:	9f af       	std	Y+63, r25	; 0x3f
    318e:	23 97       	sbiw	r28, 0x03	; 3
    3190:	23 96       	adiw	r28, 0x03	; 3
    3192:	2c ad       	ldd	r18, Y+60	; 0x3c
    3194:	3d ad       	ldd	r19, Y+61	; 0x3d
    3196:	4e ad       	ldd	r20, Y+62	; 0x3e
    3198:	5f ad       	ldd	r21, Y+63	; 0x3f
    319a:	23 97       	sbiw	r28, 0x03	; 3
    319c:	2a 8b       	std	Y+18, r18	; 0x12
    319e:	3b 8b       	std	Y+19, r19	; 0x13
    31a0:	4c 8b       	std	Y+20, r20	; 0x14
    31a2:	5d 8b       	std	Y+21, r21	; 0x15

000031a4 <.Loc.248>:
	if (__tmp < 1.0)
    31a4:	20 e0       	ldi	r18, 0x00	; 0
    31a6:	30 e0       	ldi	r19, 0x00	; 0
    31a8:	40 e8       	ldi	r20, 0x80	; 128
    31aa:	5f e3       	ldi	r21, 0x3F	; 63
    31ac:	6a 89       	ldd	r22, Y+18	; 0x12
    31ae:	7b 89       	ldd	r23, Y+19	; 0x13
    31b0:	8c 89       	ldd	r24, Y+20	; 0x14
    31b2:	9d 89       	ldd	r25, Y+21	; 0x15
    31b4:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
    31b8:	88 23       	and	r24, r24
    31ba:	2c f4       	brge	.+10     	; 0x31c6 <.L96>

000031bc <.Loc.249>:
		__ticks = 1;
    31bc:	81 e0       	ldi	r24, 0x01	; 1
    31be:	90 e0       	ldi	r25, 0x00	; 0
    31c0:	9f 8b       	std	Y+23, r25	; 0x17
    31c2:	8e 8b       	std	Y+22, r24	; 0x16
    31c4:	62 c0       	rjmp	.+196    	; 0x328a <.L78>

000031c6 <.L96>:
	else if (__tmp > 65535)
    31c6:	20 e0       	ldi	r18, 0x00	; 0
    31c8:	3f ef       	ldi	r19, 0xFF	; 255
    31ca:	4f e7       	ldi	r20, 0x7F	; 127
    31cc:	57 e4       	ldi	r21, 0x47	; 71
    31ce:	6a 89       	ldd	r22, Y+18	; 0x12
    31d0:	7b 89       	ldd	r23, Y+19	; 0x13
    31d2:	8c 89       	ldd	r24, Y+20	; 0x14
    31d4:	9d 89       	ldd	r25, Y+21	; 0x15
    31d6:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    31da:	88 23       	and	r24, r24
    31dc:	09 f0       	breq	.+2      	; 0x31e0 <L0^A>

000031de <L0^A>:
    31de:	0c f4       	brge	.+2      	; 0x31e2 <.Loc.251>

000031e0 <L0^A>:
    31e0:	42 c0       	rjmp	.+132    	; 0x3266 <.L97>

000031e2 <.Loc.251>:
		__ticks = (uint16_t) (__ms * 10.0);
    31e2:	20 e0       	ldi	r18, 0x00	; 0
    31e4:	30 e0       	ldi	r19, 0x00	; 0
    31e6:	40 e2       	ldi	r20, 0x20	; 32
    31e8:	51 e4       	ldi	r21, 0x41	; 65
    31ea:	6e 85       	ldd	r22, Y+14	; 0x0e
    31ec:	7f 85       	ldd	r23, Y+15	; 0x0f
    31ee:	88 89       	ldd	r24, Y+16	; 0x10
    31f0:	99 89       	ldd	r25, Y+17	; 0x11
    31f2:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    31f6:	27 96       	adiw	r28, 0x07	; 7
    31f8:	6c af       	std	Y+60, r22	; 0x3c
    31fa:	7d af       	std	Y+61, r23	; 0x3d
    31fc:	8e af       	std	Y+62, r24	; 0x3e
    31fe:	9f af       	std	Y+63, r25	; 0x3f
    3200:	27 97       	sbiw	r28, 0x07	; 7
    3202:	27 96       	adiw	r28, 0x07	; 7
    3204:	8c ad       	ldd	r24, Y+60	; 0x3c
    3206:	9d ad       	ldd	r25, Y+61	; 0x3d
    3208:	ae ad       	ldd	r26, Y+62	; 0x3e
    320a:	bf ad       	ldd	r27, Y+63	; 0x3f
    320c:	27 97       	sbiw	r28, 0x07	; 7
    320e:	8f a7       	std	Y+47, r24	; 0x2f
    3210:	98 ab       	std	Y+48, r25	; 0x30
    3212:	a9 ab       	std	Y+49, r26	; 0x31
    3214:	ba ab       	std	Y+50, r27	; 0x32

00003216 <.Loc.252>:
    3216:	6f a5       	ldd	r22, Y+47	; 0x2f
    3218:	78 a9       	ldd	r23, Y+48	; 0x30
    321a:	89 a9       	ldd	r24, Y+49	; 0x31
    321c:	9a a9       	ldd	r25, Y+50	; 0x32
    321e:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    3222:	2b 96       	adiw	r28, 0x0b	; 11
    3224:	6c af       	std	Y+60, r22	; 0x3c
    3226:	7d af       	std	Y+61, r23	; 0x3d
    3228:	8e af       	std	Y+62, r24	; 0x3e
    322a:	9f af       	std	Y+63, r25	; 0x3f
    322c:	2b 97       	sbiw	r28, 0x0b	; 11
    322e:	29 96       	adiw	r28, 0x09	; 9
    3230:	ae ad       	ldd	r26, Y+62	; 0x3e
    3232:	bf ad       	ldd	r27, Y+63	; 0x3f
    3234:	29 97       	sbiw	r28, 0x09	; 9
    3236:	bf 8b       	std	Y+23, r27	; 0x17
    3238:	ae 8b       	std	Y+22, r26	; 0x16

0000323a <.Loc.253>:
		while(__ticks)
    323a:	10 c0       	rjmp	.+32     	; 0x325c <.L81>

0000323c <.L82>:
    323c:	80 e9       	ldi	r24, 0x90	; 144
    323e:	91 e0       	ldi	r25, 0x01	; 1
    3240:	99 8f       	std	Y+25, r25	; 0x19
    3242:	88 8f       	std	Y+24, r24	; 0x18

00003244 <.LBB48>:
	__asm__ volatile (
    3244:	88 8d       	ldd	r24, Y+24	; 0x18
    3246:	99 8d       	ldd	r25, Y+25	; 0x19

00003248 <.L1^B1>:
    3248:	01 97       	sbiw	r24, 0x01	; 1
    324a:	f1 f7       	brne	.-4      	; 0x3248 <.L1^B1>
    324c:	99 8f       	std	Y+25, r25	; 0x19
    324e:	88 8f       	std	Y+24, r24	; 0x18

00003250 <.Loc.255>:
	...

00003252 <.LBE48>:
			__ticks --;
    3252:	8e 89       	ldd	r24, Y+22	; 0x16
    3254:	9f 89       	ldd	r25, Y+23	; 0x17
    3256:	01 97       	sbiw	r24, 0x01	; 1
    3258:	9f 8b       	std	Y+23, r25	; 0x17
    325a:	8e 8b       	std	Y+22, r24	; 0x16

0000325c <.L81>:
		while(__ticks)
    325c:	8e 89       	ldd	r24, Y+22	; 0x16
    325e:	9f 89       	ldd	r25, Y+23	; 0x17
    3260:	00 97       	sbiw	r24, 0x00	; 0
    3262:	61 f7       	brne	.-40     	; 0x323c <.L82>

00003264 <.Loc.258>:
		return;
    3264:	58 c0       	rjmp	.+176    	; 0x3316 <.L73>

00003266 <.L97>:
		__ticks = (uint16_t)__tmp;
    3266:	6a 89       	ldd	r22, Y+18	; 0x12
    3268:	7b 89       	ldd	r23, Y+19	; 0x13
    326a:	8c 89       	ldd	r24, Y+20	; 0x14
    326c:	9d 89       	ldd	r25, Y+21	; 0x15
    326e:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    3272:	2f 96       	adiw	r28, 0x0f	; 15
    3274:	6c af       	std	Y+60, r22	; 0x3c
    3276:	7d af       	std	Y+61, r23	; 0x3d
    3278:	8e af       	std	Y+62, r24	; 0x3e
    327a:	9f af       	std	Y+63, r25	; 0x3f
    327c:	2f 97       	sbiw	r28, 0x0f	; 15
    327e:	2d 96       	adiw	r28, 0x0d	; 13
    3280:	ee ad       	ldd	r30, Y+62	; 0x3e
    3282:	ff ad       	ldd	r31, Y+63	; 0x3f
    3284:	2d 97       	sbiw	r28, 0x0d	; 13
    3286:	ff 8b       	std	Y+23, r31	; 0x17
    3288:	ee 8b       	std	Y+22, r30	; 0x16

0000328a <.L78>:
    328a:	8e 89       	ldd	r24, Y+22	; 0x16
    328c:	9f 89       	ldd	r25, Y+23	; 0x17
    328e:	9b 8f       	std	Y+27, r25	; 0x1b
    3290:	8a 8f       	std	Y+26, r24	; 0x1a

00003292 <.LBB50>:
    3292:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3294:	9b 8d       	ldd	r25, Y+27	; 0x1b

00003296 <.L1^B2>:
    3296:	01 97       	sbiw	r24, 0x01	; 1
    3298:	f1 f7       	brne	.-4      	; 0x3296 <.L1^B2>
    329a:	9b 8f       	std	Y+27, r25	; 0x1b
    329c:	8a 8f       	std	Y+26, r24	; 0x1a

0000329e <.Loc.261>:
}
    329e:	3b c0       	rjmp	.+118    	; 0x3316 <.L73>

000032a0 <.L95>:
	else if (__tmp > 255)
    32a0:	20 e0       	ldi	r18, 0x00	; 0
    32a2:	30 e0       	ldi	r19, 0x00	; 0
    32a4:	4f e7       	ldi	r20, 0x7F	; 127
    32a6:	53 e4       	ldi	r21, 0x43	; 67
    32a8:	6d 81       	ldd	r22, Y+5	; 0x05
    32aa:	7e 81       	ldd	r23, Y+6	; 0x06
    32ac:	8f 81       	ldd	r24, Y+7	; 0x07
    32ae:	98 85       	ldd	r25, Y+8	; 0x08
    32b0:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    32b4:	88 23       	and	r24, r24
    32b6:	f9 f0       	breq	.+62     	; 0x32f6 <.L98>
    32b8:	f4 f0       	brlt	.+60     	; 0x32f6 <.L98>

000032ba <.LBB52>:
		uint16_t __ticks=(uint16_t)__tmp2;
    32ba:	69 85       	ldd	r22, Y+9	; 0x09
    32bc:	7a 85       	ldd	r23, Y+10	; 0x0a
    32be:	8b 85       	ldd	r24, Y+11	; 0x0b
    32c0:	9c 85       	ldd	r25, Y+12	; 0x0c
    32c2:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    32c6:	63 96       	adiw	r28, 0x13	; 19
    32c8:	6c af       	std	Y+60, r22	; 0x3c
    32ca:	7d af       	std	Y+61, r23	; 0x3d
    32cc:	8e af       	std	Y+62, r24	; 0x3e
    32ce:	9f af       	std	Y+63, r25	; 0x3f
    32d0:	63 97       	sbiw	r28, 0x13	; 19
    32d2:	61 96       	adiw	r28, 0x11	; 17
    32d4:	2e ad       	ldd	r18, Y+62	; 0x3e
    32d6:	3f ad       	ldd	r19, Y+63	; 0x3f
    32d8:	61 97       	sbiw	r28, 0x11	; 17
    32da:	3d 8f       	std	Y+29, r19	; 0x1d
    32dc:	2c 8f       	std	Y+28, r18	; 0x1c
    32de:	8c 8d       	ldd	r24, Y+28	; 0x1c
    32e0:	9d 8d       	ldd	r25, Y+29	; 0x1d
    32e2:	9f 8f       	std	Y+31, r25	; 0x1f
    32e4:	8e 8f       	std	Y+30, r24	; 0x1e

000032e6 <.LBB53>:
	__asm__ volatile (
    32e6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    32e8:	9f 8d       	ldd	r25, Y+31	; 0x1f

000032ea <.L1^B3>:
    32ea:	01 97       	sbiw	r24, 0x01	; 1
    32ec:	f1 f7       	brne	.-4      	; 0x32ea <.L1^B3>
    32ee:	9f 8f       	std	Y+31, r25	; 0x1f
    32f0:	8e 8f       	std	Y+30, r24	; 0x1e

000032f2 <.Loc.265>:
	...

000032f4 <.LBE53>:
		return;
    32f4:	17 c0       	rjmp	.+46     	; 0x3324 <.L86>

000032f6 <.L98>:
		__ticks = (uint8_t)__tmp;
    32f6:	6d 81       	ldd	r22, Y+5	; 0x05
    32f8:	7e 81       	ldd	r23, Y+6	; 0x06
    32fa:	8f 81       	ldd	r24, Y+7	; 0x07
    32fc:	98 85       	ldd	r25, Y+8	; 0x08
    32fe:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    3302:	67 96       	adiw	r28, 0x17	; 23
    3304:	6c af       	std	Y+60, r22	; 0x3c
    3306:	7d af       	std	Y+61, r23	; 0x3d
    3308:	8e af       	std	Y+62, r24	; 0x3e
    330a:	9f af       	std	Y+63, r25	; 0x3f
    330c:	67 97       	sbiw	r28, 0x17	; 23
    330e:	64 96       	adiw	r28, 0x14	; 20
    3310:	3f ad       	ldd	r19, Y+63	; 0x3f
    3312:	64 97       	sbiw	r28, 0x14	; 20
    3314:	3d 87       	std	Y+13, r19	; 0x0d

00003316 <.L73>:
    3316:	8d 85       	ldd	r24, Y+13	; 0x0d
    3318:	88 a3       	std	Y+32, r24	; 0x20

0000331a <.LBB55>:
	__asm__ volatile (
    331a:	88 a1       	ldd	r24, Y+32	; 0x20

0000331c <.L1^B4>:
    331c:	8a 95       	dec	r24
    331e:	f1 f7       	brne	.-4      	; 0x331c <.L1^B4>
    3320:	88 a3       	std	Y+32, r24	; 0x20

00003322 <.Loc.269>:
	...

00003324 <.L86>:
    _delay_us(2);
    PORTB &= ~(1<<PB2);
    3324:	85 e2       	ldi	r24, 0x25	; 37
    3326:	90 e0       	ldi	r25, 0x00	; 0
    3328:	dc 01       	movw	r26, r24
    332a:	2c 91       	ld	r18, X

0000332c <.Loc.271>:
    332c:	85 e2       	ldi	r24, 0x25	; 37
    332e:	90 e0       	ldi	r25, 0x00	; 0

00003330 <.Loc.272>:
    3330:	2b 7f       	andi	r18, 0xFB	; 251
    3332:	fc 01       	movw	r30, r24
    3334:	20 83       	st	Z, r18

00003336 <.Loc.273>:
        flag = 0;
    3336:	10 92 3f 02 	sts	0x023F, r1	; 0x80023f <flag+0x1>
    333a:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <flag>

0000333e <.Loc.274>:
        TCNT4 = 0;
    333e:	84 ea       	ldi	r24, 0xA4	; 164
    3340:	90 e0       	ldi	r25, 0x00	; 0

00003342 <.Loc.275>:
    3342:	dc 01       	movw	r26, r24
    3344:	11 96       	adiw	r26, 0x01	; 1
    3346:	1c 92       	st	X, r1
    3348:	1e 92       	st	-X, r1

0000334a <.Loc.276>:
    	TCCR4B |= (1<<CS40); //start de timer
    334a:	81 ea       	ldi	r24, 0xA1	; 161
    334c:	90 e0       	ldi	r25, 0x00	; 0
    334e:	fc 01       	movw	r30, r24
    3350:	20 81       	ld	r18, Z
    3352:	81 ea       	ldi	r24, 0xA1	; 161
    3354:	90 e0       	ldi	r25, 0x00	; 0

00003356 <.Loc.277>:
    3356:	21 60       	ori	r18, 0x01	; 1
    3358:	dc 01       	movw	r26, r24
    335a:	2c 93       	st	X, r18

0000335c <.Loc.278>:
    	TIMSK4 |= (1<<ICIE4); //enable input capture interrupts
    335c:	82 e7       	ldi	r24, 0x72	; 114
    335e:	90 e0       	ldi	r25, 0x00	; 0
    3360:	fc 01       	movw	r30, r24
    3362:	20 81       	ld	r18, Z
    3364:	82 e7       	ldi	r24, 0x72	; 114
    3366:	90 e0       	ldi	r25, 0x00	; 0

00003368 <.Loc.279>:
    3368:	20 62       	ori	r18, 0x20	; 32
    336a:	dc 01       	movw	r26, r24
    336c:	2c 93       	st	X, r18

0000336e <.Loc.280>:
	...

00003370 <.L87>:
    	while(flag < 2){}
    3370:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <flag>
    3374:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <flag+0x1>
    3378:	81 30       	cpi	r24, 0x01	; 1
    337a:	91 05       	cpc	r25, r1
    337c:	c9 f3       	breq	.-14     	; 0x3370 <.L87>
    337e:	c4 f3       	brlt	.-16     	; 0x3370 <.L87>

00003380 <.Loc.282>:
    	//clicks = fall_edge - rise_edge;
    	//updateLCDScreen(1, "RE:",re, "");
    	afstand = (fe *0.858)-20;
    3380:	80 91 42 02 	lds	r24, 0x0242	; 0x800242 <fe>
    3384:	90 91 43 02 	lds	r25, 0x0243	; 0x800243 <fe+0x1>
    3388:	9c 01       	movw	r18, r24
    338a:	99 0f       	add	r25, r25
    338c:	44 0b       	sbc	r20, r20
    338e:	55 0b       	sbc	r21, r21
    3390:	6b 96       	adiw	r28, 0x1b	; 27
    3392:	2c af       	std	Y+60, r18	; 0x3c
    3394:	3d af       	std	Y+61, r19	; 0x3d
    3396:	4e af       	std	Y+62, r20	; 0x3e
    3398:	5f af       	std	Y+63, r21	; 0x3f
    339a:	6b 97       	sbiw	r28, 0x1b	; 27
    339c:	6b 96       	adiw	r28, 0x1b	; 27
    339e:	6c ad       	ldd	r22, Y+60	; 0x3c
    33a0:	7d ad       	ldd	r23, Y+61	; 0x3d
    33a2:	8e ad       	ldd	r24, Y+62	; 0x3e
    33a4:	9f ad       	ldd	r25, Y+63	; 0x3f
    33a6:	6b 97       	sbiw	r28, 0x1b	; 27
    33a8:	0e 94 cd 1f 	call	0x3f9a	; 0x3f9a <__floatsisf>
    33ac:	6b a3       	std	Y+35, r22	; 0x23
    33ae:	7c a3       	std	Y+36, r23	; 0x24
    33b0:	8d a3       	std	Y+37, r24	; 0x25
    33b2:	9e a3       	std	Y+38, r25	; 0x26
    33b4:	23 ee       	ldi	r18, 0xE3	; 227
    33b6:	35 ea       	ldi	r19, 0xA5	; 165
    33b8:	4b e5       	ldi	r20, 0x5B	; 91
    33ba:	5f e3       	ldi	r21, 0x3F	; 63
    33bc:	6b a1       	ldd	r22, Y+35	; 0x23
    33be:	7c a1       	ldd	r23, Y+36	; 0x24
    33c0:	8d a1       	ldd	r24, Y+37	; 0x25
    33c2:	9e a1       	ldd	r25, Y+38	; 0x26
    33c4:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    33c8:	6f 96       	adiw	r28, 0x1f	; 31
    33ca:	6c af       	std	Y+60, r22	; 0x3c
    33cc:	7d af       	std	Y+61, r23	; 0x3d
    33ce:	8e af       	std	Y+62, r24	; 0x3e
    33d0:	9f af       	std	Y+63, r25	; 0x3f
    33d2:	6f 97       	sbiw	r28, 0x1f	; 31
    33d4:	6f 96       	adiw	r28, 0x1f	; 31
    33d6:	8c ad       	ldd	r24, Y+60	; 0x3c
    33d8:	9d ad       	ldd	r25, Y+61	; 0x3d
    33da:	ae ad       	ldd	r26, Y+62	; 0x3e
    33dc:	bf ad       	ldd	r27, Y+63	; 0x3f
    33de:	6f 97       	sbiw	r28, 0x1f	; 31
    33e0:	8f a3       	std	Y+39, r24	; 0x27
    33e2:	98 a7       	std	Y+40, r25	; 0x28
    33e4:	a9 a7       	std	Y+41, r26	; 0x29
    33e6:	ba a7       	std	Y+42, r27	; 0x2a

000033e8 <.Loc.283>:
    33e8:	20 e0       	ldi	r18, 0x00	; 0
    33ea:	30 e0       	ldi	r19, 0x00	; 0
    33ec:	40 ea       	ldi	r20, 0xA0	; 160
    33ee:	51 e4       	ldi	r21, 0x41	; 65
    33f0:	6f a1       	ldd	r22, Y+39	; 0x27
    33f2:	78 a5       	ldd	r23, Y+40	; 0x28
    33f4:	89 a5       	ldd	r24, Y+41	; 0x29
    33f6:	9a a5       	ldd	r25, Y+42	; 0x2a
    33f8:	0e 94 b1 1e 	call	0x3d62	; 0x3d62 <__subsf3>
    33fc:	a3 96       	adiw	r28, 0x23	; 35
    33fe:	6c af       	std	Y+60, r22	; 0x3c
    3400:	7d af       	std	Y+61, r23	; 0x3d
    3402:	8e af       	std	Y+62, r24	; 0x3e
    3404:	9f af       	std	Y+63, r25	; 0x3f
    3406:	a3 97       	sbiw	r28, 0x23	; 35
    3408:	a3 96       	adiw	r28, 0x23	; 35
    340a:	2c ad       	ldd	r18, Y+60	; 0x3c
    340c:	3d ad       	ldd	r19, Y+61	; 0x3d
    340e:	4e ad       	ldd	r20, Y+62	; 0x3e
    3410:	5f ad       	ldd	r21, Y+63	; 0x3f
    3412:	a3 97       	sbiw	r28, 0x23	; 35
    3414:	2b a7       	std	Y+43, r18	; 0x2b
    3416:	3c a7       	std	Y+44, r19	; 0x2c
    3418:	4d a7       	std	Y+45, r20	; 0x2d
    341a:	5e a7       	std	Y+46, r21	; 0x2e

0000341c <.Loc.284>:
    341c:	6b a5       	ldd	r22, Y+43	; 0x2b
    341e:	7c a5       	ldd	r23, Y+44	; 0x2c
    3420:	8d a5       	ldd	r24, Y+45	; 0x2d
    3422:	9e a5       	ldd	r25, Y+46	; 0x2e
    3424:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__fixsfsi>
    3428:	a7 96       	adiw	r28, 0x27	; 39
    342a:	6c af       	std	Y+60, r22	; 0x3c
    342c:	7d af       	std	Y+61, r23	; 0x3d
    342e:	8e af       	std	Y+62, r24	; 0x3e
    3430:	9f af       	std	Y+63, r25	; 0x3f
    3432:	a7 97       	sbiw	r28, 0x27	; 39
    3434:	a5 96       	adiw	r28, 0x25	; 37
    3436:	8e ad       	ldd	r24, Y+62	; 0x3e
    3438:	9f ad       	ldd	r25, Y+63	; 0x3f
    343a:	a5 97       	sbiw	r28, 0x25	; 37
    343c:	90 93 41 02 	sts	0x0241, r25	; 0x800241 <afstand+0x1>
    3440:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <afstand>

00003444 <.Loc.285>:
    	if (afstand < 0 ) afstand = 0;
    3444:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <afstand>
    3448:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <afstand+0x1>

0000344c <.Loc.286>:
    344c:	99 23       	and	r25, r25
    344e:	24 f4       	brge	.+8      	; 0x3458 <.L88>

00003450 <.Loc.287>:
    3450:	10 92 41 02 	sts	0x0241, r1	; 0x800241 <afstand+0x1>
    3454:	10 92 40 02 	sts	0x0240, r1	; 0x800240 <afstand>

00003458 <.L88>:
       return afstand;
    3458:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <afstand>
    345c:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <afstand+0x1>

00003460 <.L69>:
}
    3460:	ca 59       	subi	r28, 0x9A	; 154
    3462:	df 4f       	sbci	r29, 0xFF	; 255
    3464:	0f b6       	in	r0, 0x3f	; 63
    3466:	f8 94       	cli
    3468:	de bf       	out	0x3e, r29	; 62
    346a:	0f be       	out	0x3f, r0	; 63
    346c:	cd bf       	out	0x3d, r28	; 61
    346e:	df 91       	pop	r29
    3470:	cf 91       	pop	r28
    3472:	08 95       	ret

00003474 <rrichting>:


// Rijd Functies:
void rrichting(int richting){
    3474:	cf 93       	push	r28
    3476:	df 93       	push	r29
    3478:	0f 92       	push	r0
    347a:	0f 92       	push	r0
    347c:	cd b7       	in	r28, 0x3d	; 61
    347e:	de b7       	in	r29, 0x3e	; 62
    3480:	9a 83       	std	Y+2, r25	; 0x02
    3482:	89 83       	std	Y+1, r24	; 0x01

00003484 <.Loc.291>:
    if (richting){
    3484:	89 81       	ldd	r24, Y+1	; 0x01
    3486:	9a 81       	ldd	r25, Y+2	; 0x02
    3488:	00 97       	sbiw	r24, 0x00	; 0
    348a:	99 f0       	breq	.+38     	; 0x34b2 <.L100>

0000348c <.Loc.292>:
        TCCR1A &= ~(1<<COM1A1); //zet vooruit uit
    348c:	80 e8       	ldi	r24, 0x80	; 128
    348e:	90 e0       	ldi	r25, 0x00	; 0
    3490:	fc 01       	movw	r30, r24
    3492:	20 81       	ld	r18, Z

00003494 <.Loc.293>:
    3494:	80 e8       	ldi	r24, 0x80	; 128
    3496:	90 e0       	ldi	r25, 0x00	; 0

00003498 <.Loc.294>:
    3498:	2f 77       	andi	r18, 0x7F	; 127
    349a:	fc 01       	movw	r30, r24
    349c:	20 83       	st	Z, r18

0000349e <.Loc.295>:
        TCCR1A |= (1<<COM1B1); //zet achteruit aan
    349e:	80 e8       	ldi	r24, 0x80	; 128
    34a0:	90 e0       	ldi	r25, 0x00	; 0
    34a2:	fc 01       	movw	r30, r24
    34a4:	20 81       	ld	r18, Z
    34a6:	80 e8       	ldi	r24, 0x80	; 128
    34a8:	90 e0       	ldi	r25, 0x00	; 0

000034aa <.Loc.296>:
    34aa:	20 62       	ori	r18, 0x20	; 32
    34ac:	fc 01       	movw	r30, r24
    34ae:	20 83       	st	Z, r18

000034b0 <.Loc.297>:
    }
    else{
        TCCR1A &= ~(1<<COM1B1); //achteruit uit
        TCCR1A |= (1<<COM1A1); //vooruit aan
    }
}
    34b0:	12 c0       	rjmp	.+36     	; 0x34d6 <.L102>

000034b2 <.L100>:
        TCCR1A &= ~(1<<COM1B1); //achteruit uit
    34b2:	80 e8       	ldi	r24, 0x80	; 128
    34b4:	90 e0       	ldi	r25, 0x00	; 0
    34b6:	fc 01       	movw	r30, r24
    34b8:	20 81       	ld	r18, Z

000034ba <.Loc.299>:
    34ba:	80 e8       	ldi	r24, 0x80	; 128
    34bc:	90 e0       	ldi	r25, 0x00	; 0

000034be <.Loc.300>:
    34be:	2f 7d       	andi	r18, 0xDF	; 223
    34c0:	fc 01       	movw	r30, r24
    34c2:	20 83       	st	Z, r18

000034c4 <.Loc.301>:
        TCCR1A |= (1<<COM1A1); //vooruit aan
    34c4:	80 e8       	ldi	r24, 0x80	; 128
    34c6:	90 e0       	ldi	r25, 0x00	; 0
    34c8:	fc 01       	movw	r30, r24
    34ca:	20 81       	ld	r18, Z
    34cc:	80 e8       	ldi	r24, 0x80	; 128
    34ce:	90 e0       	ldi	r25, 0x00	; 0

000034d0 <.Loc.302>:
    34d0:	20 68       	ori	r18, 0x80	; 128
    34d2:	fc 01       	movw	r30, r24
    34d4:	20 83       	st	Z, r18

000034d6 <.L102>:
}
    34d6:	00 00       	nop
    34d8:	0f 90       	pop	r0
    34da:	0f 90       	pop	r0
    34dc:	df 91       	pop	r29
    34de:	cf 91       	pop	r28
    34e0:	08 95       	ret

000034e2 <lrichting>:

void lrichting(int richting){
    34e2:	cf 93       	push	r28
    34e4:	df 93       	push	r29
    34e6:	0f 92       	push	r0
    34e8:	0f 92       	push	r0
    34ea:	cd b7       	in	r28, 0x3d	; 61
    34ec:	de b7       	in	r29, 0x3e	; 62
    34ee:	9a 83       	std	Y+2, r25	; 0x02
    34f0:	89 83       	std	Y+1, r24	; 0x01

000034f2 <.Loc.305>:
    if (richting){
    34f2:	89 81       	ldd	r24, Y+1	; 0x01
    34f4:	9a 81       	ldd	r25, Y+2	; 0x02
    34f6:	00 97       	sbiw	r24, 0x00	; 0
    34f8:	99 f0       	breq	.+38     	; 0x3520 <.L104>

000034fa <.Loc.306>:
            TCCR4A &= ~(1<<COM4B1); //achteruit uit
    34fa:	80 ea       	ldi	r24, 0xA0	; 160
    34fc:	90 e0       	ldi	r25, 0x00	; 0
    34fe:	fc 01       	movw	r30, r24
    3500:	20 81       	ld	r18, Z

00003502 <.Loc.307>:
    3502:	80 ea       	ldi	r24, 0xA0	; 160
    3504:	90 e0       	ldi	r25, 0x00	; 0

00003506 <.Loc.308>:
    3506:	2f 7d       	andi	r18, 0xDF	; 223
    3508:	fc 01       	movw	r30, r24
    350a:	20 83       	st	Z, r18

0000350c <.Loc.309>:
            TCCR4A |= (1<<COM4A1); //vooruit aan
    350c:	80 ea       	ldi	r24, 0xA0	; 160
    350e:	90 e0       	ldi	r25, 0x00	; 0
    3510:	fc 01       	movw	r30, r24
    3512:	20 81       	ld	r18, Z
    3514:	80 ea       	ldi	r24, 0xA0	; 160
    3516:	90 e0       	ldi	r25, 0x00	; 0

00003518 <.Loc.310>:
    3518:	20 68       	ori	r18, 0x80	; 128
    351a:	fc 01       	movw	r30, r24
    351c:	20 83       	st	Z, r18

0000351e <.Loc.311>:
    }
    else{
        TCCR4A &= ~(1<<COM4A1); //zet vooruit uit
        TCCR4A |= (1<<COM4B1); //zet achteruit aan
    }
}
    351e:	12 c0       	rjmp	.+36     	; 0x3544 <.L106>

00003520 <.L104>:
        TCCR4A &= ~(1<<COM4A1); //zet vooruit uit
    3520:	80 ea       	ldi	r24, 0xA0	; 160
    3522:	90 e0       	ldi	r25, 0x00	; 0
    3524:	fc 01       	movw	r30, r24
    3526:	20 81       	ld	r18, Z

00003528 <.Loc.313>:
    3528:	80 ea       	ldi	r24, 0xA0	; 160
    352a:	90 e0       	ldi	r25, 0x00	; 0

0000352c <.Loc.314>:
    352c:	2f 77       	andi	r18, 0x7F	; 127
    352e:	fc 01       	movw	r30, r24
    3530:	20 83       	st	Z, r18

00003532 <.Loc.315>:
        TCCR4A |= (1<<COM4B1); //zet achteruit aan
    3532:	80 ea       	ldi	r24, 0xA0	; 160
    3534:	90 e0       	ldi	r25, 0x00	; 0
    3536:	fc 01       	movw	r30, r24
    3538:	20 81       	ld	r18, Z
    353a:	80 ea       	ldi	r24, 0xA0	; 160
    353c:	90 e0       	ldi	r25, 0x00	; 0

0000353e <.Loc.316>:
    353e:	20 62       	ori	r18, 0x20	; 32
    3540:	fc 01       	movw	r30, r24
    3542:	20 83       	st	Z, r18

00003544 <.L106>:
}
    3544:	00 00       	nop
    3546:	0f 90       	pop	r0
    3548:	0f 90       	pop	r0
    354a:	df 91       	pop	r29
    354c:	cf 91       	pop	r28
    354e:	08 95       	ret

00003550 <lsnelheid>:


// Snelheid = 21 voor Aan
void lsnelheid(int snelheid){
    3550:	cf 93       	push	r28
    3552:	df 93       	push	r29
    3554:	0f 92       	push	r0
    3556:	0f 92       	push	r0
    3558:	cd b7       	in	r28, 0x3d	; 61
    355a:	de b7       	in	r29, 0x3e	; 62
    355c:	9a 83       	std	Y+2, r25	; 0x02
    355e:	89 83       	std	Y+1, r24	; 0x01

00003560 <.Loc.319>:
    OCR4A = snelheid;
    3560:	88 ea       	ldi	r24, 0xA8	; 168
    3562:	90 e0       	ldi	r25, 0x00	; 0

00003564 <.Loc.320>:
    3564:	29 81       	ldd	r18, Y+1	; 0x01
    3566:	3a 81       	ldd	r19, Y+2	; 0x02
    3568:	fc 01       	movw	r30, r24
    356a:	31 83       	std	Z+1, r19	; 0x01
    356c:	20 83       	st	Z, r18

0000356e <.Loc.321>:
    OCR4B = snelheid;
    356e:	8a ea       	ldi	r24, 0xAA	; 170
    3570:	90 e0       	ldi	r25, 0x00	; 0

00003572 <.Loc.322>:
    3572:	29 81       	ldd	r18, Y+1	; 0x01
    3574:	3a 81       	ldd	r19, Y+2	; 0x02
    3576:	fc 01       	movw	r30, r24
    3578:	31 83       	std	Z+1, r19	; 0x01
    357a:	20 83       	st	Z, r18

0000357c <.Loc.323>:
}
    357c:	00 00       	nop
    357e:	0f 90       	pop	r0
    3580:	0f 90       	pop	r0
    3582:	df 91       	pop	r29
    3584:	cf 91       	pop	r28
    3586:	08 95       	ret

00003588 <rsnelheid>:

// Snelheid = 20 voor Aan
void rsnelheid(int snelheid){
    3588:	cf 93       	push	r28
    358a:	df 93       	push	r29
    358c:	0f 92       	push	r0
    358e:	0f 92       	push	r0
    3590:	cd b7       	in	r28, 0x3d	; 61
    3592:	de b7       	in	r29, 0x3e	; 62
    3594:	9a 83       	std	Y+2, r25	; 0x02
    3596:	89 83       	std	Y+1, r24	; 0x01

00003598 <.Loc.325>:
    OCR1A = snelheid;
    3598:	88 e8       	ldi	r24, 0x88	; 136
    359a:	90 e0       	ldi	r25, 0x00	; 0

0000359c <.Loc.326>:
    359c:	29 81       	ldd	r18, Y+1	; 0x01
    359e:	3a 81       	ldd	r19, Y+2	; 0x02
    35a0:	fc 01       	movw	r30, r24
    35a2:	31 83       	std	Z+1, r19	; 0x01
    35a4:	20 83       	st	Z, r18

000035a6 <.Loc.327>:
    OCR1B = snelheid;
    35a6:	8a e8       	ldi	r24, 0x8A	; 138
    35a8:	90 e0       	ldi	r25, 0x00	; 0

000035aa <.Loc.328>:
    35aa:	29 81       	ldd	r18, Y+1	; 0x01
    35ac:	3a 81       	ldd	r19, Y+2	; 0x02
    35ae:	fc 01       	movw	r30, r24
    35b0:	31 83       	std	Z+1, r19	; 0x01
    35b2:	20 83       	st	Z, r18

000035b4 <.Loc.329>:
}
    35b4:	00 00       	nop
    35b6:	0f 90       	pop	r0
    35b8:	0f 90       	pop	r0
    35ba:	df 91       	pop	r29
    35bc:	cf 91       	pop	r28
    35be:	08 95       	ret

000035c0 <__vector_41>:



// Interrupts:
ISR(TIMER4_CAPT_vect){
    35c0:	1f 92       	push	r1
    35c2:	0f 92       	push	r0
    35c4:	0f b6       	in	r0, 0x3f	; 63
    35c6:	0f 92       	push	r0
    35c8:	11 24       	eor	r1, r1
    35ca:	0b b6       	in	r0, 0x3b	; 59
    35cc:	0f 92       	push	r0
    35ce:	2f 93       	push	r18
    35d0:	8f 93       	push	r24
    35d2:	9f 93       	push	r25
    35d4:	ef 93       	push	r30
    35d6:	ff 93       	push	r31
    35d8:	cf 93       	push	r28
    35da:	df 93       	push	r29
    35dc:	cd b7       	in	r28, 0x3d	; 61
    35de:	de b7       	in	r29, 0x3e	; 62

000035e0 <.Loc.331>:
	if (flag == 0)  //rising edge
    35e0:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <flag>
    35e4:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <flag+0x1>

000035e8 <.Loc.332>:
    35e8:	00 97       	sbiw	r24, 0x00	; 0
    35ea:	b9 f4       	brne	.+46     	; 0x361a <.L110>

000035ec <.Loc.333>:
	{
		re = ICR4; //save rise fall edge time to input capture register
    35ec:	86 ea       	ldi	r24, 0xA6	; 166
    35ee:	90 e0       	ldi	r25, 0x00	; 0
    35f0:	fc 01       	movw	r30, r24
    35f2:	80 81       	ld	r24, Z
    35f4:	91 81       	ldd	r25, Z+1	; 0x01

000035f6 <.Loc.334>:
    35f6:	90 93 45 02 	sts	0x0245, r25	; 0x800245 <re+0x1>
    35fa:	80 93 44 02 	sts	0x0244, r24	; 0x800244 <re>

000035fe <.Loc.335>:
		TCCR4B &= ~(1<<ICES4); //change input capture edge select on falling edge
    35fe:	81 ea       	ldi	r24, 0xA1	; 161
    3600:	90 e0       	ldi	r25, 0x00	; 0
    3602:	fc 01       	movw	r30, r24
    3604:	20 81       	ld	r18, Z

00003606 <.Loc.336>:
    3606:	81 ea       	ldi	r24, 0xA1	; 161
    3608:	90 e0       	ldi	r25, 0x00	; 0

0000360a <.Loc.337>:
    360a:	2f 7b       	andi	r18, 0xBF	; 191
    360c:	fc 01       	movw	r30, r24
    360e:	20 83       	st	Z, r18

00003610 <.Loc.338>:
		TCNT4 = 0;
    3610:	84 ea       	ldi	r24, 0xA4	; 164
    3612:	90 e0       	ldi	r25, 0x00	; 0

00003614 <.Loc.339>:
    3614:	fc 01       	movw	r30, r24
    3616:	11 82       	std	Z+1, r1	; 0x01
    3618:	10 82       	st	Z, r1

0000361a <.L110>:
	}
	if (flag == 1) //falling edge
    361a:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <flag>
    361e:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <flag+0x1>

00003622 <.Loc.341>:
    3622:	81 30       	cpi	r24, 0x01	; 1
    3624:	91 05       	cpc	r25, r1
    3626:	49 f5       	brne	.+82     	; 0x367a <.L111>

00003628 <.Loc.342>:
	{
		fe = ICR4; //save fall edge time to input capture register
    3628:	86 ea       	ldi	r24, 0xA6	; 166
    362a:	90 e0       	ldi	r25, 0x00	; 0
    362c:	fc 01       	movw	r30, r24
    362e:	80 81       	ld	r24, Z
    3630:	91 81       	ldd	r25, Z+1	; 0x01

00003632 <.Loc.343>:
    3632:	90 93 43 02 	sts	0x0243, r25	; 0x800243 <fe+0x1>
    3636:	80 93 42 02 	sts	0x0242, r24	; 0x800242 <fe>

0000363a <.Loc.344>:
        TCCR4B |= (1<<ICES4); //change input capture edge select on rising edge
    363a:	81 ea       	ldi	r24, 0xA1	; 161
    363c:	90 e0       	ldi	r25, 0x00	; 0
    363e:	fc 01       	movw	r30, r24
    3640:	20 81       	ld	r18, Z
    3642:	81 ea       	ldi	r24, 0xA1	; 161
    3644:	90 e0       	ldi	r25, 0x00	; 0

00003646 <.Loc.345>:
    3646:	20 64       	ori	r18, 0x40	; 64
    3648:	fc 01       	movw	r30, r24
    364a:	20 83       	st	Z, r18

0000364c <.Loc.346>:
		TIMSK4 &= ~(1<<ICIE4); //disable input capture interrupt
    364c:	82 e7       	ldi	r24, 0x72	; 114
    364e:	90 e0       	ldi	r25, 0x00	; 0
    3650:	fc 01       	movw	r30, r24
    3652:	20 81       	ld	r18, Z

00003654 <.Loc.347>:
    3654:	82 e7       	ldi	r24, 0x72	; 114
    3656:	90 e0       	ldi	r25, 0x00	; 0

00003658 <.Loc.348>:
    3658:	2f 7d       	andi	r18, 0xDF	; 223
    365a:	fc 01       	movw	r30, r24
    365c:	20 83       	st	Z, r18

0000365e <.Loc.349>:
		TCCR4B &= ~(1<<CS40); //stop de timer
    365e:	81 ea       	ldi	r24, 0xA1	; 161
    3660:	90 e0       	ldi	r25, 0x00	; 0
    3662:	fc 01       	movw	r30, r24
    3664:	20 81       	ld	r18, Z

00003666 <.Loc.350>:
    3666:	81 ea       	ldi	r24, 0xA1	; 161
    3668:	90 e0       	ldi	r25, 0x00	; 0

0000366a <.Loc.351>:
    366a:	2e 7f       	andi	r18, 0xFE	; 254
    366c:	fc 01       	movw	r30, r24
    366e:	20 83       	st	Z, r18

00003670 <.Loc.352>:
		TCNT1 = 0;
    3670:	84 e8       	ldi	r24, 0x84	; 132
    3672:	90 e0       	ldi	r25, 0x00	; 0

00003674 <.Loc.353>:
    3674:	fc 01       	movw	r30, r24
    3676:	11 82       	std	Z+1, r1	; 0x01
    3678:	10 82       	st	Z, r1

0000367a <.L111>:
	}
	flag ++; //increment flag
    367a:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <flag>
    367e:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <flag+0x1>
    3682:	01 96       	adiw	r24, 0x01	; 1
    3684:	90 93 3f 02 	sts	0x023F, r25	; 0x80023f <flag+0x1>
    3688:	80 93 3e 02 	sts	0x023E, r24	; 0x80023e <flag>

0000368c <.Loc.355>:
}
    368c:	00 00       	nop
    368e:	df 91       	pop	r29
    3690:	cf 91       	pop	r28
    3692:	ff 91       	pop	r31
    3694:	ef 91       	pop	r30
    3696:	9f 91       	pop	r25
    3698:	8f 91       	pop	r24
    369a:	2f 91       	pop	r18
    369c:	0f 90       	pop	r0
    369e:	0b be       	out	0x3b, r0	; 59
    36a0:	0f 90       	pop	r0
    36a2:	0f be       	out	0x3f, r0	; 63
    36a4:	0f 90       	pop	r0
    36a6:	1f 90       	pop	r1
    36a8:	18 95       	reti

000036aa <__vector_45>:

ISR(TIMER4_OVF_vect){
    36aa:	1f 92       	push	r1
    36ac:	0f 92       	push	r0
    36ae:	0f b6       	in	r0, 0x3f	; 63
    36b0:	0f 92       	push	r0
    36b2:	11 24       	eor	r1, r1
    36b4:	0b b6       	in	r0, 0x3b	; 59
    36b6:	0f 92       	push	r0
    36b8:	2f 93       	push	r18
    36ba:	8f 93       	push	r24
    36bc:	9f 93       	push	r25
    36be:	ef 93       	push	r30
    36c0:	ff 93       	push	r31
    36c2:	cf 93       	push	r28
    36c4:	df 93       	push	r29
    36c6:	cd b7       	in	r28, 0x3d	; 61
    36c8:	de b7       	in	r29, 0x3e	; 62

000036ca <.Loc.357>:
    flag = 3;
    36ca:	83 e0       	ldi	r24, 0x03	; 3
    36cc:	90 e0       	ldi	r25, 0x00	; 0
    36ce:	90 93 3f 02 	sts	0x023F, r25	; 0x80023f <flag+0x1>
    36d2:	80 93 3e 02 	sts	0x023E, r24	; 0x80023e <flag>

000036d6 <.Loc.358>:
    fe = 0;
    36d6:	10 92 43 02 	sts	0x0243, r1	; 0x800243 <fe+0x1>
    36da:	10 92 42 02 	sts	0x0242, r1	; 0x800242 <fe>

000036de <.Loc.359>:
    re = 0;
    36de:	10 92 45 02 	sts	0x0245, r1	; 0x800245 <re+0x1>
    36e2:	10 92 44 02 	sts	0x0244, r1	; 0x800244 <re>

000036e6 <.Loc.360>:
    TCCR4B |= (1<<ICES4); //change input capture edge select on rising edge
    36e6:	81 ea       	ldi	r24, 0xA1	; 161
    36e8:	90 e0       	ldi	r25, 0x00	; 0
    36ea:	fc 01       	movw	r30, r24
    36ec:	20 81       	ld	r18, Z
    36ee:	81 ea       	ldi	r24, 0xA1	; 161
    36f0:	90 e0       	ldi	r25, 0x00	; 0

000036f2 <.Loc.361>:
    36f2:	20 64       	ori	r18, 0x40	; 64
    36f4:	fc 01       	movw	r30, r24
    36f6:	20 83       	st	Z, r18

000036f8 <.Loc.362>:
    TIMSK4 &= ~(1<<ICIE4); //disable input capture interrupt
    36f8:	82 e7       	ldi	r24, 0x72	; 114
    36fa:	90 e0       	ldi	r25, 0x00	; 0
    36fc:	fc 01       	movw	r30, r24
    36fe:	20 81       	ld	r18, Z

00003700 <.Loc.363>:
    3700:	82 e7       	ldi	r24, 0x72	; 114
    3702:	90 e0       	ldi	r25, 0x00	; 0

00003704 <.Loc.364>:
    3704:	2f 7d       	andi	r18, 0xDF	; 223
    3706:	fc 01       	movw	r30, r24
    3708:	20 83       	st	Z, r18

0000370a <.Loc.365>:
    TCCR4B &= ~(1<<CS40); //stop de timer
    370a:	81 ea       	ldi	r24, 0xA1	; 161
    370c:	90 e0       	ldi	r25, 0x00	; 0
    370e:	fc 01       	movw	r30, r24
    3710:	20 81       	ld	r18, Z

00003712 <.Loc.366>:
    3712:	81 ea       	ldi	r24, 0xA1	; 161
    3714:	90 e0       	ldi	r25, 0x00	; 0

00003716 <.Loc.367>:
    3716:	2e 7f       	andi	r18, 0xFE	; 254
    3718:	fc 01       	movw	r30, r24
    371a:	20 83       	st	Z, r18

0000371c <.Loc.368>:
    TCNT1 = 0;
    371c:	84 e8       	ldi	r24, 0x84	; 132
    371e:	90 e0       	ldi	r25, 0x00	; 0

00003720 <.Loc.369>:
    3720:	fc 01       	movw	r30, r24
    3722:	11 82       	std	Z+1, r1	; 0x01
    3724:	10 82       	st	Z, r1

00003726 <.Loc.370>:
}
    3726:	00 00       	nop
    3728:	df 91       	pop	r29
    372a:	cf 91       	pop	r28
    372c:	ff 91       	pop	r31
    372e:	ef 91       	pop	r30
    3730:	9f 91       	pop	r25
    3732:	8f 91       	pop	r24
    3734:	2f 91       	pop	r18
    3736:	0f 90       	pop	r0
    3738:	0b be       	out	0x3b, r0	; 59
    373a:	0f 90       	pop	r0
    373c:	0f be       	out	0x3f, r0	; 63
    373e:	0f 90       	pop	r0
    3740:	1f 90       	pop	r1
    3742:	18 95       	reti

00003744 <main>:




// Main Functie
int main(void){
    3744:	cf 93       	push	r28
    3746:	df 93       	push	r29
    3748:	cd b7       	in	r28, 0x3d	; 61
    374a:	de b7       	in	r29, 0x3e	; 62
    374c:	ca 54       	subi	r28, 0x4A	; 74
    374e:	d1 09       	sbc	r29, r1
    3750:	0f b6       	in	r0, 0x3f	; 63
    3752:	f8 94       	cli
    3754:	de bf       	out	0x3e, r29	; 62
    3756:	0f be       	out	0x3f, r0	; 63
    3758:	cd bf       	out	0x3d, r28	; 61

0000375a <.Loc.372>:
    init();
    375a:	0e 94 bd 14 	call	0x297a	; 0x297a <init>

0000375e <.Loc.373>:
    enum states {Rechtdoorrijden, DraaienR, DraaienL, Volgen, Noodstop, Uit, BoomSignaleren};
    int state;
    state = Uit;
    375e:	85 e0       	ldi	r24, 0x05	; 5
    3760:	90 e0       	ldi	r25, 0x00	; 0
    3762:	9a 83       	std	Y+2, r25	; 0x02
    3764:	89 83       	std	Y+1, r24	; 0x01

00003766 <.L162>:
    while(1){
    switch (state){
    3766:	89 81       	ldd	r24, Y+1	; 0x01
    3768:	9a 81       	ldd	r25, Y+2	; 0x02
    376a:	09 2e       	mov	r0, r25
    376c:	00 0c       	add	r0, r0
    376e:	aa 0b       	sbc	r26, r26
    3770:	bb 0b       	sbc	r27, r27
    3772:	86 30       	cpi	r24, 0x06	; 6
    3774:	91 05       	cpc	r25, r1
    3776:	a1 05       	cpc	r26, r1
    3778:	b1 05       	cpc	r27, r1
    377a:	09 f0       	breq	.+2      	; 0x377e <L0^A+0x2>

0000377c <L0^A>:
    377c:	a0 f7       	brcc	.-24     	; 0x3766 <.L162>
    377e:	fc 01       	movw	r30, r24
    3780:	88 27       	eor	r24, r24
    3782:	ef 5b       	subi	r30, 0xBF	; 191
    3784:	fb 4d       	sbci	r31, 0xDB	; 219
    3786:	8f 4f       	sbci	r24, 0xFF	; 255
    3788:	0c 94 a9 1e 	jmp	0x3d52	; 0x3d52 <__tablejump2__>

0000378c <.L118>:
        case Noodstop:
            onled(0);
    378c:	80 e0       	ldi	r24, 0x00	; 0
    378e:	90 e0       	ldi	r25, 0x00	; 0
    3790:	0e 94 76 16 	call	0x2cec	; 0x2cec <onled>

00003794 <.Loc.376>:
            noodstopled(1);
    3794:	81 e0       	ldi	r24, 0x01	; 1
    3796:	90 e0       	ldi	r25, 0x00	; 0
    3798:	0e 94 9b 16 	call	0x2d36	; 0x2d36 <noodstopled>

0000379c <.Loc.377>:


            // Snelheid uitzetten
            rsnelheid(0);
    379c:	80 e0       	ldi	r24, 0x00	; 0
    379e:	90 e0       	ldi	r25, 0x00	; 0
    37a0:	0e 94 c4 1a 	call	0x3588	; 0x3588 <rsnelheid>

000037a4 <.Loc.378>:
            lsnelheid(0);
    37a4:	80 e0       	ldi	r24, 0x00	; 0
    37a6:	90 e0       	ldi	r25, 0x00	; 0
    37a8:	0e 94 a8 1a 	call	0x3550	; 0x3550 <lsnelheid>

000037ac <.Loc.379>:


            rrichting(0);
    37ac:	80 e0       	ldi	r24, 0x00	; 0
    37ae:	90 e0       	ldi	r25, 0x00	; 0
    37b0:	0e 94 3a 1a 	call	0x3474	; 0x3474 <rrichting>

000037b4 <.Loc.380>:
            lrichting(0);
    37b4:	80 e0       	ldi	r24, 0x00	; 0
    37b6:	90 e0       	ldi	r25, 0x00	; 0
    37b8:	0e 94 71 1a 	call	0x34e2	; 0x34e2 <lrichting>

000037bc <.Loc.381>:


            break;
    37bc:	c9 c2       	rjmp	.+1426   	; 0x3d50 <.L114>

000037be <.L122>:

        case Rechtdoorrijden:
            onled(1);
    37be:	81 e0       	ldi	r24, 0x01	; 1
    37c0:	90 e0       	ldi	r25, 0x00	; 0
    37c2:	0e 94 76 16 	call	0x2cec	; 0x2cec <onled>

000037c6 <.Loc.383>:

            // Laten rijden
            rsnelheid(20);
    37c6:	84 e1       	ldi	r24, 0x14	; 20
    37c8:	90 e0       	ldi	r25, 0x00	; 0
    37ca:	0e 94 c4 1a 	call	0x3588	; 0x3588 <rsnelheid>

000037ce <.Loc.384>:
            lsnelheid(21);
    37ce:	85 e1       	ldi	r24, 0x15	; 21
    37d0:	90 e0       	ldi	r25, 0x00	; 0
    37d2:	0e 94 a8 1a 	call	0x3550	; 0x3550 <lsnelheid>

000037d6 <.Loc.385>:

            // 1 zodat die vooruit rijdt
            rrichting(1);
    37d6:	81 e0       	ldi	r24, 0x01	; 1
    37d8:	90 e0       	ldi	r25, 0x00	; 0
    37da:	0e 94 3a 1a 	call	0x3474	; 0x3474 <rrichting>

000037de <.Loc.386>:
            lrichting(1);
    37de:	81 e0       	ldi	r24, 0x01	; 1
    37e0:	90 e0       	ldi	r25, 0x00	; 0
    37e2:	0e 94 71 1a 	call	0x34e2	; 0x34e2 <lrichting>

000037e6 <.Loc.387>:


            if(leestnoodstopuit()){
    37e6:	0e 94 e5 16 	call	0x2dca	; 0x2dca <leestnoodstopuit>

000037ea <.Loc.388>:
    37ea:	00 97       	sbiw	r24, 0x00	; 0
    37ec:	29 f0       	breq	.+10     	; 0x37f8 <.L123>

000037ee <.Loc.389>:
                    state = Noodstop;
    37ee:	84 e0       	ldi	r24, 0x04	; 4
    37f0:	90 e0       	ldi	r25, 0x00	; 0
    37f2:	9a 83       	std	Y+2, r25	; 0x02
    37f4:	89 83       	std	Y+1, r24	; 0x01

000037f6 <.Loc.390>:
                    break;
    37f6:	ac c2       	rjmp	.+1368   	; 0x3d50 <.L114>

000037f8 <.L123>:
            }
            if((leestaanknopuit()) && (aan_Onthouden == 1)){
    37f8:	0e 94 06 17 	call	0x2e0c	; 0x2e0c <leestaanknopuit>

000037fc <.Loc.392>:
    37fc:	00 97       	sbiw	r24, 0x00	; 0
    37fe:	81 f0       	breq	.+32     	; 0x3820 <.L124>

00003800 <.Loc.393>:
    3800:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <aan_Onthouden>
    3804:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <aan_Onthouden+0x1>

00003808 <.Loc.394>:
    3808:	81 30       	cpi	r24, 0x01	; 1
    380a:	91 05       	cpc	r25, r1
    380c:	49 f4       	brne	.+18     	; 0x3820 <.L124>

0000380e <.Loc.395>:
                    aan_Onthouden = 0;
    380e:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <aan_Onthouden+0x1>
    3812:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <aan_Onthouden>

00003816 <.Loc.396>:
                    state = Uit;
    3816:	85 e0       	ldi	r24, 0x05	; 5
    3818:	90 e0       	ldi	r25, 0x00	; 0
    381a:	9a 83       	std	Y+2, r25	; 0x02
    381c:	89 83       	std	Y+1, r24	; 0x01

0000381e <.Loc.397>:
                    break;
    381e:	98 c2       	rjmp	.+1328   	; 0x3d50 <.L114>

00003820 <.L124>:
            }

            if((detecteerboomlinks()) && (!boomL_Gezien)){
    3820:	0e 94 48 17 	call	0x2e90	; 0x2e90 <detecteerboomlinks>

00003824 <.Loc.399>:
    3824:	00 97       	sbiw	r24, 0x00	; 0
    3826:	89 f0       	breq	.+34     	; 0x384a <.L125>

00003828 <.Loc.400>:
    3828:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <boomL_Gezien>
    382c:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <boomL_Gezien+0x1>

00003830 <.Loc.401>:
    3830:	00 97       	sbiw	r24, 0x00	; 0
    3832:	59 f4       	brne	.+22     	; 0x384a <.L125>

00003834 <.Loc.402>:
                boomL_Gezien = 1;
    3834:	81 e0       	ldi	r24, 0x01	; 1
    3836:	90 e0       	ldi	r25, 0x00	; 0
    3838:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <boomL_Gezien+0x1>
    383c:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <boomL_Gezien>

00003840 <.Loc.403>:
                state = BoomSignaleren;
    3840:	86 e0       	ldi	r24, 0x06	; 6
    3842:	90 e0       	ldi	r25, 0x00	; 0
    3844:	9a 83       	std	Y+2, r25	; 0x02
    3846:	89 83       	std	Y+1, r24	; 0x01

00003848 <.Loc.404>:
                break;
    3848:	83 c2       	rjmp	.+1286   	; 0x3d50 <.L114>

0000384a <.L125>:
            }
            else if((!detecteerboomlinks()) && (boomL_Gezien)){
    384a:	0e 94 48 17 	call	0x2e90	; 0x2e90 <detecteerboomlinks>

0000384e <.Loc.406>:
    384e:	00 97       	sbiw	r24, 0x00	; 0
    3850:	59 f4       	brne	.+22     	; 0x3868 <.L126>

00003852 <.Loc.407>:
    3852:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <boomL_Gezien>
    3856:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <boomL_Gezien+0x1>
    385a:	00 97       	sbiw	r24, 0x00	; 0
    385c:	29 f0       	breq	.+10     	; 0x3868 <.L126>

0000385e <.Loc.408>:
                boomL_Gezien = 0;
    385e:	10 92 37 02 	sts	0x0237, r1	; 0x800237 <boomL_Gezien+0x1>
    3862:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <boomL_Gezien>

00003866 <.Loc.409>:
                break;
    3866:	74 c2       	rjmp	.+1256   	; 0x3d50 <.L114>

00003868 <.L126>:
            }

            if((detecteerboomrechts()) && (!boomR_Gezien)){
    3868:	0e 94 69 17 	call	0x2ed2	; 0x2ed2 <detecteerboomrechts>

0000386c <.Loc.411>:
    386c:	00 97       	sbiw	r24, 0x00	; 0
    386e:	89 f0       	breq	.+34     	; 0x3892 <.L127>

00003870 <.Loc.412>:
    3870:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <boomR_Gezien>
    3874:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <boomR_Gezien+0x1>

00003878 <.Loc.413>:
    3878:	00 97       	sbiw	r24, 0x00	; 0
    387a:	59 f4       	brne	.+22     	; 0x3892 <.L127>

0000387c <.Loc.414>:
                boomR_Gezien = 1;
    387c:	81 e0       	ldi	r24, 0x01	; 1
    387e:	90 e0       	ldi	r25, 0x00	; 0
    3880:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <boomR_Gezien+0x1>
    3884:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <boomR_Gezien>

00003888 <.Loc.415>:
                state = BoomSignaleren;
    3888:	86 e0       	ldi	r24, 0x06	; 6
    388a:	90 e0       	ldi	r25, 0x00	; 0
    388c:	9a 83       	std	Y+2, r25	; 0x02
    388e:	89 83       	std	Y+1, r24	; 0x01

00003890 <.Loc.416>:
                break;
    3890:	5f c2       	rjmp	.+1214   	; 0x3d50 <.L114>

00003892 <.L127>:
            }
            else if((!detecteerboomrechts()) && (boomR_Gezien)){
    3892:	0e 94 69 17 	call	0x2ed2	; 0x2ed2 <detecteerboomrechts>

00003896 <.Loc.418>:
    3896:	00 97       	sbiw	r24, 0x00	; 0
    3898:	59 f4       	brne	.+22     	; 0x38b0 <.L128>

0000389a <.Loc.419>:
    389a:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <boomR_Gezien>
    389e:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <boomR_Gezien+0x1>
    38a2:	00 97       	sbiw	r24, 0x00	; 0
    38a4:	29 f0       	breq	.+10     	; 0x38b0 <.L128>

000038a6 <.Loc.420>:
                boomR_Gezien = 0;
    38a6:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <boomR_Gezien+0x1>
    38aa:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <boomR_Gezien>

000038ae <.Loc.421>:
                break;
    38ae:	50 c2       	rjmp	.+1184   	; 0x3d50 <.L114>

000038b0 <.L128>:
            }

            if((!detecteerlatlinks()) && (draaiing() == 0)){
    38b0:	0e 94 8a 17 	call	0x2f14	; 0x2f14 <detecteerlatlinks>

000038b4 <.Loc.423>:
    38b4:	00 97       	sbiw	r24, 0x00	; 0
    38b6:	49 f4       	brne	.+18     	; 0x38ca <.L129>

000038b8 <.Loc.424>:
    38b8:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <draaiing>

000038bc <.Loc.425>:
    38bc:	00 97       	sbiw	r24, 0x00	; 0
    38be:	29 f4       	brne	.+10     	; 0x38ca <.L129>

000038c0 <.Loc.426>:
                state = DraaienL;
    38c0:	82 e0       	ldi	r24, 0x02	; 2
    38c2:	90 e0       	ldi	r25, 0x00	; 0
    38c4:	9a 83       	std	Y+2, r25	; 0x02
    38c6:	89 83       	std	Y+1, r24	; 0x01

000038c8 <.Loc.427>:
                break;
    38c8:	43 c2       	rjmp	.+1158   	; 0x3d50 <.L114>

000038ca <.L129>:
            }

            if((!detecteerlatrechts()) && (draaiing() == 1)){
    38ca:	0e 94 ab 17 	call	0x2f56	; 0x2f56 <detecteerlatrechts>

000038ce <.Loc.429>:
    38ce:	00 97       	sbiw	r24, 0x00	; 0
    38d0:	09 f0       	breq	.+2      	; 0x38d4 <.Loc.430>

000038d2 <L0^A>:
    38d2:	37 c2       	rjmp	.+1134   	; 0x3d42 <.L171>

000038d4 <.Loc.430>:
    38d4:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <draaiing>

000038d8 <.Loc.431>:
    38d8:	81 30       	cpi	r24, 0x01	; 1
    38da:	91 05       	cpc	r25, r1
    38dc:	09 f0       	breq	.+2      	; 0x38e0 <.Loc.432>

000038de <L0^A>:
    38de:	31 c2       	rjmp	.+1122   	; 0x3d42 <.L171>

000038e0 <.Loc.432>:
                state = DraaienR;
    38e0:	81 e0       	ldi	r24, 0x01	; 1
    38e2:	90 e0       	ldi	r25, 0x00	; 0
    38e4:	9a 83       	std	Y+2, r25	; 0x02
    38e6:	89 83       	std	Y+1, r24	; 0x01

000038e8 <.Loc.433>:
                break;
    38e8:	33 c2       	rjmp	.+1126   	; 0x3d50 <.L114>

000038ea <.L117>:
            }
            break;

        case Uit:
            onled(0);
    38ea:	80 e0       	ldi	r24, 0x00	; 0
    38ec:	90 e0       	ldi	r25, 0x00	; 0
    38ee:	0e 94 76 16 	call	0x2cec	; 0x2cec <onled>

000038f2 <.Loc.435>:


            PORTB |= (1<<PB6); //rechter motor uit
    38f2:	85 e2       	ldi	r24, 0x25	; 37
    38f4:	90 e0       	ldi	r25, 0x00	; 0
    38f6:	dc 01       	movw	r26, r24
    38f8:	2c 91       	ld	r18, X
    38fa:	85 e2       	ldi	r24, 0x25	; 37
    38fc:	90 e0       	ldi	r25, 0x00	; 0

000038fe <.Loc.436>:
    38fe:	20 64       	ori	r18, 0x40	; 64
    3900:	fc 01       	movw	r30, r24
    3902:	20 83       	st	Z, r18

00003904 <.Loc.437>:
            PORTB |= (1<<PB7);  //linker motor uit
    3904:	85 e2       	ldi	r24, 0x25	; 37
    3906:	90 e0       	ldi	r25, 0x00	; 0
    3908:	dc 01       	movw	r26, r24
    390a:	2c 91       	ld	r18, X
    390c:	85 e2       	ldi	r24, 0x25	; 37
    390e:	90 e0       	ldi	r25, 0x00	; 0

00003910 <.Loc.438>:
    3910:	20 68       	ori	r18, 0x80	; 128
    3912:	fc 01       	movw	r30, r24
    3914:	20 83       	st	Z, r18

00003916 <.Loc.439>:
            DDRL &= ~(1<<PL1);//1A L
    3916:	8a e0       	ldi	r24, 0x0A	; 10
    3918:	91 e0       	ldi	r25, 0x01	; 1
    391a:	dc 01       	movw	r26, r24
    391c:	2c 91       	ld	r18, X

0000391e <.Loc.440>:
    391e:	8a e0       	ldi	r24, 0x0A	; 10
    3920:	91 e0       	ldi	r25, 0x01	; 1

00003922 <.Loc.441>:
    3922:	2d 7f       	andi	r18, 0xFD	; 253
    3924:	fc 01       	movw	r30, r24
    3926:	20 83       	st	Z, r18

00003928 <.Loc.442>:
            DDRL &= ~(1<<PL2);//2A L
    3928:	8a e0       	ldi	r24, 0x0A	; 10
    392a:	91 e0       	ldi	r25, 0x01	; 1
    392c:	dc 01       	movw	r26, r24
    392e:	2c 91       	ld	r18, X

00003930 <.Loc.443>:
    3930:	8a e0       	ldi	r24, 0x0A	; 10
    3932:	91 e0       	ldi	r25, 0x01	; 1

00003934 <.Loc.444>:
    3934:	2b 7f       	andi	r18, 0xFB	; 251
    3936:	fc 01       	movw	r30, r24
    3938:	20 83       	st	Z, r18

0000393a <.Loc.445>:
            lrichting(0);
    393a:	80 e0       	ldi	r24, 0x00	; 0
    393c:	90 e0       	ldi	r25, 0x00	; 0
    393e:	0e 94 71 1a 	call	0x34e2	; 0x34e2 <lrichting>

00003942 <.Loc.446>:
            rrichting(0);
    3942:	80 e0       	ldi	r24, 0x00	; 0
    3944:	90 e0       	ldi	r25, 0x00	; 0
    3946:	0e 94 3a 1a 	call	0x3474	; 0x3474 <rrichting>

0000394a <.Loc.447>:
            if(leestnoodstopuit()){
    394a:	0e 94 e5 16 	call	0x2dca	; 0x2dca <leestnoodstopuit>

0000394e <.Loc.448>:
    394e:	00 97       	sbiw	r24, 0x00	; 0
    3950:	29 f0       	breq	.+10     	; 0x395c <.L131>

00003952 <.Loc.449>:
                    state = Noodstop;
    3952:	84 e0       	ldi	r24, 0x04	; 4
    3954:	90 e0       	ldi	r25, 0x00	; 0
    3956:	9a 83       	std	Y+2, r25	; 0x02
    3958:	89 83       	std	Y+1, r24	; 0x01

0000395a <.Loc.450>:
                    break;
    395a:	fa c1       	rjmp	.+1012   	; 0x3d50 <.L114>

0000395c <.L131>:
            }
            if((leestaanknopuit()) && (aan_Onthouden == 0)){
    395c:	0e 94 06 17 	call	0x2e0c	; 0x2e0c <leestaanknopuit>

00003960 <.Loc.452>:
    3960:	00 97       	sbiw	r24, 0x00	; 0
    3962:	09 f4       	brne	.+2      	; 0x3966 <.Loc.453>

00003964 <L0^A>:
    3964:	f0 c1       	rjmp	.+992    	; 0x3d46 <.L172>

00003966 <.Loc.453>:
    3966:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <aan_Onthouden>
    396a:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <aan_Onthouden+0x1>

0000396e <.Loc.454>:
    396e:	00 97       	sbiw	r24, 0x00	; 0
    3970:	09 f0       	breq	.+2      	; 0x3974 <.Loc.455>

00003972 <L0^A>:
    3972:	e9 c1       	rjmp	.+978    	; 0x3d46 <.L172>

00003974 <.Loc.455>:
                    aan_Onthouden = 1;
    3974:	81 e0       	ldi	r24, 0x01	; 1
    3976:	90 e0       	ldi	r25, 0x00	; 0
    3978:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <aan_Onthouden+0x1>
    397c:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <aan_Onthouden>

00003980 <.Loc.456>:
                    state = Rechtdoorrijden;
    3980:	1a 82       	std	Y+2, r1	; 0x02
    3982:	19 82       	std	Y+1, r1	; 0x01

00003984 <.Loc.457>:
                    break;
    3984:	e5 c1       	rjmp	.+970    	; 0x3d50 <.L114>

00003986 <.L121>:
            break;

        case DraaienR:

            // Laten draaien
            rsnelheid(10);
    3986:	8a e0       	ldi	r24, 0x0A	; 10
    3988:	90 e0       	ldi	r25, 0x00	; 0
    398a:	0e 94 c4 1a 	call	0x3588	; 0x3588 <rsnelheid>

0000398e <.Loc.459>:
            lsnelheid(21);
    398e:	85 e1       	ldi	r24, 0x15	; 21
    3990:	90 e0       	ldi	r25, 0x00	; 0
    3992:	0e 94 a8 1a 	call	0x3550	; 0x3550 <lsnelheid>

00003996 <.Loc.460>:

            // uit state als sonar rechts minder dan 50 mm
            // Dan rechtdoor
            // Hier ook verder

            if(leestnoodstopuit()){
    3996:	0e 94 e5 16 	call	0x2dca	; 0x2dca <leestnoodstopuit>

0000399a <.Loc.461>:
    399a:	00 97       	sbiw	r24, 0x00	; 0
    399c:	09 f4       	brne	.+2      	; 0x39a0 <.Loc.462>

0000399e <L0^A>:
    399e:	d5 c1       	rjmp	.+938    	; 0x3d4a <.L173>

000039a0 <.Loc.462>:
                    state = Noodstop;
    39a0:	84 e0       	ldi	r24, 0x04	; 4
    39a2:	90 e0       	ldi	r25, 0x00	; 0
    39a4:	9a 83       	std	Y+2, r25	; 0x02
    39a6:	89 83       	std	Y+1, r24	; 0x01

000039a8 <.Loc.463>:
                    break;
    39a8:	d3 c1       	rjmp	.+934    	; 0x3d50 <.L114>

000039aa <.L120>:
            break;

        case DraaienL:

            // Laten rijden
            rsnelheid(20);
    39aa:	84 e1       	ldi	r24, 0x14	; 20
    39ac:	90 e0       	ldi	r25, 0x00	; 0
    39ae:	0e 94 c4 1a 	call	0x3588	; 0x3588 <rsnelheid>

000039b2 <.Loc.465>:
            lsnelheid(10);
    39b2:	8a e0       	ldi	r24, 0x0A	; 10
    39b4:	90 e0       	ldi	r25, 0x00	; 0
    39b6:	0e 94 a8 1a 	call	0x3550	; 0x3550 <lsnelheid>

000039ba <.Loc.466>:

            // uit state als sonar links minder dan 50 mm
            // Dan rechtdoor
            if(leessonaruit(1)) // Verder hier
    39ba:	81 e0       	ldi	r24, 0x01	; 1
    39bc:	90 e0       	ldi	r25, 0x00	; 0
    39be:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <leessonaruit>

000039c2 <.Loc.467>:
    39c2:	00 97       	sbiw	r24, 0x00	; 0
    39c4:	09 f4       	brne	.+2      	; 0x39c8 <.Loc.468>

000039c6 <L0^A>:
    39c6:	c3 c1       	rjmp	.+902    	; 0x3d4e <.L174>

000039c8 <.Loc.468>:

            if(leestnoodstopuit()){
    39c8:	0e 94 e5 16 	call	0x2dca	; 0x2dca <leestnoodstopuit>

000039cc <.Loc.469>:
    39cc:	00 97       	sbiw	r24, 0x00	; 0
    39ce:	09 f4       	brne	.+2      	; 0x39d2 <.Loc.470>

000039d0 <L0^A>:
    39d0:	be c1       	rjmp	.+892    	; 0x3d4e <.L174>

000039d2 <.Loc.470>:
                    state = Noodstop;
    39d2:	84 e0       	ldi	r24, 0x04	; 4
    39d4:	90 e0       	ldi	r25, 0x00	; 0
    39d6:	9a 83       	std	Y+2, r25	; 0x02
    39d8:	89 83       	std	Y+1, r24	; 0x01

000039da <.Loc.471>:
                    break;
    39da:	ba c1       	rjmp	.+884    	; 0x3d50 <.L114>

000039dc <.L119>:
            }
            break;

        case Volgen:
            followled(1);
    39dc:	81 e0       	ldi	r24, 0x01	; 1
    39de:	90 e0       	ldi	r25, 0x00	; 0
    39e0:	0e 94 51 16 	call	0x2ca2	; 0x2ca2 <followled>

000039e4 <.Loc.473>:

            break;
    39e4:	b5 c1       	rjmp	.+874    	; 0x3d50 <.L114>

000039e6 <.L115>:

        case BoomSignaleren:


            // Snelheid uitzetten
            rsnelheid(0);
    39e6:	80 e0       	ldi	r24, 0x00	; 0
    39e8:	90 e0       	ldi	r25, 0x00	; 0
    39ea:	0e 94 c4 1a 	call	0x3588	; 0x3588 <rsnelheid>

000039ee <.Loc.475>:
            lsnelheid(0);
    39ee:	80 e0       	ldi	r24, 0x00	; 0
    39f0:	90 e0       	ldi	r25, 0x00	; 0
    39f2:	0e 94 a8 1a 	call	0x3550	; 0x3550 <lsnelheid>

000039f6 <.Loc.476>:

            rrichting(0);
    39f6:	80 e0       	ldi	r24, 0x00	; 0
    39f8:	90 e0       	ldi	r25, 0x00	; 0
    39fa:	0e 94 3a 1a 	call	0x3474	; 0x3474 <rrichting>

000039fe <.Loc.477>:
            lrichting(0);
    39fe:	80 e0       	ldi	r24, 0x00	; 0
    3a00:	90 e0       	ldi	r25, 0x00	; 0
    3a02:	0e 94 71 1a 	call	0x34e2	; 0x34e2 <lrichting>

00003a06 <.Loc.478>:


            if(boomL_Gezien){
    3a06:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <boomL_Gezien>
    3a0a:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <boomL_Gezien+0x1>

00003a0e <.Loc.479>:
    3a0e:	00 97       	sbiw	r24, 0x00	; 0
    3a10:	71 f0       	breq	.+28     	; 0x3a2e <.L135>

00003a12 <.Loc.480>:
                bomenL_Geteld += 1;
    3a12:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <bomenL_Geteld>
    3a16:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <bomenL_Geteld+0x1>
    3a1a:	01 96       	adiw	r24, 0x01	; 1
    3a1c:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <bomenL_Geteld+0x1>
    3a20:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <bomenL_Geteld>

00003a24 <.Loc.481>:
                linksboomled(1);
    3a24:	81 e0       	ldi	r24, 0x01	; 1
    3a26:	90 e0       	ldi	r25, 0x00	; 0
    3a28:	0e 94 2c 16 	call	0x2c58	; 0x2c58 <linksboomled>
    3a2c:	13 c0       	rjmp	.+38     	; 0x3a54 <.L136>

00003a2e <.L135>:
            }
            else if(boomR_Gezien){
    3a2e:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <boomR_Gezien>
    3a32:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <boomR_Gezien+0x1>

00003a36 <.Loc.483>:
    3a36:	00 97       	sbiw	r24, 0x00	; 0
    3a38:	69 f0       	breq	.+26     	; 0x3a54 <.L136>

00003a3a <.Loc.484>:
                bomenR_Geteld += 1;
    3a3a:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <bomenR_Geteld>
    3a3e:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <bomenR_Geteld+0x1>
    3a42:	01 96       	adiw	r24, 0x01	; 1
    3a44:	90 93 39 02 	sts	0x0239, r25	; 0x800239 <bomenR_Geteld+0x1>
    3a48:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <bomenR_Geteld>

00003a4c <.Loc.485>:
                rechtsboomled(1);
    3a4c:	81 e0       	ldi	r24, 0x01	; 1
    3a4e:	90 e0       	ldi	r25, 0x00	; 0
    3a50:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <rechtsboomled>

00003a54 <.L136>:
            }

            // Buzzer gaat 1 seconde aan en noodstop kan gedetecteerd worden
            buzzer(1);
    3a54:	81 e0       	ldi	r24, 0x01	; 1
    3a56:	90 e0       	ldi	r25, 0x00	; 0
    3a58:	0e 94 c0 16 	call	0x2d80	; 0x2d80 <buzzer>

00003a5c <.LBB57>:

            for(int i = 0; i < 11; i++){
    3a5c:	1c 82       	std	Y+4, r1	; 0x04
    3a5e:	1b 82       	std	Y+3, r1	; 0x03

00003a60 <.Loc.488>:
    3a60:	9d c0       	rjmp	.+314    	; 0x3b9c <.L137>

00003a62 <.L148>:
                if(leestnoodstopuit()){
    3a62:	0e 94 e5 16 	call	0x2dca	; 0x2dca <leestnoodstopuit>

00003a66 <.Loc.490>:
    3a66:	00 97       	sbiw	r24, 0x00	; 0
    3a68:	29 f0       	breq	.+10     	; 0x3a74 <.L138>

00003a6a <.Loc.491>:
                    state = Noodstop;
    3a6a:	84 e0       	ldi	r24, 0x04	; 4
    3a6c:	90 e0       	ldi	r25, 0x00	; 0
    3a6e:	9a 83       	std	Y+2, r25	; 0x02
    3a70:	89 83       	std	Y+1, r24	; 0x01

00003a72 <.Loc.492>:
                    break;
    3a72:	9b c0       	rjmp	.+310    	; 0x3baa <.L139>

00003a74 <.L138>:
    3a74:	80 e0       	ldi	r24, 0x00	; 0
    3a76:	90 e0       	ldi	r25, 0x00	; 0
    3a78:	a8 ec       	ldi	r26, 0xC8	; 200
    3a7a:	b2 e4       	ldi	r27, 0x42	; 66
    3a7c:	8f 83       	std	Y+7, r24	; 0x07
    3a7e:	98 87       	std	Y+8, r25	; 0x08
    3a80:	a9 87       	std	Y+9, r26	; 0x09
    3a82:	ba 87       	std	Y+10, r27	; 0x0a

00003a84 <.LBB58>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    3a84:	20 e0       	ldi	r18, 0x00	; 0
    3a86:	30 e0       	ldi	r19, 0x00	; 0
    3a88:	4a e7       	ldi	r20, 0x7A	; 122
    3a8a:	55 e4       	ldi	r21, 0x45	; 69
    3a8c:	6f 81       	ldd	r22, Y+7	; 0x07
    3a8e:	78 85       	ldd	r23, Y+8	; 0x08
    3a90:	89 85       	ldd	r24, Y+9	; 0x09
    3a92:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a94:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    3a98:	6b a7       	std	Y+43, r22	; 0x2b
    3a9a:	7c a7       	std	Y+44, r23	; 0x2c
    3a9c:	8d a7       	std	Y+45, r24	; 0x2d
    3a9e:	9e a7       	std	Y+46, r25	; 0x2e
    3aa0:	8b a5       	ldd	r24, Y+43	; 0x2b
    3aa2:	9c a5       	ldd	r25, Y+44	; 0x2c
    3aa4:	ad a5       	ldd	r26, Y+45	; 0x2d
    3aa6:	be a5       	ldd	r27, Y+46	; 0x2e
    3aa8:	8b 87       	std	Y+11, r24	; 0x0b
    3aaa:	9c 87       	std	Y+12, r25	; 0x0c
    3aac:	ad 87       	std	Y+13, r26	; 0x0d
    3aae:	be 87       	std	Y+14, r27	; 0x0e

00003ab0 <.Loc.494>:
	if (__tmp < 1.0)
    3ab0:	20 e0       	ldi	r18, 0x00	; 0
    3ab2:	30 e0       	ldi	r19, 0x00	; 0
    3ab4:	40 e8       	ldi	r20, 0x80	; 128
    3ab6:	5f e3       	ldi	r21, 0x3F	; 63
    3ab8:	6b 85       	ldd	r22, Y+11	; 0x0b
    3aba:	7c 85       	ldd	r23, Y+12	; 0x0c
    3abc:	8d 85       	ldd	r24, Y+13	; 0x0d
    3abe:	9e 85       	ldd	r25, Y+14	; 0x0e
    3ac0:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
    3ac4:	88 23       	and	r24, r24
    3ac6:	2c f4       	brge	.+10     	; 0x3ad2 <.L167>

00003ac8 <.Loc.495>:
		__ticks = 1;
    3ac8:	81 e0       	ldi	r24, 0x01	; 1
    3aca:	90 e0       	ldi	r25, 0x00	; 0
    3acc:	98 8b       	std	Y+16, r25	; 0x10
    3ace:	8f 87       	std	Y+15, r24	; 0x0f
    3ad0:	55 c0       	rjmp	.+170    	; 0x3b7c <.L142>

00003ad2 <.L167>:
	else if (__tmp > 65535)
    3ad2:	20 e0       	ldi	r18, 0x00	; 0
    3ad4:	3f ef       	ldi	r19, 0xFF	; 255
    3ad6:	4f e7       	ldi	r20, 0x7F	; 127
    3ad8:	57 e4       	ldi	r21, 0x47	; 71
    3ada:	6b 85       	ldd	r22, Y+11	; 0x0b
    3adc:	7c 85       	ldd	r23, Y+12	; 0x0c
    3ade:	8d 85       	ldd	r24, Y+13	; 0x0d
    3ae0:	9e 85       	ldd	r25, Y+14	; 0x0e
    3ae2:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    3ae6:	88 23       	and	r24, r24
    3ae8:	d9 f1       	breq	.+118    	; 0x3b60 <.L168>
    3aea:	d4 f1       	brlt	.+116    	; 0x3b60 <.L168>

00003aec <.Loc.497>:
		__ticks = (uint16_t) (__ms * 10.0);
    3aec:	20 e0       	ldi	r18, 0x00	; 0
    3aee:	30 e0       	ldi	r19, 0x00	; 0
    3af0:	40 e2       	ldi	r20, 0x20	; 32
    3af2:	51 e4       	ldi	r21, 0x41	; 65
    3af4:	6f 81       	ldd	r22, Y+7	; 0x07
    3af6:	78 85       	ldd	r23, Y+8	; 0x08
    3af8:	89 85       	ldd	r24, Y+9	; 0x09
    3afa:	9a 85       	ldd	r25, Y+10	; 0x0a
    3afc:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    3b00:	6f a7       	std	Y+47, r22	; 0x2f
    3b02:	78 ab       	std	Y+48, r23	; 0x30
    3b04:	89 ab       	std	Y+49, r24	; 0x31
    3b06:	9a ab       	std	Y+50, r25	; 0x32
    3b08:	8f a5       	ldd	r24, Y+47	; 0x2f
    3b0a:	98 a9       	ldd	r25, Y+48	; 0x30
    3b0c:	a9 a9       	ldd	r26, Y+49	; 0x31
    3b0e:	ba a9       	ldd	r27, Y+50	; 0x32
    3b10:	8b a3       	std	Y+35, r24	; 0x23
    3b12:	9c a3       	std	Y+36, r25	; 0x24
    3b14:	ad a3       	std	Y+37, r26	; 0x25
    3b16:	be a3       	std	Y+38, r27	; 0x26

00003b18 <.Loc.498>:
    3b18:	6b a1       	ldd	r22, Y+35	; 0x23
    3b1a:	7c a1       	ldd	r23, Y+36	; 0x24
    3b1c:	8d a1       	ldd	r24, Y+37	; 0x25
    3b1e:	9e a1       	ldd	r25, Y+38	; 0x26
    3b20:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    3b24:	6b ab       	std	Y+51, r22	; 0x33
    3b26:	7c ab       	std	Y+52, r23	; 0x34
    3b28:	8d ab       	std	Y+53, r24	; 0x35
    3b2a:	9e ab       	std	Y+54, r25	; 0x36
    3b2c:	ab a9       	ldd	r26, Y+51	; 0x33
    3b2e:	bc a9       	ldd	r27, Y+52	; 0x34
    3b30:	b8 8b       	std	Y+16, r27	; 0x10
    3b32:	af 87       	std	Y+15, r26	; 0x0f

00003b34 <.Loc.499>:
		while(__ticks)
    3b34:	10 c0       	rjmp	.+32     	; 0x3b56 <.L145>

00003b36 <.L146>:
    3b36:	80 e9       	ldi	r24, 0x90	; 144
    3b38:	91 e0       	ldi	r25, 0x01	; 1
    3b3a:	9a 8b       	std	Y+18, r25	; 0x12
    3b3c:	89 8b       	std	Y+17, r24	; 0x11

00003b3e <.LBB60>:
	__asm__ volatile (
    3b3e:	89 89       	ldd	r24, Y+17	; 0x11
    3b40:	9a 89       	ldd	r25, Y+18	; 0x12

00003b42 <.L1^B5>:
    3b42:	01 97       	sbiw	r24, 0x01	; 1
    3b44:	f1 f7       	brne	.-4      	; 0x3b42 <.L1^B5>
    3b46:	9a 8b       	std	Y+18, r25	; 0x12
    3b48:	89 8b       	std	Y+17, r24	; 0x11

00003b4a <.Loc.501>:
	...

00003b4c <.LBE60>:
			__ticks --;
    3b4c:	8f 85       	ldd	r24, Y+15	; 0x0f
    3b4e:	98 89       	ldd	r25, Y+16	; 0x10
    3b50:	01 97       	sbiw	r24, 0x01	; 1
    3b52:	98 8b       	std	Y+16, r25	; 0x10
    3b54:	8f 87       	std	Y+15, r24	; 0x0f

00003b56 <.L145>:
		while(__ticks)
    3b56:	8f 85       	ldd	r24, Y+15	; 0x0f
    3b58:	98 89       	ldd	r25, Y+16	; 0x10
    3b5a:	00 97       	sbiw	r24, 0x00	; 0
    3b5c:	61 f7       	brne	.-40     	; 0x3b36 <.L146>

00003b5e <.Loc.504>:
		return;
    3b5e:	19 c0       	rjmp	.+50     	; 0x3b92 <.L147>

00003b60 <.L168>:
		__ticks = (uint16_t)__tmp;
    3b60:	6b 85       	ldd	r22, Y+11	; 0x0b
    3b62:	7c 85       	ldd	r23, Y+12	; 0x0c
    3b64:	8d 85       	ldd	r24, Y+13	; 0x0d
    3b66:	9e 85       	ldd	r25, Y+14	; 0x0e
    3b68:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    3b6c:	6f ab       	std	Y+55, r22	; 0x37
    3b6e:	78 af       	std	Y+56, r23	; 0x38
    3b70:	89 af       	std	Y+57, r24	; 0x39
    3b72:	9a af       	std	Y+58, r25	; 0x3a
    3b74:	ef a9       	ldd	r30, Y+55	; 0x37
    3b76:	f8 ad       	ldd	r31, Y+56	; 0x38
    3b78:	f8 8b       	std	Y+16, r31	; 0x10
    3b7a:	ef 87       	std	Y+15, r30	; 0x0f

00003b7c <.L142>:
    3b7c:	8f 85       	ldd	r24, Y+15	; 0x0f
    3b7e:	98 89       	ldd	r25, Y+16	; 0x10
    3b80:	9c 8b       	std	Y+20, r25	; 0x14
    3b82:	8b 8b       	std	Y+19, r24	; 0x13

00003b84 <.LBB62>:
    3b84:	8b 89       	ldd	r24, Y+19	; 0x13
    3b86:	9c 89       	ldd	r25, Y+20	; 0x14

00003b88 <.L1^B6>:
    3b88:	01 97       	sbiw	r24, 0x01	; 1
    3b8a:	f1 f7       	brne	.-4      	; 0x3b88 <.L1^B6>
    3b8c:	9c 8b       	std	Y+20, r25	; 0x14
    3b8e:	8b 8b       	std	Y+19, r24	; 0x13

00003b90 <.Loc.507>:
	...

00003b92 <.L147>:
            for(int i = 0; i < 11; i++){
    3b92:	8b 81       	ldd	r24, Y+3	; 0x03
    3b94:	9c 81       	ldd	r25, Y+4	; 0x04
    3b96:	01 96       	adiw	r24, 0x01	; 1
    3b98:	9c 83       	std	Y+4, r25	; 0x04
    3b9a:	8b 83       	std	Y+3, r24	; 0x03

00003b9c <.L137>:
    3b9c:	8b 81       	ldd	r24, Y+3	; 0x03
    3b9e:	9c 81       	ldd	r25, Y+4	; 0x04
    3ba0:	8a 30       	cpi	r24, 0x0A	; 10
    3ba2:	91 05       	cpc	r25, r1
    3ba4:	09 f0       	breq	.+2      	; 0x3ba8 <L0^A>

00003ba6 <L0^A>:
    3ba6:	0c f4       	brge	.+2      	; 0x3baa <.L139>

00003ba8 <L0^A>:
    3ba8:	5c cf       	rjmp	.-328    	; 0x3a62 <.L148>

00003baa <.L139>:
                }
                _delay_ms(100);
            }

            buzzer(0);
    3baa:	80 e0       	ldi	r24, 0x00	; 0
    3bac:	90 e0       	ldi	r25, 0x00	; 0
    3bae:	0e 94 c0 16 	call	0x2d80	; 0x2d80 <buzzer>

00003bb2 <.LBB64>:


            // Even de led aan laten
            for(int i = 0; i < 31; i++){
    3bb2:	1e 82       	std	Y+6, r1	; 0x06
    3bb4:	1d 82       	std	Y+5, r1	; 0x05

00003bb6 <.Loc.512>:
    3bb6:	aa c0       	rjmp	.+340    	; 0x3d0c <.L149>

00003bb8 <.L160>:
                if(leestnoodstopuit()){
    3bb8:	0e 94 e5 16 	call	0x2dca	; 0x2dca <leestnoodstopuit>

00003bbc <.Loc.514>:
    3bbc:	00 97       	sbiw	r24, 0x00	; 0
    3bbe:	29 f0       	breq	.+10     	; 0x3bca <.L150>

00003bc0 <.Loc.515>:
                    state = Noodstop;
    3bc0:	84 e0       	ldi	r24, 0x04	; 4
    3bc2:	90 e0       	ldi	r25, 0x00	; 0
    3bc4:	9a 83       	std	Y+2, r25	; 0x02
    3bc6:	89 83       	std	Y+1, r24	; 0x01

00003bc8 <.Loc.516>:
                    break;
    3bc8:	a8 c0       	rjmp	.+336    	; 0x3d1a <.L151>

00003bca <.L150>:
    3bca:	80 e0       	ldi	r24, 0x00	; 0
    3bcc:	90 e0       	ldi	r25, 0x00	; 0
    3bce:	a8 ec       	ldi	r26, 0xC8	; 200
    3bd0:	b2 e4       	ldi	r27, 0x42	; 66
    3bd2:	8d 8b       	std	Y+21, r24	; 0x15
    3bd4:	9e 8b       	std	Y+22, r25	; 0x16
    3bd6:	af 8b       	std	Y+23, r26	; 0x17
    3bd8:	b8 8f       	std	Y+24, r27	; 0x18

00003bda <.LBB65>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    3bda:	20 e0       	ldi	r18, 0x00	; 0
    3bdc:	30 e0       	ldi	r19, 0x00	; 0
    3bde:	4a e7       	ldi	r20, 0x7A	; 122
    3be0:	55 e4       	ldi	r21, 0x45	; 69
    3be2:	6d 89       	ldd	r22, Y+21	; 0x15
    3be4:	7e 89       	ldd	r23, Y+22	; 0x16
    3be6:	8f 89       	ldd	r24, Y+23	; 0x17
    3be8:	98 8d       	ldd	r25, Y+24	; 0x18
    3bea:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    3bee:	6b af       	std	Y+59, r22	; 0x3b
    3bf0:	7c af       	std	Y+60, r23	; 0x3c
    3bf2:	8d af       	std	Y+61, r24	; 0x3d
    3bf4:	9e af       	std	Y+62, r25	; 0x3e
    3bf6:	8b ad       	ldd	r24, Y+59	; 0x3b
    3bf8:	9c ad       	ldd	r25, Y+60	; 0x3c
    3bfa:	ad ad       	ldd	r26, Y+61	; 0x3d
    3bfc:	be ad       	ldd	r27, Y+62	; 0x3e
    3bfe:	89 8f       	std	Y+25, r24	; 0x19
    3c00:	9a 8f       	std	Y+26, r25	; 0x1a
    3c02:	ab 8f       	std	Y+27, r26	; 0x1b
    3c04:	bc 8f       	std	Y+28, r27	; 0x1c

00003c06 <.Loc.518>:
	if (__tmp < 1.0)
    3c06:	20 e0       	ldi	r18, 0x00	; 0
    3c08:	30 e0       	ldi	r19, 0x00	; 0
    3c0a:	40 e8       	ldi	r20, 0x80	; 128
    3c0c:	5f e3       	ldi	r21, 0x3F	; 63
    3c0e:	69 8d       	ldd	r22, Y+25	; 0x19
    3c10:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3c12:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3c14:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3c16:	0e 94 1e 1f 	call	0x3e3c	; 0x3e3c <__cmpsf2>
    3c1a:	88 23       	and	r24, r24
    3c1c:	2c f4       	brge	.+10     	; 0x3c28 <.L169>

00003c1e <.Loc.519>:
		__ticks = 1;
    3c1e:	81 e0       	ldi	r24, 0x01	; 1
    3c20:	90 e0       	ldi	r25, 0x00	; 0
    3c22:	9e 8f       	std	Y+30, r25	; 0x1e
    3c24:	8d 8f       	std	Y+29, r24	; 0x1d
    3c26:	62 c0       	rjmp	.+196    	; 0x3cec <.L154>

00003c28 <.L169>:
	else if (__tmp > 65535)
    3c28:	20 e0       	ldi	r18, 0x00	; 0
    3c2a:	3f ef       	ldi	r19, 0xFF	; 255
    3c2c:	4f e7       	ldi	r20, 0x7F	; 127
    3c2e:	57 e4       	ldi	r21, 0x47	; 71
    3c30:	69 8d       	ldd	r22, Y+25	; 0x19
    3c32:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3c34:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3c36:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3c38:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__gesf2>
    3c3c:	88 23       	and	r24, r24
    3c3e:	09 f0       	breq	.+2      	; 0x3c42 <L0^A>

00003c40 <L0^A>:
    3c40:	0c f4       	brge	.+2      	; 0x3c44 <.Loc.521>

00003c42 <L0^A>:
    3c42:	42 c0       	rjmp	.+132    	; 0x3cc8 <.L170>

00003c44 <.Loc.521>:
		__ticks = (uint16_t) (__ms * 10.0);
    3c44:	20 e0       	ldi	r18, 0x00	; 0
    3c46:	30 e0       	ldi	r19, 0x00	; 0
    3c48:	40 e2       	ldi	r20, 0x20	; 32
    3c4a:	51 e4       	ldi	r21, 0x41	; 65
    3c4c:	6d 89       	ldd	r22, Y+21	; 0x15
    3c4e:	7e 89       	ldd	r23, Y+22	; 0x16
    3c50:	8f 89       	ldd	r24, Y+23	; 0x17
    3c52:	98 8d       	ldd	r25, Y+24	; 0x18
    3c54:	0e 94 82 20 	call	0x4104	; 0x4104 <__mulsf3>
    3c58:	23 96       	adiw	r28, 0x03	; 3
    3c5a:	6c af       	std	Y+60, r22	; 0x3c
    3c5c:	7d af       	std	Y+61, r23	; 0x3d
    3c5e:	8e af       	std	Y+62, r24	; 0x3e
    3c60:	9f af       	std	Y+63, r25	; 0x3f
    3c62:	23 97       	sbiw	r28, 0x03	; 3
    3c64:	23 96       	adiw	r28, 0x03	; 3
    3c66:	8c ad       	ldd	r24, Y+60	; 0x3c
    3c68:	9d ad       	ldd	r25, Y+61	; 0x3d
    3c6a:	ae ad       	ldd	r26, Y+62	; 0x3e
    3c6c:	bf ad       	ldd	r27, Y+63	; 0x3f
    3c6e:	23 97       	sbiw	r28, 0x03	; 3
    3c70:	8f a3       	std	Y+39, r24	; 0x27
    3c72:	98 a7       	std	Y+40, r25	; 0x28
    3c74:	a9 a7       	std	Y+41, r26	; 0x29
    3c76:	ba a7       	std	Y+42, r27	; 0x2a

00003c78 <.Loc.522>:
    3c78:	6f a1       	ldd	r22, Y+39	; 0x27
    3c7a:	78 a5       	ldd	r23, Y+40	; 0x28
    3c7c:	89 a5       	ldd	r24, Y+41	; 0x29
    3c7e:	9a a5       	ldd	r25, Y+42	; 0x2a
    3c80:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    3c84:	27 96       	adiw	r28, 0x07	; 7
    3c86:	6c af       	std	Y+60, r22	; 0x3c
    3c88:	7d af       	std	Y+61, r23	; 0x3d
    3c8a:	8e af       	std	Y+62, r24	; 0x3e
    3c8c:	9f af       	std	Y+63, r25	; 0x3f
    3c8e:	27 97       	sbiw	r28, 0x07	; 7
    3c90:	25 96       	adiw	r28, 0x05	; 5
    3c92:	ae ad       	ldd	r26, Y+62	; 0x3e
    3c94:	bf ad       	ldd	r27, Y+63	; 0x3f
    3c96:	25 97       	sbiw	r28, 0x05	; 5
    3c98:	be 8f       	std	Y+30, r27	; 0x1e
    3c9a:	ad 8f       	std	Y+29, r26	; 0x1d

00003c9c <.Loc.523>:
		while(__ticks)
    3c9c:	10 c0       	rjmp	.+32     	; 0x3cbe <.L157>

00003c9e <.L158>:
    3c9e:	80 e9       	ldi	r24, 0x90	; 144
    3ca0:	91 e0       	ldi	r25, 0x01	; 1
    3ca2:	98 a3       	std	Y+32, r25	; 0x20
    3ca4:	8f 8f       	std	Y+31, r24	; 0x1f

00003ca6 <.LBB67>:
    3ca6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3ca8:	98 a1       	ldd	r25, Y+32	; 0x20

00003caa <.L1^B7>:
    3caa:	01 97       	sbiw	r24, 0x01	; 1
    3cac:	f1 f7       	brne	.-4      	; 0x3caa <.L1^B7>
    3cae:	98 a3       	std	Y+32, r25	; 0x20
    3cb0:	8f 8f       	std	Y+31, r24	; 0x1f

00003cb2 <.Loc.525>:
	...

00003cb4 <.LBE67>:
			__ticks --;
    3cb4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3cb6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3cb8:	01 97       	sbiw	r24, 0x01	; 1
    3cba:	9e 8f       	std	Y+30, r25	; 0x1e
    3cbc:	8d 8f       	std	Y+29, r24	; 0x1d

00003cbe <.L157>:
		while(__ticks)
    3cbe:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3cc0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3cc2:	00 97       	sbiw	r24, 0x00	; 0
    3cc4:	61 f7       	brne	.-40     	; 0x3c9e <.L158>

00003cc6 <.Loc.528>:
		return;
    3cc6:	1d c0       	rjmp	.+58     	; 0x3d02 <.L159>

00003cc8 <.L170>:
		__ticks = (uint16_t)__tmp;
    3cc8:	69 8d       	ldd	r22, Y+25	; 0x19
    3cca:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3ccc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3cce:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3cd0:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    3cd4:	2b 96       	adiw	r28, 0x0b	; 11
    3cd6:	6c af       	std	Y+60, r22	; 0x3c
    3cd8:	7d af       	std	Y+61, r23	; 0x3d
    3cda:	8e af       	std	Y+62, r24	; 0x3e
    3cdc:	9f af       	std	Y+63, r25	; 0x3f
    3cde:	2b 97       	sbiw	r28, 0x0b	; 11
    3ce0:	29 96       	adiw	r28, 0x09	; 9
    3ce2:	ee ad       	ldd	r30, Y+62	; 0x3e
    3ce4:	ff ad       	ldd	r31, Y+63	; 0x3f
    3ce6:	29 97       	sbiw	r28, 0x09	; 9
    3ce8:	fe 8f       	std	Y+30, r31	; 0x1e
    3cea:	ed 8f       	std	Y+29, r30	; 0x1d

00003cec <.L154>:
    3cec:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3cee:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3cf0:	9a a3       	std	Y+34, r25	; 0x22
    3cf2:	89 a3       	std	Y+33, r24	; 0x21

00003cf4 <.LBB69>:
    3cf4:	89 a1       	ldd	r24, Y+33	; 0x21
    3cf6:	9a a1       	ldd	r25, Y+34	; 0x22

00003cf8 <.L1^B8>:
    3cf8:	01 97       	sbiw	r24, 0x01	; 1
    3cfa:	f1 f7       	brne	.-4      	; 0x3cf8 <.L1^B8>
    3cfc:	9a a3       	std	Y+34, r25	; 0x22
    3cfe:	89 a3       	std	Y+33, r24	; 0x21

00003d00 <.Loc.531>:
	...

00003d02 <.L159>:
            for(int i = 0; i < 31; i++){
    3d02:	8d 81       	ldd	r24, Y+5	; 0x05
    3d04:	9e 81       	ldd	r25, Y+6	; 0x06
    3d06:	01 96       	adiw	r24, 0x01	; 1
    3d08:	9e 83       	std	Y+6, r25	; 0x06
    3d0a:	8d 83       	std	Y+5, r24	; 0x05

00003d0c <.L149>:
    3d0c:	8d 81       	ldd	r24, Y+5	; 0x05
    3d0e:	9e 81       	ldd	r25, Y+6	; 0x06
    3d10:	8e 31       	cpi	r24, 0x1E	; 30
    3d12:	91 05       	cpc	r25, r1
    3d14:	09 f0       	breq	.+2      	; 0x3d18 <L0^A>

00003d16 <L0^A>:
    3d16:	0c f4       	brge	.+2      	; 0x3d1a <.L151>

00003d18 <L0^A>:
    3d18:	4f cf       	rjmp	.-354    	; 0x3bb8 <.L160>

00003d1a <.L151>:
                }
                _delay_ms(100);
            }


            linksboomled(0);
    3d1a:	80 e0       	ldi	r24, 0x00	; 0
    3d1c:	90 e0       	ldi	r25, 0x00	; 0
    3d1e:	0e 94 2c 16 	call	0x2c58	; 0x2c58 <linksboomled>

00003d22 <.Loc.535>:
            rechtsboomled(0);
    3d22:	80 e0       	ldi	r24, 0x00	; 0
    3d24:	90 e0       	ldi	r25, 0x00	; 0
    3d26:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <rechtsboomled>

00003d2a <.Loc.536>:

            if(leestnoodstopuit()){
    3d2a:	0e 94 e5 16 	call	0x2dca	; 0x2dca <leestnoodstopuit>

00003d2e <.Loc.537>:
    3d2e:	00 97       	sbiw	r24, 0x00	; 0
    3d30:	29 f0       	breq	.+10     	; 0x3d3c <.L161>

00003d32 <.Loc.538>:
                    state = Noodstop;
    3d32:	84 e0       	ldi	r24, 0x04	; 4
    3d34:	90 e0       	ldi	r25, 0x00	; 0
    3d36:	9a 83       	std	Y+2, r25	; 0x02
    3d38:	89 83       	std	Y+1, r24	; 0x01

00003d3a <.Loc.539>:
                    break;
    3d3a:	0a c0       	rjmp	.+20     	; 0x3d50 <.L114>

00003d3c <.L161>:
            }
            else{
                state = Rechtdoorrijden;
    3d3c:	1a 82       	std	Y+2, r1	; 0x02
    3d3e:	19 82       	std	Y+1, r1	; 0x01

00003d40 <.Loc.541>:
                break;
    3d40:	07 c0       	rjmp	.+14     	; 0x3d50 <.L114>

00003d42 <.L171>:
            break;
    3d42:	00 00       	nop
    3d44:	10 cd       	rjmp	.-1504   	; 0x3766 <.L162>

00003d46 <.L172>:
            break;
    3d46:	00 00       	nop
    3d48:	0e cd       	rjmp	.-1508   	; 0x3766 <.L162>

00003d4a <.L173>:
            break;
    3d4a:	00 00       	nop
    3d4c:	0c cd       	rjmp	.-1512   	; 0x3766 <.L162>

00003d4e <.L174>:
	...

00003d50 <.L114>:
    switch (state){
    3d50:	0a cd       	rjmp	.-1516   	; 0x3766 <.L162>

00003d52 <__tablejump2__>:
    3d52:	ee 0f       	add	r30, r30

00003d54 <.Loc.1>:
    3d54:	ff 1f       	adc	r31, r31

00003d56 <.Loc.2>:
    3d56:	88 1f       	adc	r24, r24

00003d58 <.Loc.3>:
    3d58:	8b bf       	out	0x3b, r24	; 59

00003d5a <.Loc.4>:
    3d5a:	07 90       	elpm	r0, Z+

00003d5c <.Loc.5>:
    3d5c:	f6 91       	elpm	r31, Z

00003d5e <.Loc.6>:
    3d5e:	e0 2d       	mov	r30, r0

00003d60 <.Loc.7>:
    3d60:	19 94       	eijmp

00003d62 <__subsf3>:
    3d62:	50 58       	subi	r21, 0x80	; 128

00003d64 <__addsf3>:
    3d64:	bb 27       	eor	r27, r27
    3d66:	aa 27       	eor	r26, r26
    3d68:	0e 94 c9 1e 	call	0x3d92	; 0x3d92 <__addsf3x>
    3d6c:	0c 94 43 20 	jmp	0x4086	; 0x4086 <__fp_round>

00003d70 <.L^B1>:
    3d70:	0e 94 35 20 	call	0x406a	; 0x406a <__fp_pscA>
    3d74:	38 f0       	brcs	.+14     	; 0x3d84 <.L_nan>
    3d76:	0e 94 3c 20 	call	0x4078	; 0x4078 <__fp_pscB>
    3d7a:	20 f0       	brcs	.+8      	; 0x3d84 <.L_nan>
    3d7c:	39 f4       	brne	.+14     	; 0x3d8c <.L_inf>
    3d7e:	9f 3f       	cpi	r25, 0xFF	; 255
    3d80:	19 f4       	brne	.+6      	; 0x3d88 <.L_infB>
    3d82:	26 f4       	brtc	.+8      	; 0x3d8c <.L_inf>

00003d84 <.L_nan>:
    3d84:	0c 94 32 20 	jmp	0x4064	; 0x4064 <__fp_nan>

00003d88 <.L_infB>:
    3d88:	0e f4       	brtc	.+2      	; 0x3d8c <.L_inf>
    3d8a:	e0 95       	com	r30

00003d8c <.L_inf>:
    3d8c:	e7 fb       	bst	r30, 7
    3d8e:	0c 94 2c 20 	jmp	0x4058	; 0x4058 <__fp_inf>

00003d92 <__addsf3x>:
    3d92:	e9 2f       	mov	r30, r25
    3d94:	0e 94 54 20 	call	0x40a8	; 0x40a8 <__fp_split3>
    3d98:	58 f3       	brcs	.-42     	; 0x3d70 <.L^B1>
    3d9a:	ba 17       	cp	r27, r26
    3d9c:	62 07       	cpc	r22, r18
    3d9e:	73 07       	cpc	r23, r19
    3da0:	84 07       	cpc	r24, r20
    3da2:	95 07       	cpc	r25, r21
    3da4:	20 f0       	brcs	.+8      	; 0x3dae <.L2^B1>
    3da6:	79 f4       	brne	.+30     	; 0x3dc6 <.L4^B1>
    3da8:	a6 f5       	brtc	.+104    	; 0x3e12 <.L_add>
    3daa:	0c 94 76 20 	jmp	0x40ec	; 0x40ec <__fp_zero>

00003dae <.L2^B1>:
    3dae:	0e f4       	brtc	.+2      	; 0x3db2 <.L3^B1>
    3db0:	e0 95       	com	r30

00003db2 <.L3^B1>:
    3db2:	0b 2e       	mov	r0, r27
    3db4:	ba 2f       	mov	r27, r26
    3db6:	a0 2d       	mov	r26, r0
    3db8:	0b 01       	movw	r0, r22
    3dba:	b9 01       	movw	r22, r18
    3dbc:	90 01       	movw	r18, r0
    3dbe:	0c 01       	movw	r0, r24
    3dc0:	ca 01       	movw	r24, r20
    3dc2:	a0 01       	movw	r20, r0
    3dc4:	11 24       	eor	r1, r1

00003dc6 <.L4^B1>:
    3dc6:	ff 27       	eor	r31, r31
    3dc8:	59 1b       	sub	r21, r25

00003dca <.L5^B1>:
    3dca:	99 f0       	breq	.+38     	; 0x3df2 <.L7^B1>
    3dcc:	59 3f       	cpi	r21, 0xF9	; 249
    3dce:	50 f4       	brcc	.+20     	; 0x3de4 <.L6^B1>
    3dd0:	50 3e       	cpi	r21, 0xE0	; 224
    3dd2:	68 f1       	brcs	.+90     	; 0x3e2e <.L_ret>
    3dd4:	1a 16       	cp	r1, r26
    3dd6:	f0 40       	sbci	r31, 0x00	; 0
    3dd8:	a2 2f       	mov	r26, r18
    3dda:	23 2f       	mov	r18, r19
    3ddc:	34 2f       	mov	r19, r20
    3dde:	44 27       	eor	r20, r20
    3de0:	58 5f       	subi	r21, 0xF8	; 248
    3de2:	f3 cf       	rjmp	.-26     	; 0x3dca <.L5^B1>

00003de4 <.L6^B1>:
    3de4:	46 95       	lsr	r20
    3de6:	37 95       	ror	r19
    3de8:	27 95       	ror	r18
    3dea:	a7 95       	ror	r26
    3dec:	f0 40       	sbci	r31, 0x00	; 0
    3dee:	53 95       	inc	r21
    3df0:	c9 f7       	brne	.-14     	; 0x3de4 <.L6^B1>

00003df2 <.L7^B1>:
    3df2:	7e f4       	brtc	.+30     	; 0x3e12 <.L_add>
    3df4:	1f 16       	cp	r1, r31
    3df6:	ba 0b       	sbc	r27, r26
    3df8:	62 0b       	sbc	r22, r18
    3dfa:	73 0b       	sbc	r23, r19
    3dfc:	84 0b       	sbc	r24, r20
    3dfe:	ba f0       	brmi	.+46     	; 0x3e2e <.L_ret>

00003e00 <.L8^B1>:
    3e00:	91 50       	subi	r25, 0x01	; 1
    3e02:	a1 f0       	breq	.+40     	; 0x3e2c <.L9^B1>
    3e04:	ff 0f       	add	r31, r31
    3e06:	bb 1f       	adc	r27, r27
    3e08:	66 1f       	adc	r22, r22
    3e0a:	77 1f       	adc	r23, r23
    3e0c:	88 1f       	adc	r24, r24
    3e0e:	c2 f7       	brpl	.-16     	; 0x3e00 <.L8^B1>
    3e10:	0e c0       	rjmp	.+28     	; 0x3e2e <.L_ret>

00003e12 <.L_add>:
    3e12:	ba 0f       	add	r27, r26
    3e14:	62 1f       	adc	r22, r18
    3e16:	73 1f       	adc	r23, r19
    3e18:	84 1f       	adc	r24, r20
    3e1a:	48 f4       	brcc	.+18     	; 0x3e2e <.L_ret>
    3e1c:	87 95       	ror	r24
    3e1e:	77 95       	ror	r23
    3e20:	67 95       	ror	r22
    3e22:	b7 95       	ror	r27
    3e24:	f7 95       	ror	r31
    3e26:	9e 3f       	cpi	r25, 0xFE	; 254
    3e28:	08 f0       	brcs	.+2      	; 0x3e2c <.L9^B1>
    3e2a:	b0 cf       	rjmp	.-160    	; 0x3d8c <.L_inf>

00003e2c <.L9^B1>:
    3e2c:	93 95       	inc	r25

00003e2e <.L_ret>:
    3e2e:	88 0f       	add	r24, r24
    3e30:	08 f0       	brcs	.+2      	; 0x3e34 <.L1^B1>
    3e32:	99 27       	eor	r25, r25

00003e34 <.L1^B1>:
    3e34:	ee 0f       	add	r30, r30
    3e36:	97 95       	ror	r25
    3e38:	87 95       	ror	r24
    3e3a:	08 95       	ret

00003e3c <__cmpsf2>:
    3e3c:	0e 94 08 20 	call	0x4010	; 0x4010 <__fp_cmp>
    3e40:	08 f4       	brcc	.+2      	; 0x3e44 <.L1^B1>
    3e42:	81 e0       	ldi	r24, 0x01	; 1

00003e44 <.L1^B1>:
    3e44:	08 95       	ret

00003e46 <__divsf3>:
    3e46:	0e 94 37 1f 	call	0x3e6e	; 0x3e6e <__divsf3x>
    3e4a:	0c 94 43 20 	jmp	0x4086	; 0x4086 <__fp_round>

00003e4e <.L^B1>:
    3e4e:	0e 94 3c 20 	call	0x4078	; 0x4078 <__fp_pscB>
    3e52:	58 f0       	brcs	.+22     	; 0x3e6a <.L_nan>
    3e54:	0e 94 35 20 	call	0x406a	; 0x406a <__fp_pscA>
    3e58:	40 f0       	brcs	.+16     	; 0x3e6a <.L_nan>
    3e5a:	29 f4       	brne	.+10     	; 0x3e66 <.L_zr>
    3e5c:	5f 3f       	cpi	r21, 0xFF	; 255
    3e5e:	29 f0       	breq	.+10     	; 0x3e6a <.L_nan>

00003e60 <.L_inf>:
    3e60:	0c 94 2c 20 	jmp	0x4058	; 0x4058 <__fp_inf>

00003e64 <.L1^B1>:
    3e64:	51 11       	cpse	r21, r1

00003e66 <.L_zr>:
    3e66:	0c 94 77 20 	jmp	0x40ee	; 0x40ee <__fp_szero>

00003e6a <.L_nan>:
    3e6a:	0c 94 32 20 	jmp	0x4064	; 0x4064 <__fp_nan>

00003e6e <__divsf3x>:
    3e6e:	0e 94 54 20 	call	0x40a8	; 0x40a8 <__fp_split3>
    3e72:	68 f3       	brcs	.-38     	; 0x3e4e <.L^B1>

00003e74 <__divsf3_pse>:
    3e74:	99 23       	and	r25, r25
    3e76:	b1 f3       	breq	.-20     	; 0x3e64 <.L1^B1>
    3e78:	55 23       	and	r21, r21
    3e7a:	91 f3       	breq	.-28     	; 0x3e60 <.L_inf>
    3e7c:	95 1b       	sub	r25, r21
    3e7e:	55 0b       	sbc	r21, r21
    3e80:	bb 27       	eor	r27, r27
    3e82:	aa 27       	eor	r26, r26

00003e84 <.L2^B1>:
    3e84:	62 17       	cp	r22, r18
    3e86:	73 07       	cpc	r23, r19
    3e88:	84 07       	cpc	r24, r20
    3e8a:	38 f0       	brcs	.+14     	; 0x3e9a <.L3^B1>
    3e8c:	9f 5f       	subi	r25, 0xFF	; 255
    3e8e:	5f 4f       	sbci	r21, 0xFF	; 255
    3e90:	22 0f       	add	r18, r18
    3e92:	33 1f       	adc	r19, r19
    3e94:	44 1f       	adc	r20, r20
    3e96:	aa 1f       	adc	r26, r26
    3e98:	a9 f3       	breq	.-22     	; 0x3e84 <.L2^B1>

00003e9a <.L3^B1>:
    3e9a:	35 d0       	rcall	.+106    	; 0x3f06 <.L_div>
    3e9c:	0e 2e       	mov	r0, r30
    3e9e:	3a f0       	brmi	.+14     	; 0x3eae <.L5^B1>

00003ea0 <.L4^B1>:
    3ea0:	e0 e8       	ldi	r30, 0x80	; 128
    3ea2:	32 d0       	rcall	.+100    	; 0x3f08 <.L_div1>
    3ea4:	91 50       	subi	r25, 0x01	; 1
    3ea6:	50 40       	sbci	r21, 0x00	; 0
    3ea8:	e6 95       	lsr	r30
    3eaa:	00 1c       	adc	r0, r0
    3eac:	ca f7       	brpl	.-14     	; 0x3ea0 <.L4^B1>

00003eae <.L5^B1>:
    3eae:	2b d0       	rcall	.+86     	; 0x3f06 <.L_div>
    3eb0:	fe 2f       	mov	r31, r30
    3eb2:	29 d0       	rcall	.+82     	; 0x3f06 <.L_div>
    3eb4:	66 0f       	add	r22, r22
    3eb6:	77 1f       	adc	r23, r23
    3eb8:	88 1f       	adc	r24, r24
    3eba:	bb 1f       	adc	r27, r27
    3ebc:	26 17       	cp	r18, r22
    3ebe:	37 07       	cpc	r19, r23
    3ec0:	48 07       	cpc	r20, r24
    3ec2:	ab 07       	cpc	r26, r27
    3ec4:	b0 e8       	ldi	r27, 0x80	; 128
    3ec6:	09 f0       	breq	.+2      	; 0x3eca <.L4^B2>
    3ec8:	bb 0b       	sbc	r27, r27

00003eca <.L4^B2>:
    3eca:	80 2d       	mov	r24, r0
    3ecc:	bf 01       	movw	r22, r30
    3ece:	ff 27       	eor	r31, r31
    3ed0:	93 58       	subi	r25, 0x83	; 131
    3ed2:	5f 4f       	sbci	r21, 0xFF	; 255
    3ed4:	3a f0       	brmi	.+14     	; 0x3ee4 <.L13^B1>
    3ed6:	9e 3f       	cpi	r25, 0xFE	; 254
    3ed8:	51 05       	cpc	r21, r1
    3eda:	78 f0       	brcs	.+30     	; 0x3efa <.L15^B1>
    3edc:	0c 94 2c 20 	jmp	0x4058	; 0x4058 <__fp_inf>

00003ee0 <.L12^B1>:
    3ee0:	0c 94 77 20 	jmp	0x40ee	; 0x40ee <__fp_szero>

00003ee4 <.L13^B1>:
    3ee4:	5f 3f       	cpi	r21, 0xFF	; 255
    3ee6:	e4 f3       	brlt	.-8      	; 0x3ee0 <.L12^B1>
    3ee8:	98 3e       	cpi	r25, 0xE8	; 232
    3eea:	d4 f3       	brlt	.-12     	; 0x3ee0 <.L12^B1>

00003eec <.L14^B1>:
    3eec:	86 95       	lsr	r24
    3eee:	77 95       	ror	r23
    3ef0:	67 95       	ror	r22
    3ef2:	b7 95       	ror	r27
    3ef4:	f7 95       	ror	r31
    3ef6:	9f 5f       	subi	r25, 0xFF	; 255
    3ef8:	c9 f7       	brne	.-14     	; 0x3eec <.L14^B1>

00003efa <.L15^B1>:
    3efa:	88 0f       	add	r24, r24
    3efc:	91 1d       	adc	r25, r1
    3efe:	96 95       	lsr	r25
    3f00:	87 95       	ror	r24
    3f02:	97 f9       	bld	r25, 7
    3f04:	08 95       	ret

00003f06 <.L_div>:
    3f06:	e1 e0       	ldi	r30, 0x01	; 1

00003f08 <.L_div1>:
    3f08:	66 0f       	add	r22, r22
    3f0a:	77 1f       	adc	r23, r23
    3f0c:	88 1f       	adc	r24, r24
    3f0e:	bb 1f       	adc	r27, r27
    3f10:	62 17       	cp	r22, r18
    3f12:	73 07       	cpc	r23, r19
    3f14:	84 07       	cpc	r24, r20
    3f16:	ba 07       	cpc	r27, r26
    3f18:	20 f0       	brcs	.+8      	; 0x3f22 <.L2^B2>
    3f1a:	62 1b       	sub	r22, r18
    3f1c:	73 0b       	sbc	r23, r19
    3f1e:	84 0b       	sbc	r24, r20
    3f20:	ba 0b       	sbc	r27, r26

00003f22 <.L2^B2>:
    3f22:	ee 1f       	adc	r30, r30
    3f24:	88 f7       	brcc	.-30     	; 0x3f08 <.L_div1>
    3f26:	e0 95       	com	r30
    3f28:	08 95       	ret

00003f2a <__fixsfsi>:
    3f2a:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <__fixunssfsi>
    3f2e:	68 94       	set
    3f30:	b1 11       	cpse	r27, r1
    3f32:	0c 94 77 20 	jmp	0x40ee	; 0x40ee <__fp_szero>
    3f36:	08 95       	ret

00003f38 <__fixunssfsi>:
    3f38:	0e 94 5c 20 	call	0x40b8	; 0x40b8 <__fp_splitA>
    3f3c:	88 f0       	brcs	.+34     	; 0x3f60 <.L_err>
    3f3e:	9f 57       	subi	r25, 0x7F	; 127
    3f40:	98 f0       	brcs	.+38     	; 0x3f68 <.L_zr>
    3f42:	b9 2f       	mov	r27, r25
    3f44:	99 27       	eor	r25, r25
    3f46:	b7 51       	subi	r27, 0x17	; 23
    3f48:	b0 f0       	brcs	.+44     	; 0x3f76 <.L4^B1>
    3f4a:	e1 f0       	breq	.+56     	; 0x3f84 <.L_sign>

00003f4c <.L1^B1>:
    3f4c:	66 0f       	add	r22, r22
    3f4e:	77 1f       	adc	r23, r23
    3f50:	88 1f       	adc	r24, r24
    3f52:	99 1f       	adc	r25, r25
    3f54:	1a f0       	brmi	.+6      	; 0x3f5c <.L2^B1>
    3f56:	ba 95       	dec	r27
    3f58:	c9 f7       	brne	.-14     	; 0x3f4c <.L1^B1>
    3f5a:	14 c0       	rjmp	.+40     	; 0x3f84 <.L_sign>

00003f5c <.L2^B1>:
    3f5c:	b1 30       	cpi	r27, 0x01	; 1
    3f5e:	91 f0       	breq	.+36     	; 0x3f84 <.L_sign>

00003f60 <.L_err>:
    3f60:	0e 94 76 20 	call	0x40ec	; 0x40ec <__fp_zero>
    3f64:	b1 e0       	ldi	r27, 0x01	; 1
    3f66:	08 95       	ret

00003f68 <.L_zr>:
    3f68:	0c 94 76 20 	jmp	0x40ec	; 0x40ec <__fp_zero>

00003f6c <.L3^B1>:
    3f6c:	67 2f       	mov	r22, r23
    3f6e:	78 2f       	mov	r23, r24
    3f70:	88 27       	eor	r24, r24
    3f72:	b8 5f       	subi	r27, 0xF8	; 248
    3f74:	39 f0       	breq	.+14     	; 0x3f84 <.L_sign>

00003f76 <.L4^B1>:
    3f76:	b9 3f       	cpi	r27, 0xF9	; 249
    3f78:	cc f3       	brlt	.-14     	; 0x3f6c <.L3^B1>

00003f7a <.L5^B1>:
    3f7a:	86 95       	lsr	r24
    3f7c:	77 95       	ror	r23
    3f7e:	67 95       	ror	r22
    3f80:	b3 95       	inc	r27
    3f82:	d9 f7       	brne	.-10     	; 0x3f7a <.L5^B1>

00003f84 <.L_sign>:
    3f84:	3e f4       	brtc	.+14     	; 0x3f94 <.L6^B1>
    3f86:	90 95       	com	r25
    3f88:	80 95       	com	r24
    3f8a:	70 95       	com	r23
    3f8c:	61 95       	neg	r22
    3f8e:	7f 4f       	sbci	r23, 0xFF	; 255
    3f90:	8f 4f       	sbci	r24, 0xFF	; 255
    3f92:	9f 4f       	sbci	r25, 0xFF	; 255

00003f94 <.L6^B1>:
    3f94:	08 95       	ret

00003f96 <__floatunsisf>:
    3f96:	e8 94       	clt
    3f98:	09 c0       	rjmp	.+18     	; 0x3fac <.L1^B1>

00003f9a <__floatsisf>:
    3f9a:	97 fb       	bst	r25, 7
    3f9c:	3e f4       	brtc	.+14     	; 0x3fac <.L1^B1>
    3f9e:	90 95       	com	r25
    3fa0:	80 95       	com	r24
    3fa2:	70 95       	com	r23
    3fa4:	61 95       	neg	r22
    3fa6:	7f 4f       	sbci	r23, 0xFF	; 255
    3fa8:	8f 4f       	sbci	r24, 0xFF	; 255
    3faa:	9f 4f       	sbci	r25, 0xFF	; 255

00003fac <.L1^B1>:
    3fac:	99 23       	and	r25, r25
    3fae:	a9 f0       	breq	.+42     	; 0x3fda <.L4^B1>
    3fb0:	f9 2f       	mov	r31, r25
    3fb2:	96 e9       	ldi	r25, 0x96	; 150
    3fb4:	bb 27       	eor	r27, r27

00003fb6 <.L2^B1>:
    3fb6:	93 95       	inc	r25
    3fb8:	f6 95       	lsr	r31
    3fba:	87 95       	ror	r24
    3fbc:	77 95       	ror	r23
    3fbe:	67 95       	ror	r22
    3fc0:	b7 95       	ror	r27
    3fc2:	f1 11       	cpse	r31, r1
    3fc4:	f8 cf       	rjmp	.-16     	; 0x3fb6 <.L2^B1>
    3fc6:	fa f4       	brpl	.+62     	; 0x4006 <.L_pack>
    3fc8:	bb 0f       	add	r27, r27
    3fca:	11 f4       	brne	.+4      	; 0x3fd0 <.L3^B1>
    3fcc:	60 ff       	sbrs	r22, 0
    3fce:	1b c0       	rjmp	.+54     	; 0x4006 <.L_pack>

00003fd0 <.L3^B1>:
    3fd0:	6f 5f       	subi	r22, 0xFF	; 255
    3fd2:	7f 4f       	sbci	r23, 0xFF	; 255
    3fd4:	8f 4f       	sbci	r24, 0xFF	; 255
    3fd6:	9f 4f       	sbci	r25, 0xFF	; 255
    3fd8:	16 c0       	rjmp	.+44     	; 0x4006 <.L_pack>

00003fda <.L4^B1>:
    3fda:	88 23       	and	r24, r24
    3fdc:	11 f0       	breq	.+4      	; 0x3fe2 <.L5^B1>
    3fde:	96 e9       	ldi	r25, 0x96	; 150
    3fe0:	11 c0       	rjmp	.+34     	; 0x4004 <.L8^B1>

00003fe2 <.L5^B1>:
    3fe2:	77 23       	and	r23, r23
    3fe4:	21 f0       	breq	.+8      	; 0x3fee <.L6^B1>
    3fe6:	9e e8       	ldi	r25, 0x8E	; 142
    3fe8:	87 2f       	mov	r24, r23
    3fea:	76 2f       	mov	r23, r22
    3fec:	05 c0       	rjmp	.+10     	; 0x3ff8 <.L7^B1>

00003fee <.L6^B1>:
    3fee:	66 23       	and	r22, r22
    3ff0:	71 f0       	breq	.+28     	; 0x400e <.L9^B1>
    3ff2:	96 e8       	ldi	r25, 0x86	; 134
    3ff4:	86 2f       	mov	r24, r22
    3ff6:	70 e0       	ldi	r23, 0x00	; 0

00003ff8 <.L7^B1>:
    3ff8:	60 e0       	ldi	r22, 0x00	; 0
    3ffa:	2a f0       	brmi	.+10     	; 0x4006 <.L_pack>

00003ffc <.L10^B1>:
    3ffc:	9a 95       	dec	r25
    3ffe:	66 0f       	add	r22, r22
    4000:	77 1f       	adc	r23, r23
    4002:	88 1f       	adc	r24, r24

00004004 <.L8^B1>:
    4004:	da f7       	brpl	.-10     	; 0x3ffc <.L10^B1>

00004006 <.L_pack>:
    4006:	88 0f       	add	r24, r24
    4008:	96 95       	lsr	r25
    400a:	87 95       	ror	r24
    400c:	97 f9       	bld	r25, 7

0000400e <.L9^B1>:
    400e:	08 95       	ret

00004010 <__fp_cmp>:
    4010:	99 0f       	add	r25, r25
    4012:	00 08       	sbc	r0, r0
    4014:	55 0f       	add	r21, r21
    4016:	aa 0b       	sbc	r26, r26
    4018:	e0 e8       	ldi	r30, 0x80	; 128
    401a:	fe ef       	ldi	r31, 0xFE	; 254
    401c:	16 16       	cp	r1, r22
    401e:	17 06       	cpc	r1, r23
    4020:	e8 07       	cpc	r30, r24
    4022:	f9 07       	cpc	r31, r25
    4024:	c0 f0       	brcs	.+48     	; 0x4056 <.L9^B1>
    4026:	12 16       	cp	r1, r18
    4028:	13 06       	cpc	r1, r19
    402a:	e4 07       	cpc	r30, r20
    402c:	f5 07       	cpc	r31, r21
    402e:	98 f0       	brcs	.+38     	; 0x4056 <.L9^B1>
    4030:	62 1b       	sub	r22, r18
    4032:	73 0b       	sbc	r23, r19
    4034:	84 0b       	sbc	r24, r20
    4036:	95 0b       	sbc	r25, r21
    4038:	39 f4       	brne	.+14     	; 0x4048 <.L1^B1>
    403a:	0a 26       	eor	r0, r26
    403c:	61 f0       	breq	.+24     	; 0x4056 <.L9^B1>
    403e:	23 2b       	or	r18, r19
    4040:	24 2b       	or	r18, r20
    4042:	25 2b       	or	r18, r21
    4044:	21 f4       	brne	.+8      	; 0x404e <.L2^B1>
    4046:	08 95       	ret

00004048 <.L1^B1>:
    4048:	0a 26       	eor	r0, r26
    404a:	09 f4       	brne	.+2      	; 0x404e <.L2^B1>
    404c:	a1 40       	sbci	r26, 0x01	; 1

0000404e <.L2^B1>:
    404e:	a6 95       	lsr	r26
    4050:	8f ef       	ldi	r24, 0xFF	; 255
    4052:	81 1d       	adc	r24, r1
    4054:	81 1d       	adc	r24, r1

00004056 <.L9^B1>:
    4056:	08 95       	ret

00004058 <__fp_inf>:
    4058:	97 f9       	bld	r25, 7
    405a:	9f 67       	ori	r25, 0x7F	; 127
    405c:	80 e8       	ldi	r24, 0x80	; 128
    405e:	70 e0       	ldi	r23, 0x00	; 0
    4060:	60 e0       	ldi	r22, 0x00	; 0
    4062:	08 95       	ret

00004064 <__fp_nan>:
    4064:	9f ef       	ldi	r25, 0xFF	; 255
    4066:	80 ec       	ldi	r24, 0xC0	; 192
    4068:	08 95       	ret

0000406a <__fp_pscA>:
    406a:	00 24       	eor	r0, r0
    406c:	0a 94       	dec	r0
    406e:	16 16       	cp	r1, r22
    4070:	17 06       	cpc	r1, r23
    4072:	18 06       	cpc	r1, r24
    4074:	09 06       	cpc	r0, r25
    4076:	08 95       	ret

00004078 <__fp_pscB>:
    4078:	00 24       	eor	r0, r0
    407a:	0a 94       	dec	r0
    407c:	12 16       	cp	r1, r18
    407e:	13 06       	cpc	r1, r19
    4080:	14 06       	cpc	r1, r20
    4082:	05 06       	cpc	r0, r21
    4084:	08 95       	ret

00004086 <__fp_round>:
    4086:	09 2e       	mov	r0, r25
    4088:	03 94       	inc	r0
    408a:	00 0c       	add	r0, r0
    408c:	11 f4       	brne	.+4      	; 0x4092 <.L1^B1>
    408e:	88 23       	and	r24, r24
    4090:	52 f0       	brmi	.+20     	; 0x40a6 <.L3^B1>

00004092 <.L1^B1>:
    4092:	bb 0f       	add	r27, r27
    4094:	40 f4       	brcc	.+16     	; 0x40a6 <.L3^B1>
    4096:	bf 2b       	or	r27, r31
    4098:	11 f4       	brne	.+4      	; 0x409e <.L2^B1>
    409a:	60 ff       	sbrs	r22, 0
    409c:	04 c0       	rjmp	.+8      	; 0x40a6 <.L3^B1>

0000409e <.L2^B1>:
    409e:	6f 5f       	subi	r22, 0xFF	; 255
    40a0:	7f 4f       	sbci	r23, 0xFF	; 255
    40a2:	8f 4f       	sbci	r24, 0xFF	; 255
    40a4:	9f 4f       	sbci	r25, 0xFF	; 255

000040a6 <.L3^B1>:
    40a6:	08 95       	ret

000040a8 <__fp_split3>:
    40a8:	57 fd       	sbrc	r21, 7
    40aa:	90 58       	subi	r25, 0x80	; 128
    40ac:	44 0f       	add	r20, r20
    40ae:	55 1f       	adc	r21, r21
    40b0:	59 f0       	breq	.+22     	; 0x40c8 <.L4^B1>
    40b2:	5f 3f       	cpi	r21, 0xFF	; 255
    40b4:	71 f0       	breq	.+28     	; 0x40d2 <.L5^B1>

000040b6 <.L1^B1>:
    40b6:	47 95       	ror	r20

000040b8 <__fp_splitA>:
    40b8:	88 0f       	add	r24, r24
    40ba:	97 fb       	bst	r25, 7
    40bc:	99 1f       	adc	r25, r25
    40be:	61 f0       	breq	.+24     	; 0x40d8 <.L6^B1>
    40c0:	9f 3f       	cpi	r25, 0xFF	; 255
    40c2:	79 f0       	breq	.+30     	; 0x40e2 <.L7^B1>

000040c4 <.L3^B1>:
    40c4:	87 95       	ror	r24
    40c6:	08 95       	ret

000040c8 <.L4^B1>:
    40c8:	12 16       	cp	r1, r18
    40ca:	13 06       	cpc	r1, r19
    40cc:	14 06       	cpc	r1, r20
    40ce:	55 1f       	adc	r21, r21
    40d0:	f2 cf       	rjmp	.-28     	; 0x40b6 <.L1^B1>

000040d2 <.L5^B1>:
    40d2:	46 95       	lsr	r20
    40d4:	f1 df       	rcall	.-30     	; 0x40b8 <__fp_splitA>
    40d6:	08 c0       	rjmp	.+16     	; 0x40e8 <.L8^B1>

000040d8 <.L6^B1>:
    40d8:	16 16       	cp	r1, r22
    40da:	17 06       	cpc	r1, r23
    40dc:	18 06       	cpc	r1, r24
    40de:	99 1f       	adc	r25, r25
    40e0:	f1 cf       	rjmp	.-30     	; 0x40c4 <.L3^B1>

000040e2 <.L7^B1>:
    40e2:	86 95       	lsr	r24
    40e4:	71 05       	cpc	r23, r1
    40e6:	61 05       	cpc	r22, r1

000040e8 <.L8^B1>:
    40e8:	08 94       	sec
    40ea:	08 95       	ret

000040ec <__fp_zero>:
    40ec:	e8 94       	clt

000040ee <__fp_szero>:
    40ee:	bb 27       	eor	r27, r27
    40f0:	66 27       	eor	r22, r22
    40f2:	77 27       	eor	r23, r23
    40f4:	cb 01       	movw	r24, r22
    40f6:	97 f9       	bld	r25, 7
    40f8:	08 95       	ret

000040fa <__gesf2>:
    40fa:	0e 94 08 20 	call	0x4010	; 0x4010 <__fp_cmp>
    40fe:	08 f4       	brcc	.+2      	; 0x4102 <.L1^B1>
    4100:	8f ef       	ldi	r24, 0xFF	; 255

00004102 <.L1^B1>:
    4102:	08 95       	ret

00004104 <__mulsf3>:
    4104:	0e 94 95 20 	call	0x412a	; 0x412a <__mulsf3x>
    4108:	0c 94 43 20 	jmp	0x4086	; 0x4086 <__fp_round>

0000410c <.L^B1>:
    410c:	0e 94 35 20 	call	0x406a	; 0x406a <__fp_pscA>
    4110:	38 f0       	brcs	.+14     	; 0x4120 <.L1^B1>
    4112:	0e 94 3c 20 	call	0x4078	; 0x4078 <__fp_pscB>
    4116:	20 f0       	brcs	.+8      	; 0x4120 <.L1^B1>
    4118:	95 23       	and	r25, r21
    411a:	11 f0       	breq	.+4      	; 0x4120 <.L1^B1>
    411c:	0c 94 2c 20 	jmp	0x4058	; 0x4058 <__fp_inf>

00004120 <.L1^B1>:
    4120:	0c 94 32 20 	jmp	0x4064	; 0x4064 <__fp_nan>

00004124 <.L2^B1>:
    4124:	11 24       	eor	r1, r1
    4126:	0c 94 77 20 	jmp	0x40ee	; 0x40ee <__fp_szero>

0000412a <__mulsf3x>:
    412a:	0e 94 54 20 	call	0x40a8	; 0x40a8 <__fp_split3>
    412e:	70 f3       	brcs	.-36     	; 0x410c <.L^B1>

00004130 <__mulsf3_pse>:
    4130:	95 9f       	mul	r25, r21
    4132:	c1 f3       	breq	.-16     	; 0x4124 <.L2^B1>
    4134:	95 0f       	add	r25, r21
    4136:	50 e0       	ldi	r21, 0x00	; 0
    4138:	55 1f       	adc	r21, r21
    413a:	62 9f       	mul	r22, r18
    413c:	f0 01       	movw	r30, r0
    413e:	72 9f       	mul	r23, r18
    4140:	bb 27       	eor	r27, r27
    4142:	f0 0d       	add	r31, r0
    4144:	b1 1d       	adc	r27, r1
    4146:	63 9f       	mul	r22, r19
    4148:	aa 27       	eor	r26, r26
    414a:	f0 0d       	add	r31, r0
    414c:	b1 1d       	adc	r27, r1
    414e:	aa 1f       	adc	r26, r26
    4150:	64 9f       	mul	r22, r20
    4152:	66 27       	eor	r22, r22
    4154:	b0 0d       	add	r27, r0
    4156:	a1 1d       	adc	r26, r1
    4158:	66 1f       	adc	r22, r22
    415a:	82 9f       	mul	r24, r18
    415c:	22 27       	eor	r18, r18
    415e:	b0 0d       	add	r27, r0
    4160:	a1 1d       	adc	r26, r1
    4162:	62 1f       	adc	r22, r18
    4164:	73 9f       	mul	r23, r19
    4166:	b0 0d       	add	r27, r0
    4168:	a1 1d       	adc	r26, r1
    416a:	62 1f       	adc	r22, r18
    416c:	83 9f       	mul	r24, r19
    416e:	a0 0d       	add	r26, r0
    4170:	61 1d       	adc	r22, r1
    4172:	22 1f       	adc	r18, r18
    4174:	74 9f       	mul	r23, r20
    4176:	33 27       	eor	r19, r19
    4178:	a0 0d       	add	r26, r0
    417a:	61 1d       	adc	r22, r1
    417c:	23 1f       	adc	r18, r19
    417e:	84 9f       	mul	r24, r20
    4180:	60 0d       	add	r22, r0
    4182:	21 1d       	adc	r18, r1
    4184:	82 2f       	mov	r24, r18
    4186:	76 2f       	mov	r23, r22
    4188:	6a 2f       	mov	r22, r26
    418a:	11 24       	eor	r1, r1
    418c:	9f 57       	subi	r25, 0x7F	; 127
    418e:	50 40       	sbci	r21, 0x00	; 0
    4190:	9a f0       	brmi	.+38     	; 0x41b8 <.L13^B1>
    4192:	f1 f0       	breq	.+60     	; 0x41d0 <.L15^B1>

00004194 <.L10^B1>:
    4194:	88 23       	and	r24, r24
    4196:	4a f0       	brmi	.+18     	; 0x41aa <.L11^B1>
    4198:	ee 0f       	add	r30, r30
    419a:	ff 1f       	adc	r31, r31
    419c:	bb 1f       	adc	r27, r27
    419e:	66 1f       	adc	r22, r22
    41a0:	77 1f       	adc	r23, r23
    41a2:	88 1f       	adc	r24, r24
    41a4:	91 50       	subi	r25, 0x01	; 1
    41a6:	50 40       	sbci	r21, 0x00	; 0
    41a8:	a9 f7       	brne	.-22     	; 0x4194 <.L10^B1>

000041aa <.L11^B1>:
    41aa:	9e 3f       	cpi	r25, 0xFE	; 254
    41ac:	51 05       	cpc	r21, r1
    41ae:	80 f0       	brcs	.+32     	; 0x41d0 <.L15^B1>
    41b0:	0c 94 2c 20 	jmp	0x4058	; 0x4058 <__fp_inf>

000041b4 <.L12^B1>:
    41b4:	0c 94 77 20 	jmp	0x40ee	; 0x40ee <__fp_szero>

000041b8 <.L13^B1>:
    41b8:	5f 3f       	cpi	r21, 0xFF	; 255
    41ba:	e4 f3       	brlt	.-8      	; 0x41b4 <.L12^B1>
    41bc:	98 3e       	cpi	r25, 0xE8	; 232
    41be:	d4 f3       	brlt	.-12     	; 0x41b4 <.L12^B1>

000041c0 <.L14^B1>:
    41c0:	86 95       	lsr	r24
    41c2:	77 95       	ror	r23
    41c4:	67 95       	ror	r22
    41c6:	b7 95       	ror	r27
    41c8:	f7 95       	ror	r31
    41ca:	e7 95       	ror	r30
    41cc:	9f 5f       	subi	r25, 0xFF	; 255
    41ce:	c1 f7       	brne	.-16     	; 0x41c0 <.L14^B1>

000041d0 <.L15^B1>:
    41d0:	fe 2b       	or	r31, r30
    41d2:	88 0f       	add	r24, r24
    41d4:	91 1d       	adc	r25, r1
    41d6:	96 95       	lsr	r25
    41d8:	87 95       	ror	r24
    41da:	97 f9       	bld	r25, 7
    41dc:	08 95       	ret

000041de <strcmp>:
    41de:	fb 01       	movw	r30, r22
    41e0:	dc 01       	movw	r26, r24

000041e2 <.L_strcmp_loop>:
    41e2:	8d 91       	ld	r24, X+
    41e4:	01 90       	ld	r0, Z+
    41e6:	80 19       	sub	r24, r0
    41e8:	01 10       	cpse	r0, r1
    41ea:	d9 f3       	breq	.-10     	; 0x41e2 <.L_strcmp_loop>
    41ec:	99 0b       	sbc	r25, r25
    41ee:	08 95       	ret

000041f0 <itoa>:
    41f0:	45 32       	cpi	r20, 0x25	; 37
    41f2:	51 05       	cpc	r21, r1
    41f4:	20 f4       	brcc	.+8      	; 0x41fe <.L1^B1>
    41f6:	42 30       	cpi	r20, 0x02	; 2
    41f8:	10 f0       	brcs	.+4      	; 0x41fe <.L1^B1>
    41fa:	0c 94 03 21 	jmp	0x4206	; 0x4206 <__itoa_ncheck>

000041fe <.L1^B1>:
    41fe:	fb 01       	movw	r30, r22
    4200:	10 82       	st	Z, r1
    4202:	cb 01       	movw	r24, r22
    4204:	08 95       	ret

00004206 <__itoa_ncheck>:
    4206:	bb 27       	eor	r27, r27
    4208:	4a 30       	cpi	r20, 0x0A	; 10
    420a:	31 f4       	brne	.+12     	; 0x4218 <.L1^B1>
    420c:	99 23       	and	r25, r25
    420e:	22 f4       	brpl	.+8      	; 0x4218 <.L1^B1>
    4210:	bd e2       	ldi	r27, 0x2D	; 45
    4212:	90 95       	com	r25
    4214:	81 95       	neg	r24
    4216:	9f 4f       	sbci	r25, 0xFF	; 255

00004218 <.L1^B1>:
    4218:	0c 94 0f 21 	jmp	0x421e	; 0x421e <__utoa_common>

0000421c <__utoa_ncheck>:
    421c:	bb 27       	eor	r27, r27

0000421e <__utoa_common>:
    421e:	fb 01       	movw	r30, r22
    4220:	55 27       	eor	r21, r21

00004222 <.L1^B1>:
    4222:	aa 27       	eor	r26, r26

00004224 <.L2^B1>:
    4224:	88 0f       	add	r24, r24
    4226:	99 1f       	adc	r25, r25
    4228:	aa 1f       	adc	r26, r26
    422a:	a4 17       	cp	r26, r20
    422c:	10 f0       	brcs	.+4      	; 0x4232 <.L3^B1>
    422e:	a4 1b       	sub	r26, r20
    4230:	83 95       	inc	r24

00004232 <.L3^B1>:
    4232:	50 51       	subi	r21, 0x10	; 16
    4234:	b9 f7       	brne	.-18     	; 0x4224 <.L2^B1>
    4236:	a0 5d       	subi	r26, 0xD0	; 208
    4238:	aa 33       	cpi	r26, 0x3A	; 58
    423a:	08 f0       	brcs	.+2      	; 0x423e <.L4^B1>
    423c:	a9 5d       	subi	r26, 0xD9	; 217

0000423e <.L4^B1>:
    423e:	a1 93       	st	Z+, r26
    4240:	00 97       	sbiw	r24, 0x00	; 0
    4242:	79 f7       	brne	.-34     	; 0x4222 <.L1^B1>
    4244:	b1 11       	cpse	r27, r1
    4246:	b1 93       	st	Z+, r27
    4248:	11 92       	st	Z+, r1
    424a:	cb 01       	movw	r24, r22
    424c:	0c 94 a1 23 	jmp	0x4742	; 0x4742 <strrev>

00004250 <snprintf>:
    4250:	0f 93       	push	r16
    4252:	1f 93       	push	r17
    4254:	cf 93       	push	r28
    4256:	df 93       	push	r29
    4258:	cd b7       	in	r28, 0x3d	; 61
    425a:	de b7       	in	r29, 0x3e	; 62
    425c:	2e 97       	sbiw	r28, 0x0e	; 14
    425e:	0f b6       	in	r0, 0x3f	; 63
    4260:	f8 94       	cli
    4262:	de bf       	out	0x3e, r29	; 62
    4264:	0f be       	out	0x3f, r0	; 63
    4266:	cd bf       	out	0x3d, r28	; 61
    4268:	0e 89       	ldd	r16, Y+22	; 0x16
    426a:	1f 89       	ldd	r17, Y+23	; 0x17
    426c:	86 e0       	ldi	r24, 0x06	; 6
    426e:	8c 83       	std	Y+4, r24	; 0x04
    4270:	1a 83       	std	Y+2, r17	; 0x02
    4272:	09 83       	std	Y+1, r16	; 0x01
    4274:	88 8d       	ldd	r24, Y+24	; 0x18
    4276:	99 8d       	ldd	r25, Y+25	; 0x19
    4278:	81 30       	cpi	r24, 0x01	; 1
    427a:	20 e8       	ldi	r18, 0x80	; 128
    427c:	92 07       	cpc	r25, r18
    427e:	10 f0       	brcs	.+4      	; 0x4284 <.L2>
    4280:	80 e0       	ldi	r24, 0x00	; 0
    4282:	90 e8       	ldi	r25, 0x80	; 128

00004284 <.L2>:
    4284:	01 97       	sbiw	r24, 0x01	; 1
    4286:	9e 83       	std	Y+6, r25	; 0x06
    4288:	8d 83       	std	Y+5, r24	; 0x05
    428a:	ae 01       	movw	r20, r28
    428c:	44 5e       	subi	r20, 0xE4	; 228
    428e:	5f 4f       	sbci	r21, 0xFF	; 255
    4290:	6a 8d       	ldd	r22, Y+26	; 0x1a
    4292:	7b 8d       	ldd	r23, Y+27	; 0x1b
    4294:	ce 01       	movw	r24, r28
    4296:	01 96       	adiw	r24, 0x01	; 1
    4298:	0e 94 67 21 	call	0x42ce	; 0x42ce <vfprintf>
    429c:	4d 81       	ldd	r20, Y+5	; 0x05
    429e:	5e 81       	ldd	r21, Y+6	; 0x06
    42a0:	57 fd       	sbrc	r21, 7
    42a2:	0a c0       	rjmp	.+20     	; 0x42b8 <.L1>
    42a4:	2f 81       	ldd	r18, Y+7	; 0x07
    42a6:	38 85       	ldd	r19, Y+8	; 0x08
    42a8:	42 17       	cp	r20, r18
    42aa:	53 07       	cpc	r21, r19
    42ac:	0c f4       	brge	.+2      	; 0x42b0 <.L4>
    42ae:	9a 01       	movw	r18, r20

000042b0 <.L4>:
    42b0:	02 0f       	add	r16, r18
    42b2:	13 1f       	adc	r17, r19
    42b4:	f8 01       	movw	r30, r16
    42b6:	10 82       	st	Z, r1

000042b8 <.L1>:
    42b8:	2e 96       	adiw	r28, 0x0e	; 14
    42ba:	0f b6       	in	r0, 0x3f	; 63
    42bc:	f8 94       	cli
    42be:	de bf       	out	0x3e, r29	; 62
    42c0:	0f be       	out	0x3f, r0	; 63
    42c2:	cd bf       	out	0x3d, r28	; 61
    42c4:	df 91       	pop	r29
    42c6:	cf 91       	pop	r28
    42c8:	1f 91       	pop	r17
    42ca:	0f 91       	pop	r16
    42cc:	08 95       	ret

000042ce <vfprintf>:
    42ce:	5f 92       	push	r5
    42d0:	6f 92       	push	r6
    42d2:	7f 92       	push	r7
    42d4:	8f 92       	push	r8
    42d6:	9f 92       	push	r9
    42d8:	af 92       	push	r10
    42da:	bf 92       	push	r11
    42dc:	cf 92       	push	r12
    42de:	df 92       	push	r13
    42e0:	ef 92       	push	r14
    42e2:	ff 92       	push	r15
    42e4:	0f 93       	push	r16
    42e6:	1f 93       	push	r17
    42e8:	cf 93       	push	r28
    42ea:	df 93       	push	r29
    42ec:	cd b7       	in	r28, 0x3d	; 61
    42ee:	de b7       	in	r29, 0x3e	; 62
    42f0:	2f 97       	sbiw	r28, 0x0f	; 15
    42f2:	0f b6       	in	r0, 0x3f	; 63
    42f4:	f8 94       	cli
    42f6:	de bf       	out	0x3e, r29	; 62
    42f8:	0f be       	out	0x3f, r0	; 63
    42fa:	cd bf       	out	0x3d, r28	; 61
    42fc:	6c 01       	movw	r12, r24
    42fe:	7b 01       	movw	r14, r22
    4300:	8a 01       	movw	r16, r20
    4302:	dc 01       	movw	r26, r24
    4304:	17 96       	adiw	r26, 0x07	; 7
    4306:	1c 92       	st	X, r1
    4308:	1e 92       	st	-X, r1
    430a:	16 97       	sbiw	r26, 0x06	; 6
    430c:	13 96       	adiw	r26, 0x03	; 3
    430e:	8c 91       	ld	r24, X
    4310:	81 ff       	sbrs	r24, 1
    4312:	fe c1       	rjmp	.+1020   	; 0x4710 <.L79>
    4314:	2a e0       	ldi	r18, 0x0A	; 10
    4316:	52 2e       	mov	r5, r18

00004318 <.L3>:
    4318:	f6 01       	movw	r30, r12
    431a:	93 81       	ldd	r25, Z+3	; 0x03
    431c:	f7 01       	movw	r30, r14
    431e:	93 fd       	sbrc	r25, 3
    4320:	85 91       	lpm	r24, Z+
    4322:	93 ff       	sbrs	r25, 3
    4324:	81 91       	ld	r24, Z+
    4326:	7f 01       	movw	r14, r30
    4328:	88 23       	and	r24, r24
    432a:	09 f4       	brne	.+2      	; 0x432e <L0^A+0x2>

0000432c <L0^A>:
    432c:	73 c0       	rjmp	.+230    	; 0x4414 <.L4>
    432e:	85 32       	cpi	r24, 0x25	; 37
    4330:	39 f4       	brne	.+14     	; 0x4340 <.L5>
    4332:	93 fd       	sbrc	r25, 3
    4334:	85 91       	lpm	r24, Z+
    4336:	93 ff       	sbrs	r25, 3
    4338:	81 91       	ld	r24, Z+
    433a:	7f 01       	movw	r14, r30
    433c:	85 32       	cpi	r24, 0x25	; 37
    433e:	29 f4       	brne	.+10     	; 0x434a <.L80>

00004340 <.L5>:
    4340:	b6 01       	movw	r22, r12
    4342:	90 e0       	ldi	r25, 0x00	; 0
    4344:	0e 94 b1 23 	call	0x4762	; 0x4762 <fputc>
    4348:	e7 cf       	rjmp	.-50     	; 0x4318 <.L3>

0000434a <.L80>:
    434a:	91 2c       	mov	r9, r1
    434c:	61 2c       	mov	r6, r1
    434e:	71 2c       	mov	r7, r1

00004350 <.L6>:
    4350:	ff e1       	ldi	r31, 0x1F	; 31
    4352:	f7 15       	cp	r31, r7
    4354:	08 f4       	brcc	.+2      	; 0x4358 <L0^A+0x2>

00004356 <L0^A>:
    4356:	46 c0       	rjmp	.+140    	; 0x43e4 <.L8>
    4358:	8b 32       	cpi	r24, 0x2B	; 43
    435a:	c9 f1       	breq	.+114    	; 0x43ce <.L9>
    435c:	f8 f4       	brcc	.+62     	; 0x439c <.L10>
    435e:	80 32       	cpi	r24, 0x20	; 32
    4360:	c1 f1       	breq	.+112    	; 0x43d2 <.L11>
    4362:	83 32       	cpi	r24, 0x23	; 35
    4364:	09 f4       	brne	.+2      	; 0x4368 <.L13>

00004366 <L0^A>:
    4366:	3b c0       	rjmp	.+118    	; 0x43de <.L12>

00004368 <.L13>:
    4368:	83 36       	cpi	r24, 0x63	; 99
    436a:	09 f4       	brne	.+2      	; 0x436e <L0^A+0x2>

0000436c <L0^A>:
    436c:	9c c0       	rjmp	.+312    	; 0x44a6 <.L25>
    436e:	83 37       	cpi	r24, 0x73	; 115
    4370:	09 f4       	brne	.+2      	; 0x4374 <L0^A+0x2>

00004372 <L0^A>:
    4372:	a5 c0       	rjmp	.+330    	; 0x44be <.L26>
    4374:	83 35       	cpi	r24, 0x53	; 83
    4376:	09 f0       	breq	.+2      	; 0x437a <L0^A+0x2>

00004378 <L0^A>:
    4378:	c8 c0       	rjmp	.+400    	; 0x450a <.L128>
    437a:	f8 01       	movw	r30, r16
    437c:	a1 90       	ld	r10, Z+
    437e:	b1 90       	ld	r11, Z+
    4380:	8f 01       	movw	r16, r30
    4382:	69 2d       	mov	r22, r9
    4384:	70 e0       	ldi	r23, 0x00	; 0
    4386:	76 fc       	sbrc	r7, 6
    4388:	02 c0       	rjmp	.+4      	; 0x438e <.L32>
    438a:	6f ef       	ldi	r22, 0xFF	; 255
    438c:	7f ef       	ldi	r23, 0xFF	; 255

0000438e <.L32>:
    438e:	c5 01       	movw	r24, r10
    4390:	0e 94 8b 23 	call	0x4716	; 0x4716 <strnlen_P>
    4394:	4c 01       	movw	r8, r24
    4396:	68 94       	set
    4398:	77 f8       	bld	r7, 7
    439a:	71 c0       	rjmp	.+226    	; 0x447e <.L31>

0000439c <.L10>:
    439c:	8d 32       	cpi	r24, 0x2D	; 45
    439e:	e1 f0       	breq	.+56     	; 0x43d8 <.L14>
    43a0:	80 33       	cpi	r24, 0x30	; 48
    43a2:	51 f0       	breq	.+20     	; 0x43b8 <.L15>
    43a4:	20 ed       	ldi	r18, 0xD0	; 208
    43a6:	28 0f       	add	r18, r24
    43a8:	2a 30       	cpi	r18, 0x0A	; 10
    43aa:	48 f1       	brcs	.+82     	; 0x43fe <.L16>
    43ac:	8e 32       	cpi	r24, 0x2E	; 46
    43ae:	09 f0       	breq	.+2      	; 0x43b2 <.L21>

000043b0 <L0^A>:
    43b0:	4b c0       	rjmp	.+150    	; 0x4448 <.L22>

000043b2 <.L21>:
    43b2:	68 94       	set
    43b4:	76 f8       	bld	r7, 6
    43b6:	02 c0       	rjmp	.+4      	; 0x43bc <.L18>

000043b8 <.L15>:
    43b8:	68 94       	set
    43ba:	70 f8       	bld	r7, 0

000043bc <.L18>:
    43bc:	f7 01       	movw	r30, r14
    43be:	93 fd       	sbrc	r25, 3
    43c0:	85 91       	lpm	r24, Z+
    43c2:	93 ff       	sbrs	r25, 3
    43c4:	81 91       	ld	r24, Z+
    43c6:	7f 01       	movw	r14, r30
    43c8:	81 11       	cpse	r24, r1
    43ca:	c2 cf       	rjmp	.-124    	; 0x4350 <.L6>
    43cc:	45 c0       	rjmp	.+138    	; 0x4458 <.L19>

000043ce <.L9>:
    43ce:	68 94       	set
    43d0:	71 f8       	bld	r7, 1

000043d2 <.L11>:
    43d2:	68 94       	set
    43d4:	72 f8       	bld	r7, 2
    43d6:	f2 cf       	rjmp	.-28     	; 0x43bc <.L18>

000043d8 <.L14>:
    43d8:	68 94       	set
    43da:	73 f8       	bld	r7, 3
    43dc:	ef cf       	rjmp	.-34     	; 0x43bc <.L18>

000043de <.L12>:
    43de:	68 94       	set
    43e0:	74 f8       	bld	r7, 4
    43e2:	ec cf       	rjmp	.-40     	; 0x43bc <.L18>

000043e4 <.L8>:
    43e4:	77 fc       	sbrc	r7, 7
    43e6:	38 c0       	rjmp	.+112    	; 0x4458 <.L19>
    43e8:	20 ed       	ldi	r18, 0xD0	; 208
    43ea:	28 0f       	add	r18, r24
    43ec:	2a 30       	cpi	r18, 0x0A	; 10
    43ee:	70 f4       	brcc	.+28     	; 0x440c <.L20>
    43f0:	76 fe       	sbrs	r7, 6
    43f2:	05 c0       	rjmp	.+10     	; 0x43fe <.L16>
    43f4:	95 9c       	mul	r9, r5
    43f6:	20 0d       	add	r18, r0
    43f8:	11 24       	eor	r1, r1
    43fa:	92 2e       	mov	r9, r18
    43fc:	df cf       	rjmp	.-66     	; 0x43bc <.L18>

000043fe <.L16>:
    43fe:	65 9c       	mul	r6, r5
    4400:	20 0d       	add	r18, r0
    4402:	11 24       	eor	r1, r1
    4404:	62 2e       	mov	r6, r18
    4406:	68 94       	set
    4408:	75 f8       	bld	r7, 5
    440a:	d8 cf       	rjmp	.-80     	; 0x43bc <.L18>

0000440c <.L20>:
    440c:	8e 32       	cpi	r24, 0x2E	; 46
    440e:	e1 f4       	brne	.+56     	; 0x4448 <.L22>
    4410:	76 fe       	sbrs	r7, 6
    4412:	cf cf       	rjmp	.-98     	; 0x43b2 <.L21>

00004414 <.L4>:
    4414:	d6 01       	movw	r26, r12
    4416:	16 96       	adiw	r26, 0x06	; 6
    4418:	8d 91       	ld	r24, X+
    441a:	9c 91       	ld	r25, X

0000441c <.L1>:
    441c:	2f 96       	adiw	r28, 0x0f	; 15
    441e:	0f b6       	in	r0, 0x3f	; 63
    4420:	f8 94       	cli
    4422:	de bf       	out	0x3e, r29	; 62
    4424:	0f be       	out	0x3f, r0	; 63
    4426:	cd bf       	out	0x3d, r28	; 61
    4428:	df 91       	pop	r29
    442a:	cf 91       	pop	r28
    442c:	1f 91       	pop	r17
    442e:	0f 91       	pop	r16
    4430:	ff 90       	pop	r15
    4432:	ef 90       	pop	r14
    4434:	df 90       	pop	r13
    4436:	cf 90       	pop	r12
    4438:	bf 90       	pop	r11
    443a:	af 90       	pop	r10
    443c:	9f 90       	pop	r9
    443e:	8f 90       	pop	r8
    4440:	7f 90       	pop	r7
    4442:	6f 90       	pop	r6
    4444:	5f 90       	pop	r5
    4446:	08 95       	ret

00004448 <.L22>:
    4448:	8c 36       	cpi	r24, 0x6C	; 108
    444a:	19 f4       	brne	.+6      	; 0x4452 <.L23>
    444c:	68 94       	set
    444e:	77 f8       	bld	r7, 7
    4450:	b5 cf       	rjmp	.-150    	; 0x43bc <.L18>

00004452 <.L23>:
    4452:	88 36       	cpi	r24, 0x68	; 104
    4454:	09 f4       	brne	.+2      	; 0x4458 <.L19>

00004456 <L0^A>:
    4456:	b2 cf       	rjmp	.-156    	; 0x43bc <.L18>

00004458 <.L19>:
    4458:	98 2f       	mov	r25, r24
    445a:	9f 7d       	andi	r25, 0xDF	; 223
    445c:	95 54       	subi	r25, 0x45	; 69
    445e:	93 30       	cpi	r25, 0x03	; 3
    4460:	08 f0       	brcs	.+2      	; 0x4464 <L0^A+0x2>

00004462 <L0^A>:
    4462:	82 cf       	rjmp	.-252    	; 0x4368 <.L13>
    4464:	0c 5f       	subi	r16, 0xFC	; 252
    4466:	1f 4f       	sbci	r17, 0xFF	; 255
    4468:	8f e3       	ldi	r24, 0x3F	; 63
    446a:	89 83       	std	Y+1, r24	; 0x01
    446c:	88 24       	eor	r8, r8
    446e:	83 94       	inc	r8
    4470:	91 2c       	mov	r9, r1
    4472:	ae 01       	movw	r20, r28
    4474:	4f 5f       	subi	r20, 0xFF	; 255
    4476:	5f 4f       	sbci	r21, 0xFF	; 255
    4478:	5a 01       	movw	r10, r20

0000447a <.L29>:
    447a:	e8 94       	clt
    447c:	77 f8       	bld	r7, 7

0000447e <.L31>:
    447e:	73 fc       	sbrc	r7, 3
    4480:	05 c0       	rjmp	.+10     	; 0x448c <.L34>

00004482 <.L33>:
    4482:	86 2d       	mov	r24, r6
    4484:	90 e0       	ldi	r25, 0x00	; 0
    4486:	88 16       	cp	r8, r24
    4488:	99 06       	cpc	r9, r25
    448a:	40 f1       	brcs	.+80     	; 0x44dc <.L35>

0000448c <.L34>:
    448c:	81 14       	cp	r8, r1
    448e:	91 04       	cpc	r9, r1
    4490:	61 f5       	brne	.+88     	; 0x44ea <.L38>

00004492 <.L39>:
    4492:	66 20       	and	r6, r6
    4494:	09 f4       	brne	.+2      	; 0x4498 <L0^A+0x2>

00004496 <L0^A>:
    4496:	40 cf       	rjmp	.-384    	; 0x4318 <.L3>
    4498:	b6 01       	movw	r22, r12
    449a:	80 e2       	ldi	r24, 0x20	; 32
    449c:	90 e0       	ldi	r25, 0x00	; 0
    449e:	0e 94 b1 23 	call	0x4762	; 0x4762 <fputc>
    44a2:	6a 94       	dec	r6
    44a4:	f6 cf       	rjmp	.-20     	; 0x4492 <.L39>

000044a6 <.L25>:
    44a6:	d8 01       	movw	r26, r16
    44a8:	8c 91       	ld	r24, X
    44aa:	89 83       	std	Y+1, r24	; 0x01
    44ac:	0e 5f       	subi	r16, 0xFE	; 254
    44ae:	1f 4f       	sbci	r17, 0xFF	; 255
    44b0:	88 24       	eor	r8, r8
    44b2:	83 94       	inc	r8
    44b4:	91 2c       	mov	r9, r1
    44b6:	fe 01       	movw	r30, r28
    44b8:	31 96       	adiw	r30, 0x01	; 1
    44ba:	5f 01       	movw	r10, r30
    44bc:	de cf       	rjmp	.-68     	; 0x447a <.L29>

000044be <.L26>:
    44be:	d8 01       	movw	r26, r16
    44c0:	ad 90       	ld	r10, X+
    44c2:	bd 90       	ld	r11, X+
    44c4:	8d 01       	movw	r16, r26
    44c6:	69 2d       	mov	r22, r9
    44c8:	70 e0       	ldi	r23, 0x00	; 0
    44ca:	76 fc       	sbrc	r7, 6
    44cc:	02 c0       	rjmp	.+4      	; 0x44d2 <.L30>
    44ce:	6f ef       	ldi	r22, 0xFF	; 255
    44d0:	7f ef       	ldi	r23, 0xFF	; 255

000044d2 <.L30>:
    44d2:	c5 01       	movw	r24, r10
    44d4:	0e 94 96 23 	call	0x472c	; 0x472c <strnlen>
    44d8:	4c 01       	movw	r8, r24
    44da:	cf cf       	rjmp	.-98     	; 0x447a <.L29>

000044dc <.L35>:
    44dc:	b6 01       	movw	r22, r12
    44de:	80 e2       	ldi	r24, 0x20	; 32
    44e0:	90 e0       	ldi	r25, 0x00	; 0
    44e2:	0e 94 b1 23 	call	0x4762	; 0x4762 <fputc>
    44e6:	6a 94       	dec	r6
    44e8:	cc cf       	rjmp	.-104    	; 0x4482 <.L33>

000044ea <.L38>:
    44ea:	f5 01       	movw	r30, r10
    44ec:	77 fc       	sbrc	r7, 7
    44ee:	85 91       	lpm	r24, Z+
    44f0:	77 fe       	sbrs	r7, 7
    44f2:	81 91       	ld	r24, Z+
    44f4:	5f 01       	movw	r10, r30
    44f6:	b6 01       	movw	r22, r12
    44f8:	90 e0       	ldi	r25, 0x00	; 0
    44fa:	0e 94 b1 23 	call	0x4762	; 0x4762 <fputc>
    44fe:	61 10       	cpse	r6, r1
    4500:	6a 94       	dec	r6
    4502:	f1 e0       	ldi	r31, 0x01	; 1
    4504:	8f 1a       	sub	r8, r31
    4506:	91 08       	sbc	r9, r1
    4508:	c1 cf       	rjmp	.-126    	; 0x448c <.L34>

0000450a <.L128>:
    450a:	84 36       	cpi	r24, 0x64	; 100
    450c:	19 f0       	breq	.+6      	; 0x4514 <.L40>
    450e:	89 36       	cpi	r24, 0x69	; 105
    4510:	09 f0       	breq	.+2      	; 0x4514 <.L40>

00004512 <L0^A>:
    4512:	81 c0       	rjmp	.+258    	; 0x4616 <.L41>

00004514 <.L40>:
    4514:	f8 01       	movw	r30, r16
    4516:	77 fe       	sbrs	r7, 7
    4518:	77 c0       	rjmp	.+238    	; 0x4608 <.L42>
    451a:	61 91       	ld	r22, Z+
    451c:	71 91       	ld	r23, Z+
    451e:	81 91       	ld	r24, Z+
    4520:	91 91       	ld	r25, Z+

00004522 <.L129>:
    4522:	8f 01       	movw	r16, r30
    4524:	27 2d       	mov	r18, r7
    4526:	2f 76       	andi	r18, 0x6F	; 111
    4528:	82 2e       	mov	r8, r18
    452a:	97 ff       	sbrs	r25, 7
    452c:	09 c0       	rjmp	.+18     	; 0x4540 <.L44>
    452e:	90 95       	com	r25
    4530:	80 95       	com	r24
    4532:	70 95       	com	r23
    4534:	61 95       	neg	r22
    4536:	7f 4f       	sbci	r23, 0xFF	; 255
    4538:	8f 4f       	sbci	r24, 0xFF	; 255
    453a:	9f 4f       	sbci	r25, 0xFF	; 255
    453c:	68 94       	set
    453e:	87 f8       	bld	r8, 7

00004540 <.L44>:
    4540:	2a e0       	ldi	r18, 0x0A	; 10
    4542:	30 e0       	ldi	r19, 0x00	; 0
    4544:	ae 01       	movw	r20, r28
    4546:	4f 5f       	subi	r20, 0xFF	; 255
    4548:	5f 4f       	sbci	r21, 0xFF	; 255
    454a:	5a 01       	movw	r10, r20
    454c:	0e 94 e1 23 	call	0x47c2	; 0x47c2 <__ultoa_invert>
    4550:	8a 19       	sub	r24, r10
    4552:	a8 2e       	mov	r10, r24

00004554 <.L45>:
    4554:	ba 2c       	mov	r11, r10
    4556:	78 2c       	mov	r7, r8
    4558:	86 fe       	sbrs	r8, 6
    455a:	0c c0       	rjmp	.+24     	; 0x4574 <.L54>
    455c:	e8 94       	clt
    455e:	70 f8       	bld	r7, 0
    4560:	a9 14       	cp	r10, r9
    4562:	40 f4       	brcc	.+16     	; 0x4574 <.L54>
    4564:	84 fe       	sbrs	r8, 4
    4566:	05 c0       	rjmp	.+10     	; 0x4572 <.L89>
    4568:	82 fc       	sbrc	r8, 2
    456a:	03 c0       	rjmp	.+6      	; 0x4572 <.L89>
    456c:	78 2d       	mov	r23, r8
    456e:	7e 7e       	andi	r23, 0xEE	; 238
    4570:	77 2e       	mov	r7, r23

00004572 <.L89>:
    4572:	b9 2c       	mov	r11, r9

00004574 <.L54>:
    4574:	74 fe       	sbrs	r7, 4
    4576:	a5 c0       	rjmp	.+330    	; 0x46c2 <.L55>
    4578:	fe 01       	movw	r30, r28
    457a:	ea 0d       	add	r30, r10
    457c:	f1 1d       	adc	r31, r1
    457e:	80 81       	ld	r24, Z
    4580:	80 33       	cpi	r24, 0x30	; 48
    4582:	09 f0       	breq	.+2      	; 0x4586 <L0^A+0x2>

00004584 <L0^A>:
    4584:	97 c0       	rjmp	.+302    	; 0x46b4 <.L56>
    4586:	87 2d       	mov	r24, r7
    4588:	89 7e       	andi	r24, 0xE9	; 233
    458a:	78 2e       	mov	r7, r24

0000458c <.L57>:
    458c:	73 fc       	sbrc	r7, 3
    458e:	0e c0       	rjmp	.+28     	; 0x45ac <.L59>
    4590:	70 fe       	sbrs	r7, 0
    4592:	a6 c0       	rjmp	.+332    	; 0x46e0 <.L90>
    4594:	9a 2c       	mov	r9, r10
    4596:	b6 14       	cp	r11, r6
    4598:	18 f4       	brcc	.+6      	; 0x45a0 <.L78>
    459a:	96 0c       	add	r9, r6
    459c:	9b 18       	sub	r9, r11
    459e:	b6 2c       	mov	r11, r6

000045a0 <.L78>:
    45a0:	86 2d       	mov	r24, r6
    45a2:	8b 19       	sub	r24, r11
    45a4:	6b 14       	cp	r6, r11
    45a6:	08 f4       	brcc	.+2      	; 0x45aa <.L64>
    45a8:	80 e0       	ldi	r24, 0x00	; 0

000045aa <.L64>:
    45aa:	b8 0e       	add	r11, r24

000045ac <.L59>:
    45ac:	b6 14       	cp	r11, r6
    45ae:	08 f0       	brcs	.+2      	; 0x45b2 <L0^A+0x2>

000045b0 <L0^A>:
    45b0:	99 c0       	rjmp	.+306    	; 0x46e4 <.L92>
    45b2:	6b 18       	sub	r6, r11

000045b4 <.L65>:
    45b4:	74 fe       	sbrs	r7, 4
    45b6:	98 c0       	rjmp	.+304    	; 0x46e8 <.L66>
    45b8:	b6 01       	movw	r22, r12
    45ba:	80 e3       	ldi	r24, 0x30	; 48
    45bc:	90 e0       	ldi	r25, 0x00	; 0
    45be:	0e 94 b1 23 	call	0x4762	; 0x4762 <fputc>
    45c2:	72 fe       	sbrs	r7, 2
    45c4:	09 c0       	rjmp	.+18     	; 0x45d8 <.L73>
    45c6:	88 e5       	ldi	r24, 0x58	; 88
    45c8:	90 e0       	ldi	r25, 0x00	; 0
    45ca:	71 fc       	sbrc	r7, 1
    45cc:	02 c0       	rjmp	.+4      	; 0x45d2 <.L69>
    45ce:	88 e7       	ldi	r24, 0x78	; 120
    45d0:	90 e0       	ldi	r25, 0x00	; 0

000045d2 <.L69>:
    45d2:	b6 01       	movw	r22, r12

000045d4 <.L132>:
    45d4:	0e 94 b1 23 	call	0x4762	; 0x4762 <fputc>

000045d8 <.L73>:
    45d8:	a9 14       	cp	r10, r9
    45da:	08 f4       	brcc	.+2      	; 0x45de <L0^A+0x2>

000045dc <L0^A>:
    45dc:	92 c0       	rjmp	.+292    	; 0x4702 <.L74>
    45de:	aa 94       	dec	r10
    45e0:	b1 2c       	mov	r11, r1
    45e2:	9f ef       	ldi	r25, 0xFF	; 255
    45e4:	a9 1a       	sub	r10, r25
    45e6:	b9 0a       	sbc	r11, r25
    45e8:	de 01       	movw	r26, r28
    45ea:	11 96       	adiw	r26, 0x01	; 1
    45ec:	4d 01       	movw	r8, r26
    45ee:	aa 0e       	add	r10, r26
    45f0:	bb 1e       	adc	r11, r27

000045f2 <.L75>:
    45f2:	f5 01       	movw	r30, r10
    45f4:	82 91       	ld	r24, -Z
    45f6:	5f 01       	movw	r10, r30
    45f8:	b6 01       	movw	r22, r12
    45fa:	90 e0       	ldi	r25, 0x00	; 0
    45fc:	0e 94 b1 23 	call	0x4762	; 0x4762 <fputc>
    4600:	8a 14       	cp	r8, r10
    4602:	9b 04       	cpc	r9, r11
    4604:	b1 f7       	brne	.-20     	; 0x45f2 <.L75>
    4606:	45 cf       	rjmp	.-374    	; 0x4492 <.L39>

00004608 <.L42>:
    4608:	61 91       	ld	r22, Z+
    460a:	71 91       	ld	r23, Z+
    460c:	07 2e       	mov	r0, r23
    460e:	00 0c       	add	r0, r0
    4610:	88 0b       	sbc	r24, r24
    4612:	99 0b       	sbc	r25, r25
    4614:	86 cf       	rjmp	.-244    	; 0x4522 <.L129>

00004616 <.L41>:
    4616:	87 2c       	mov	r8, r7
    4618:	e8 94       	clt
    461a:	84 f8       	bld	r8, 4
    461c:	2a e0       	ldi	r18, 0x0A	; 10
    461e:	30 e0       	ldi	r19, 0x00	; 0
    4620:	85 37       	cpi	r24, 0x75	; 117
    4622:	69 f0       	breq	.+26     	; 0x463e <.L47>
    4624:	57 2d       	mov	r21, r7
    4626:	59 7f       	andi	r21, 0xF9	; 249
    4628:	85 2e       	mov	r8, r21
    462a:	80 37       	cpi	r24, 0x70	; 112
    462c:	71 f1       	breq	.+92     	; 0x468a <.L48>
    462e:	18 f5       	brcc	.+70     	; 0x4676 <.L49>
    4630:	88 35       	cpi	r24, 0x58	; 88
    4632:	71 f1       	breq	.+92     	; 0x4690 <.L50>
    4634:	8f 36       	cpi	r24, 0x6F	; 111
    4636:	09 f0       	breq	.+2      	; 0x463a <L0^A+0x2>

00004638 <L0^A>:
    4638:	ed ce       	rjmp	.-550    	; 0x4414 <.L4>
    463a:	28 e0       	ldi	r18, 0x08	; 8
    463c:	30 e0       	ldi	r19, 0x00	; 0

0000463e <.L47>:
    463e:	f8 01       	movw	r30, r16
    4640:	87 fe       	sbrs	r8, 7
    4642:	2e c0       	rjmp	.+92     	; 0x46a0 <.L52>
    4644:	81 91       	ld	r24, Z+
    4646:	91 91       	ld	r25, Z+
    4648:	a1 91       	ld	r26, Z+
    464a:	b1 91       	ld	r27, Z+
    464c:	8c 87       	std	Y+12, r24	; 0x0c
    464e:	9d 87       	std	Y+13, r25	; 0x0d
    4650:	ae 87       	std	Y+14, r26	; 0x0e
    4652:	bf 87       	std	Y+15, r27	; 0x0f

00004654 <.L130>:
    4654:	8f 01       	movw	r16, r30
    4656:	be 01       	movw	r22, r28
    4658:	6f 5f       	subi	r22, 0xFF	; 255
    465a:	7f 4f       	sbci	r23, 0xFF	; 255
    465c:	5b 01       	movw	r10, r22
    465e:	ab 01       	movw	r20, r22
    4660:	6c 85       	ldd	r22, Y+12	; 0x0c
    4662:	7d 85       	ldd	r23, Y+13	; 0x0d
    4664:	8e 85       	ldd	r24, Y+14	; 0x0e
    4666:	9f 85       	ldd	r25, Y+15	; 0x0f
    4668:	0e 94 e1 23 	call	0x47c2	; 0x47c2 <__ultoa_invert>
    466c:	8a 19       	sub	r24, r10
    466e:	a8 2e       	mov	r10, r24
    4670:	e8 94       	clt
    4672:	87 f8       	bld	r8, 7
    4674:	6f cf       	rjmp	.-290    	; 0x4554 <.L45>

00004676 <.L49>:
    4676:	88 37       	cpi	r24, 0x78	; 120
    4678:	09 f0       	breq	.+2      	; 0x467c <.L51>

0000467a <L0^A>:
    467a:	cc ce       	rjmp	.-616    	; 0x4414 <.L4>

0000467c <.L51>:
    467c:	84 fe       	sbrs	r8, 4
    467e:	02 c0       	rjmp	.+4      	; 0x4684 <.L84>
    4680:	68 94       	set
    4682:	82 f8       	bld	r8, 2

00004684 <.L84>:
    4684:	20 e1       	ldi	r18, 0x10	; 16
    4686:	30 e0       	ldi	r19, 0x00	; 0
    4688:	da cf       	rjmp	.-76     	; 0x463e <.L47>

0000468a <.L48>:
    468a:	68 94       	set
    468c:	84 f8       	bld	r8, 4
    468e:	f6 cf       	rjmp	.-20     	; 0x467c <.L51>

00004690 <.L50>:
    4690:	74 fe       	sbrs	r7, 4
    4692:	03 c0       	rjmp	.+6      	; 0x469a <.L85>
    4694:	65 2f       	mov	r22, r21
    4696:	66 60       	ori	r22, 0x06	; 6
    4698:	86 2e       	mov	r8, r22

0000469a <.L85>:
    469a:	20 e1       	ldi	r18, 0x10	; 16
    469c:	32 e0       	ldi	r19, 0x02	; 2
    469e:	cf cf       	rjmp	.-98     	; 0x463e <.L47>

000046a0 <.L52>:
    46a0:	81 91       	ld	r24, Z+
    46a2:	91 91       	ld	r25, Z+
    46a4:	ac 01       	movw	r20, r24
    46a6:	60 e0       	ldi	r22, 0x00	; 0
    46a8:	70 e0       	ldi	r23, 0x00	; 0
    46aa:	4c 87       	std	Y+12, r20	; 0x0c
    46ac:	5d 87       	std	Y+13, r21	; 0x0d
    46ae:	6e 87       	std	Y+14, r22	; 0x0e
    46b0:	7f 87       	std	Y+15, r23	; 0x0f
    46b2:	d0 cf       	rjmp	.-96     	; 0x4654 <.L130>

000046b4 <.L56>:
    46b4:	72 fc       	sbrc	r7, 2
    46b6:	02 c0       	rjmp	.+4      	; 0x46bc <.L58>

000046b8 <.L131>:
    46b8:	b3 94       	inc	r11
    46ba:	68 cf       	rjmp	.-304    	; 0x458c <.L57>

000046bc <.L58>:
    46bc:	b3 94       	inc	r11
    46be:	b3 94       	inc	r11
    46c0:	65 cf       	rjmp	.-310    	; 0x458c <.L57>

000046c2 <.L55>:
    46c2:	87 2d       	mov	r24, r7
    46c4:	86 78       	andi	r24, 0x86	; 134
    46c6:	88 23       	and	r24, r24
    46c8:	09 f4       	brne	.+2      	; 0x46cc <L0^A+0x2>

000046ca <L0^A>:
    46ca:	60 cf       	rjmp	.-320    	; 0x458c <.L57>
    46cc:	f5 cf       	rjmp	.-22     	; 0x46b8 <.L131>

000046ce <.L62>:
    46ce:	b6 01       	movw	r22, r12
    46d0:	80 e2       	ldi	r24, 0x20	; 32
    46d2:	90 e0       	ldi	r25, 0x00	; 0
    46d4:	0e 94 b1 23 	call	0x4762	; 0x4762 <fputc>
    46d8:	83 94       	inc	r8

000046da <.L60>:
    46da:	86 14       	cp	r8, r6
    46dc:	c0 f3       	brcs	.-16     	; 0x46ce <.L62>
    46de:	60 cf       	rjmp	.-320    	; 0x45a0 <.L78>

000046e0 <.L90>:
    46e0:	8b 2c       	mov	r8, r11
    46e2:	fb cf       	rjmp	.-10     	; 0x46da <.L60>

000046e4 <.L92>:
    46e4:	61 2c       	mov	r6, r1
    46e6:	66 cf       	rjmp	.-308    	; 0x45b4 <.L65>

000046e8 <.L66>:
    46e8:	87 2d       	mov	r24, r7
    46ea:	86 78       	andi	r24, 0x86	; 134
    46ec:	88 23       	and	r24, r24
    46ee:	09 f4       	brne	.+2      	; 0x46f2 <L0^A+0x2>

000046f0 <L0^A>:
    46f0:	73 cf       	rjmp	.-282    	; 0x45d8 <.L73>
    46f2:	8b e2       	ldi	r24, 0x2B	; 43
    46f4:	71 fe       	sbrs	r7, 1
    46f6:	80 e2       	ldi	r24, 0x20	; 32
    46f8:	77 fc       	sbrc	r7, 7
    46fa:	8d e2       	ldi	r24, 0x2D	; 45
    46fc:	b6 01       	movw	r22, r12
    46fe:	90 e0       	ldi	r25, 0x00	; 0
    4700:	69 cf       	rjmp	.-302    	; 0x45d4 <.L132>

00004702 <.L74>:
    4702:	b6 01       	movw	r22, r12
    4704:	80 e3       	ldi	r24, 0x30	; 48
    4706:	90 e0       	ldi	r25, 0x00	; 0
    4708:	0e 94 b1 23 	call	0x4762	; 0x4762 <fputc>
    470c:	9a 94       	dec	r9
    470e:	64 cf       	rjmp	.-312    	; 0x45d8 <.L73>

00004710 <.L79>:
    4710:	8f ef       	ldi	r24, 0xFF	; 255
    4712:	9f ef       	ldi	r25, 0xFF	; 255
    4714:	83 ce       	rjmp	.-762    	; 0x441c <.L1>

00004716 <strnlen_P>:
    4716:	fc 01       	movw	r30, r24

00004718 <.L_strnlen_P_loop>:
    4718:	05 90       	lpm	r0, Z+
    471a:	61 50       	subi	r22, 0x01	; 1
    471c:	70 40       	sbci	r23, 0x00	; 0
    471e:	01 10       	cpse	r0, r1
    4720:	d8 f7       	brcc	.-10     	; 0x4718 <.L_strnlen_P_loop>
    4722:	80 95       	com	r24
    4724:	90 95       	com	r25
    4726:	8e 0f       	add	r24, r30
    4728:	9f 1f       	adc	r25, r31
    472a:	08 95       	ret

0000472c <strnlen>:
    472c:	fc 01       	movw	r30, r24

0000472e <.L_strnlen_loop>:
    472e:	61 50       	subi	r22, 0x01	; 1
    4730:	70 40       	sbci	r23, 0x00	; 0
    4732:	01 90       	ld	r0, Z+
    4734:	01 10       	cpse	r0, r1
    4736:	d8 f7       	brcc	.-10     	; 0x472e <.L_strnlen_loop>
    4738:	80 95       	com	r24
    473a:	90 95       	com	r25
    473c:	8e 0f       	add	r24, r30
    473e:	9f 1f       	adc	r25, r31
    4740:	08 95       	ret

00004742 <strrev>:
    4742:	dc 01       	movw	r26, r24
    4744:	fc 01       	movw	r30, r24

00004746 <.L1^B1>:
    4746:	67 2f       	mov	r22, r23
    4748:	71 91       	ld	r23, Z+
    474a:	77 23       	and	r23, r23
    474c:	e1 f7       	brne	.-8      	; 0x4746 <.L1^B1>
    474e:	32 97       	sbiw	r30, 0x02	; 2
    4750:	04 c0       	rjmp	.+8      	; 0x475a <.L3^B1>

00004752 <.L2^B1>:
    4752:	7c 91       	ld	r23, X
    4754:	6d 93       	st	X+, r22
    4756:	70 83       	st	Z, r23
    4758:	62 91       	ld	r22, -Z

0000475a <.L3^B1>:
    475a:	ae 17       	cp	r26, r30
    475c:	bf 07       	cpc	r27, r31
    475e:	c8 f3       	brcs	.-14     	; 0x4752 <.L2^B1>
    4760:	08 95       	ret

00004762 <fputc>:
    4762:	0f 93       	push	r16
    4764:	1f 93       	push	r17
    4766:	cf 93       	push	r28
    4768:	df 93       	push	r29
    476a:	18 2f       	mov	r17, r24
    476c:	09 2f       	mov	r16, r25
    476e:	eb 01       	movw	r28, r22
    4770:	8b 81       	ldd	r24, Y+3	; 0x03
    4772:	81 fd       	sbrc	r24, 1
    4774:	09 c0       	rjmp	.+18     	; 0x4788 <.L2>

00004776 <.L7>:
    4776:	1f ef       	ldi	r17, 0xFF	; 255
    4778:	0f ef       	ldi	r16, 0xFF	; 255

0000477a <.L3>:
    477a:	81 2f       	mov	r24, r17
    477c:	90 2f       	mov	r25, r16
    477e:	df 91       	pop	r29
    4780:	cf 91       	pop	r28
    4782:	1f 91       	pop	r17
    4784:	0f 91       	pop	r16
    4786:	08 95       	ret

00004788 <.L2>:
    4788:	82 ff       	sbrs	r24, 2
    478a:	14 c0       	rjmp	.+40     	; 0x47b4 <.L4>
    478c:	2e 81       	ldd	r18, Y+6	; 0x06
    478e:	3f 81       	ldd	r19, Y+7	; 0x07
    4790:	8c 81       	ldd	r24, Y+4	; 0x04
    4792:	9d 81       	ldd	r25, Y+5	; 0x05
    4794:	28 17       	cp	r18, r24
    4796:	39 07       	cpc	r19, r25
    4798:	3c f4       	brge	.+14     	; 0x47a8 <.L8>
    479a:	e8 81       	ld	r30, Y
    479c:	f9 81       	ldd	r31, Y+1	; 0x01
    479e:	cf 01       	movw	r24, r30
    47a0:	01 96       	adiw	r24, 0x01	; 1
    47a2:	99 83       	std	Y+1, r25	; 0x01
    47a4:	88 83       	st	Y, r24
    47a6:	10 83       	st	Z, r17

000047a8 <.L8>:
    47a8:	8e 81       	ldd	r24, Y+6	; 0x06
    47aa:	9f 81       	ldd	r25, Y+7	; 0x07
    47ac:	01 96       	adiw	r24, 0x01	; 1
    47ae:	9f 83       	std	Y+7, r25	; 0x07
    47b0:	8e 83       	std	Y+6, r24	; 0x06
    47b2:	e3 cf       	rjmp	.-58     	; 0x477a <.L3>

000047b4 <.L4>:
    47b4:	e8 85       	ldd	r30, Y+8	; 0x08
    47b6:	f9 85       	ldd	r31, Y+9	; 0x09
    47b8:	81 2f       	mov	r24, r17
    47ba:	19 95       	eicall
    47bc:	89 2b       	or	r24, r25
    47be:	a1 f3       	breq	.-24     	; 0x47a8 <.L8>
    47c0:	da cf       	rjmp	.-76     	; 0x4776 <.L7>

000047c2 <__ultoa_invert>:
    47c2:	fa 01       	movw	r30, r20
    47c4:	aa 27       	eor	r26, r26
    47c6:	28 30       	cpi	r18, 0x08	; 8
    47c8:	51 f1       	breq	.+84     	; 0x481e <.L_oct>
    47ca:	20 31       	cpi	r18, 0x10	; 16
    47cc:	81 f1       	breq	.+96     	; 0x482e <.L_hex>
    47ce:	e8 94       	clt

000047d0 <.L_dec_loop>:
    47d0:	6f 93       	push	r22
    47d2:	6e 7f       	andi	r22, 0xFE	; 254
    47d4:	6e 5f       	subi	r22, 0xFE	; 254
    47d6:	7f 4f       	sbci	r23, 0xFF	; 255
    47d8:	8f 4f       	sbci	r24, 0xFF	; 255
    47da:	9f 4f       	sbci	r25, 0xFF	; 255
    47dc:	af 4f       	sbci	r26, 0xFF	; 255
    47de:	b1 e0       	ldi	r27, 0x01	; 1
    47e0:	3e d0       	rcall	.+124    	; 0x485e <.L_div_add>
    47e2:	b4 e0       	ldi	r27, 0x04	; 4
    47e4:	3c d0       	rcall	.+120    	; 0x485e <.L_div_add>
    47e6:	67 0f       	add	r22, r23
    47e8:	78 1f       	adc	r23, r24
    47ea:	89 1f       	adc	r24, r25
    47ec:	9a 1f       	adc	r25, r26
    47ee:	a1 1d       	adc	r26, r1
    47f0:	68 0f       	add	r22, r24
    47f2:	79 1f       	adc	r23, r25
    47f4:	8a 1f       	adc	r24, r26
    47f6:	91 1d       	adc	r25, r1
    47f8:	a1 1d       	adc	r26, r1
    47fa:	6a 0f       	add	r22, r26
    47fc:	71 1d       	adc	r23, r1
    47fe:	81 1d       	adc	r24, r1
    4800:	91 1d       	adc	r25, r1
    4802:	a1 1d       	adc	r26, r1
    4804:	20 d0       	rcall	.+64     	; 0x4846 <.L_lsr_4>
    4806:	09 f4       	brne	.+2      	; 0x480a <.L1^B1>
    4808:	68 94       	set

0000480a <.L1^B1>:
    480a:	3f 91       	pop	r19
    480c:	2a e0       	ldi	r18, 0x0A	; 10
    480e:	26 9f       	mul	r18, r22
    4810:	11 24       	eor	r1, r1
    4812:	30 19       	sub	r19, r0
    4814:	30 5d       	subi	r19, 0xD0	; 208
    4816:	31 93       	st	Z+, r19
    4818:	de f6       	brtc	.-74     	; 0x47d0 <.L_dec_loop>

0000481a <.L_eos>:
    481a:	cf 01       	movw	r24, r30
    481c:	08 95       	ret

0000481e <.L_oct>:
    481e:	46 2f       	mov	r20, r22
    4820:	47 70       	andi	r20, 0x07	; 7
    4822:	40 5d       	subi	r20, 0xD0	; 208
    4824:	41 93       	st	Z+, r20
    4826:	b3 e0       	ldi	r27, 0x03	; 3
    4828:	0f d0       	rcall	.+30     	; 0x4848 <.L_lsr>
    482a:	c9 f7       	brne	.-14     	; 0x481e <.L_oct>
    482c:	f6 cf       	rjmp	.-20     	; 0x481a <.L_eos>

0000482e <.L_hex>:
    482e:	46 2f       	mov	r20, r22
    4830:	4f 70       	andi	r20, 0x0F	; 15
    4832:	40 5d       	subi	r20, 0xD0	; 208
    4834:	4a 33       	cpi	r20, 0x3A	; 58
    4836:	18 f0       	brcs	.+6      	; 0x483e <.L3^B1>
    4838:	49 5d       	subi	r20, 0xD9	; 217
    483a:	31 fd       	sbrc	r19, 1
    483c:	40 52       	subi	r20, 0x20	; 32

0000483e <.L3^B1>:
    483e:	41 93       	st	Z+, r20
    4840:	02 d0       	rcall	.+4      	; 0x4846 <.L_lsr_4>
    4842:	a9 f7       	brne	.-22     	; 0x482e <.L_hex>
    4844:	ea cf       	rjmp	.-44     	; 0x481a <.L_eos>

00004846 <.L_lsr_4>:
    4846:	b4 e0       	ldi	r27, 0x04	; 4

00004848 <.L_lsr>:
    4848:	a6 95       	lsr	r26
    484a:	97 95       	ror	r25
    484c:	87 95       	ror	r24
    484e:	77 95       	ror	r23
    4850:	67 95       	ror	r22
    4852:	ba 95       	dec	r27
    4854:	c9 f7       	brne	.-14     	; 0x4848 <.L_lsr>
    4856:	00 97       	sbiw	r24, 0x00	; 0
    4858:	61 05       	cpc	r22, r1
    485a:	71 05       	cpc	r23, r1
    485c:	08 95       	ret

0000485e <.L_div_add>:
    485e:	9b 01       	movw	r18, r22
    4860:	ac 01       	movw	r20, r24
    4862:	0a 2e       	mov	r0, r26

00004864 <.L7^B1>:
    4864:	06 94       	lsr	r0
    4866:	57 95       	ror	r21
    4868:	47 95       	ror	r20
    486a:	37 95       	ror	r19
    486c:	27 95       	ror	r18
    486e:	ba 95       	dec	r27
    4870:	c9 f7       	brne	.-14     	; 0x4864 <.L7^B1>
    4872:	62 0f       	add	r22, r18
    4874:	73 1f       	adc	r23, r19
    4876:	84 1f       	adc	r24, r20
    4878:	95 1f       	adc	r25, r21
    487a:	a0 1d       	adc	r26, r0
    487c:	08 95       	ret

0000487e <_exit>:
    487e:	f8 94       	cli

00004880 <__stop_program>:
    4880:	ff cf       	rjmp	.-2      	; 0x4880 <__stop_program>

00004882 <L0^A>:
    4882:	df 1b       	sub	r29, r31
    4884:	c3 1c       	adc	r12, r3
    4886:	d5 1c       	adc	r13, r5
    4888:	ee 1c       	adc	r14, r14
    488a:	c6 1b       	sub	r28, r22
    488c:	75 1c       	adc	r7, r5
    488e:	f3 1c       	adc	r15, r3
